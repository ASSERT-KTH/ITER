bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	||  objType.isEquivalentTo(prototype))  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(prototype))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
2	[BUG]  [BUGGY]  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	||  objType.isEquivalentTo(propertyNode))  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(prototype))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
3	[BUG]  [BUGGY]  if(objType.isPrototypeBasedOn(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototypeBasedOn(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototypeBasedOn(prototype))  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(prototype))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
4	[BUG]  [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(name,  propertyNode,  inferred);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(name,  propertyNode,  inferred);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=  null)?  false  :  objType.isEquivalentTo(name,  propertyNode,  inferred);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(propertyNode,    inferred);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	41	None	replace
5	[BUG]  [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(propertyNode,  type,  inferred);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(propertyNode,  type,  inferred);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=  null)?  false  :  objType.isEquivalentTo(propertyNode,  type,  inferred);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(propertyNode,    inferred);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	41	None	replace
6	[BUG]  [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(name,  propertyNode,  inferred);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(name,  propertyNode,  inferred);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType  ==  null)?  false  :  objType.isEquivalentTo(name,  propertyNode,  inferred);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(propertyNode,    inferred);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	41	None	replace
7	[BUG]  [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(type,  propertyNode,  inferred);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(type,  propertyNode,  inferred);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=  null)?  false  :  objType.isEquivalentTo(type,  propertyNode,  inferred);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(propertyNode,    inferred);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	41	None	replace
8	[BUG]  [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(propertyNode,  inferred,  propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(propertyNode,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=  null)?  false  :  objType.isEquivalentTo(propertyNode,  inferred,  propertyNode);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(propertyNode,    inferred);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	41	None	replace
9	[BUG]  [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(propertyNode,  type,  inferred);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(propertyNode,  type,  inferred);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType  ==  null)?  false  :  objType.isEquivalentTo(propertyNode,  type,  inferred);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(propertyNode,    inferred);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	41	None	replace
10	[BUG]  [BUGGY]  return(objType!=  null)?  false  :  type.isEquivalentTo(propertyNode,  inferred);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null)?  false  :  type.isEquivalentTo(propertyNode,  inferred);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=  null)?  false  :  type.isEquivalentTo(propertyNode,  inferred);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(propertyNode,    inferred);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	41	None	replace
11	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.getEquivalentTo(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.getEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.getEquivalentTo(prototype))  {  return  false;  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.getEquivalentTo(prototype))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
12	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.getPrototypeBasedOn(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.getPrototypeBasedOn(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.getPrototypeBasedOn(prototype))  {  return  false;  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.getEquivalentTo(prototype))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
13	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	objType.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);	  parent.defineProperty(name,    type,    inferred,    propertyNode);    this.setPrototypeBasedOn(objType);    	compilable	timeout	21	1	replace
14	[BUG]  [BUGGY]  objType.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  timeout  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);	  parent.defineProperty(name,    type,    inferred,    propertyNode);    this.setPrototypeBasedOn(objType);    	compilable	timeout	21	1	replace
15	[BUG]  [BUGGY]  type.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  type.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	type.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);	  parent.defineProperty(name,    type,    inferred,    propertyNode);    this.setPrototypeBasedOn(objType);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
16	[BUG]  [BUGGY]  params.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  [CE]  cannot  find  symbol  params  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  params.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	params.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);	  parent.defineProperty(name,    type,    inferred,    propertyNode);    this.setPrototypeBasedOn(objType);    	non-compiled	[CE]  cannot  find  symbol  params	21	None	replace
17	[BUG]  [BUGGY]  timeout  [FE]                                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  typeOfThis.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	typeOfThis.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);	  parent.defineProperty(name,    type,    inferred,    propertyNode);    this.setPrototypeBasedOn(objType);    	compilable	timeout	21	1	replace
18	[BUG]  [BUGGY]  typeOfThis.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  timeout  [FE]                                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  typeOfThis.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	typeOfThis.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);	  parent.defineProperty(name,    type,    inferred,    propertyNode);    this.setPrototypeBasedOn(objType);    	compilable	timeout	21	1	replace
19	[BUG]  [BUGGY]  timeout  [FE]                                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType.defineProperty(name,  type,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	objType.defineProperty(name,  type,  inferred,  propertyNode);	  parent.defineProperty(name,    type,    inferred,    propertyNode);    this.setPrototypeBasedOn(objType);    	compilable	timeout	21	1	replace
20	[BUG]  [BUGGY]  objType.defineProperty(name,  type,  inferred,  propertyNode);  timeout  [FE]                                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType.defineProperty(name,  type,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType.defineProperty(name,  type,  inferred,  propertyNode);	  parent.defineProperty(name,    type,    inferred,    propertyNode);    this.setPrototypeBasedOn(objType);    	compilable	timeout	21	1	replace
21	[BUG]  [BUGGY]  timeout  [FE]                                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);	  parent.defineProperty(name,    type,    inferred,    propertyNode);    this.setPrototypeBasedOn(objType);    	compilable	timeout	21	1	replace
22	[BUG]  [BUGGY]  defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  timeout  [FE]                                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);	  parent.defineProperty(name,    type,    inferred,    propertyNode);    this.setPrototypeBasedOn(objType);    	compilable	timeout	21	1	replace
23	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode))  {  this.setPrototypeBasedOn(objType);  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode))  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode))  {  this.setPrototypeBasedOn(objType);  return  true;  }	          if(objType.isEquivalentTo(propertyNode))    {    this.setPrototypeBasedOn(objType);    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	56	None	replace
24	[BUG]  [BUGGY]  timeout  [FE]                                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type))  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(type))  {  this.setPrototypeBasedOn(objType);  return  true;  }	          if(objType.isEquivalentTo(propertyNode))    {    this.setPrototypeBasedOn(objType);    return    true;    }    	compilable	timeout	56	1	replace
25	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type))  {  this.setPrototypeBasedOn(objType);  return  true;  }  timeout  [FE]                                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type))  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type))  {  this.setPrototypeBasedOn(objType);  return  true;  }	          if(objType.isEquivalentTo(propertyNode))    {    this.setPrototypeBasedOn(objType);    return    true;    }    	compilable	timeout	56	1	replace
26	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode,  inferred))  {  this.setPrototypeBasedOn(objType);  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode,  inferred))  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode,  inferred))  {  this.setPrototypeBasedOn(objType);  return  true;  }	          if(objType.isEquivalentTo(propertyNode))    {    this.setPrototypeBasedOn(objType);    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	56	None	replace
27	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type,  propertyNode))  {  this.setPrototypeBasedOn(objType);  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type,  propertyNode))  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type,  propertyNode))  {  this.setPrototypeBasedOn(objType);  return  true;  }	          if(objType.isEquivalentTo(propertyNode))    {    this.setPrototypeBasedOn(objType);    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	56	None	replace
28	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode,  type))  {  this.setPrototypeBasedOn(objType);  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode,  type))  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode,  type))  {  this.setPrototypeBasedOn(objType);  return  true;  }	          if(objType.isEquivalentTo(propertyNode))    {    this.setPrototypeBasedOn(objType);    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	56	None	replace
29	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface()  ||  objType.isConstructor())  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isInterface()  ||  objType.isConstructor())  {  return  false;  }	  if(objType.isInterface()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	compilable	timeout	130	1	replace
30	[BUG]  [BUGGY]  if(objType.isInterface()  ||  objType.isConstructor())  {  return  false;  }  timeout  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface()  ||  objType.isConstructor())  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface()  ||  objType.isConstructor())  {  return  false;  }	  if(objType.isInterface()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	compilable	timeout	130	1	replace
31	[BUG]  [BUGGY]  parent!=  null  &&  parent.isEquivalentTo(objType))  {  return  false;  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent!=  null  &&  parent.isEquivalentTo(objType))  {  return  false;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent!=  null  &&  parent.isEquivalentTo(objType))  {  return  false;	  parent!=    null    &&    objType.isEquivalentTo(propertyNode))    {    return    false;    	non-compiled	[CE]  not  a  statement	64	None	replace
32	[BUG]  [BUGGY]  parent!=  null  &&  parent.isEquivalentTo(propertyNode))  {  return  false;  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent!=  null  &&  parent.isEquivalentTo(propertyNode))  {  return  false;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent!=  null  &&  parent.isEquivalentTo(propertyNode))  {  return  false;	  parent!=    null    &&    objType.isEquivalentTo(propertyNode))    {    return    false;    	non-compiled	[CE]  not  a  statement	64	None	replace
33	[BUG]  [BUGGY]  objType!=  null  &&  objType.isEquivalentTo(propertyNode))  {  return  false;  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType!=  null  &&  objType.isEquivalentTo(propertyNode))  {  return  false;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType!=  null  &&  objType.isEquivalentTo(propertyNode))  {  return  false;	  parent!=    null    &&    objType.isEquivalentTo(propertyNode))    {    return    false;    	non-compiled	[CE]  not  a  statement	64	None	replace
34	[BUG]  [BUGGY]  parent!=  null  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  [CE]  not  a  statement  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent!=  null  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent!=  null  ||  objType.isEquivalentTo(propertyNode))  {  return  false;	  parent!=    null    &&    objType.isEquivalentTo(propertyNode))    {    return    false;    	non-compiled	[CE]  not  a  statement	64	None	replace
35	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(prototype);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	return(objType  ==  null)?  false  :  objType.isEquivalentTo(prototype);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(prototype);    timeout    	compilable	timeout	168	1	replace
36	[BUG]  [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(prototype);  timeout  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(prototype);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType  ==  null)?  false  :  objType.isEquivalentTo(prototype);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(prototype);    timeout    	compilable	timeout	168	1	replace
37	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null)?  true  :  objType.isEquivalentTo(prototype);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	return(objType!=  null)?  true  :  objType.isEquivalentTo(prototype);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(prototype);    timeout    	compilable	timeout	168	1	replace
38	[BUG]  [BUGGY]  return(objType!=  null)?  true  :  objType.isEquivalentTo(prototype);  timeout  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null)?  true  :  objType.isEquivalentTo(prototype);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=  null)?  true  :  objType.isEquivalentTo(prototype);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(prototype);    timeout    	compilable	timeout	168	1	replace
39	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType  ==  null)?  true  :  objType.isEquivalentTo(prototype);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	return(objType  ==  null)?  true  :  objType.isEquivalentTo(prototype);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(prototype);    timeout    	compilable	timeout	168	1	replace
40	[BUG]  [BUGGY]  return(objType  ==  null)?  true  :  objType.isEquivalentTo(prototype);  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType  ==  null)?  true  :  objType.isEquivalentTo(prototype);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType  ==  null)?  true  :  objType.isEquivalentTo(prototype);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(prototype);    timeout    	compilable	timeout	168	1	replace
41	[BUG]  [BUGGY]  return(objType!=  null)?  false  :  objType.isPrototypeBasedOn(prototype);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null)?  false  :  objType.isPrototypeBasedOn(prototype);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=  null)?  false  :  objType.isPrototypeBasedOn(prototype);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(prototype);    timeout    	non-compiled	[CE]  cannot  find  symbol	168	None	replace
42	[BUG]  [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(name,  type,  propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(name,  type,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType  ==  null)?  false  :  objType.isEquivalentTo(name,  type,  propertyNode);	  return(objType    ==    null)?    false    :    objType.isEquivalentTo(type,    propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	44	None	replace
43	[BUG]  [BUGGY]  return(objType  ==  null)?  false  :  type.isEquivalentTo(propertyNode,  objType);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType  ==  null)?  false  :  type.isEquivalentTo(propertyNode,  objType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType  ==  null)?  false  :  type.isEquivalentTo(propertyNode,  objType);	  return(objType    ==    null)?    false    :    objType.isEquivalentTo(type,    propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	44	None	replace
44	[BUG]  [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(prototype,  propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(prototype,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType  ==  null)?  false  :  objType.isEquivalentTo(prototype,  propertyNode);	  return(objType    ==    null)?    false    :    objType.isEquivalentTo(type,    propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	44	None	replace
45	[BUG]  [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(type,  propertyNode,  inferred);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(type,  propertyNode,  inferred);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType  ==  null)?  false  :  objType.isEquivalentTo(type,  propertyNode,  inferred);	  return(objType    ==    null)?    false    :    objType.isEquivalentTo(type,    propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	44	None	replace
46	[BUG]  [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(propertyNode,  type);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(propertyNode,  type);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType  ==  null)?  false  :  objType.isEquivalentTo(propertyNode,  type);	  return(objType    ==    null)?    false    :    objType.isEquivalentTo(type,    propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	44	None	replace
47	[BUG]  [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(type,  inferred,  propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(type,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType  ==  null)?  false  :  objType.isEquivalentTo(type,  inferred,  propertyNode);	  return(objType    ==    null)?    false    :    objType.isEquivalentTo(type,    propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	44	None	replace
48	[BUG]  [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(name,  type,  propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(name,  type,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=  null)?  false  :  objType.isEquivalentTo(name,  type,  propertyNode);	  return(objType    ==    null)?    false    :    objType.isEquivalentTo(type,    propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	44	None	replace
49	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  type.toObjectType();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	objType  =  type.toObjectType();	  objType    =    objType.toObjectType();    timeout    	compilable	timeout	157	1	replace
50	[BUG]  [BUGGY]  objType  =  type.toObjectType();  timeout  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  type.toObjectType();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType  =  type.toObjectType();	  objType    =    objType.toObjectType();    timeout    	compilable	timeout	157	1	replace
51	[BUG]  [BUGGY]  objType  =  objType.toEquivalentTo();  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.toEquivalentTo();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType  =  objType.toEquivalentTo();	  objType    =    objType.toObjectType();    timeout    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
52	[BUG]  [BUGGY]  objType  =  objType.getReturnType();  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.getReturnType();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType  =  objType.getReturnType();	  objType    =    objType.toObjectType();    timeout    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
53	[BUG]  [BUGGY]  objType  =  objType.cloneTree();  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.cloneTree();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType  =  objType.cloneTree();	  objType    =    objType.toObjectType();    timeout    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
54	[BUG]  [BUGGY]  objType  =  objType.toEquivalentTo(propertyNode);  [CE]  cannot  find  symbol  [FE]                                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.toEquivalentTo(propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType  =  objType.toEquivalentTo(propertyNode);	  objType    =    objType.toObjectType();    timeout    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
55	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType!=  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType!=    null    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType!=  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }	  timeout    	compilable	timeout	126	1	add
56	[BUG]  [BUGGY]  if(objType!=  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType!=  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  timeout  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType!=  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=    null    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType!=  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }	  timeout    	compilable	timeout	126	1	add
57	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType  ==  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType!=    null    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType  ==  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }	  timeout    	compilable	timeout	126	1	add
58	[BUG]  [BUGGY]  if(objType!=  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType  ==  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType  ==  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=    null    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType  ==  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }	  timeout    	compilable	timeout	126	1	add
59	[BUG]  [BUGGY]  if(objType!=  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType  >=  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType  >=  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=    null    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType  >=  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	126	None	add
60	[BUG]  [BUGGY]  if(objType!=  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType!=  null  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType!=  null  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=    null    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType!=  null  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  }	  timeout    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	126	None	add
61	[BUG]  [BUGGY]  if(objType!=  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType  >>  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType  >>  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=    null    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType  >>  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	126	None	add
62	[BUG]  [BUGGY]  if(objType!=  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType!=  null  ||  objType.isEQUIvalentTo(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType!=  null  ||  objType.isEQUIvalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=    null    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType!=  null  ||  objType.isEQUIvalentTo(prototype))  {  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	126	None	add
63	[BUG]  [BUGGY]  if(objType!=  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType  [Delete]  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  [CE]  ')'  expected  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType  [Delete]  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=    null    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType  [Delete]  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }	  timeout    	non-compiled	[CE]  ')'  expected	126	None	add
64	[BUG]  [BUGGY]  timeout  [FE]            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  timeout    	compilable	timeout	47	1	add
65	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  timeout  [FE]            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  timeout    	compilable	timeout	47	1	add
66	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  if(objType.isEQUIvalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  if(objType.isEQUIvalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    if(objType.isEQUIvalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	47	None	add
67	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  if(objType.isPrototype(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  if(objType.isPrototype(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    if(objType.isPrototype(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	47	None	add
68	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  if(objType.isPrototypeBasedOn(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  if(objType.isPrototypeBasedOn(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    if(objType.isPrototypeBasedOn(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	47	None	add
69	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  if(objType.isEnabled(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  if(objType.isEnabled(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    if(objType.isEnabled(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	47	None	add
70	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  if(objType.isInstance(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  if(objType.isInstance(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    if(objType.isInstance(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	47	None	add
71	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  if(objType.isEquivalentTo(propertyNode))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	49	None	replace
72	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode,  inferred))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode,  inferred))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode,  inferred))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  if(objType.isEquivalentTo(propertyNode))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	49	None	replace
73	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  if(objType.isEquivalentTo(propertyNode))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	49	None	replace
74	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(type))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  if(objType.isEquivalentTo(propertyNode))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    	compilable	timeout	49	1	replace
75	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  timeout  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  if(objType.isEquivalentTo(propertyNode))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    	compilable	timeout	49	1	replace
76	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode,  type))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode,  type))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode,  type))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  if(objType.isEquivalentTo(propertyNode))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	49	None	replace
77	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(propertyNode,  inferred))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(propertyNode,  inferred))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  ||  objType.isEquivalentTo(propertyNode,  inferred))  {  return  false;  }	  if(objType.isConstructor()    ||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	65	None	replace
78	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(propertyNode,  type))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(propertyNode,  type))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  ||  objType.isEquivalentTo(propertyNode,  type))  {  return  false;  }	  if(objType.isConstructor()    ||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	65	None	replace
79	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  ||  objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }	  if(objType.isConstructor()    ||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	65	None	replace
80	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  type.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  type.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  ||  type.isEquivalentTo(propertyNode))  {  return  false;  }	  if(objType.isConstructor()    ||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	65	None	replace
81	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(propertyNode,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(propertyNode,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  ||  objType.isEquivalentTo(propertyNode,  propertyNode))  {  return  false;  }	  if(objType.isConstructor()    ||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	65	None	replace
82	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(name,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(name,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  ||  objType.isEquivalentTo(name,  propertyNode))  {  return  false;  }	  if(objType.isConstructor()    ||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	65	None	replace
83	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(propertyNode,  name))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(propertyNode,  name))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  ||  objType.isEquivalentTo(propertyNode,  name))  {  return  false;  }	  if(objType.isConstructor()    ||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	65	None	replace
84	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(type))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(type))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(type))    {    return    true;    }    	compilable	timeout	152	1	replace
85	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(type))  {  return  true;  }  timeout  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(type))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(type))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(type))    {    return    true;    }    	compilable	timeout	152	1	replace
86	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(type))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(type))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(type))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(type))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	152	None	replace
87	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(inferred))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(inferred))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(inferred))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(type))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	152	None	replace
88	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(objType))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(objType))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(objType))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(type))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	152	None	replace
89	[BUG]  [BUGGY]  if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(type))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(type))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(type))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(type))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	152	None	replace
90	[BUG]  [BUGGY]  parent!=  null  &&  parent.isEquivalentTo(objType))  {  return  true;  [CE]  not  a  statement  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent!=  null  &&  parent.isEquivalentTo(objType))  {  return  true;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent!=  null  &&  parent.isEquivalentTo(objType))  {  return  true;	  parent!=    null    &&    objType.isEquivalentTo(prototype))    {    return    true;    	non-compiled	[CE]  not  a  statement	20	None	replace
91	[BUG]  [BUGGY]  objType!=  null  &&  objType.isEquivalentTo(prototype))  {  return  true;  [CE]  not  a  statement  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType!=  null  &&  objType.isEquivalentTo(prototype))  {  return  true;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType!=  null  &&  objType.isEquivalentTo(prototype))  {  return  true;	  parent!=    null    &&    objType.isEquivalentTo(prototype))    {    return    true;    	non-compiled	[CE]  not  a  statement	20	None	replace
92	[BUG]  [BUGGY]  parent!=  null  ||  objType.isEquivalentTo(prototype))  {  return  true;  [CE]  not  a  statement  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent!=  null  ||  objType.isEquivalentTo(prototype))  {  return  true;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent!=  null  ||  objType.isEquivalentTo(prototype))  {  return  true;	  parent!=    null    &&    objType.isEquivalentTo(prototype))    {    return    true;    	non-compiled	[CE]  not  a  statement	20	None	replace
93	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isInterface()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isInterface()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isInterface()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }	  timeout    	compilable	timeout	129	1	add
94	[BUG]  [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isInterface()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  timeout  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isInterface()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isInterface()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }	  timeout    	compilable	timeout	129	1	add
95	[BUG]  [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isInterface()  ||  objType.isEQUIvalentTo(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isInterface()  ||  objType.isEQUIvalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isInterface()  ||  objType.isEQUIvalentTo(prototype))  {  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	129	None	add
96	[BUG]  [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isInterface()  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isInterface()  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isInterface()  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  }	  timeout    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	129	None	add
97	[BUG]  [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isinterface()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isinterface()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isinterface()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	129	None	add
98	[BUG]  [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isInterface()  ||  objType.isEquivalentTo(Prototype))  {  return  false;  }  [CE]  cannot  find  symbol  Prototype  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isInterface()  ||  objType.isEquivalentTo(Prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isInterface()  ||  objType.isEquivalentTo(Prototype))  {  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol  Prototype	129	None	add
99	[BUG]  [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isInterface()  ||  objType.isEqualTo(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isInterface()  ||  objType.isEqualTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isInterface()  ||  objType.isEqualTo(prototype))  {  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	129	None	add
100	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(prototype,  name))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(prototype,  name))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(prototype,  name))  {  return  true;  }	  if(!objType.isEquivalentTo(name,    propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	94	None	replace
101	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(name,  type,  propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(name,  type,  propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(name,  type,  propertyNode))  {  return  true;  }	  if(!objType.isEquivalentTo(name,    propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	94	None	replace
102	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype,  name))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype,  name))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype,  name))  {  return  true;  }	  if(!objType.isEquivalentTo(name,    propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	94	None	replace
103	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(propertyNode,  name))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(propertyNode,  name))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(propertyNode,  name))  {  return  true;  }	  if(!objType.isEquivalentTo(name,    propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	94	None	replace
104	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode,  name))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode,  name))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode,  name))  {  return  true;  }	  if(!objType.isEquivalentTo(name,    propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	94	None	replace
105	[BUG]  [BUGGY]  if(objType.isEquivalentTo(name,  type,  propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(name,  type,  propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(name,  type,  propertyNode))  {  return  true;  }	  if(!objType.isEquivalentTo(name,    propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	94	None	replace
106	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(type,  name,  propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(type,  name,  propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(type,  name,  propertyNode))  {  return  true;  }	  if(!objType.isEquivalentTo(name,    propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	94	None	replace
107	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(prototype,  inferred))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(prototype,  inferred))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(prototype,  inferred))  {  return  false;  }	  if(!objType.isEquivalentTo(type,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	108	None	replace
108	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype,  inferred))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype,  inferred))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype,  inferred))  {  return  false;  }	  if(!objType.isEquivalentTo(type,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	108	None	replace
109	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(prototype,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(prototype,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(prototype,  propertyNode))  {  return  false;  }	  if(!objType.isEquivalentTo(type,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	108	None	replace
110	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(name,  type,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(name,  type,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(name,  type,  propertyNode))  {  return  false;  }	  if(!objType.isEquivalentTo(type,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	108	None	replace
111	[BUG]  [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(propertyNode,  name);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(propertyNode,  name);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType  ==  null)?  false  :  objType.isEquivalentTo(propertyNode,  name);	  return(objType    ==    null)?    false    :    objType.isEquivalentTo(name,    propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	132	None	replace
112	[BUG]  [BUGGY]  return(propertyNode  ==  null)?  false  :  objType.isEquivalentTo(name,  propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(propertyNode  ==  null)?  false  :  objType.isEquivalentTo(name,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(propertyNode  ==  null)?  false  :  objType.isEquivalentTo(name,  propertyNode);	  return(objType    ==    null)?    false    :    objType.isEquivalentTo(name,    propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	132	None	replace
113	[BUG]  [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(prototype,  name);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(prototype,  name);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType  ==  null)?  false  :  objType.isEquivalentTo(prototype,  name);	  return(objType    ==    null)?    false    :    objType.isEquivalentTo(name,    propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	132	None	replace
114	[BUG]  [BUGGY]  return(objType  ==  null)?  false  :  type.isEquivalentTo(propertyNode,  propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType  ==  null)?  false  :  type.isEquivalentTo(propertyNode,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType  ==  null)?  false  :  type.isEquivalentTo(propertyNode,  propertyNode);	  return(objType    ==    null)?    false    :    objType.isEquivalentTo(name,    propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	132	None	replace
115	[BUG]  [BUGGY]  return(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(type));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(type));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(type));	  return(objType.isEquivalentTo(type)||    objType.isEquivalentTo(propertyNode));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	72	None	replace
116	[BUG]  [BUGGY]  return(objType.isEquivalentTo(type)||  type.isEquivalentTo(propertyNode));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(type)||  type.isEquivalentTo(propertyNode));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(type)||  type.isEquivalentTo(propertyNode));	  return(objType.isEquivalentTo(type)||    objType.isEquivalentTo(propertyNode));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	72	None	replace
117	[BUG]  [BUGGY]  return(objType.isEquivalentTo(type)||  objType.isEquivalentTo(propertyNode,  inferred));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(type)||  objType.isEquivalentTo(propertyNode,  inferred));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(type)||  objType.isEquivalentTo(propertyNode,  inferred));	  return(objType.isEquivalentTo(type)||    objType.isEquivalentTo(propertyNode));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	72	None	replace
118	[BUG]  [BUGGY]  return(type.isEquivalentTo(objType)||  objType.isEquivalentTo(propertyNode));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(type.isEquivalentTo(objType)||  objType.isEquivalentTo(propertyNode));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(type.isEquivalentTo(objType)||  objType.isEquivalentTo(propertyNode));	  return(objType.isEquivalentTo(type)||    objType.isEquivalentTo(propertyNode));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	72	None	replace
119	[BUG]  [BUGGY]  return(objType.isEquivalentTo(type)||  objType.isEquivalentTo(propertyNode,  type));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(type)||  objType.isEquivalentTo(propertyNode,  type));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(type)||  objType.isEquivalentTo(propertyNode,  type));	  return(objType.isEquivalentTo(type)||    objType.isEquivalentTo(propertyNode));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	72	None	replace
120	[BUG]  [BUGGY]  timeout  [FE]            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(prototype))  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(baseType)||    objType.isEquivalentTo(baseType))    {    return    false;    }    	compilable	timeout	117	1	replace
121	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(prototype))  {  return  false;  }  timeout  [FE]            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(prototype))  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(baseType)||    objType.isEquivalentTo(baseType))    {    return    false;    }    	compilable	timeout	117	1	replace
122	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(baseType))  {  return  false;  }  [CE]  cannot  find  symbol  baseType  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(baseType))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(baseType))  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(baseType)||    objType.isEquivalentTo(baseType))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  baseType	117	None	replace
123	[BUG]  [BUGGY]  return  false;  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(baseType))  {  return  false;  }  [CE]  cannot  find  symbol  baseType  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  false;  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(baseType))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  false;  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(baseType))  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(baseType)||    objType.isEquivalentTo(baseType))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  baseType	117	None	replace
124	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(type,  inferred,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(type,  inferred,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(type,  inferred,  propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(inferred,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	145	None	replace
125	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  type.isEquivalentTo(inferred,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  type.isEquivalentTo(inferred,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  type.isEquivalentTo(inferred,  propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(inferred,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	145	None	replace
126	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(inferred,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(inferred,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(inferred,  propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(inferred,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	145	None	replace
127	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(name,  inferred,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(name,  inferred,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(name,  inferred,  propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(inferred,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	145	None	replace
128	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(inferred,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(inferred,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(inferred,  propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(inferred,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	145	None	replace
129	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(prototype,  inferred))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(prototype,  inferred))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(prototype,  inferred))  {  return  false;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(inferred,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	145	None	replace
130	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(inferred,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(inferred,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(inferred,  propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(inferred,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	145	None	replace
131	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)&&  type.isEquivalentTo(propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)&&  type.isEquivalentTo(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)&&  type.isEquivalentTo(propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)&&    objType.isEquivalentTo(propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	87	None	replace
132	[BUG]  [BUGGY]  if(objType.isEquivalentTo(name)&&  objType.isEquivalentTo(propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(name)&&  objType.isEquivalentTo(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(name)&&  objType.isEquivalentTo(propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)&&    objType.isEquivalentTo(propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	87	None	replace
133	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(type,  propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(type,  propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(type,  propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)&&    objType.isEquivalentTo(propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	87	None	replace
134	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type)&&  objType.isEquivalentTo(propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type)&&  objType.isEquivalentTo(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type)&&  objType.isEquivalentTo(propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)&&    objType.isEquivalentTo(propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	87	None	replace
135	[BUG]  [BUGGY]  return  objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(propertyNode,  inferred,  propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(propertyNode,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(propertyNode,  inferred,  propertyNode);	  return    objType.isEquivalentTo(prototype)&&    objType.isEquivalentTo(propertyNode,    inferred);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	2	None	replace
136	[BUG]  [BUGGY]  return  objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(propertyNode,  inferred);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(propertyNode,  inferred);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(propertyNode,  inferred);	  return    objType.isEquivalentTo(prototype)&&    objType.isEquivalentTo(propertyNode,    inferred);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	2	None	replace
137	[BUG]  [BUGGY]  return  objType.isEquivalentTo(prototype)&&  type.isEquivalentTo(propertyNode,  inferred);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(prototype)&&  type.isEquivalentTo(propertyNode,  inferred);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(prototype)&&  type.isEquivalentTo(propertyNode,  inferred);	  return    objType.isEquivalentTo(prototype)&&    objType.isEquivalentTo(propertyNode,    inferred);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	2	None	replace
138	[BUG]  [BUGGY]  return  objType.isEquivalentTo(type)&&  objType.isEquivalentTo(propertyNode,  inferred);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(type)&&  objType.isEquivalentTo(propertyNode,  inferred);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(type)&&  objType.isEquivalentTo(propertyNode,  inferred);	  return    objType.isEquivalentTo(prototype)&&    objType.isEquivalentTo(propertyNode,    inferred);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	2	None	replace
139	[BUG]  [BUGGY]  return  objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(prototype,  inferred);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(prototype,  inferred);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(prototype,  inferred);	  return    objType.isEquivalentTo(prototype)&&    objType.isEquivalentTo(propertyNode,    inferred);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	2	None	replace
140	[BUG]  [BUGGY]  return  objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(propertyNode,  type,  inferred);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(propertyNode,  type,  inferred);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(propertyNode,  type,  inferred);	  return    objType.isEquivalentTo(prototype)&&    objType.isEquivalentTo(propertyNode,    inferred);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	2	None	replace
141	[BUG]  [BUGGY]  return  objType.isEquivalentTo(name)&&  objType.isEquivalentTo(propertyNode,  inferred);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(name)&&  objType.isEquivalentTo(propertyNode,  inferred);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(name)&&  objType.isEquivalentTo(propertyNode,  inferred);	  return    objType.isEquivalentTo(prototype)&&    objType.isEquivalentTo(propertyNode,    inferred);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	2	None	replace
142	[BUG]  [BUGGY]  if(type.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(type.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(type.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||    type.isEquivalentTo(propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	86	None	replace
143	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(inferred,  propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(inferred,  propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(inferred,  propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||    type.isEquivalentTo(propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	86	None	replace
144	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(propertyNode,  inferred))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(propertyNode,  inferred))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(propertyNode,  inferred))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||    type.isEquivalentTo(propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	86	None	replace
145	[BUG]  [BUGGY]  if(objType.isEquivalentTo(name)||  type.isEquivalentTo(propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(name)||  type.isEquivalentTo(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(name)||  type.isEquivalentTo(propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||    type.isEquivalentTo(propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	86	None	replace
146	[BUG]  [BUGGY]  if(type.isEquivalentTo(propertyNode)||  type.isEquivalentTo(propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(type.isEquivalentTo(propertyNode)||  type.isEquivalentTo(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(type.isEquivalentTo(propertyNode)||  type.isEquivalentTo(propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||    type.isEquivalentTo(propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	86	None	replace
147	[BUG]  [BUGGY]  timeout  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.getConstructor();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	objType  =  objType.getConstructor();	  objType    =    objType.getImplicitPrototype();    timeout    	compilable	timeout	159	1	replace
148	[BUG]  [BUGGY]  objType  =  objType.getConstructor();  timeout  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.getConstructor();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType  =  objType.getConstructor();	  objType    =    objType.getImplicitPrototype();    timeout    	compilable	timeout	159	1	replace
149	[BUG]  [BUGGY]  objType  =  type.getImplicitPrototype();  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  type.getImplicitPrototype();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType  =  type.getImplicitPrototype();	  objType    =    objType.getImplicitPrototype();    timeout    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
150	[BUG]  [BUGGY]  objType  =  objType.getEquivalentPrototype();  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.getEquivalentPrototype();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType  =  objType.getEquivalentPrototype();	  objType    =    objType.getImplicitPrototype();    timeout    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
151	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(prototype))        {        return        true;        }        if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }	  timeout    	compilable	timeout	102	1	add
152	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))        {        return        true;        }        if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }	  timeout    	compilable	timeout	102	1	add
153	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(prototype))        {        return        true;        }        if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }	  timeout    	compilable	timeout	102	1	add
154	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  timeout  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))        {        return        true;        }        if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }	  timeout    	compilable	timeout	102	1	add
155	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))        {        return        true;        }        if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true	  timeout    	non-compiled	[CE]  ';'  expected	102	None	add
156	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))        {        return        true;        }        if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;	  timeout    	non-compiled	[CE]  ';'  expected	102	None	add
157	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))        {        return        true;        }        if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return	  timeout    	non-compiled	[CE]  illegal  start  of  expression	102	None	add
158	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(prototype))        {        return        true;        }        if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))	  timeout    	compilable	timeout	102	1	add
159	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  timeout  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))        {        return        true;        }        if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))	  timeout    	compilable	timeout	102	1	add
160	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))        {        return        true;        }        if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {	  timeout    	non-compiled	[CE]  ';'  expected	102	None	add
161	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype)  [CE]  ')'  expected  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype)  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))        {        return        true;        }        if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype)	  timeout    	non-compiled	[CE]  ')'  expected	102	None	add
162	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode,  type,  inferred))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode,  type,  inferred))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode,  type,  inferred))  {  return  true;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    type))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	78	None	replace
163	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(propertyNode,  propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(propertyNode,  propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(propertyNode,  propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    type))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	78	None	replace
164	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  type.isEquivalentTo(propertyNode,  inferred))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  type.isEquivalentTo(propertyNode,  inferred))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  type.isEquivalentTo(propertyNode,  inferred))  {  return  true;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    type))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	78	None	replace
165	[BUG]  [BUGGY]  if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(propertyNode,  type))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(propertyNode,  type))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(propertyNode,  type))  {  return  true;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    type))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	78	None	replace
166	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(propertyNode,  type))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(propertyNode,  type))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(propertyNode,  type))  {  return  true;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    type))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	78	None	replace
167	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  type.isEquivalentTo(propertyNode,  propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  type.isEquivalentTo(propertyNode,  propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  type.isEquivalentTo(propertyNode,  propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    type))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	78	None	replace
168	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.equivalentTo(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.equivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.equivalentTo(prototype))  {  return  false;  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.equivalentTo(prototype))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	171	None	replace
169	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.equals(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(prototype)||  objType.equals(propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.equivalentTo(prototype))    {    return    false;    }    	compilable	timeout	171	1	replace
170	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.equals(propertyNode))  {  return  false;  }  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.equals(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.equals(propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.equivalentTo(prototype))    {    return    false;    }    	compilable	timeout	171	1	replace
171	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.equals(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(prototype)||  objType.equals(prototype))  {  return  false;  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.equivalentTo(prototype))    {    return    false;    }    	compilable	timeout	171	1	replace
172	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.equals(prototype))  {  return  false;  }  timeout  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.equals(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.equals(prototype))  {  return  false;  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.equivalentTo(prototype))    {    return    false;    }    	compilable	timeout	171	1	replace
173	[BUG]  [BUGGY]  return  objType.isEquivalentTo(name)||  objType.isEquivalentTo(prototype);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(name)||  objType.isEquivalentTo(prototype);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(name)||  objType.isEquivalentTo(prototype);	  return    objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(prototype);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	1	None	replace
174	[BUG]  [BUGGY]  return  objType.isEquivalentTo(type,  propertyNode)||  objType.isEquivalentTo(prototype);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(type,  propertyNode)||  objType.isEquivalentTo(prototype);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(type,  propertyNode)||  objType.isEquivalentTo(prototype);	  return    objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(prototype);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	1	None	replace
175	[BUG]  [BUGGY]  return  objType.isEquivalentTo(name,  propertyNode)||  objType.isEquivalentTo(prototype);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(name,  propertyNode)||  objType.isEquivalentTo(prototype);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(name,  propertyNode)||  objType.isEquivalentTo(prototype);	  return    objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(prototype);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	1	None	replace
176	[BUG]  [BUGGY]  return  objType.isEquivalentTo(propertyNode,  type)||  objType.isEquivalentTo(prototype);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(propertyNode,  type)||  objType.isEquivalentTo(prototype);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(propertyNode,  type)||  objType.isEquivalentTo(prototype);	  return    objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(prototype);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	1	None	replace
177	[BUG]  [BUGGY]  return  objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(prototype);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(prototype);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(prototype);	  return    objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(prototype);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	1	None	replace
178	[BUG]  [BUGGY]  return  objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(type,  propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(type,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(type,  propertyNode);	  return    objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(prototype);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	1	None	replace
179	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||!inferred)  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(prototype)||!inferred)  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||!inferred)    {    return    true;    }    	compilable	timeout	146	1	replace
180	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||!inferred)  {  return  true;  }  timeout  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||!inferred)  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||!inferred)  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||!inferred)    {    return    true;    }    	compilable	timeout	146	1	replace
181	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)&&!inferred)  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)&&!inferred)  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)&&!inferred)  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||!inferred)    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	146	None	replace
182	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type)||!inferred)  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(type)||!inferred)  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||!inferred)    {    return    true;    }    	compilable	timeout	146	1	replace
183	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type)||!inferred)  {  return  true;  }  timeout  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type)||!inferred)  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type)||!inferred)  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||!inferred)    {    return    true;    }    	compilable	timeout	146	1	replace
184	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  inferred)  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  inferred)  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  inferred)  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||!inferred)    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	146	None	replace
185	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type,  propertyNode)||!inferred)  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type,  propertyNode)||!inferred)  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type,  propertyNode)||!inferred)  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||!inferred)    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	146	None	replace
186	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype,  inferred))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype,  inferred))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype,  inferred))  {  return  true;  }	  if(objType.isEquivalentTo(type,    propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	82	None	replace
187	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype,  type))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype,  type))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype,  type))  {  return  true;  }	  if(objType.isEquivalentTo(type,    propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	82	None	replace
188	[BUG]  [BUGGY]  if(type.isEquivalentTo(objType,  propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(type.isEquivalentTo(objType,  propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(type.isEquivalentTo(objType,  propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(type,    propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	82	None	replace
189	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type,  inferred))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type,  inferred))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type,  inferred))  {  return  true;  }	  if(objType.isEquivalentTo(type,    propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	82	None	replace
190	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype,  name))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype,  name))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype,  name))  {  return  false;  }	  if(objType.isEquivalentTo(name,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	97	None	replace
191	[BUG]  [BUGGY]  if(objType.isEquivalentTo(name,  type,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(name,  type,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(name,  type,  propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(name,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	97	None	replace
192	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode,  name))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode,  name))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode,  name))  {  return  false;  }	  if(objType.isEquivalentTo(name,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	97	None	replace
193	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type,  name))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type,  name))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type,  name))  {  return  false;  }	  if(objType.isEquivalentTo(name,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	97	None	replace
194	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type,  name,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type,  name,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type,  name,  propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(name,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	97	None	replace
195	[BUG]  [BUGGY]  if(objType.isEquivalentTo(name,  type))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(name,  type))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(name,  type))  {  return  false;  }	  if(objType.isEquivalentTo(name,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	97	None	replace
196	[BUG]  [BUGGY]  if(objType!=  null  &&!objType.isEquivalentTo(propertyNode,  type))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  &&!objType.isEquivalentTo(propertyNode,  type))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=  null  &&!objType.isEquivalentTo(propertyNode,  type))  {  return  false;  }	  if(objType!=    null    &&!objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	125	None	replace
197	[BUG]  [BUGGY]  if(objType!=  null  &&!objType.isEquivalentTo(propertyNode,  inferred))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  &&!objType.isEquivalentTo(propertyNode,  inferred))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=  null  &&!objType.isEquivalentTo(propertyNode,  inferred))  {  return  false;  }	  if(objType!=    null    &&!objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	125	None	replace
198	[BUG]  [BUGGY]  if(objType!=  null  ||!objType.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  ||!objType.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=  null  ||!objType.isEquivalentTo(propertyNode))  {  return  false;  }	  if(objType!=    null    &&!objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	125	None	replace
199	[BUG]  [BUGGY]  if(objType!=  null  &&!objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  &&!objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=  null  &&!objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }	  if(objType!=    null    &&!objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	125	None	replace
200	[BUG]  [BUGGY]  timeout  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  &&!objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType!=  null  &&!objType.isEquivalentTo(prototype))  {  return  false;  }	  if(objType!=    null    &&!objType.isEquivalentTo(propertyNode))    {    return    false;    }    	compilable	timeout	125	1	replace
201	[BUG]  [BUGGY]  if(objType!=  null  &&!objType.isEquivalentTo(prototype))  {  return  false;  }  timeout  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  &&!objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=  null  &&!objType.isEquivalentTo(prototype))  {  return  false;  }	  if(objType!=    null    &&!objType.isEquivalentTo(propertyNode))    {    return    false;    }    	compilable	timeout	125	1	replace
202	[BUG]  [BUGGY]  if(objType!=  null  &&!objType.isEquivalentTo(prototype,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  &&!objType.isEquivalentTo(prototype,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=  null  &&!objType.isEquivalentTo(prototype,  propertyNode))  {  return  false;  }	  if(objType!=    null    &&!objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	125	None	replace
203	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)&&  type.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)&&  type.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)&&  type.isEquivalentTo(propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode)&&    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	37	None	replace
204	[BUG]  [BUGGY]  if(objType.isEquivalentTo(name)&&  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(name)&&  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(name)&&  objType.isEquivalentTo(propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode)&&    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	37	None	replace
205	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type)&&  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type)&&  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type)&&  objType.isEquivalentTo(propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode)&&    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	37	None	replace
206	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode)&&    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	37	None	replace
207	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode,  inferred,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode,  inferred,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode,  inferred,  propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode,    inferred))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	96	None	replace
208	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type,  propertyNode,  inferred))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type,  propertyNode,  inferred))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type,  propertyNode,  inferred))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode,    inferred))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	96	None	replace
209	[BUG]  [BUGGY]  if(objType.isEquivalentTo(name,  propertyNode,  inferred))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(name,  propertyNode,  inferred))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(name,  propertyNode,  inferred))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode,    inferred))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	96	None	replace
210	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode,  type,  inferred))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode,  type,  inferred))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode,  type,  inferred))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode,    inferred))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	96	None	replace
211	[BUG]  [BUGGY]  if(objType.isPrototype())  {  if(!objType.isEquivalentTo(prototype))  {  return  false;  }  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype())  {  if(!objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype())  {  if(!objType.isEquivalentTo(prototype))  {  return  false;  }	  if(!objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	non-compiled	[CE]  ';'  expected	111	None	replace
212	[BUG]  [BUGGY]  if(objType!=  null)  {  if(!objType.isEquivalentTo(prototype))  {  return  false;  }  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null)  {  if(!objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=  null)  {  if(!objType.isEquivalentTo(prototype))  {  return  false;  }	  if(!objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	non-compiled	[CE]  ';'  expected	111	None	replace
213	[BUG]  [BUGGY]  timeout  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  ||!objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType!=  null  ||!objType.isEquivalentTo(prototype))  {  return  false;  }	  if(!objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	compilable	timeout	111	1	replace
214	[BUG]  [BUGGY]  if(objType!=  null  ||!objType.isEquivalentTo(prototype))  {  return  false;  }  timeout  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  ||!objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=  null  ||!objType.isEquivalentTo(prototype))  {  return  false;  }	  if(!objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	compilable	timeout	111	1	replace
215	[BUG]  [BUGGY]  if(objType.isPrototype())  {  if(!objType.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype())  {  if(!objType.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype())  {  if(!objType.isEquivalentTo(propertyNode))  {  return  false;  }	  if(!objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	non-compiled	[CE]  ';'  expected	111	None	replace
216	[BUG]  [BUGGY]  objType  =  type.restrictByNotNullOrUndefined();  [CE]  incompatible  types  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  type.restrictByNotNullOrUndefined();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType  =  type.restrictByNotNullOrUndefined();	  objType    =    objType.restrictByNotNullOrUndefined();    	non-compiled	[CE]  incompatible  types	155	None	replace
217	[BUG]  [BUGGY]  objType  =  objType.getRestrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.getRestrictByNotNullOrUndefined();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType  =  objType.getRestrictByNotNullOrUndefined();	  objType    =    objType.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
218	[BUG]  [BUGGY]  objType  =  objType.restrictByNotEmptyOrUndefined();  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.restrictByNotEmptyOrUndefined();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType  =  objType.restrictByNotEmptyOrUndefined();	  objType    =    objType.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
219	[BUG]  [BUGGY]  objType  =  objType.restrictByNotNullOrUndefined(propertyNode);  [CE]  method  restrictByNotNullOrUndefined  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.restrictByNotNullOrUndefined(propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType  =  objType.restrictByNotNullOrUndefined(propertyNode);	  objType    =    objType.restrictByNotNullOrUndefined();    	non-compiled	[CE]  method  restrictByNotNullOrUndefined  in  class  JSType  cannot  be  applied  to  given  types;	155	None	replace
220	[BUG]  [BUGGY]  objType  =  objType.restrictByNotNullOrUndefined(),  inferred);  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.restrictByNotNullOrUndefined(),  inferred);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType  =  objType.restrictByNotNullOrUndefined(),  inferred);	  objType    =    objType.restrictByNotNullOrUndefined();    	non-compiled	[CE]  ';'  expected	155	None	replace
221	[BUG]  [BUGGY]  if(objType.isPrototype()  ||  type.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype()  ||  type.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype()  ||  type.isEquivalentTo(propertyNode))  {  return  false;  }	  if(objType.isPrototype()    ||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
222	[BUG]  [BUGGY]  if(objType.isPrototype()  ||  propertyNode.isEquivalentTo(objType))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype()  ||  propertyNode.isEquivalentTo(objType))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype()  ||  propertyNode.isEquivalentTo(objType))  {  return  false;  }	  if(objType.isPrototype()    ||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
223	[BUG]  [BUGGY]  if(objType.isPrototype()  ||  isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype()  ||  isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype()  ||  isEquivalentTo(propertyNode))  {  return  false;  }	  if(objType.isPrototype()    ||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
224	[BUG]  [BUGGY]  if(objType.isPrototype()  ||  objType.isEquivalentTo(value))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype()  ||  objType.isEquivalentTo(value))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype()  ||  objType.isEquivalentTo(value))  {  return  false;  }	  if(objType.isPrototype()    ||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
225	[BUG]  [BUGGY]  if(type.isEquivalentTo(propertyNode,  objType))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(type.isEquivalentTo(propertyNode,  objType))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(type.isEquivalentTo(propertyNode,  objType))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode,    type))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	83	None	replace
226	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode,  type,  inferred))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode,  type,  inferred))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode,  type,  inferred))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode,    type))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	83	None	replace
227	[BUG]  [BUGGY]  if(objType.isEquivalentTo(name,  type))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(name,  type))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(name,  type))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode,    type))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	83	None	replace
228	[BUG]  [BUGGY]  if(type.isEquivalentTo(propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(type.isEquivalentTo(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(type.isEquivalentTo(propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode,    type))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	83	None	replace
229	[BUG]  [BUGGY]  return(type.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(type.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(type.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode));	  return(objType.isEquivalentTo(prototype)||    type.isEquivalentTo(propertyNode));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	67	None	replace
230	[BUG]  [BUGGY]  return(objType.isEquivalentTo(prototype)||  type.isEquivalentTo(propertyNode,  inferred));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(prototype)||  type.isEquivalentTo(propertyNode,  inferred));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(prototype)||  type.isEquivalentTo(propertyNode,  inferred));	  return(objType.isEquivalentTo(prototype)||    type.isEquivalentTo(propertyNode));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	67	None	replace
231	[BUG]  [BUGGY]  return(objType.isEquivalentTo(name)||  type.isEquivalentTo(propertyNode));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(name)||  type.isEquivalentTo(propertyNode));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(name)||  type.isEquivalentTo(propertyNode));	  return(objType.isEquivalentTo(prototype)||    type.isEquivalentTo(propertyNode));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	67	None	replace
232	[BUG]  [BUGGY]  return(objType.isEquivalentTo(prototype)||  type.isEquivalentTo(inferred,  propertyNode));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(prototype)||  type.isEquivalentTo(inferred,  propertyNode));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(prototype)||  type.isEquivalentTo(inferred,  propertyNode));	  return(objType.isEquivalentTo(prototype)||    type.isEquivalentTo(propertyNode));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	67	None	replace
233	[BUG]  [BUGGY]  return(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(prototype));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(prototype));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(prototype));	  return(objType.isEquivalentTo(prototype)||    type.isEquivalentTo(propertyNode));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	67	None	replace
234	[BUG]  [BUGGY]  if(objType.isPrototype())  {  if(objType.isEquivalentTo(prototype))  {  return  false;  }  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype())  {  if(objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype())  {  if(objType.isEquivalentTo(prototype))  {  return  false;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    If(objType.isEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  ';'  expected	106	None	replace
235	[BUG]  [BUGGY]  if(objType.isPrototype())  {  if(objType.isEquivalentTo(prototype))  {  return  true;  }  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype())  {  if(objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype())  {  if(objType.isEquivalentTo(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    If(objType.isEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  ';'  expected	106	None	replace
236	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingProperty(name,  type,  inferred,  propertyNode);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  aughtExceptionHandler.handleMissingProperty(name,  type,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	aughtExceptionHandler.handleMissingProperty(name,  type,  inferred,  propertyNode);	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    If(objType.isEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	106	None	replace
237	[BUG]  [BUGGY]  if(objType.isPrototype())  {  if(objType.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype())  {  if(objType.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype())  {  if(objType.isEquivalentTo(propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    If(objType.isEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  ';'  expected	106	None	replace
238	[BUG]  [BUGGY]  Class  <?>  type  =  objType.getRawClass();  [CE]  variable  type  is  already  defined  in  method  defineProperty(String,JSType,boolean,Node)  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  Class  <?>  type  =  objType.getRawClass();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	Class  <?>  type  =  objType.getRawClass();	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    If(objType.isEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  variable  type  is  already  defined  in  method  defineProperty(String,JSType,boolean,Node)	106	None	replace
239	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode))  {  return  false;  }  else  if(objType.isEquivalentTo(propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode))  {  return  false;  }  else  if(objType.isEquivalentTo(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode))  {  return  false;  }  else  if(objType.isEquivalentTo(propertyNode))  {  return  true;  }	  return    false;    return    false;    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	8	None	replace
240	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode))  {  return  false;  }  else  if(objType.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode))  {  return  false;  }  else  if(objType.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode))  {  return  false;  }  else  if(objType.isEquivalentTo(propertyNode))  {  return  false;  }	  return    false;    return    false;    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	8	None	replace
241	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(propertyNode,  inferred))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(propertyNode,  inferred))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  ||  objType.isEquivalentTo(propertyNode,  inferred))  {  return  true;  }	  if(objType.isConstructor()    ||    objType.isEquivalentTo(propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	138	None	replace
242	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(propertyNode,  type))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(propertyNode,  type))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  ||  objType.isEquivalentTo(propertyNode,  type))  {  return  true;  }	  if(objType.isConstructor()    ||    objType.isEquivalentTo(propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	138	None	replace
243	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(type,  propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(type,  propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  ||  objType.isEquivalentTo(type,  propertyNode))  {  return  true;  }	  if(objType.isConstructor()    ||    objType.isEquivalentTo(propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	138	None	replace
244	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  type.isEquivalentTo(propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  type.isEquivalentTo(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  ||  type.isEquivalentTo(propertyNode))  {  return  true;  }	  if(objType.isConstructor()    ||    objType.isEquivalentTo(propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	138	None	replace
245	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(propertyNode,  propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(propertyNode,  propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  ||  objType.isEquivalentTo(propertyNode,  propertyNode))  {  return  true;  }	  if(objType.isConstructor()    ||    objType.isEquivalentTo(propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	138	None	replace
246	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(prototype))  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }	  return    super.defineProperty(name,    objType,    inferred,    propertyNode);    timeout    	compilable	timeout	114	1	replace
247	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  timeout  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }	  return    super.defineProperty(name,    objType,    inferred,    propertyNode);    timeout    	compilable	timeout	114	1	replace
248	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode))  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode))  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode))  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }	  return    super.defineProperty(name,    objType,    inferred,    propertyNode);    timeout    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	114	None	replace
249	[BUG]  [BUGGY]  timeout  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(prototype))  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  else  {  this.setPrototypeBasedOn(objType);  }	  return    super.defineProperty(name,    objType,    inferred,    propertyNode);    timeout    	compilable	timeout	114	1	replace
250	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  else  {  this.setPrototypeBasedOn(objType);  }  timeout  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  else  {  this.setPrototypeBasedOn(objType);  }	  return    super.defineProperty(name,    objType,    inferred,    propertyNode);    timeout    	compilable	timeout	114	1	replace
251	[BUG]  [BUGGY]  timeout  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null)  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType!=  null)  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }	  return    super.defineProperty(name,    objType,    inferred,    propertyNode);    timeout    	compilable	timeout	114	1	replace
252	[BUG]  [BUGGY]  if(objType!=  null)  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  timeout  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null)  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=  null)  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }	  return    super.defineProperty(name,    objType,    inferred,    propertyNode);    timeout    	compilable	timeout	114	1	replace
253	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode))  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  else  {  this.setPrototypeBasedOn(objType);  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode))  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode))  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  else  {  this.setPrototypeBasedOn(objType);  }	  return    super.defineProperty(name,    objType,    inferred,    propertyNode);    timeout    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	114	None	replace
254	[BUG]  [BUGGY]  return  super.defineProperty(name,  objType,  type,  inferred,  propertyNode);  [CE]  no  suitable  method  found  for  defineProperty(String,ObjectType,JSType,boolean,Node)  [FE]                                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  super.defineProperty(name,  objType,  type,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  super.defineProperty(name,  objType,  type,  inferred,  propertyNode);	  return    super.defineProperty(name,    objType,    inferred,    propertyNode);    timeout    	non-compiled	[CE]  no  suitable  method  found  for  defineProperty(String,ObjectType,JSType,boolean,Node)	114	None	replace
255	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(prototype))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(prototype)&&    objType.isEquivalentTo(propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	80	None	replace
256	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)&&  type.isEquivalentTo(propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)&&  type.isEquivalentTo(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)&&  type.isEquivalentTo(propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(prototype)&&    objType.isEquivalentTo(propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	80	None	replace
257	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(propertyNode,  inferred))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(propertyNode,  inferred))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(propertyNode,  inferred))  {  return  true;  }	  if(objType.isEquivalentTo(prototype)&&    objType.isEquivalentTo(propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	80	None	replace
258	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(propertyNode,  type,  inferred))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(propertyNode,  type,  inferred))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(propertyNode,  type,  inferred))  {  return  true;  }	  if(!objType.isEquivalentTo(propertyNode,    type))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	163	None	replace
259	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(name,  type))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(name,  type))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(name,  type))  {  return  true;  }	  if(!objType.isEquivalentTo(propertyNode,    type))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	163	None	replace
260	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(prototype,  propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(prototype,  propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(prototype,  propertyNode))  {  return  true;  }	  if(!objType.isEquivalentTo(propertyNode,    type))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	163	None	replace
261	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(type))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(type))  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(objectType))    {    return    false;    }    	compilable	timeout	118	1	replace
262	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(type))  {  return  false;  }  timeout  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(type))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(type))  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(objectType))    {    return    false;    }    	compilable	timeout	118	1	replace
263	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(inferred))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(inferred))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(inferred))  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(objectType))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	118	None	replace
264	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(value))  {  return  false;  }  [CE]  cannot  find  symbol  value  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(value))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(value))  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(objectType))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  value	118	None	replace
265	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  type.isEquivalentTo(objectType))  {  return  false;  }  [CE]  cannot  find  symbol  objectType  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  type.isEquivalentTo(objectType))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  type.isEquivalentTo(objectType))  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(objectType))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  objectType	118	None	replace
266	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(prototype))  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(prototype))    {    return    false;    }    	compilable	timeout	162	1	replace
267	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(prototype))  {  return  false;  }  timeout  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(prototype))  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(prototype))    {    return    false;    }    	compilable	timeout	162	1	replace
268	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode))  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(prototype))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	162	None	replace
269	[BUG]  [BUGGY]  if(objType.isPrototype()  ||  objType.isPrototype())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype()  ||  objType.isPrototype())  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype()  ||  objType.isPrototype())  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(prototype))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
270	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  return  true;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	objType.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  return  true;	  parent.defineProperty(name,    type,    inferred,    propertyNode);    this.setPrototypeBasedOn(objType);    return    true;    	compilable	timeout	154	1	replace
271	[BUG]  [BUGGY]  objType.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  return  true;  timeout  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  return  true;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  return  true;	  parent.defineProperty(name,    type,    inferred,    propertyNode);    this.setPrototypeBasedOn(objType);    return    true;    	compilable	timeout	154	1	replace
272	[BUG]  [BUGGY]  type.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  return  true;  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  type.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  return  true;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	type.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  return  true;	  parent.defineProperty(name,    type,    inferred,    propertyNode);    this.setPrototypeBasedOn(objType);    return    true;    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
273	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  typeOfThis.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  return  true;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	typeOfThis.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  return  true;	  parent.defineProperty(name,    type,    inferred,    propertyNode);    this.setPrototypeBasedOn(objType);    return    true;    	compilable	timeout	154	1	replace
274	[BUG]  [BUGGY]  typeOfThis.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  return  true;  timeout  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  typeOfThis.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  return  true;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	typeOfThis.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  return  true;	  parent.defineProperty(name,    type,    inferred,    propertyNode);    this.setPrototypeBasedOn(objType);    return    true;    	compilable	timeout	154	1	replace
275	[BUG]  [BUGGY]  params.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  return  true;  [CE]  cannot  find  symbol  params  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  params.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  return  true;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	params.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  return  true;	  parent.defineProperty(name,    type,    inferred,    propertyNode);    this.setPrototypeBasedOn(objType);    return    true;    	non-compiled	[CE]  cannot  find  symbol  params	154	None	replace
276	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  return  true;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  return  true;	  parent.defineProperty(name,    type,    inferred,    propertyNode);    this.setPrototypeBasedOn(objType);    return    true;    	compilable	timeout	154	1	replace
277	[BUG]  [BUGGY]  defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  return  true;  timeout  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  return  true;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  return  true;	  parent.defineProperty(name,    type,    inferred,    propertyNode);    this.setPrototypeBasedOn(objType);    return    true;    	compilable	timeout	154	1	replace
278	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isPrototypeBasedOn(propertyNode))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isPrototypeBasedOn(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  ||  objType.isPrototypeBasedOn(propertyNode))  {  return  false;  }	  if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
279	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isPrototypeBasedOn(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isPrototypeBasedOn(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  ||  objType.isPrototypeBasedOn(prototype))  {  return  false;  }	  if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
280	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isInterface())  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isConstructor()  ||  objType.isInterface())  {  return  false;  }	  if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	compilable	timeout	62	1	replace
281	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isInterface())  {  return  false;  }  timeout  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isInterface())  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  ||  objType.isInterface())  {  return  false;  }	  if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	compilable	timeout	62	1	replace
282	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(type))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isConstructor()  ||  objType.isEquivalentTo(type))  {  return  false;  }	  if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	compilable	timeout	62	1	replace
283	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(type))  {  return  false;  }  timeout  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(type))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  ||  objType.isEquivalentTo(type))  {  return  false;  }	  if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	compilable	timeout	62	1	replace
284	[BUG]  [BUGGY]  type.defineProperty(name,  type,  inferred,  propertyNode);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  type.defineProperty(name,  type,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	type.defineProperty(name,  type,  inferred,  propertyNode);	  parent.defineProperty(name,    type,    inferred,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
285	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  defineProperty(name,  type,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	defineProperty(name,  type,  inferred,  propertyNode);	  parent.defineProperty(name,    type,    inferred,    propertyNode);    	compilable	timeout	16	1	replace
286	[BUG]  [BUGGY]  defineProperty(name,  type,  inferred,  propertyNode);  timeout  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  defineProperty(name,  type,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	defineProperty(name,  type,  inferred,  propertyNode);	  parent.defineProperty(name,    type,    inferred,    propertyNode);    	compilable	timeout	16	1	replace
287	[BUG]  [BUGGY]  params.defineProperty(name,  type,  inferred,  propertyNode);  [CE]  cannot  find  symbol  params  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  params.defineProperty(name,  type,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	params.defineProperty(name,  type,  inferred,  propertyNode);	  parent.defineProperty(name,    type,    inferred,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  params	16	None	replace
288	[BUG]  [BUGGY]  prototypeNode.defineProperty(name,  type,  inferred,  propertyNode);  [CE]  cannot  find  symbol  prototypeNode  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  prototypeNode.defineProperty(name,  type,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	prototypeNode.defineProperty(name,  type,  inferred,  propertyNode);	  parent.defineProperty(name,    type,    inferred,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  prototypeNode	16	None	replace
289	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  prototype.defineProperty(name,  type,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	prototype.defineProperty(name,  type,  inferred,  propertyNode);	  parent.defineProperty(name,    type,    inferred,    propertyNode);    	compilable	timeout	16	1	replace
290	[BUG]  [BUGGY]  prototype.defineProperty(name,  type,  inferred,  propertyNode);  timeout  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  prototype.defineProperty(name,  type,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	prototype.defineProperty(name,  type,  inferred,  propertyNode);	  parent.defineProperty(name,    type,    inferred,    propertyNode);    	compilable	timeout	16	1	replace
291	[BUG]  [BUGGY]  return(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode,  type,  inferred));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode,  type,  inferred));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode,  type,  inferred));	  return(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    type));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	71	None	replace
292	[BUG]  [BUGGY]  return(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(type,  propertyNode));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(type,  propertyNode));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(type,  propertyNode));	  return(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    type));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	71	None	replace
293	[BUG]  [BUGGY]  return(objType.isEquivalentTo(name)||  objType.isEquivalentTo(propertyNode,  type));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(name)||  objType.isEquivalentTo(propertyNode,  type));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(name)||  objType.isEquivalentTo(propertyNode,  type));	  return(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    type));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	71	None	replace
294	[BUG]  [BUGGY]  return(objType.isEquivalentTo(type)||  objType.isEquivalentTo(propertyNode,  propertyNode));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(type)||  objType.isEquivalentTo(propertyNode,  propertyNode));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(type)||  objType.isEquivalentTo(propertyNode,  propertyNode));	  return(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    type));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	71	None	replace
295	[BUG]  [BUGGY]  return(objType.isEquivalentTo(prototype)||  type.isEquivalentTo(propertyNode,  objType));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(prototype)||  type.isEquivalentTo(propertyNode,  objType));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(prototype)||  type.isEquivalentTo(propertyNode,  objType));	  return(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    type));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	71	None	replace
296	[BUG]  [BUGGY]  return(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(name,  propertyNode,  type));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(name,  propertyNode,  type));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(name,  propertyNode,  type));	  return(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    type));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	71	None	replace
297	[BUG]  [BUGGY]  return(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode,  type),  inferred);  [CE]  ')'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode,  type),  inferred);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode,  type),  inferred);	  return(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    type));    	non-compiled	[CE]  ')'  expected	71	None	replace
298	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(prototype,  inferred))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(prototype,  inferred))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(prototype,  inferred))  {  return  true;  }	  if(!objType.isEquivalentTo(type,    propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	93	None	replace
299	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(inferred))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(inferred))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(inferred))  {  return  true;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(valueNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	170	None	replace
300	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(name))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(name))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(name))  {  return  true;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(valueNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	170	None	replace
301	[BUG]  [BUGGY]  return  objType.isEquivalentTo(name)||  type.isEquivalentTo(propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(name)||  type.isEquivalentTo(propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(name)||  type.isEquivalentTo(propertyNode);	  return    objType.isEquivalentTo(prototype)||    type.isEquivalentTo(propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	6	None	replace
302	[BUG]  [BUGGY]  return  objType.isEquivalentTo(type)||  type.isEquivalentTo(propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(type)||  type.isEquivalentTo(propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(type)||  type.isEquivalentTo(propertyNode);	  return    objType.isEquivalentTo(prototype)||    type.isEquivalentTo(propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	6	None	replace
303	[BUG]  [BUGGY]  return  objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(prototype);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(prototype);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(prototype);	  return    objType.isEquivalentTo(prototype)||    type.isEquivalentTo(propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	6	None	replace
304	[BUG]  [BUGGY]  return  objType.isEquivalentTo(prototype)||  type.isEquivalentTo(propertyNode,  inferred);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(prototype)||  type.isEquivalentTo(propertyNode,  inferred);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(prototype)||  type.isEquivalentTo(propertyNode,  inferred);	  return    objType.isEquivalentTo(prototype)||    type.isEquivalentTo(propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	6	None	replace
305	[BUG]  [BUGGY]  return  objType.isEquivalentTo(prototype)||  type.isEquivalentTo(inferred,  propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(prototype)||  type.isEquivalentTo(inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(prototype)||  type.isEquivalentTo(inferred,  propertyNode);	  return    objType.isEquivalentTo(prototype)||    type.isEquivalentTo(propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	6	None	replace
306	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isequivalentTo(prototype))    {    return    true;    }    	compilable	timeout	119	1	replace
307	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(prototype))  {  return  true;  }  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isequivalentTo(prototype))    {    return    true;    }    	compilable	timeout	119	1	replace
308	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isPrototypeBasedOn(prototype))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isPrototypeBasedOn(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.isPrototypeBasedOn(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isequivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
309	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isPrototypeBasedOn(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isPrototypeBasedOn(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.isPrototypeBasedOn(prototype))  {  return  false;  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isequivalentTo(prototype))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
310	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isPrototypeBasedOn(propertyNode))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isPrototypeBasedOn(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.isPrototypeBasedOn(propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isequivalentTo(prototype))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
311	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode,  type,  inferred))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode,  type,  inferred))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode,  type,  inferred))  {  return  false;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    type))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	28	None	replace
312	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(propertyNode,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(propertyNode,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(propertyNode,  propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    type))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	28	None	replace
313	[BUG]  [BUGGY]  if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(propertyNode,  type))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(propertyNode,  type))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(propertyNode,  type))  {  return  false;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    type))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	28	None	replace
314	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  type.isEquivalentTo(propertyNode,  inferred))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  type.isEquivalentTo(propertyNode,  inferred))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  type.isEquivalentTo(propertyNode,  inferred))  {  return  false;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    type))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	28	None	replace
315	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(propertyNode,  type))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(propertyNode,  type))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(propertyNode,  type))  {  return  false;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    type))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	28	None	replace
316	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(propertyNode,  type))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(propertyNode,  type))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(propertyNode,  type))  {  return  false;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    type))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	28	None	replace
317	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType!=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType!=    null    &&    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType!=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }	  timeout    	compilable	timeout	174	1	add
318	[BUG]  [BUGGY]  if(objType!=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType!=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  timeout  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType!=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=    null    &&    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType!=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }	  timeout    	compilable	timeout	174	1	add
319	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType  ==  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType!=    null    &&    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType  ==  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }	  timeout    	compilable	timeout	174	1	add
320	[BUG]  [BUGGY]  if(objType!=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType  ==  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType  ==  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=    null    &&    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType  ==  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }	  timeout    	compilable	timeout	174	1	add
321	[BUG]  [BUGGY]  if(objType!=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType  >=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType  >=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=    null    &&    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType  >=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	174	None	add
322	[BUG]  [BUGGY]  if(objType!=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType!=  null  &&  objType.isEQUIvalentTo(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType!=  null  &&  objType.isEQUIvalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=    null    &&    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType!=  null  &&  objType.isEQUIvalentTo(prototype))  {  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	174	None	add
323	[BUG]  [BUGGY]  if(objType!=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType!=  null  &&  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType!=  null  &&  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=    null    &&    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType!=  null  &&  objType.isEquivalentTo(propertyNode))  {  return  false;  }	  timeout    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	174	None	add
324	[BUG]  [BUGGY]  if(objType!=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType  >>  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType  >>  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=    null    &&    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType  >>  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	174	None	add
325	[BUG]  [BUGGY]  if(objType!=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType!=  null  &&  objType.isPrototype(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType!=  null  &&  objType.isPrototype(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=    null    &&    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType!=  null  &&  objType.isPrototype(prototype))  {  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	174	None	add
326	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(type,  inferred,  propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(type,  inferred,  propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(type,  inferred,  propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(inferred,    propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	134	None	replace
327	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  type.isEquivalentTo(inferred,  propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  type.isEquivalentTo(inferred,  propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  type.isEquivalentTo(inferred,  propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(inferred,    propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	134	None	replace
328	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(prototype,  inferred))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(prototype,  inferred))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(prototype,  inferred))  {  return  true;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(inferred,    propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	134	None	replace
329	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(inferred,  propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(inferred,  propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(inferred,  propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(inferred,    propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	134	None	replace
330	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(inferred,  propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(inferred,  propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(inferred,  propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(inferred,    propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	134	None	replace
331	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(name,  inferred,  propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(name,  inferred,  propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(name,  inferred,  propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(inferred,    propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	134	None	replace
332	[BUG]  [BUGGY]  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  [CE]  unreachable  statement  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return    super.defineProperty(name,    objType,    inferred,    propertyNode);    return  super.defineProperty(name,  objType,  inferred,  propertyNode);	  timeout    	non-compiled	[CE]  unreachable  statement	113	None	add
333	[BUG]  [BUGGY]  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  if(objType.isEquivalentTo(propertyNode))  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  if(objType.isEquivalentTo(propertyNode))  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return    super.defineProperty(name,    objType,    inferred,    propertyNode);    if(objType.isEquivalentTo(propertyNode))  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }	  timeout    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	113	None	add
334	[BUG]  [BUGGY]  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  if(objType.isEquivalentTo(prototype))  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  [CE]  unreachable  statement  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  if(objType.isEquivalentTo(prototype))  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return    super.defineProperty(name,    objType,    inferred,    propertyNode);    if(objType.isEquivalentTo(prototype))  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }	  timeout    	non-compiled	[CE]  unreachable  statement	113	None	add
335	[BUG]  [BUGGY]  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  if(objType!=  null)  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  [CE]  unreachable  statement  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  if(objType!=  null)  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return    super.defineProperty(name,    objType,    inferred,    propertyNode);    if(objType!=  null)  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }	  timeout    	non-compiled	[CE]  unreachable  statement	113	None	add
336	[BUG]  [BUGGY]  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  if(objType.isEquivalentTo(propertyNode))  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  else  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  if(objType.isEquivalentTo(propertyNode))  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  else  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return    super.defineProperty(name,    objType,    inferred,    propertyNode);    if(objType.isEquivalentTo(propertyNode))  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  else  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }	  timeout    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	113	None	add
337	[BUG]  [BUGGY]  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  if(objType.isEquivalentTo(prototype))  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  else  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CE]  unreachable  statement  [FE]                                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  if(objType.isEquivalentTo(prototype))  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  else  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return    super.defineProperty(name,    objType,    inferred,    propertyNode);    if(objType.isEquivalentTo(prototype))  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  else  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }	  timeout    	non-compiled	[CE]  unreachable  statement	113	None	add
338	[BUG]  [BUGGY]  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  if(objType.isEquivalentTo(prototype))  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  else  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  [CE]  unreachable  statement  [FE]                                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  if(objType.isEquivalentTo(prototype))  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  else  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return    super.defineProperty(name,    objType,    inferred,    propertyNode);    if(objType.isEquivalentTo(prototype))  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  else  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }	  timeout    	non-compiled	[CE]  unreachable  statement	113	None	add
339	[BUG]  [BUGGY]  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  if(objType.isEquivalentTo(propertyNode))  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  else  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  if(objType.isEquivalentTo(propertyNode))  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  else  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return    super.defineProperty(name,    objType,    inferred,    propertyNode);    if(objType.isEquivalentTo(propertyNode))  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  else  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }	  timeout    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	113	None	add
340	[BUG]  [BUGGY]  return(objType.isEquivalentTo(prototype)&&  type.isEquivalentTo(propertyNode));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(prototype)&&  type.isEquivalentTo(propertyNode));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(prototype)&&  type.isEquivalentTo(propertyNode));	  return(objType.isEquivalentTo(prototype)&&    objType.isEquivalentTo(propertyNode));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	73	None	replace
341	[BUG]  [BUGGY]  return(objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(prototype));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(prototype));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(prototype));	  return(objType.isEquivalentTo(prototype)&&    objType.isEquivalentTo(propertyNode));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	73	None	replace
342	[BUG]  [BUGGY]  return(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(propertyNode,  inferred));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(propertyNode,  inferred));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(propertyNode,  inferred));	  return(objType.isEquivalentTo(prototype)&&    objType.isEquivalentTo(propertyNode));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	73	None	replace
343	[BUG]  [BUGGY]  return(objType.isEquivalentTo(name)&&  objType.isEquivalentTo(propertyNode));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(name)&&  objType.isEquivalentTo(propertyNode));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(name)&&  objType.isEquivalentTo(propertyNode));	  return(objType.isEquivalentTo(prototype)&&    objType.isEquivalentTo(propertyNode));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	73	None	replace
344	[BUG]  [BUGGY]  return(objType.isEquivalentTo(type)&&  objType.isEquivalentTo(propertyNode));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(type)&&  objType.isEquivalentTo(propertyNode));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(type)&&  objType.isEquivalentTo(propertyNode));	  return(objType.isEquivalentTo(prototype)&&    objType.isEquivalentTo(propertyNode));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	73	None	replace
345	[BUG]  [BUGGY]  return(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(propertyNode,  type));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(propertyNode,  type));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(propertyNode,  type));	  return(objType.isEquivalentTo(prototype)&&    objType.isEquivalentTo(propertyNode));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	73	None	replace
346	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode,  inferred))  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode,  inferred))  {  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode,  inferred))  {	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	33	None	replace
347	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(type.isEquivalentTo(objType))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(type.isEquivalentTo(objType))  {  return  false;  }	  if(objType.isEquivalentTo(type))    {    return    false;    }    timeout    	compilable	timeout	101	1	replace
348	[BUG]  [BUGGY]  if(type.isEquivalentTo(objType))  {  return  false;  }  timeout  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(type.isEquivalentTo(objType))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(type.isEquivalentTo(objType))  {  return  false;  }	  if(objType.isEquivalentTo(type))    {    return    false;    }    timeout    	compilable	timeout	101	1	replace
349	[BUG]  [BUGGY]  if(objType.isPrototype())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype())  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype())  {  return  false;  }	  if(objType.isEquivalentTo(type))    {    return    false;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
350	[BUG]  [BUGGY]  timeout  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  this.setPrototypeBasedOn(prototype);  return  false;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	this.setPrototypeBasedOn(prototype);  return  false;	          this.setPrototypeBasedOn(objType);    return    true;    	compilable	timeout	55	1	replace
351	[BUG]  [BUGGY]  this.setPrototypeBasedOn(prototype);  return  false;  timeout  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  this.setPrototypeBasedOn(prototype);  return  false;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	this.setPrototypeBasedOn(prototype);  return  false;	          this.setPrototypeBasedOn(objType);    return    true;    	compilable	timeout	55	1	replace
352	[BUG]  [BUGGY]  this.setPrototypeBasedOn(propertyNode);  return  false;  [CE]  method  setPrototypeBasedOn  in  class  FunctionType  cannot  be  applied  to  given  types;  [FE]                                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  this.setPrototypeBasedOn(propertyNode);  return  false;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	this.setPrototypeBasedOn(propertyNode);  return  false;	          this.setPrototypeBasedOn(objType);    return    true;    	non-compiled	[CE]  method  setPrototypeBasedOn  in  class  FunctionType  cannot  be  applied  to  given  types;	55	None	replace
353	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }	          this.setPrototypeBasedOn(objType);    timeout    	compilable	timeout	51	1	replace
354	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }  timeout  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }	          this.setPrototypeBasedOn(objType);    timeout    	compilable	timeout	51	1	replace
355	[BUG]  [BUGGY]  this.setPrototypeBasedOn(objType,  propertyNode);  [CE]  method  setPrototypeBasedOn  in  class  FunctionType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  this.setPrototypeBasedOn(objType,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	this.setPrototypeBasedOn(objType,  propertyNode);	          this.setPrototypeBasedOn(objType);    timeout    	non-compiled	[CE]  method  setPrototypeBasedOn  in  class  FunctionType  cannot  be  applied  to  given  types;	51	None	replace
356	[BUG]  [BUGGY]  timeout  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  this.setPrototypeBasedOn(prototype);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	this.setPrototypeBasedOn(prototype);	          this.setPrototypeBasedOn(objType);    timeout    	compilable	timeout	51	1	replace
357	[BUG]  [BUGGY]  this.setPrototypeBasedOn(prototype);  timeout  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  this.setPrototypeBasedOn(prototype);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	this.setPrototypeBasedOn(prototype);	          this.setPrototypeBasedOn(objType);    timeout    	compilable	timeout	51	1	replace
358	[BUG]  [BUGGY]  timeout  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          this.setPrototypeBasedOn(objType);    timeout    	compilable	timeout	51	1	replace
359	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }  else  {  throw  new  IllegalArgumentException( " ");  }  timeout  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          this.setPrototypeBasedOn(objType);    timeout    	compilable	timeout	51	1	replace
360	[BUG]  [BUGGY]  timeout  [FE]                                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }  else  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }  else  {  return  false;  }	          this.setPrototypeBasedOn(objType);    timeout    	compilable	timeout	51	1	replace
361	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }  else  {  return  false;  }  timeout  [FE]                                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }  else  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }  else  {  return  false;  }	          this.setPrototypeBasedOn(objType);    timeout    	compilable	timeout	51	1	replace
362	[BUG]  [BUGGY]  this.setPrototypeBasedOn(objType,  inferred);  [CE]  method  setPrototypeBasedOn  in  class  FunctionType  cannot  be  applied  to  given  types;  [FE]                                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  this.setPrototypeBasedOn(objType,  inferred);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	this.setPrototypeBasedOn(objType,  inferred);	          this.setPrototypeBasedOn(objType);    timeout    	non-compiled	[CE]  method  setPrototypeBasedOn  in  class  FunctionType  cannot  be  applied  to  given  types;	51	None	replace
363	[BUG]  [BUGGY]  return(objType!=  null  &&  objType.isEquivalentTo(propertyNode,  type));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null  &&  objType.isEquivalentTo(propertyNode,  type));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=  null  &&  objType.isEquivalentTo(propertyNode,  type));	  return(objType!=    null    &&    objType.isEquivalentTo(propertyNode));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	166	None	replace
364	[BUG]  [BUGGY]  return(objType!=  null  &&  objType.isEquivalentTo(propertyNode,  inferred));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null  &&  objType.isEquivalentTo(propertyNode,  inferred));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=  null  &&  objType.isEquivalentTo(propertyNode,  inferred));	  return(objType!=    null    &&    objType.isEquivalentTo(propertyNode));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	166	None	replace
365	[BUG]  [BUGGY]  return(objType!=  null  ||  objType.isEquivalentTo(propertyNode));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null  ||  objType.isEquivalentTo(propertyNode));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=  null  ||  objType.isEquivalentTo(propertyNode));	  return(objType!=    null    &&    objType.isEquivalentTo(propertyNode));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	166	None	replace
366	[BUG]  [BUGGY]  return(objType!=  null  &&  objType.isEquivalentTo(propertyNode,  name));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null  &&  objType.isEquivalentTo(propertyNode,  name));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=  null  &&  objType.isEquivalentTo(propertyNode,  name));	  return(objType!=    null    &&    objType.isEquivalentTo(propertyNode));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	166	None	replace
367	[BUG]  [BUGGY]  return(objType!=  null  &&  objType.isEquivalentTo(type,  propertyNode));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null  &&  objType.isEquivalentTo(type,  propertyNode));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=  null  &&  objType.isEquivalentTo(type,  propertyNode));	  return(objType!=    null    &&    objType.isEquivalentTo(propertyNode));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	166	None	replace
368	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null  &&  objType.isEquivalentTo(prototype));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	return(objType!=  null  &&  objType.isEquivalentTo(prototype));	  return(objType!=    null    &&    objType.isEquivalentTo(propertyNode));    	compilable	timeout	166	1	replace
369	[BUG]  [BUGGY]  return(objType!=  null  &&  objType.isEquivalentTo(prototype));  timeout  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null  &&  objType.isEquivalentTo(prototype));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=  null  &&  objType.isEquivalentTo(prototype));	  return(objType!=    null    &&    objType.isEquivalentTo(propertyNode));    	compilable	timeout	166	1	replace
370	[BUG]  [BUGGY]  return(objType!=  null  &&  objType.isEquivalentTo(prototype,  propertyNode));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null  &&  objType.isEquivalentTo(prototype,  propertyNode));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=  null  &&  objType.isEquivalentTo(prototype,  propertyNode));	  return(objType!=    null    &&    objType.isEquivalentTo(propertyNode));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	166	None	replace
371	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(propertyNode,  inferred,  propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(propertyNode,  inferred,  propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(propertyNode,  inferred,  propertyNode))  {  return  true;  }	  if(!objType.isEquivalentTo(propertyNode,    inferred))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	90	None	replace
372	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode,  inferred,  propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode,  inferred,  propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode,  inferred,  propertyNode))  {  return  true;  }	  if(!objType.isEquivalentTo(propertyNode,    inferred))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	90	None	replace
373	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(type,  propertyNode,  inferred))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(type,  propertyNode,  inferred))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(type,  propertyNode,  inferred))  {  return  true;  }	  if(!objType.isEquivalentTo(propertyNode,    inferred))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	90	None	replace
374	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(name,  propertyNode,  inferred))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(name,  propertyNode,  inferred))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(name,  propertyNode,  inferred))  {  return  true;  }	  if(!objType.isEquivalentTo(propertyNode,    inferred))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	90	None	replace
375	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.toObjectType();  objType  =  objType.toObjectType();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	objType    =    objType.toObjectType();    objType  =  objType.toObjectType();	  timeout    	compilable	timeout	156	1	add
376	[BUG]  [BUGGY]  objType  =  objType.toObjectType();  objType  =  objType.toObjectType();  timeout  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.toObjectType();  objType  =  objType.toObjectType();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType    =    objType.toObjectType();    objType  =  objType.toObjectType();	  timeout    	compilable	timeout	156	1	add
377	[BUG]  [BUGGY]  objType  =  objType.toObjectType();  ObjType  =  objType.toObjectType();  [CE]  cannot  find  symbol  ObjType  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.toObjectType();  ObjType  =  objType.toObjectType();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType    =    objType.toObjectType();    ObjType  =  objType.toObjectType();	  timeout    	non-compiled	[CE]  cannot  find  symbol  ObjType	156	None	add
378	[BUG]  [BUGGY]  objType  =  objType.toObjectType();  objType  =  objType.toObjectType());  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.toObjectType();  objType  =  objType.toObjectType());  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType    =    objType.toObjectType();    objType  =  objType.toObjectType());	  timeout    	non-compiled	[CE]  ';'  expected	156	None	add
379	[BUG]  [BUGGY]  objType  =  objType.toObjectType();  objType  =  objType.ToObjectType();  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.toObjectType();  objType  =  objType.ToObjectType();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType    =    objType.toObjectType();    objType  =  objType.ToObjectType();	  timeout    	non-compiled	[CE]  cannot  find  symbol	156	None	add
380	[BUG]  [BUGGY]  objType  =  objType.toObjectType();  objectType  =  objType.toObjectType();  [CE]  cannot  find  symbol  objectType  [FE]                                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.toObjectType();  objectType  =  objType.toObjectType();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType    =    objType.toObjectType();    objectType  =  objType.toObjectType();	  timeout    	non-compiled	[CE]  cannot  find  symbol  objectType	156	None	add
381	[BUG]  [BUGGY]  objType  =  objType.toObjectType();  objType  =  objType.toobjectType();  [CE]  cannot  find  symbol  [FE]                                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.toObjectType();  objType  =  objType.toobjectType();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType    =    objType.toObjectType();    objType  =  objType.toobjectType();	  timeout    	non-compiled	[CE]  cannot  find  symbol	156	None	add
382	[BUG]  [BUGGY]  return(objType.isEquivalentTo(name,  type)||  objType.isEquivalentTo(propertyNode));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(name,  type)||  objType.isEquivalentTo(propertyNode));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(name,  type)||  objType.isEquivalentTo(propertyNode));	  return(objType.isEquivalentTo(name)||    objType.isEquivalentTo(propertyNode));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	69	None	replace
383	[BUG]  [BUGGY]  return(objType.isEquivalentTo(name)||  objType.isEquivalentTo(type,  propertyNode));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(name)||  objType.isEquivalentTo(type,  propertyNode));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(name)||  objType.isEquivalentTo(type,  propertyNode));	  return(objType.isEquivalentTo(name)||    objType.isEquivalentTo(propertyNode));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	69	None	replace
384	[BUG]  [BUGGY]  return(objType.isEquivalentTo(name)||  objType.isEquivalentTo(propertyNode,  inferred));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(name)||  objType.isEquivalentTo(propertyNode,  inferred));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(name)||  objType.isEquivalentTo(propertyNode,  inferred));	  return(objType.isEquivalentTo(name)||    objType.isEquivalentTo(propertyNode));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	69	None	replace
385	[BUG]  [BUGGY]  return(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(name));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(name));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(name));	  return(objType.isEquivalentTo(name)||    objType.isEquivalentTo(propertyNode));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	69	None	replace
386	[BUG]  [BUGGY]  if(type.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(type.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(type.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(prototype)||    type.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	24	None	replace
387	[BUG]  [BUGGY]  if(objType.isEquivalentTo(name)||  type.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(name)||  type.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(name)||  type.isEquivalentTo(propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(prototype)||    type.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	24	None	replace
388	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(prototype))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(prototype))  {  return  false;  }	  if(objType.isEquivalentTo(prototype)||    type.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	24	None	replace
389	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type)||  type.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type)||  type.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type)||  type.isEquivalentTo(propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(prototype)||    type.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	24	None	replace
390	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype,  inferred)||  type.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype,  inferred)||  type.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype,  inferred)||  type.isEquivalentTo(propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(prototype)||    type.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	24	None	replace
391	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(propertyNode,  inferred,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(propertyNode,  inferred,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(propertyNode,  inferred,  propertyNode))  {  return  false;  }	  if(!objType.isEquivalentTo(propertyNode,    inferred))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	109	None	replace
392	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(type,  propertyNode,  inferred))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(type,  propertyNode,  inferred))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(type,  propertyNode,  inferred))  {  return  false;  }	  if(!objType.isEquivalentTo(propertyNode,    inferred))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	109	None	replace
393	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(name,  propertyNode,  inferred))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(name,  propertyNode,  inferred))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(name,  propertyNode,  inferred))  {  return  false;  }	  if(!objType.isEquivalentTo(propertyNode,    inferred))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	109	None	replace
394	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  true;  }  if(!objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(!objType.isEquivalentTo(prototype))    {    return    true;    }    if(!objType.isEquivalentTo(prototype))  {  return  true;  }	  timeout    	compilable	timeout	91	1	add
395	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  true;  }  if(!objType.isEquivalentTo(prototype))  {  return  true;  }  timeout  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  true;  }  if(!objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(prototype))    {    return    true;    }    if(!objType.isEquivalentTo(prototype))  {  return  true;  }	  timeout    	compilable	timeout	91	1	add
396	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  true;  }  if(!objType.equals(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(!objType.isEquivalentTo(prototype))    {    return    true;    }    if(!objType.equals(prototype))  {  return  true;  }	  timeout    	compilable	timeout	91	1	add
397	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  true;  }  if(!objType.equals(prototype))  {  return  true;  }  timeout  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  true;  }  if(!objType.equals(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(prototype))    {    return    true;    }    if(!objType.equals(prototype))  {  return  true;  }	  timeout    	compilable	timeout	91	1	add
398	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  true;  }  if(!objType.isPrototype(prototype))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  true;  }  if(!objType.isPrototype(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(prototype))    {    return    true;    }    if(!objType.isPrototype(prototype))  {  return  true;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	91	None	add
399	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  true;  }  if(!objType.isEQUIvalentTo(prototype))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  true;  }  if(!objType.isEQUIvalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(prototype))    {    return    true;    }    if(!objType.isEQUIvalentTo(prototype))  {  return  true;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	91	None	add
400	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  true;  }  if(!objType.isEnabled(prototype))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  true;  }  if(!objType.isEnabled(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(prototype))    {    return    true;    }    if(!objType.isEnabled(prototype))  {  return  true;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	91	None	add
401	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  true;  }  if(!objType.isInstance(prototype))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  true;  }  if(!objType.isInstance(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(prototype))    {    return    true;    }    if(!objType.isInstance(prototype))  {  return  true;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	91	None	add
402	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  true;  }  if(!objType.isEquivalentTo(prototype))  {  return  true;  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  true;  }  if(!objType.isEquivalentTo(prototype))  {  return  true;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(prototype))    {    return    true;    }    if(!objType.isEquivalentTo(prototype))  {  return  true;	  timeout    	non-compiled	[CE]  ';'  expected	91	None	add
403	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  this.setPrototypeBasedOn(prototype);  return  true;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	this.setPrototypeBasedOn(prototype);  return  true;	          this.setPrototypeBasedOn(objType);    return    false;    	compilable	timeout	147	1	replace
404	[BUG]  [BUGGY]  this.setPrototypeBasedOn(prototype);  return  true;  timeout  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  this.setPrototypeBasedOn(prototype);  return  true;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	this.setPrototypeBasedOn(prototype);  return  true;	          this.setPrototypeBasedOn(objType);    return    false;    	compilable	timeout	147	1	replace
405	[BUG]  [BUGGY]  this.setPrototypeBasedOn(propertyNode);  return  true;  [CE]  method  setPrototypeBasedOn  in  class  FunctionType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  this.setPrototypeBasedOn(propertyNode);  return  true;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	this.setPrototypeBasedOn(propertyNode);  return  true;	          this.setPrototypeBasedOn(objType);    return    false;    	non-compiled	[CE]  method  setPrototypeBasedOn  in  class  FunctionType  cannot  be  applied  to  given  types;	147	None	replace
406	[BUG]  [BUGGY]  this.setPrototypeBasedOn(objType,  propertyNode);  return  true;  [CE]  method  setPrototypeBasedOn  in  class  FunctionType  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  this.setPrototypeBasedOn(objType,  propertyNode);  return  true;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	this.setPrototypeBasedOn(objType,  propertyNode);  return  true;	          this.setPrototypeBasedOn(objType);    return    false;    	non-compiled	[CE]  method  setPrototypeBasedOn  in  class  FunctionType  cannot  be  applied  to  given  types;	147	None	replace
407	[BUG]  [BUGGY]  type.defineProperty(name,  objType,  inferred,  propertyNode);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  type.defineProperty(name,  objType,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	type.defineProperty(name,  objType,  inferred,  propertyNode);	  parent.defineProperty(name,    objType,    inferred,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
408	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  defineProperty(name,  objType,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	defineProperty(name,  objType,  inferred,  propertyNode);	  parent.defineProperty(name,    objType,    inferred,    propertyNode);    	compilable	timeout	139	1	replace
409	[BUG]  [BUGGY]  defineProperty(name,  objType,  inferred,  propertyNode);  timeout  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  defineProperty(name,  objType,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	defineProperty(name,  objType,  inferred,  propertyNode);	  parent.defineProperty(name,    objType,    inferred,    propertyNode);    	compilable	timeout	139	1	replace
410	[BUG]  [BUGGY]  params.defineProperty(name,  objType,  inferred,  propertyNode);  [CE]  cannot  find  symbol  params  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  params.defineProperty(name,  objType,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	params.defineProperty(name,  objType,  inferred,  propertyNode);	  parent.defineProperty(name,    objType,    inferred,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  params	139	None	replace
411	[BUG]  [BUGGY]  return(objType!=  null)?  false  :  type.isEquivalentTo(propertyNode,  objType);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null)?  false  :  type.isEquivalentTo(propertyNode,  objType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=  null)?  false  :  type.isEquivalentTo(propertyNode,  objType);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(type,    propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	40	None	replace
412	[BUG]  [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(type,  inferred,  propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(type,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=  null)?  false  :  objType.isEquivalentTo(type,  inferred,  propertyNode);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(type,    propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	40	None	replace
413	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  type.equals(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  type.equals(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  type.equals(propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.equals(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	116	None	replace
414	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)&&  objType.equals(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)&&  objType.equals(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)&&  objType.equals(propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.equals(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	116	None	replace
415	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.equals(type,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.equals(type,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  objType.equals(type,  propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.equals(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	116	None	replace
416	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type)||  objType.equals(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(type)||  objType.equals(propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.equals(propertyNode))    {    return    false;    }    	compilable	timeout	116	1	replace
417	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type)||  objType.equals(propertyNode))  {  return  false;  }  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type)||  objType.equals(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type)||  objType.equals(propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.equals(propertyNode))    {    return    false;    }    	compilable	timeout	116	1	replace
418	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.equals(propertyNode,  type))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.equals(propertyNode,  type))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  objType.equals(propertyNode,  type))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.equals(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	116	None	replace
419	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode,  inferred)||  objType.equals(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode,  inferred)||  objType.equals(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode,  inferred)||  objType.equals(propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.equals(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	116	None	replace
420	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(name))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(name))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(name))  {  return  true;  }	  if(objType.isEquivalentTo(name)||    objType.isEquivalentTo(propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	77	None	replace
421	[BUG]  [BUGGY]  if(objType.isEquivalentTo(name,  type)||  objType.isEquivalentTo(propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(name,  type)||  objType.isEquivalentTo(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(name,  type)||  objType.isEquivalentTo(propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(name)||    objType.isEquivalentTo(propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	77	None	replace
422	[BUG]  [BUGGY]  if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(propertyNode,  inferred))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(propertyNode,  inferred))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(propertyNode,  inferred))  {  return  true;  }	  if(objType.isEquivalentTo(name)||    objType.isEquivalentTo(propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	77	None	replace
423	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode,  inferred,  propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode,  inferred,  propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode,  inferred,  propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    inferred))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	76	None	replace
424	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(propertyNode,  inferred))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(propertyNode,  inferred))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(propertyNode,  inferred))  {  return  true;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    inferred))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	76	None	replace
425	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(propertyNode,  inferred))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(propertyNode,  inferred))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(propertyNode,  inferred))  {  return  true;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    inferred))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	76	None	replace
426	[BUG]  [BUGGY]  if(type.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(type.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(type.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(propertyNode))  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	10	None	replace
427	[BUG]  [BUGGY]  if(objType!=  null  &&  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  &&  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=  null  &&  objType.isEquivalentTo(propertyNode))  {  return  false;  }	  if(objType!=    null    ||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	131	None	replace
428	[BUG]  [BUGGY]  if(objType!=  null  ||  objType.isEquivalentTo(propertyNode,  inferred))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  ||  objType.isEquivalentTo(propertyNode,  inferred))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=  null  ||  objType.isEquivalentTo(propertyNode,  inferred))  {  return  false;  }	  if(objType!=    null    ||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	131	None	replace
429	[BUG]  [BUGGY]  if(objType!=  null  ||  objType.isEquivalentTo(propertyNode,  type))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  ||  objType.isEquivalentTo(propertyNode,  type))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=  null  ||  objType.isEquivalentTo(propertyNode,  type))  {  return  false;  }	  if(objType!=    null    ||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	131	None	replace
430	[BUG]  [BUGGY]  if(objType!=  null  ||  objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  ||  objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=  null  ||  objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }	  if(objType!=    null    ||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	131	None	replace
431	[BUG]  [BUGGY]  if(objType  ==  null  &&  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType  ==  null  &&  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType  ==  null  &&  objType.isEquivalentTo(propertyNode))  {  return  false;  }	  if(objType!=    null    ||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	131	None	replace
432	[BUG]  [BUGGY]  if(objType.isPrototype()  ||  type.isEquivalentTo(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype()  ||  type.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype()  ||  type.isEquivalentTo(prototype))  {  return  false;  }	  if(objType.isPrototype()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
433	[BUG]  [BUGGY]  if(objType.isPrototype()  ||  prototype.isEquivalentTo(objType))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype()  ||  prototype.isEquivalentTo(objType))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype()  ||  prototype.isEquivalentTo(objType))  {  return  false;  }	  if(objType.isPrototype()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
434	[BUG]  [BUGGY]  if(objType.isPrototype()  ||!objType.isEquivalentTo(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype()  ||!objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype()  ||!objType.isEquivalentTo(prototype))  {  return  false;  }	  if(objType.isPrototype()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
435	[BUG]  [BUGGY]  if(objType.isPrototype()  ||  objType.isEquivalentTo(name))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype()  ||  objType.isEquivalentTo(name))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype()  ||  objType.isEquivalentTo(name))  {  return  false;  }	  if(objType.isPrototype()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
436	[BUG]  [BUGGY]  return(propertyNode!=  null)?  false  :  objType.isEquivalentTo(prototype,  propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(propertyNode!=  null)?  false  :  objType.isEquivalentTo(prototype,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(propertyNode!=  null)?  false  :  objType.isEquivalentTo(prototype,  propertyNode);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(prototype,    propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	46	None	replace
437	[BUG]  [BUGGY]  if(objType!=  null)  {  if(objType.isEquivalentTo(prototype))  {  return  false;  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null)  {  if(objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=  null)  {  if(objType.isEquivalentTo(prototype))  {  return  false;  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	non-compiled	[CE]  ';'  expected	31	None	replace
438	[BUG]  [BUGGY]  if(objType.isPrototype())  {  if(objType.isPrototype())  {  return  false;  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype())  {  if(objType.isPrototype())  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype())  {  if(objType.isPrototype())  {  return  false;  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	non-compiled	[CE]  ';'  expected	31	None	replace
439	[BUG]  [BUGGY]  if(objType.isPrototype())  {  if(objType.isInstanceType())  {  return  false;  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype())  {  if(objType.isInstanceType())  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype())  {  if(objType.isInstanceType())  {  return  false;  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	non-compiled	[CE]  ';'  expected	31	None	replace
440	[BUG]  [BUGGY]  if(objType.isPrototype())  {  if(!inferred)  {  return  false;  }  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype())  {  if(!inferred)  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype())  {  if(!inferred)  {  return  false;  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	non-compiled	[CE]  ';'  expected	31	None	replace
441	[BUG]  [BUGGY]  if(objType!=  null)  {  if(objType.isPrototype())  {  return  false;  }  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null)  {  if(objType.isPrototype())  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=  null)  {  if(objType.isPrototype())  {  return  false;  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	non-compiled	[CE]  ';'  expected	31	None	replace
442	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType  ==  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType  ==  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }	  if(objType!=    null    &&    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	compilable	timeout	175	1	replace
443	[BUG]  [BUGGY]  if(objType  ==  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  timeout  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType  ==  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType  ==  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }	  if(objType!=    null    &&    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	compilable	timeout	175	1	replace
444	[BUG]  [BUGGY]  ||  objType!=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  ||  objType!=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	||  objType!=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;	  if(objType!=    null    &&    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	175	None	replace
445	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType  ==  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType  ==  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }	  if(objType!=    null    &&    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	compilable	timeout	175	1	replace
446	[BUG]  [BUGGY]  if(objType  ==  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  timeout  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType  ==  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType  ==  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }	  if(objType!=    null    &&    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	compilable	timeout	175	1	replace
447	[BUG]  [BUGGY]  This.setPrototypeBasedOn(objType);  return  false;  [CE]  cannot  find  symbol  This  [FE]                                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  This.setPrototypeBasedOn(objType);  return  false;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	This.setPrototypeBasedOn(objType);  return  false;	          if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    false;    }    timeout    	non-compiled	[CE]  cannot  find  symbol  This	58	None	replace
448	[BUG]  [BUGGY]  ||  objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  ||  objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	||  objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }	          if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    false;    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
449	[BUG]  [BUGGY]  ||  objType.isEquivalentTo(propertyNode))  {  this.setPrototypeBasedOn(objType);  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  ||  objType.isEquivalentTo(propertyNode))  {  this.setPrototypeBasedOn(objType);  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	||  objType.isEquivalentTo(propertyNode))  {  this.setPrototypeBasedOn(objType);  return  false;  }	          if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    false;    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
450	[BUG]  [BUGGY]  ||  objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  ||  objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	||  objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;	          if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    false;    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
451	[BUG]  [BUGGY]  ||  objType.isEquivalentTo(propertyNode))  {  this.setPrototypeBasedOn(objType);  return  false;  [CE]  illegal  start  of  expression  [FE]                                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  ||  objType.isEquivalentTo(propertyNode))  {  this.setPrototypeBasedOn(objType);  return  false;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	||  objType.isEquivalentTo(propertyNode))  {  this.setPrototypeBasedOn(objType);  return  false;	          if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    false;    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
452	[BUG]  [BUGGY]  If(objType.isEquivalentTo(prototype))  {  return  false;  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  If(objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	If(objType.isEquivalentTo(prototype))  {  return  false;  }	  if(objType.isEquivalentTo(value))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	122	None	replace
453	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	                if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    true;    }    if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }	  timeout    	compilable	timeout	52	1	add
454	[BUG]  [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  timeout  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	                if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    true;    }    if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }	  timeout    	compilable	timeout	52	1	add
455	[BUG]  [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  if(objType.isPrototype(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  if(objType.isPrototype(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	                if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    true;    }    if(objType.isPrototype(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	52	None	add
456	[BUG]  [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  if(objType.isEQUIvalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  if(objType.isEQUIvalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	                if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    true;    }    if(objType.isEQUIvalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	52	None	add
457	[BUG]  [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  If(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  If(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	                if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    true;    }    If(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }	  timeout    	non-compiled	[CE]  ';'  expected	52	None	add
458	[BUG]  [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  if(objType.isEnabled(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  [CE]  cannot  find  symbol  [FE]                                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  if(objType.isEnabled(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	                if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    true;    }    if(objType.isEnabled(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	52	None	add
459	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isInterface()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEQUIvalentTo(prototype))    {    return    true;    }    	compilable	timeout	104	1	replace
460	[BUG]  [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  timeout  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEQUIvalentTo(prototype))    {    return    true;    }    	compilable	timeout	104	1	replace
461	[BUG]  [BUGGY]  if(objType.isPrototype()  ||  type.isEquivalentTo(propertyNode))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype()  ||  type.isEquivalentTo(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype()  ||  type.isEquivalentTo(propertyNode))  {  return  true;  }	  if(objType.isPrototype()    ||    objType.isEquivalentTo(propertyNode))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
462	[BUG]  [BUGGY]  if(objType.isPrototype()  ||  propertyNode.isEquivalentTo(objType))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype()  ||  propertyNode.isEquivalentTo(objType))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype()  ||  propertyNode.isEquivalentTo(objType))  {  return  true;  }	  if(objType.isPrototype()    ||    objType.isEquivalentTo(propertyNode))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
463	[BUG]  [BUGGY]  if(objType.isPrototype()  ||  isEquivalentTo(propertyNode))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype()  ||  isEquivalentTo(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype()  ||  isEquivalentTo(propertyNode))  {  return  true;  }	  if(objType.isPrototype()    ||    objType.isEquivalentTo(propertyNode))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
464	[BUG]  [BUGGY]  if(objType.isPrototype()  ||  objType.isEquivalentTo(value))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype()  ||  objType.isEquivalentTo(value))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype()  ||  objType.isEquivalentTo(value))  {  return  true;  }	  if(objType.isPrototype()    ||    objType.isEquivalentTo(propertyNode))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
465	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.equivalentTo(prototype))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.equivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.equivalentTo(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.equivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	172	None	replace
466	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.equals(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(prototype)||  objType.equals(propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.equivalentTo(prototype))    {    return    true;    }    	compilable	timeout	172	1	replace
467	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.equals(propertyNode))  {  return  true;  }  timeout  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.equals(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.equals(propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.equivalentTo(prototype))    {    return    true;    }    	compilable	timeout	172	1	replace
468	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.equals(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(prototype)||  objType.equals(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.equivalentTo(prototype))    {    return    true;    }    	compilable	timeout	172	1	replace
469	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.equals(prototype))  {  return  true;  }  timeout  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.equals(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.equals(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.equivalentTo(prototype))    {    return    true;    }    	compilable	timeout	172	1	replace
470	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isPrototypeBasedOn(prototype))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isPrototypeBasedOn(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  ||  objType.isPrototypeBasedOn(prototype))  {  return  true;  }	  if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    true;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
471	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isPrototypeBasedOn(propertyNode))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isPrototypeBasedOn(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  ||  objType.isPrototypeBasedOn(propertyNode))  {  return  true;  }	  if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    true;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
472	[BUG]  [BUGGY]  if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(prototype))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(prototype))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(prototype))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	23	None	replace
473	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(prototype))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(prototype))    {    return    false;    }    	compilable	timeout	23	1	replace
474	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(prototype))  {  return  false;  }  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(prototype))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(prototype))    {    return    false;    }    	compilable	timeout	23	1	replace
475	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type,  propertyNode)||  objType.isEquivalentTo(prototype))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type,  propertyNode)||  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type,  propertyNode)||  objType.isEquivalentTo(prototype))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(prototype))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	23	None	replace
476	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(prototype))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(prototype))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(prototype))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	23	None	replace
477	[BUG]  [BUGGY]  return(propertyNode!=  null)?  false  :  objType.isEquivalentTo(name,  propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(propertyNode!=  null)?  false  :  objType.isEquivalentTo(name,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(propertyNode!=  null)?  false  :  objType.isEquivalentTo(name,  propertyNode);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(name,    propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	42	None	replace
478	[BUG]  [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(propertyNode,  name);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(propertyNode,  name);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=  null)?  false  :  objType.isEquivalentTo(propertyNode,  name);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(name,    propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	42	None	replace
479	[BUG]  [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(name,  propertyNode,  type);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(name,  propertyNode,  type);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=  null)?  false  :  objType.isEquivalentTo(name,  propertyNode,  type);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(name,    propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	42	None	replace
480	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(name))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(name))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(name))  {  return  false;  }	  if(objType.isEquivalentTo(name)||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	25	None	replace
481	[BUG]  [BUGGY]  if(objType.isEquivalentTo(name,  type)||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(name,  type)||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(name,  type)||  objType.isEquivalentTo(propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(name)||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	25	None	replace
482	[BUG]  [BUGGY]  if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(propertyNode,  inferred))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(propertyNode,  inferred))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(propertyNode,  inferred))  {  return  false;  }	  if(objType.isEquivalentTo(name)||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	25	None	replace
483	[BUG]  [BUGGY]  parent!=  null  &&  parent.isEquivalentTo(propertyNode))  {  return  true;  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent!=  null  &&  parent.isEquivalentTo(propertyNode))  {  return  true;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent!=  null  &&  parent.isEquivalentTo(propertyNode))  {  return  true;	  parent!=    null    &&    objType.isEquivalentTo(propertyNode))    {    return    true;    	non-compiled	[CE]  not  a  statement	18	None	replace
484	[BUG]  [BUGGY]  objType!=  null  &&  objType.isEquivalentTo(propertyNode))  {  return  true;  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType!=  null  &&  objType.isEquivalentTo(propertyNode))  {  return  true;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType!=  null  &&  objType.isEquivalentTo(propertyNode))  {  return  true;	  parent!=    null    &&    objType.isEquivalentTo(propertyNode))    {    return    true;    	non-compiled	[CE]  not  a  statement	18	None	replace
485	[BUG]  [BUGGY]  parent!=  null  ||  objType.isEquivalentTo(propertyNode))  {  return  true;  [CE]  not  a  statement  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent!=  null  ||  objType.isEquivalentTo(propertyNode))  {  return  true;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent!=  null  ||  objType.isEquivalentTo(propertyNode))  {  return  true;	  parent!=    null    &&    objType.isEquivalentTo(propertyNode))    {    return    true;    	non-compiled	[CE]  not  a  statement	18	None	replace
486	[BUG]  [BUGGY]  return  objType.isEquivalentTo(name,  type)||  objType.isEquivalentTo(propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(name,  type)||  objType.isEquivalentTo(propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(name,  type)||  objType.isEquivalentTo(propertyNode);	  return    objType.isEquivalentTo(name)||    objType.isEquivalentTo(propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	4	None	replace
487	[BUG]  [BUGGY]  return  objType.isEquivalentTo(name)&&  objType.isEquivalentTo(propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(name)&&  objType.isEquivalentTo(propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(name)&&  objType.isEquivalentTo(propertyNode);	  return    objType.isEquivalentTo(name)||    objType.isEquivalentTo(propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	4	None	replace
488	[BUG]  [BUGGY]  return  objType.isEquivalentTo(name)||  objType.isEquivalentTo(propertyNode,  inferred);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(name)||  objType.isEquivalentTo(propertyNode,  inferred);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(name)||  objType.isEquivalentTo(propertyNode,  inferred);	  return    objType.isEquivalentTo(name)||    objType.isEquivalentTo(propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	4	None	replace
489	[BUG]  [BUGGY]  return  objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(name);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(name);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(name);	  return    objType.isEquivalentTo(name)||    objType.isEquivalentTo(propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	4	None	replace
490	[BUG]  [BUGGY]  return  objType.isEquivalentTo(name,  propertyNode)||  objType.isEquivalentTo(propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(name,  propertyNode)||  objType.isEquivalentTo(propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(name,  propertyNode)||  objType.isEquivalentTo(propertyNode);	  return    objType.isEquivalentTo(name)||    objType.isEquivalentTo(propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	4	None	replace
491	[BUG]  [BUGGY]  if(!inferred)  {  if(objType.isEquivalentTo(prototype))  {  return  false;  }  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!inferred)  {  if(objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!inferred)  {  if(objType.isEquivalentTo(prototype))  {  return  false;  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    If(objType.isEquivalentTo(prototype))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	35	None	replace
492	[BUG]  [BUGGY]  if(!inferred)  {  if(objType.isEquivalentTo(prototype))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!inferred)  {  if(objType.isEquivalentTo(prototype))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!inferred)  {  if(objType.isEquivalentTo(prototype))  {  throw  new  IllegalArgumentException( " ");  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    If(objType.isEquivalentTo(prototype))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	35	None	replace
493	[BUG]  [BUGGY]  if(!inferred)  {  if(objType.isEquivalentTo(prototype))  {  return  true;  }  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!inferred)  {  if(objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!inferred)  {  if(objType.isEquivalentTo(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))    {    return    true;    	non-compiled	[CE]  ';'  expected	105	None	replace
494	[BUG]  [BUGGY]  if(objType.isInterface())  {  if(objType.isEquivalentTo(prototype))  {  return  false;  }  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface())  {  if(objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface())  {  if(objType.isEquivalentTo(prototype))  {  return  false;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))    {    return    true;    	non-compiled	[CE]  ';'  expected	105	None	replace
495	[BUG]  [BUGGY]  if(objType.isConstructor())  {  if(objType.isEquivalentTo(prototype))  {  return  false;  }  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor())  {  if(objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor())  {  if(objType.isEquivalentTo(prototype))  {  return  false;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))    {    return    true;    	non-compiled	[CE]  ';'  expected	105	None	replace
496	[BUG]  [BUGGY]  if(objType!=  null)  {  if(objType.isEquivalentTo(prototype))  {  return  true;  }  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null)  {  if(objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=  null)  {  if(objType.isEquivalentTo(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))    {    return    true;    	non-compiled	[CE]  ';'  expected	105	None	replace
497	[BUG]  [BUGGY]  return(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode,  inferred,  propertyNode));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode,  inferred,  propertyNode));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode,  inferred,  propertyNode));	  return(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    inferred));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	70	None	replace
498	[BUG]  [BUGGY]  return(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(propertyNode,  inferred));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(propertyNode,  inferred));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(propertyNode,  inferred));	  return(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    inferred));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	70	None	replace
499	[BUG]  [BUGGY]  return(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(prototype,  inferred));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(prototype,  inferred));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(prototype,  inferred));	  return(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    inferred));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	70	None	replace
500	[BUG]  [BUGGY]  return(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(name,  propertyNode,  inferred));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(name,  propertyNode,  inferred));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(name,  propertyNode,  inferred));	  return(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    inferred));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	70	None	replace
501	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }	  return    false;    if(objType.isEquivalentTo(propertyNode))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    return    true;    }    	compilable	timeout	161	1	replace
502	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  timeout  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }	  return    false;    if(objType.isEquivalentTo(propertyNode))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    return    true;    }    	compilable	timeout	161	1	replace
503	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }	  return    false;    if(objType.isEquivalentTo(propertyNode))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	161	None	replace
504	[BUG]  [BUGGY]  if(type.isEquivalentTo(propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(type.isEquivalentTo(propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(type.isEquivalentTo(propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }	  return    false;    if(objType.isEquivalentTo(propertyNode))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	161	None	replace
505	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype,  inferred))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype,  inferred))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype,  inferred))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }	  return    false;    if(objType.isEquivalentTo(propertyNode))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	161	None	replace
506	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }	  return    false;    if(objType.isEquivalentTo(propertyNode))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	161	None	replace
507	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(type.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(type.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }	  return    false;    if(objType.isEquivalentTo(propertyNode))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    return    true;    }    	compilable	timeout	161	1	replace
508	[BUG]  [BUGGY]  if(type.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  timeout  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(type.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(type.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }	  return    false;    if(objType.isEquivalentTo(propertyNode))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    return    true;    }    	compilable	timeout	161	1	replace
509	[BUG]  [BUGGY]  return  objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(propertyNode,  inferred);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(propertyNode,  inferred);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(propertyNode,  inferred);	  return    objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    inferred);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	5	None	replace
510	[BUG]  [BUGGY]  return  objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode,  inferred,  propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode,  inferred,  propertyNode);	  return    objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    inferred);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	5	None	replace
511	[BUG]  [BUGGY]  return  objType.isEquivalentTo(type)||  objType.isEquivalentTo(propertyNode,  inferred);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(type)||  objType.isEquivalentTo(propertyNode,  inferred);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(type)||  objType.isEquivalentTo(propertyNode,  inferred);	  return    objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    inferred);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	5	None	replace
512	[BUG]  [BUGGY]  return  objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(prototype,  inferred);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(prototype,  inferred);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(prototype,  inferred);	  return    objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    inferred);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	5	None	replace
513	[BUG]  [BUGGY]  objType!=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType!=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType!=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;	  parent!=    null    &&    objType.isEquivalentTo(prototype))    {    return    false;    	non-compiled	[CE]  not  a  statement	66	None	replace
514	[BUG]  [BUGGY]  parent!=  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  [CE]  not  a  statement  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent!=  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent!=  null  ||  objType.isEquivalentTo(prototype))  {  return  false;	  parent!=    null    &&    objType.isEquivalentTo(prototype))    {    return    false;    	non-compiled	[CE]  not  a  statement	66	None	replace
515	[BUG]  [BUGGY]  parent!=  null  &&  parent.isEquivalentTo(objType))  {  return  true;  }  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent!=  null  &&  parent.isEquivalentTo(objType))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent!=  null  &&  parent.isEquivalentTo(objType))  {  return  true;  }	  parent!=    null    &&    objType.isEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	153	None	replace
516	[BUG]  [BUGGY]  parent!=  null  &&  objType.isEquivalentTo(propertyNode))  {  return  true;  }  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent!=  null  &&  objType.isEquivalentTo(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent!=  null  &&  objType.isEquivalentTo(propertyNode))  {  return  true;  }	  parent!=    null    &&    objType.isEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	153	None	replace
517	[BUG]  [BUGGY]  parent!=  null  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent!=  null  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent!=  null  ||  objType.isEquivalentTo(prototype))  {  return  true;  }	  parent!=    null    &&    objType.isEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	153	None	replace
518	[BUG]  [BUGGY]  parent!=  null  &&  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent!=  null  &&  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent!=  null  &&  objType.isEquivalentTo(propertyNode))  {  return  false;  }	  parent!=    null    &&    objType.isEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	153	None	replace
519	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)&&  inferred)  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(prototype)&&  inferred)  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)&&    inferred)    {    return    true;    }    	compilable	timeout	144	1	replace
520	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)&&  inferred)  {  return  true;  }  timeout  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)&&  inferred)  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)&&  inferred)  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)&&    inferred)    {    return    true;    }    	compilable	timeout	144	1	replace
521	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)&&  inferred,  propertyNode)  {  return  true;  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)&&  inferred,  propertyNode)  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)&&  inferred,  propertyNode)  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)&&    inferred)    {    return    true;    }    	non-compiled	[CE]  	144	None	replace
522	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)&&  type.inferred)  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)&&  type.inferred)  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)&&  type.inferred)  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)&&    inferred)    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	144	None	replace
523	[BUG]  [BUGGY]  if(objType.isEquivalentTo(inferred)&&  propertyNode)  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(inferred)&&  propertyNode)  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(inferred)&&  propertyNode)  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)&&    inferred)    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	144	None	replace
524	[BUG]  [BUGGY]  timeout  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type)&&  inferred)  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(type)&&  inferred)  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)&&    inferred)    {    return    true;    }    	compilable	timeout	144	1	replace
525	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type)&&  inferred)  {  return  true;  }  timeout  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type)&&  inferred)  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type)&&  inferred)  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)&&    inferred)    {    return    true;    }    	compilable	timeout	144	1	replace
526	[BUG]  [BUGGY]  return  objType.isEquivalentTo(propertyNode,  type)||  objType.isEquivalentTo(propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(propertyNode,  type)||  objType.isEquivalentTo(propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(propertyNode,  type)||  objType.isEquivalentTo(propertyNode);	  return    objType.isEquivalentTo(type,    propertyNode)||    objType.isEquivalentTo(propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	149	None	replace
527	[BUG]  [BUGGY]  return  objType.isEquivalentTo(name,  type,  propertyNode)||  objType.isEquivalentTo(propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(name,  type,  propertyNode)||  objType.isEquivalentTo(propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(name,  type,  propertyNode)||  objType.isEquivalentTo(propertyNode);	  return    objType.isEquivalentTo(type,    propertyNode)||    objType.isEquivalentTo(propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	149	None	replace
528	[BUG]  [BUGGY]  return  objType.isEquivalentTo(type,  propertyNode)&&  objType.isEquivalentTo(propertyNode,  inferred);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(type,  propertyNode)&&  objType.isEquivalentTo(propertyNode,  inferred);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(type,  propertyNode)&&  objType.isEquivalentTo(propertyNode,  inferred);	  return    objType.isEquivalentTo(type,    propertyNode)||    objType.isEquivalentTo(propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	149	None	replace
529	[BUG]  [BUGGY]  return  objType.isEquivalentTo(prototype,  propertyNode)||  objType.isEquivalentTo(propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(prototype,  propertyNode)||  objType.isEquivalentTo(propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(prototype,  propertyNode)||  objType.isEquivalentTo(propertyNode);	  return    objType.isEquivalentTo(type,    propertyNode)||    objType.isEquivalentTo(propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	149	None	replace
530	[BUG]  [BUGGY]  return  type.isEquivalentTo(objType,  propertyNode)||  objType.isEquivalentTo(propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  type.isEquivalentTo(objType,  propertyNode)||  objType.isEquivalentTo(propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  type.isEquivalentTo(objType,  propertyNode)||  objType.isEquivalentTo(propertyNode);	  return    objType.isEquivalentTo(type,    propertyNode)||    objType.isEquivalentTo(propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	149	None	replace
531	[BUG]  [BUGGY]  return  objType.isEquivalentTo(type,  propertyNode)||  objType.isEquivalentTo(propertyNode,  inferred);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(type,  propertyNode)||  objType.isEquivalentTo(propertyNode,  inferred);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(type,  propertyNode)||  objType.isEquivalentTo(propertyNode,  inferred);	  return    objType.isEquivalentTo(type,    propertyNode)||    objType.isEquivalentTo(propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	149	None	replace
532	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }	  timeout    	compilable	timeout	61	1	add
533	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  timeout  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }	  timeout    	compilable	timeout	61	1	add
534	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isConstructor()  ||  objType.isEQUIvalentTo(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isConstructor()  ||  objType.isEQUIvalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isConstructor()  ||  objType.isEQUIvalentTo(prototype))  {  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	61	None	add
535	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isConstructor()  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isConstructor()  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isConstructor()  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  }	  timeout    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	61	None	add
536	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isConstructor()  ||  objType.isEquivalentTo(Prototype))  {  return  false;  }  [CE]  cannot  find  symbol  Prototype  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isConstructor()  ||  objType.isEquivalentTo(Prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isConstructor()  ||  objType.isEquivalentTo(Prototype))  {  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol  Prototype	61	None	add
537	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  If(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  If(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    If(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }	  timeout    	non-compiled	[CE]  ';'  expected	61	None	add
538	[BUG]  [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(name,  propertyNode,  objType);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(name,  propertyNode,  objType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=  null)?  false  :  objType.isEquivalentTo(name,  propertyNode,  objType);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(propertyNode,    objType);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	165	None	replace
539	[BUG]  [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(name,  propertyNode,  objType);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(name,  propertyNode,  objType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType  ==  null)?  false  :  objType.isEquivalentTo(name,  propertyNode,  objType);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(propertyNode,    objType);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	165	None	replace
540	[BUG]  [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(propertyNode,  propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(propertyNode,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=  null)?  false  :  objType.isEquivalentTo(propertyNode,  propertyNode);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(propertyNode,    objType);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	165	None	replace
541	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype,  inferred,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype,  inferred,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype,  inferred,  propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(prototype,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	99	None	replace
542	[BUG]  [BUGGY]  if(objType.isEquivalentTo(name,  prototype,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(name,  prototype,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(name,  prototype,  propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(prototype,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	99	None	replace
543	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode,  prototype))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode,  prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode,  prototype))  {  return  false;  }	  if(objType.isEquivalentTo(prototype,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	99	None	replace
544	[BUG]  [BUGGY]  return(objType  ==  null)?  false  :  type.isEquivalentTo(propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType  ==  null)?  false  :  type.isEquivalentTo(propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType  ==  null)?  false  :  type.isEquivalentTo(propertyNode);	  return(objType    ==    null)?    false    :    objType.isEquivalentTo(propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	164	None	replace
545	[BUG]  [BUGGY]  objType  =  type.getPrototype();  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  type.getPrototype();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType  =  type.getPrototype();	  objType    =    objType.getPrototype();    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
546	[BUG]  [BUGGY]  objType  =  objType.cloneTree().getPrototype();  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.cloneTree().getPrototype();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType  =  objType.cloneTree().getPrototype();	  objType    =    objType.getPrototype();    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
547	[BUG]  [BUGGY]  ObjType  objType  =  objType.getPrototype();  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  ObjType  objType  =  objType.getPrototype();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	ObjType  objType  =  objType.getPrototype();	  objType    =    objType.getPrototype();    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
548	[BUG]  [BUGGY]  objType  =  objType.toPrototype();  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.toPrototype();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType  =  objType.toPrototype();	  objType    =    objType.getPrototype();    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
549	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.getEquivalentTo(prototype))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.getEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.getEquivalentTo(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.getEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
550	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.getPrototypeBasedOn(prototype))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.getPrototypeBasedOn(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.getPrototypeBasedOn(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.getEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
551	[BUG]  [BUGGY]  if(objType.isPrototype()  ||  type.isEquivalentTo(prototype))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype()  ||  type.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype()  ||  type.isEquivalentTo(prototype))  {  return  true;  }	  if(objType.isPrototype()    ||    objType.isEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
552	[BUG]  [BUGGY]  if(objType.isPrototype()  ||  prototype.isEquivalentTo(objType))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype()  ||  prototype.isEquivalentTo(objType))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype()  ||  prototype.isEquivalentTo(objType))  {  return  true;  }	  if(objType.isPrototype()    ||    objType.isEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
553	[BUG]  [BUGGY]  if(objType.isPrototype()  ||!objType.isEquivalentTo(prototype))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype()  ||!objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype()  ||!objType.isEquivalentTo(prototype))  {  return  true;  }	  if(objType.isPrototype()    ||    objType.isEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
554	[BUG]  [BUGGY]  if(objType.isPrototype()  ||  objType.isEquivalentTo(name))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype()  ||  objType.isEquivalentTo(name))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype()  ||  objType.isEquivalentTo(name))  {  return  true;  }	  if(objType.isPrototype()    ||    objType.isEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
555	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode,  inferred)||  type.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode,  inferred)||  type.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode,  inferred)||  type.isEquivalentTo(propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode,    inferred)||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	39	None	replace
556	[BUG]  [BUGGY]  if(objType.isEquivalentTo(name,  propertyNode)||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(name,  propertyNode)||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(name,  propertyNode)||  objType.isEquivalentTo(propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode,    inferred)||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	39	None	replace
557	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type,  propertyNode)||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type,  propertyNode)||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type,  propertyNode)||  objType.isEquivalentTo(propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode,    inferred)||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	39	None	replace
558	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype,  inferred)||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype,  inferred)||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype,  inferred)||  objType.isEquivalentTo(propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode,    inferred)||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	39	None	replace
559	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode,  inferred)&&  type.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode,  inferred)&&  type.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode,  inferred)&&  type.isEquivalentTo(propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode,    inferred)||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	39	None	replace
560	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode,  inferred,  propertyNode)||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode,  inferred,  propertyNode)||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode,  inferred,  propertyNode)||  objType.isEquivalentTo(propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode,    inferred)||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	39	None	replace
561	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode,  type)||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode,  type)||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode,  type)||  objType.isEquivalentTo(propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode,    inferred)||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	39	None	replace
562	[BUG]  [BUGGY]  if(objType  ==  null  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType  ==  null  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType  ==  null  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  }	  if(objType!=    null    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	127	None	replace
563	[BUG]  [BUGGY]  if(objType!=  null  ||  objType.isPrototype())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  ||  objType.isPrototype())  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=  null  ||  objType.isPrototype())  {  return  false;  }	  if(objType!=    null    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
564	[BUG]  [BUGGY]  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	||  objType.isEquivalentTo(propertyNode))  {  return  false;	  if(objType!=    null    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
565	[BUG]  [BUGGY]  if(objType.isPrototype())  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype())  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype())  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }	  return    false;    if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
566	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  }	  return    false;    if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	160	None	replace
567	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface())  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isInterface())  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }	  return    false;    if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    return    true;    }    	compilable	timeout	160	1	replace
568	[BUG]  [BUGGY]  if(objType.isInterface())  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  timeout  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface())  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface())  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }	  return    false;    if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    return    true;    }    	compilable	timeout	160	1	replace
569	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null)  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType!=  null)  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }	  return    false;    if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    return    true;    }    	compilable	timeout	160	1	replace
570	[BUG]  [BUGGY]  if(objType!=  null)  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null)  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=  null)  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }	  return    false;    if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    return    true;    }    	compilable	timeout	160	1	replace
571	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor())  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isConstructor())  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }	  return    false;    if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    return    true;    }    	compilable	timeout	160	1	replace
572	[BUG]  [BUGGY]  if(objType.isConstructor())  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  timeout  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor())  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor())  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }	  return    false;    if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    return    true;    }    	compilable	timeout	160	1	replace
573	[BUG]  [BUGGY]  timeout  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.getImplicitPrototype();  objType  =  objType.getImplicitPrototype();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	objType    =    objType.getImplicitPrototype();    objType  =  objType.getImplicitPrototype();	  timeout    	compilable	timeout	158	1	add
574	[BUG]  [BUGGY]  objType  =  objType.getImplicitPrototype();  objType  =  objType.getImplicitPrototype();  timeout  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.getImplicitPrototype();  objType  =  objType.getImplicitPrototype();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType    =    objType.getImplicitPrototype();    objType  =  objType.getImplicitPrototype();	  timeout    	compilable	timeout	158	1	add
575	[BUG]  [BUGGY]  objType  =  objType.getImplicitPrototype();  ObjType  =  objType.getImplicitPrototype();  [CE]  cannot  find  symbol  ObjType  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.getImplicitPrototype();  ObjType  =  objType.getImplicitPrototype();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType    =    objType.getImplicitPrototype();    ObjType  =  objType.getImplicitPrototype();	  timeout    	non-compiled	[CE]  cannot  find  symbol  ObjType	158	None	add
576	[BUG]  [BUGGY]  objType  =  objType.getImplicitPrototype();  ObjectType  objType  =  objType.getImplicitPrototype();  [CE]  variable  objType  is  already  defined  in  method  defineProperty(String,JSType,boolean,Node)  [FE]                                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.getImplicitPrototype();  ObjectType  objType  =  objType.getImplicitPrototype();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType    =    objType.getImplicitPrototype();    ObjectType  objType  =  objType.getImplicitPrototype();	  timeout    	non-compiled	[CE]  variable  objType  is  already  defined  in  method  defineProperty(String,JSType,boolean,Node)	158	None	add
577	[BUG]  [BUGGY]  objType  =  objType.getImplicitPrototype();  objType  =  objType.getImplicitPrototype());  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.getImplicitPrototype();  objType  =  objType.getImplicitPrototype());  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType    =    objType.getImplicitPrototype();    objType  =  objType.getImplicitPrototype());	  timeout    	non-compiled	[CE]  ';'  expected	158	None	add
578	[BUG]  [BUGGY]  objType  =  objType.getImplicitPrototype();  objectType  =  objType.getImplicitPrototype();  [CE]  cannot  find  symbol  objectType  [FE]                                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.getImplicitPrototype();  objectType  =  objType.getImplicitPrototype();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType    =    objType.getImplicitPrototype();    objectType  =  objType.getImplicitPrototype();	  timeout    	non-compiled	[CE]  cannot  find  symbol  objectType	158	None	add
579	[BUG]  [BUGGY]  This.setPrototypeBasedOn(objType);  return  true;  [CE]  cannot  find  symbol  This  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  This.setPrototypeBasedOn(objType);  return  true;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	This.setPrototypeBasedOn(objType);  return  true;	          if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    true;    }    timeout    	non-compiled	[CE]  cannot  find  symbol  This	53	None	replace
580	[BUG]  [BUGGY]  ||  objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  ||  objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	||  objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }	          if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    true;    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
581	[BUG]  [BUGGY]  ||  objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  ||  objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	||  objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;	          if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    true;    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
582	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  false;  }  if(!objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(!objType.isEquivalentTo(prototype))    {    return    false;    }    if(!objType.isEquivalentTo(prototype))  {  return  false;  }	  timeout    	compilable	timeout	110	1	add
583	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  false;  }  if(!objType.isEquivalentTo(prototype))  {  return  false;  }  timeout  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  false;  }  if(!objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(prototype))    {    return    false;    }    if(!objType.isEquivalentTo(prototype))  {  return  false;  }	  timeout    	compilable	timeout	110	1	add
584	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  false;  }  if(!objType.isPrototype(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  false;  }  if(!objType.isPrototype(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(prototype))    {    return    false;    }    if(!objType.isPrototype(prototype))  {  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	110	None	add
585	[BUG]  [BUGGY]  timeout  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  false;  }  if(!objType.equals(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(!objType.isEquivalentTo(prototype))    {    return    false;    }    if(!objType.equals(prototype))  {  return  false;  }	  timeout    	compilable	timeout	110	1	add
586	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  false;  }  if(!objType.equals(prototype))  {  return  false;  }  timeout  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  false;  }  if(!objType.equals(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(prototype))    {    return    false;    }    if(!objType.equals(prototype))  {  return  false;  }	  timeout    	compilable	timeout	110	1	add
587	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  false;  }  if(!objType.isEnabled(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  false;  }  if(!objType.isEnabled(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(prototype))    {    return    false;    }    if(!objType.isEnabled(prototype))  {  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	110	None	add
588	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  false;  }  if(!objType.isFunctionPrototype(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  false;  }  if(!objType.isFunctionPrototype(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(prototype))    {    return    false;    }    if(!objType.isFunctionPrototype(prototype))  {  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	110	None	add
589	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  false;  }  if(!objType.isInstance(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  false;  }  if(!objType.isInstance(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(prototype))    {    return    false;    }    if(!objType.isInstance(prototype))  {  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	110	None	add
590	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  false;  }  if(!objType.getPrototype())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  false;  }  if(!objType.getPrototype())  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(prototype))    {    return    false;    }    if(!objType.getPrototype())  {  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	110	None	add
591	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type)||  type.isEquivalentTo(propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type)||  type.isEquivalentTo(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type)||  type.isEquivalentTo(propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(type)||    objType.isEquivalentTo(propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	79	None	replace
592	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type,  inferred)||  objType.isEquivalentTo(propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type,  inferred)||  objType.isEquivalentTo(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type,  inferred)||  objType.isEquivalentTo(propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(type)||    objType.isEquivalentTo(propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	79	None	replace
593	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          this.setPrototypeBasedOn(objType);  this.setPrototypeBasedOn(objType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	                this.setPrototypeBasedOn(objType);    this.setPrototypeBasedOn(objType);	  timeout    	compilable	timeout	50	1	add
594	[BUG]  [BUGGY]          this.setPrototypeBasedOn(objType);  this.setPrototypeBasedOn(objType);  timeout  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          this.setPrototypeBasedOn(objType);  this.setPrototypeBasedOn(objType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	                this.setPrototypeBasedOn(objType);    this.setPrototypeBasedOn(objType);	  timeout    	compilable	timeout	50	1	add
595	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          this.setPrototypeBasedOn(objType);  if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	                this.setPrototypeBasedOn(objType);    if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }	  timeout    	compilable	timeout	50	1	add
596	[BUG]  [BUGGY]          this.setPrototypeBasedOn(objType);  if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }  timeout  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          this.setPrototypeBasedOn(objType);  if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	                this.setPrototypeBasedOn(objType);    if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }	  timeout    	compilable	timeout	50	1	add
597	[BUG]  [BUGGY]  timeout  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          this.setPrototypeBasedOn(objType);  if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	                this.setPrototypeBasedOn(objType);    if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }  else  {  this.setPrototypeBasedOn(objType);  }	  timeout    	compilable	timeout	50	1	add
598	[BUG]  [BUGGY]          this.setPrototypeBasedOn(objType);  if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }  else  {  this.setPrototypeBasedOn(objType);  }  timeout  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          this.setPrototypeBasedOn(objType);  if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	                this.setPrototypeBasedOn(objType);    if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }  else  {  this.setPrototypeBasedOn(objType);  }	  timeout    	compilable	timeout	50	1	add
599	[BUG]  [BUGGY]  timeout  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          this.setPrototypeBasedOn(objType);  if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	                this.setPrototypeBasedOn(objType);    if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	50	1	add
600	[BUG]  [BUGGY]          this.setPrototypeBasedOn(objType);  if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }  else  {  throw  new  IllegalArgumentException( " ");  }  timeout  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          this.setPrototypeBasedOn(objType);  if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	                this.setPrototypeBasedOn(objType);    if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	50	1	add
601	[BUG]  [BUGGY]          this.setPrototypeBasedOn(objType);  if(objType.isEquivalentTo(propertyNode))  {  this.setPrototypeBasedOn(objType);  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          this.setPrototypeBasedOn(objType);  if(objType.isEquivalentTo(propertyNode))  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	                this.setPrototypeBasedOn(objType);    if(objType.isEquivalentTo(propertyNode))  {  this.setPrototypeBasedOn(objType);  }	  timeout    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	50	None	add
602	[BUG]  [BUGGY]  timeout  [FE]                                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          this.setPrototypeBasedOn(objType);  if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }  else  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	                this.setPrototypeBasedOn(objType);    if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }  else  {  return  false;  }	  timeout    	compilable	timeout	50	1	add
603	[BUG]  [BUGGY]          this.setPrototypeBasedOn(objType);  if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }  else  {  return  false;  }  timeout  [FE]                                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          this.setPrototypeBasedOn(objType);  if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }  else  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	                this.setPrototypeBasedOn(objType);    if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }  else  {  return  false;  }	  timeout    	compilable	timeout	50	1	add
604	[BUG]  [BUGGY]  timeout  [FE]                                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          this.setPrototypeBasedOn(objType);  if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }  else  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	                this.setPrototypeBasedOn(objType);    if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }  else  {  return  true;  }	  timeout    	compilable	timeout	50	1	add
605	[BUG]  [BUGGY]          this.setPrototypeBasedOn(objType);  if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }  else  {  return  true;  }  timeout  [FE]                                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          this.setPrototypeBasedOn(objType);  if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }  else  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	                this.setPrototypeBasedOn(objType);    if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  }  else  {  return  true;  }	  timeout    	compilable	timeout	50	1	add
606	[BUG]  [BUGGY]          this.setPrototypeBasedOn(objType);  if(objType.isEquivalentTo(propertyNode))  {  this.setPrototypeBasedOn(objType);  }  else  {  this.setPrototypeBasedOn(objType);  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          this.setPrototypeBasedOn(objType);  if(objType.isEquivalentTo(propertyNode))  {  this.setPrototypeBasedOn(objType);  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	                this.setPrototypeBasedOn(objType);    if(objType.isEquivalentTo(propertyNode))  {  this.setPrototypeBasedOn(objType);  }  else  {  this.setPrototypeBasedOn(objType);  }	  timeout    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	50	None	add
607	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(type,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	38	None	replace
608	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(name,  type,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(name,  type,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(name,  type,  propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(type,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	38	None	replace
609	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(type,  inferred,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(type,  inferred,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(type,  inferred,  propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(type,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	38	None	replace
610	[BUG]  [BUGGY]  timeout  [FE]            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isInterface()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    timeout    	compilable	timeout	48	1	replace
611	[BUG]  [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  timeout  [FE]            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    timeout    	compilable	timeout	48	1	replace
612	[BUG]  [BUGGY]  if(objType.isPrototype()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    timeout    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
613	[BUG]  [BUGGY]  if(objType.isInterface())  {  if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface())  {  if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface())  {  if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    timeout    	non-compiled	[CE]  ';'  expected	48	None	replace
614	[BUG]  [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface()  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    timeout    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	48	None	replace
615	[BUG]  [BUGGY]  This.setPrototypeBasedOn(objType);  [CE]  cannot  find  symbol  This  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  This.setPrototypeBasedOn(objType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	This.setPrototypeBasedOn(objType);	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    timeout    	non-compiled	[CE]  cannot  find  symbol  This	48	None	replace
616	[BUG]  [BUGGY]  if(objType.isPrototype()  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype()  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype()  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    timeout    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
617	[BUG]  [BUGGY]  if(type.isEquivalentTo(objType,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(type.isEquivalentTo(objType,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(type.isEquivalentTo(objType,  propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(type,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	95	None	replace
618	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype,  type))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype,  type))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype,  type))  {  return  false;  }	  if(objType.isEquivalentTo(type,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	95	None	replace
619	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type,  inferred))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type,  inferred))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type,  inferred))  {  return  false;  }	  if(objType.isEquivalentTo(type,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	95	None	replace
620	[BUG]  [BUGGY]  if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(prototype))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	74	None	replace
621	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(prototype))    {    return    true;    }    	compilable	timeout	74	1	replace
622	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(prototype))  {  return  true;  }  timeout  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(prototype))    {    return    true;    }    	compilable	timeout	74	1	replace
623	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type,  propertyNode)||  objType.isEquivalentTo(prototype))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type,  propertyNode)||  objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type,  propertyNode)||  objType.isEquivalentTo(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	74	None	replace
624	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(prototype))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	74	None	replace
625	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  type.isEquivalentTo(inferred))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  type.isEquivalentTo(inferred))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  type.isEquivalentTo(inferred))  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(inferred))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	15	None	replace
626	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(inferred))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(inferred))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(inferred))  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(inferred))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	15	None	replace
627	[BUG]  [BUGGY]  if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(inferred))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(inferred))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(inferred))  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(inferred))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	15	None	replace
628	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(inferred))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(inferred))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(inferred))  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(inferred))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	15	None	replace
629	[BUG]  [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(propertyNode,  inferred))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(propertyNode,  inferred))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface()  ||  objType.isEquivalentTo(propertyNode,  inferred))  {  return  false;  }	  if(objType.isInterface()    ||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	128	None	replace
630	[BUG]  [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(propertyNode,  type))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(propertyNode,  type))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface()  ||  objType.isEquivalentTo(propertyNode,  type))  {  return  false;  }	  if(objType.isInterface()    ||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	128	None	replace
631	[BUG]  [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface()  ||  objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }	  if(objType.isInterface()    ||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	128	None	replace
632	[BUG]  [BUGGY]  if(objType.isInterface()  ||  type.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface()  ||  type.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface()  ||  type.isEquivalentTo(propertyNode))  {  return  false;  }	  if(objType.isInterface()    ||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	128	None	replace
633	[BUG]  [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(propertyNode,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(propertyNode,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface()  ||  objType.isEquivalentTo(propertyNode,  propertyNode))  {  return  false;  }	  if(objType.isInterface()    ||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	128	None	replace
634	[BUG]  [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(name,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(name,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface()  ||  objType.isEquivalentTo(name,  propertyNode))  {  return  false;  }	  if(objType.isInterface()    ||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	128	None	replace
635	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.hasProperty(name))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(prototype)||  objType.hasProperty(name))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.hasEquivalentTo(prototype))    {    return    true;    }    	compilable	timeout	173	1	replace
636	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.hasProperty(name))  {  return  true;  }  timeout  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.hasProperty(name))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.hasProperty(name))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.hasEquivalentTo(prototype))    {    return    true;    }    	compilable	timeout	173	1	replace
637	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.hasPrototype())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.hasPrototype())  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.hasPrototype())  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.hasEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	173	None	replace
638	[BUG]  [BUGGY]  return  type.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(prototype);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  type.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(prototype);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  type.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(prototype);	  return    type.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	148	None	replace
639	[BUG]  [BUGGY]  return  type.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode,  inferred);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  type.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode,  inferred);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  type.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode,  inferred);	  return    type.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	148	None	replace
640	[BUG]  [BUGGY]  return  type.isEquivalentTo(prototype)&&  objType.isEquivalentTo(propertyNode,  inferred);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  type.isEquivalentTo(prototype)&&  objType.isEquivalentTo(propertyNode,  inferred);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  type.isEquivalentTo(prototype)&&  objType.isEquivalentTo(propertyNode,  inferred);	  return    type.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	148	None	replace
641	[BUG]  [BUGGY]  return  objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(propertyNode);	  return    type.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	148	None	replace
642	[BUG]  [BUGGY]  if(objType.isPrototype())  {  if(!objType.isEquivalentTo(prototype))  {  return  true;  }  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype())  {  if(!objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype())  {  if(!objType.isEquivalentTo(prototype))  {  return  true;  }	  if(!objType.isEquivalentTo(prototype))    {    return    true;    }    timeout    	non-compiled	[CE]  ';'  expected	92	None	replace
643	[BUG]  [BUGGY]  if(objType!=  null)  {  if(!objType.isEquivalentTo(prototype))  {  return  true;  }  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null)  {  if(!objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=  null)  {  if(!objType.isEquivalentTo(prototype))  {  return  true;  }	  if(!objType.isEquivalentTo(prototype))    {    return    true;    }    timeout    	non-compiled	[CE]  ';'  expected	92	None	replace
644	[BUG]  [BUGGY]  parent!=  null  &&!objType.isEquivalentTo(propertyNode))  {  return  true;  [CE]  not  a  statement  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent!=  null  &&!objType.isEquivalentTo(propertyNode))  {  return  true;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent!=  null  &&!objType.isEquivalentTo(propertyNode))  {  return  true;	  if(!objType.isEquivalentTo(prototype))    {    return    true;    }    timeout    	non-compiled	[CE]  not  a  statement	92	None	replace
645	[BUG]  [BUGGY]  parent!=  null  &&!objType.isEquivalentTo(propertyNode))  {  return  false;  [CE]  not  a  statement  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent!=  null  &&!objType.isEquivalentTo(propertyNode))  {  return  false;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent!=  null  &&!objType.isEquivalentTo(propertyNode))  {  return  false;	  if(!objType.isEquivalentTo(prototype))    {    return    true;    }    timeout    	non-compiled	[CE]  not  a  statement	92	None	replace
646	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(prototype,  name))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(prototype,  name))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(prototype,  name))  {  return  false;  }	  if(!objType.isEquivalentTo(name,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	112	None	replace
647	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(propertyNode,  name))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(propertyNode,  name))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(propertyNode,  name))  {  return  false;  }	  if(!objType.isEquivalentTo(name,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	112	None	replace
648	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(type,  name,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(type,  name,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(type,  name,  propertyNode))  {  return  false;  }	  if(!objType.isEquivalentTo(name,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	112	None	replace
649	[BUG]  [BUGGY]  if(objType.isPrototype()  ||  objType.isPrototype())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype()  ||  objType.isPrototype())  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype()  ||  objType.isPrototype())  {  return  true;  }	  if(objType.isPrototype())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
650	[BUG]  [BUGGY]  if(objType.isPrototype()  ||  type.isPrototype())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype()  ||  type.isPrototype())  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype()  ||  type.isPrototype())  {  return  true;  }	  if(objType.isPrototype())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
651	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(type,  propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(type,  propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(type,  propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(type,    propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	88	None	replace
652	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(type,  inferred,  propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(type,  inferred,  propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(type,  inferred,  propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(type,    propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	88	None	replace
653	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(type,  inferred))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(type,  inferred))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(type,  inferred))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(type,    propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	88	None	replace
654	[BUG]  [BUGGY]  if(objType.isEquivalentTo(name,  propertyNode,  inferred))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(name,  propertyNode,  inferred))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(name,  propertyNode,  inferred))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode,    inferred))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	81	None	replace
655	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type,  propertyNode,  inferred))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type,  propertyNode,  inferred))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type,  propertyNode,  inferred))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode,    inferred))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	81	None	replace
656	[BUG]  [BUGGY]  ObjectType  baseType  =  type.getBaseType();  this.setPrototypeBasedOn(baseType);  [CE]  cannot  find  symbol  [FE]                                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  ObjectType  baseType  =  type.getBaseType();  this.setPrototypeBasedOn(baseType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	ObjectType  baseType  =  type.getBaseType();  this.setPrototypeBasedOn(baseType);	          ObjectType    baseType    =    objType.getBaseType();    this.setPrototypeBasedOn(baseType);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
657	[BUG]  [BUGGY]  ObjectType  baseType  =  objType.getBaseType();  [CE]  cannot  find  symbol  [FE]                                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  ObjectType  baseType  =  objType.getBaseType();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	ObjectType  baseType  =  objType.getBaseType();	          ObjectType    baseType    =    objType.getBaseType();    this.setPrototypeBasedOn(baseType);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
658	[BUG]  [BUGGY]  ObjectType  baseType  =  objType.getBaseType();  this.setPrototypeBasedOn(baseType,  inferred);  [CE]  cannot  find  symbol  [FE]                                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  ObjectType  baseType  =  objType.getBaseType();  this.setPrototypeBasedOn(baseType,  inferred);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	ObjectType  baseType  =  objType.getBaseType();  this.setPrototypeBasedOn(baseType,  inferred);	          ObjectType    baseType    =    objType.getBaseType();    this.setPrototypeBasedOn(baseType);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
659	[BUG]  [BUGGY]  ObjectType  baseType  =  baseType.getBaseType();  this.setPrototypeBasedOn(objType);  [CE]  cannot  find  symbol  [FE]                                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  ObjectType  baseType  =  baseType.getBaseType();  this.setPrototypeBasedOn(objType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	ObjectType  baseType  =  baseType.getBaseType();  this.setPrototypeBasedOn(objType);	          ObjectType    baseType    =    objType.getBaseType();    this.setPrototypeBasedOn(baseType);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
660	[BUG]  [BUGGY]  ObjectType  baseType  =  objType.getBaseType();  this.setPrototypeBasedOn(baseType,  propertyNode);  [CE]  cannot  find  symbol  [FE]                                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  ObjectType  baseType  =  objType.getBaseType();  this.setPrototypeBasedOn(baseType,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	ObjectType  baseType  =  objType.getBaseType();  this.setPrototypeBasedOn(baseType,  propertyNode);	          ObjectType    baseType    =    objType.getBaseType();    this.setPrototypeBasedOn(baseType);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
661	[BUG]  [BUGGY]  if(type.isEquivalentTo(propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(type.isEquivalentTo(propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(type.isEquivalentTo(propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  return    false;    if(objType.isEquivalentTo(propertyNode))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	14	None	replace
662	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype,  inferred))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype,  inferred))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype,  inferred))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  return    false;    if(objType.isEquivalentTo(propertyNode))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	14	None	replace
663	[BUG]  [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(propertyNode,  inferred,  propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(propertyNode,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType  ==  null)?  false  :  objType.isEquivalentTo(propertyNode,  inferred,  propertyNode);	  return(objType    ==    null)?    false    :    objType.isEquivalentTo(propertyNode,    inferred);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	45	None	replace
664	[BUG]  [BUGGY]  return(objType  ==  null)?  false  :  type.isEquivalentTo(propertyNode,  inferred);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType  ==  null)?  false  :  type.isEquivalentTo(propertyNode,  inferred);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType  ==  null)?  false  :  type.isEquivalentTo(propertyNode,  inferred);	  return(objType    ==    null)?    false    :    objType.isEquivalentTo(propertyNode,    inferred);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	45	None	replace
665	[BUG]  [BUGGY]  type.defineProperty(name,  objType,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  type.defineProperty(name,  objType,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	type.defineProperty(name,  objType,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);	  parent.defineProperty(name,    objType,    inferred,    propertyNode);    this.setPrototypeBasedOn(objType);    	non-compiled	[CE]  cannot  find  symbol	176	None	replace
666	[BUG]  [BUGGY]  params.defineProperty(name,  objType,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  [CE]  cannot  find  symbol  params  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  params.defineProperty(name,  objType,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	params.defineProperty(name,  objType,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);	  parent.defineProperty(name,    objType,    inferred,    propertyNode);    this.setPrototypeBasedOn(objType);    	non-compiled	[CE]  cannot  find  symbol  params	176	None	replace
667	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType.defineProperty(name,  objType,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	objType.defineProperty(name,  objType,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);	  parent.defineProperty(name,    objType,    inferred,    propertyNode);    this.setPrototypeBasedOn(objType);    	compilable	timeout	176	1	replace
668	[BUG]  [BUGGY]  objType.defineProperty(name,  objType,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  timeout  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType.defineProperty(name,  objType,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType.defineProperty(name,  objType,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);	  parent.defineProperty(name,    objType,    inferred,    propertyNode);    this.setPrototypeBasedOn(objType);    	compilable	timeout	176	1	replace
669	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  defineProperty(name,  objType,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	defineProperty(name,  objType,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);	  parent.defineProperty(name,    objType,    inferred,    propertyNode);    this.setPrototypeBasedOn(objType);    	compilable	timeout	176	1	replace
670	[BUG]  [BUGGY]  defineProperty(name,  objType,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  timeout  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  defineProperty(name,  objType,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	defineProperty(name,  objType,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);	  parent.defineProperty(name,    objType,    inferred,    propertyNode);    this.setPrototypeBasedOn(objType);    	compilable	timeout	176	1	replace
671	[BUG]  [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(name,  type);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(name,  type);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType  ==  null)?  false  :  objType.isEquivalentTo(name,  type);	  return(objType    ==    null)?    false    :    objType.isEquivalentTo(name);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	133	None	replace
672	[BUG]  [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(type,  name);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(type,  name);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType  ==  null)?  false  :  objType.isEquivalentTo(type,  name);	  return(objType    ==    null)?    false    :    objType.isEquivalentTo(name);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	133	None	replace
673	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type,  inferred)||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type,  inferred)||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type,  inferred)||  objType.isEquivalentTo(propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(type)||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	26	None	replace
674	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(propertyNode,  inferred))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(propertyNode,  inferred))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(propertyNode,  inferred))  {  return  false;  }	  if(objType.isEquivalentTo(type)||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	26	None	replace
675	[BUG]  [BUGGY]  if(objType.hasProperty(name))  {  if(objType.isEquivalentTo(prototype))  {  return  false;  }  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.hasProperty(name))  {  if(objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.hasProperty(name))  {  if(objType.isEquivalentTo(prototype))  {  return  false;  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))    {    return    false;    	non-compiled	[CE]  ';'  expected	34	None	replace
676	[BUG]  [BUGGY]  if(objType.isInterface())  {  if(objType.isPrototype())  {  return  false;  }  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface())  {  if(objType.isPrototype())  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface())  {  if(objType.isPrototype())  {  return  false;  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))    {    return    false;    	non-compiled	[CE]  ';'  expected	34	None	replace
677	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(type))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(type))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(type))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(type))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	169	None	replace
678	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(inferred))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(inferred))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(inferred))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(type))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	169	None	replace
679	[BUG]  [BUGGY]  if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(type))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(type))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(type))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(type))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	169	None	replace
680	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(type,  type))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(type,  type))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(type,  type))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(type))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	169	None	replace
681	[BUG]  [BUGGY]  if(type.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(type.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(type.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(prototype)||    type.isEquivalentTo(propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	75	None	replace
682	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype,  inferred)||  type.isEquivalentTo(propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype,  inferred)||  type.isEquivalentTo(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype,  inferred)||  type.isEquivalentTo(propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(prototype)||    type.isEquivalentTo(propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	75	None	replace
683	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(inferred,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(inferred,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(inferred,  propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode)||    type.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	36	None	replace
684	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(propertyNode,  inferred))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(propertyNode,  inferred))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(propertyNode,  inferred))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode)||    type.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	36	None	replace
685	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type)||  propertyNode.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(type)||  propertyNode.isEquivalentTo(propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode)||    type.isEquivalentTo(propertyNode))    {    return    false;    }    	compilable	timeout	36	1	replace
686	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type)||  propertyNode.isEquivalentTo(propertyNode))  {  return  false;  }  timeout  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type)||  propertyNode.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type)||  propertyNode.isEquivalentTo(propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode)||    type.isEquivalentTo(propertyNode))    {    return    false;    }    	compilable	timeout	36	1	replace
687	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(propertyNode,  type))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(propertyNode,  type))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(propertyNode,  type))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(propertyNode,    type))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	89	None	replace
688	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(propertyNode,  type))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(propertyNode,  type))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(propertyNode,  type))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(propertyNode,    type))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	89	None	replace
689	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  type.equals(propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  type.equals(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  type.equals(propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.equals(propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	151	None	replace
690	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)&&  objType.equals(propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)&&  objType.equals(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)&&  objType.equals(propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.equals(propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	151	None	replace
691	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.equals(propertyNode,  type))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.equals(propertyNode,  type))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  objType.equals(propertyNode,  type))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.equals(propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	151	None	replace
692	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.equals(type,  propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.equals(type,  propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  objType.equals(type,  propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.equals(propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	151	None	replace
693	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type)||  objType.equals(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(type)||  objType.equals(propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.equals(propertyNode))    {    return    true;    }    	compilable	timeout	151	1	replace
694	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type)||  objType.equals(propertyNode))  {  return  true;  }  timeout  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type)||  objType.equals(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type)||  objType.equals(propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.equals(propertyNode))    {    return    true;    }    	compilable	timeout	151	1	replace
695	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  propertyNode.equals(objType))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  propertyNode.equals(objType))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  propertyNode.equals(objType))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.equals(propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	151	None	replace
696	[BUG]  [BUGGY]  timeout  [FE]                                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  defineProperty(name,  type,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	return  defineProperty(name,  type,  inferred,  propertyNode);	          return    defineProperty(name,    objType,    inferred,    propertyNode);    	compilable	timeout	59	1	replace
697	[BUG]  [BUGGY]  return  defineProperty(name,  type,  inferred,  propertyNode);  timeout  [FE]                                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  defineProperty(name,  type,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  defineProperty(name,  type,  inferred,  propertyNode);	          return    defineProperty(name,    objType,    inferred,    propertyNode);    	compilable	timeout	59	1	replace
698	[BUG]  [BUGGY]  return  defineProperty(name,  objType,  type,  inferred,  propertyNode);  [CE]  no  suitable  method  found  for  defineProperty(String,ObjectType,JSType,boolean,Node)  [FE]                                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  defineProperty(name,  objType,  type,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  defineProperty(name,  objType,  type,  inferred,  propertyNode);	          return    defineProperty(name,    objType,    inferred,    propertyNode);    	non-compiled	[CE]  no  suitable  method  found  for  defineProperty(String,ObjectType,JSType,boolean,Node)	59	None	replace
699	[BUG]  [BUGGY]  timeout  [FE]                                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  defineProperty(name,  objType,  inferred,  propertyNode);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(prototype))  {  return  defineProperty(name,  objType,  inferred,  propertyNode);  }	          return    defineProperty(name,    objType,    inferred,    propertyNode);    	compilable	timeout	59	1	replace
700	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  defineProperty(name,  objType,  inferred,  propertyNode);  }  timeout  [FE]                                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  defineProperty(name,  objType,  inferred,  propertyNode);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))  {  return  defineProperty(name,  objType,  inferred,  propertyNode);  }	          return    defineProperty(name,    objType,    inferred,    propertyNode);    	compilable	timeout	59	1	replace
701	[BUG]  [BUGGY]  timeout  [FE]                                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  defineProperty(name,  type,  inferred,  propertyNode);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(prototype))  {  return  defineProperty(name,  type,  inferred,  propertyNode);  }	          return    defineProperty(name,    objType,    inferred,    propertyNode);    	compilable	timeout	59	1	replace
702	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  defineProperty(name,  type,  inferred,  propertyNode);  }  timeout  [FE]                                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  defineProperty(name,  type,  inferred,  propertyNode);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))  {  return  defineProperty(name,  type,  inferred,  propertyNode);  }	          return    defineProperty(name,    objType,    inferred,    propertyNode);    	compilable	timeout	59	1	replace
703	[BUG]  [BUGGY]  timeout  [FE]                                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  defineProperty(name,  objType,  inferred,  propertyNode);  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(prototype))  {  return  defineProperty(name,  objType,  inferred,  propertyNode);  }  else  {  this.setPrototypeBasedOn(objType);  }	          return    defineProperty(name,    objType,    inferred,    propertyNode);    	compilable	timeout	59	1	replace
704	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  defineProperty(name,  objType,  inferred,  propertyNode);  }  else  {  this.setPrototypeBasedOn(objType);  }  timeout  [FE]                                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  defineProperty(name,  objType,  inferred,  propertyNode);  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))  {  return  defineProperty(name,  objType,  inferred,  propertyNode);  }  else  {  this.setPrototypeBasedOn(objType);  }	          return    defineProperty(name,    objType,    inferred,    propertyNode);    	compilable	timeout	59	1	replace
705	[BUG]  [BUGGY]  timeout  [FE]                                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  defineProperty(name,  type,  inferred,  propertyNode);  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(prototype))  {  return  defineProperty(name,  type,  inferred,  propertyNode);  }  else  {  this.setPrototypeBasedOn(objType);  }	          return    defineProperty(name,    objType,    inferred,    propertyNode);    	compilable	timeout	59	1	replace
706	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  defineProperty(name,  type,  inferred,  propertyNode);  }  else  {  this.setPrototypeBasedOn(objType);  }  timeout  [FE]                                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  defineProperty(name,  type,  inferred,  propertyNode);  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))  {  return  defineProperty(name,  type,  inferred,  propertyNode);  }  else  {  this.setPrototypeBasedOn(objType);  }	          return    defineProperty(name,    objType,    inferred,    propertyNode);    	compilable	timeout	59	1	replace
707	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }	  timeout    	compilable	timeout	136	1	add
708	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }	  timeout    	compilable	timeout	136	1	add
709	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isConstructor()  ||  objType.isEQUIvalentTo(prototype))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isConstructor()  ||  objType.isEQUIvalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isConstructor()  ||  objType.isEQUIvalentTo(prototype))  {  return  true;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	136	None	add
710	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isConstructor()  ||  objType.isEquivalentTo(propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isConstructor()  ||  objType.isEquivalentTo(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isConstructor()  ||  objType.isEquivalentTo(propertyNode))  {  return  true;  }	  timeout    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	136	None	add
711	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isConstructor()  ||  objType.isEquivalentTo(Prototype))  {  return  true;  }  [CE]  cannot  find  symbol  Prototype  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isConstructor()  ||  objType.isEquivalentTo(Prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isConstructor()  ||  objType.isEquivalentTo(Prototype))  {  return  true;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol  Prototype	136	None	add
712	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  If(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  If(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    true;    }    If(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }	  timeout    	non-compiled	[CE]  ';'  expected	136	None	add
713	[BUG]  [BUGGY]  if(objType.isPrototype())  {  if(!inferred  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype())  {  if(!inferred  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype())  {  if(!inferred  ||  objType.isEquivalentTo(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))    {    return    true;    }    timeout    	non-compiled	[CE]  ';'  expected	103	None	replace
714	[BUG]  [BUGGY]  if(objType.isPrototype())  {  if(objType.isEquivalentTo(propertyNode))  {  return  true;  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype())  {  if(objType.isEquivalentTo(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype())  {  if(objType.isEquivalentTo(propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))    {    return    true;    }    timeout    	non-compiled	[CE]  ';'  expected	103	None	replace
715	[BUG]  [BUGGY]  if(objType.isPrototype())  {  if(objType.isPrototype())  {  return  true;  }  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype())  {  if(objType.isPrototype())  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype())  {  if(objType.isPrototype())  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))    {    return    true;    }    timeout    	non-compiled	[CE]  ';'  expected	103	None	replace
716	[BUG]  [BUGGY]  if(objType.isPrototype())  {  if(!inferred  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype())  {  if(!inferred  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype())  {  if(!inferred  ||  objType.isEquivalentTo(prototype))  {  return  false;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))    {    return    true;    }    timeout    	non-compiled	[CE]  ';'  expected	103	None	replace
717	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  return    false;    if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    	compilable	timeout	13	1	replace
718	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  timeout  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  return    false;    if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    	compilable	timeout	13	1	replace
719	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  return    false;    if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	13	None	replace
720	[BUG]  [BUGGY]  if(objType.isFunctionPrototype()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isFunctionPrototype()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isFunctionPrototype()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  return    false;    if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
721	[BUG]  [BUGGY]  if(objType.isPrototype())  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype())  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype())  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  return    false;    if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
722	[BUG]  [BUGGY]  if(type.isEquivalentTo(propertyNode,  objType))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(type.isEquivalentTo(propertyNode,  objType))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(type.isEquivalentTo(propertyNode,  objType))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode,    type))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	98	None	replace
723	[BUG]  [BUGGY]  if(type.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(type.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(type.isEquivalentTo(propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode,    type))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	98	None	replace
724	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(name,  type))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(name,  type))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(name,  type))  {  return  false;  }	  if(!objType.isEquivalentTo(propertyNode,    type))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	150	None	replace
725	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(propertyNode,  type,  inferred))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(propertyNode,  type,  inferred))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(propertyNode,  type,  inferred))  {  return  false;  }	  if(!objType.isEquivalentTo(propertyNode,    type))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	150	None	replace
726	[BUG]  [BUGGY]  return(objType.isEquivalentTo(name)||  objType.isEquivalentTo(prototype));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(name)||  objType.isEquivalentTo(prototype));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(name)||  objType.isEquivalentTo(prototype));	  return(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(prototype));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	68	None	replace
727	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(type)||  objType.isEquivalentTo(prototype));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	return(objType.isEquivalentTo(type)||  objType.isEquivalentTo(prototype));	  return(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(prototype));    	compilable	timeout	68	1	replace
728	[BUG]  [BUGGY]  return(objType.isEquivalentTo(type)||  objType.isEquivalentTo(prototype));  timeout  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(type)||  objType.isEquivalentTo(prototype));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(type)||  objType.isEquivalentTo(prototype));	  return(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(prototype));    	compilable	timeout	68	1	replace
729	[BUG]  [BUGGY]  return(objType.isEquivalentTo(type,  propertyNode)||  objType.isEquivalentTo(prototype));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(type,  propertyNode)||  objType.isEquivalentTo(prototype));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(type,  propertyNode)||  objType.isEquivalentTo(prototype));	  return(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(prototype));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	68	None	replace
730	[BUG]  [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(prototype);  return(objType!=  null)?  false  :  objType.isEquivalentTo(prototype);  [CE]  unreachable  statement  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(prototype);  return(objType!=  null)?  false  :  objType.isEquivalentTo(prototype);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=    null)?    false    :    objType.isEquivalentTo(prototype);    return(objType!=  null)?  false  :  objType.isEquivalentTo(prototype);	  timeout    	non-compiled	[CE]  unreachable  statement	167	None	add
731	[BUG]  [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(prototype);  return(objType  ==  null)?  false  :  objType.isEquivalentTo(prototype);  [CE]  unreachable  statement  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(prototype);  return(objType  ==  null)?  false  :  objType.isEquivalentTo(prototype);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=    null)?    false    :    objType.isEquivalentTo(prototype);    return(objType  ==  null)?  false  :  objType.isEquivalentTo(prototype);	  timeout    	non-compiled	[CE]  unreachable  statement	167	None	add
732	[BUG]  [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(prototype);  return(objType  >>  null)?  false  :  objType.isEquivalentTo(prototype);  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(prototype);  return(objType  >>  null)?  false  :  objType.isEquivalentTo(prototype);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=    null)?    false    :    objType.isEquivalentTo(prototype);    return(objType  >>  null)?  false  :  objType.isEquivalentTo(prototype);	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	167	None	add
733	[BUG]  [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(prototype);  return(objType  >=  null)?  false  :  objType.isEquivalentTo(prototype);  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(prototype);  return(objType  >=  null)?  false  :  objType.isEquivalentTo(prototype);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=    null)?    false    :    objType.isEquivalentTo(prototype);    return(objType  >=  null)?  false  :  objType.isEquivalentTo(prototype);	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	167	None	add
734	[BUG]  [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(prototype);  Return(objType!=  null)?  false  :  objType.isEquivalentTo(prototype);  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(prototype);  Return(objType!=  null)?  false  :  objType.isEquivalentTo(prototype);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=    null)?    false    :    objType.isEquivalentTo(prototype);    Return(objType!=  null)?  false  :  objType.isEquivalentTo(prototype);	  timeout    	non-compiled	[CE]  not  a  statement	167	None	add
735	[BUG]  [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(prototype);  return(objType  [BUGGY]  null)?  false  :  objType.isEquivalentTo(prototype);  [CE]  ')'  expected  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(prototype);  return(objType  [BUGGY]  null)?  false  :  objType.isEquivalentTo(prototype);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=    null)?    false    :    objType.isEquivalentTo(prototype);    return(objType  [BUGGY]  null)?  false  :  objType.isEquivalentTo(prototype);	  timeout    	non-compiled	[CE]  ')'  expected	167	None	add
736	[BUG]  [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(prototype);  return(objType  [Delete]  null)?  false  :  objType.isEquivalentTo(prototype);  [CE]  ')'  expected  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(prototype);  return(objType  [Delete]  null)?  false  :  objType.isEquivalentTo(prototype);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=    null)?    false    :    objType.isEquivalentTo(prototype);    return(objType  [Delete]  null)?  false  :  objType.isEquivalentTo(prototype);	  timeout    	non-compiled	[CE]  ')'  expected	167	None	add
737	[BUG]  [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(prototype);  return(objType!=  null)?  false  :  objType.isEQUIvalentTo(prototype);  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(prototype);  return(objType!=  null)?  false  :  objType.isEQUIvalentTo(prototype);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=    null)?    false    :    objType.isEquivalentTo(prototype);    return(objType!=  null)?  false  :  objType.isEQUIvalentTo(prototype);	  timeout    	non-compiled	[CE]  cannot  find  symbol	167	None	add
738	[BUG]  [BUGGY]  return  objType.isEquivalentTo(prototype)&&  type.isEquivalentTo(propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(prototype)&&  type.isEquivalentTo(propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(prototype)&&  type.isEquivalentTo(propertyNode);	  return    objType.isEquivalentTo(prototype)&&    objType.isEquivalentTo(propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	7	None	replace
739	[BUG]  [BUGGY]  return  objType.isEquivalentTo(type)&&  objType.isEquivalentTo(propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(type)&&  objType.isEquivalentTo(propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(type)&&  objType.isEquivalentTo(propertyNode);	  return    objType.isEquivalentTo(prototype)&&    objType.isEquivalentTo(propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	7	None	replace
740	[BUG]  [BUGGY]  return  objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(inferred,  propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(inferred,  propertyNode);	  return    objType.isEquivalentTo(prototype)&&    objType.isEquivalentTo(propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	7	None	replace
741	[BUG]  [BUGGY]  return(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(type,  inferred,  propertyNode));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(type,  inferred,  propertyNode));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(type,  inferred,  propertyNode));	  return(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(inferred,    propertyNode));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	135	None	replace
742	[BUG]  [BUGGY]  return(objType.isEquivalentTo(type)||  objType.isEquivalentTo(inferred,  propertyNode));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(type)||  objType.isEquivalentTo(inferred,  propertyNode));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(type)||  objType.isEquivalentTo(inferred,  propertyNode));	  return(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(inferred,    propertyNode));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	135	None	replace
743	[BUG]  [BUGGY]  return(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(name,  inferred,  propertyNode));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(name,  inferred,  propertyNode));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(name,  inferred,  propertyNode));	  return(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(inferred,    propertyNode));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	135	None	replace
744	[BUG]  [BUGGY]  return(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(inferred,  propertyNode));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(inferred,  propertyNode));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(inferred,  propertyNode));	  return(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(inferred,    propertyNode));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	135	None	replace
745	[BUG]  [BUGGY]  return(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(inferred,  propertyNode));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(inferred,  propertyNode));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(inferred,  propertyNode));	  return(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(inferred,    propertyNode));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	135	None	replace
746	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)&&  type.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)&&  type.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)&&  type.isEquivalentTo(propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(prototype)&&    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	29	None	replace
747	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(propertyNode,  inferred))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(propertyNode,  inferred))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(propertyNode,  inferred))  {  return  false;  }	  if(objType.isEquivalentTo(prototype)&&    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	29	None	replace
748	[BUG]  [BUGGY]  timeout  [FE]                                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	                if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    false;    }    if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }	  timeout    	compilable	timeout	57	1	add
749	[BUG]  [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  timeout  [FE]                                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	                if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    false;    }    if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }	  timeout    	compilable	timeout	57	1	add
750	[BUG]  [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  if(objType.isPrototype(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  [CE]  cannot  find  symbol  [FE]                                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  if(objType.isPrototype(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	                if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    false;    }    if(objType.isPrototype(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	57	None	add
751	[BUG]  [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  if(objType.isEQUIvalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  [CE]  cannot  find  symbol  [FE]                                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  if(objType.isEQUIvalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	                if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    false;    }    if(objType.isEQUIvalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	57	None	add
752	[BUG]  [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  If(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  [CE]  ';'  expected  [FE]                                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  If(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	                if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    false;    }    If(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }	  timeout    	non-compiled	[CE]  ';'  expected	57	None	add
753	[BUG]  [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  if(objType.isEnabled(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  [CE]  cannot  find  symbol  [FE]                                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  if(objType.isEnabled(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	                if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    false;    }    if(objType.isEnabled(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	57	None	add
754	[BUG]  [BUGGY]  return(type!=  null)?  false  :  objType.isEquivalentTo(propertyNode,  propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(type!=  null)?  false  :  objType.isEquivalentTo(propertyNode,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(type!=  null)?  false  :  objType.isEquivalentTo(propertyNode,  propertyNode);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(propertyNode,    type);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	43	None	replace
755	[BUG]  [BUGGY]  return(type!=  null)?  false  :  objType.isEquivalentTo(propertyNode,  type);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(type!=  null)?  false  :  objType.isEquivalentTo(propertyNode,  type);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(type!=  null)?  false  :  objType.isEquivalentTo(propertyNode,  type);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(propertyNode,    type);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	43	None	replace
756	[BUG]  [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(name,  type);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(name,  type);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=  null)?  false  :  objType.isEquivalentTo(name,  type);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(propertyNode,    type);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	43	None	replace
757	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(prototype))        {        return        false;        }        if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }	  timeout    	compilable	timeout	30	1	add
758	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  timeout  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))        {        return        false;        }        if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }	  timeout    	compilable	timeout	30	1	add
759	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(prototype))        {        return        false;        }        if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }	  timeout    	compilable	timeout	30	1	add
760	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))        {        return        false;        }        if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }	  timeout    	compilable	timeout	30	1	add
761	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))        {        return        false;        }        if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false	  timeout    	non-compiled	[CE]  ';'  expected	30	None	add
762	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))        {        return        false;        }        if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;	  timeout    	non-compiled	[CE]  ';'  expected	30	None	add
763	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))        {        return        false;        }        if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return	  timeout    	non-compiled	[CE]  illegal  start  of  expression	30	None	add
764	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(prototype))        {        return        false;        }        if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))	  timeout    	compilable	timeout	30	1	add
765	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  timeout  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))        {        return        false;        }        if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))	  timeout    	compilable	timeout	30	1	add
766	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))        {        return        false;        }        if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {	  timeout    	non-compiled	[CE]  ';'  expected	30	None	add
767	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype)  [CE]  ')'  expected  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype)  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))        {        return        false;        }        if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype)	  timeout    	non-compiled	[CE]  ')'  expected	30	None	add
768	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype,  inferred,  propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype,  inferred,  propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype,  inferred,  propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(prototype,    propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	85	None	replace
769	[BUG]  [BUGGY]  if(objType.isEquivalentTo(name,  prototype,  propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(name,  prototype,  propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(name,  prototype,  propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(prototype,    propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	85	None	replace
770	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode,  propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode,  propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode,  propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(prototype,    propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	85	None	replace
771	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type))  {  return  true;  }  if(objType.isEquivalentTo(type))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(type))    {    return    true;    }    if(objType.isEquivalentTo(type))  {  return  true;  }	  timeout    	compilable	timeout	142	1	add
772	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type))  {  return  true;  }  if(objType.isEquivalentTo(type))  {  return  true;  }  timeout  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type))  {  return  true;  }  if(objType.isEquivalentTo(type))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type))    {    return    true;    }    if(objType.isEquivalentTo(type))  {  return  true;  }	  timeout    	compilable	timeout	142	1	add
773	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type))  {  return  true;  }  if(objType.isEQUIvalentTo(type))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type))  {  return  true;  }  if(objType.isEQUIvalentTo(type))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type))    {    return    true;    }    if(objType.isEQUIvalentTo(type))  {  return  true;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	142	None	add
774	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type))  {  return  true;  }  If(objType.isEquivalentTo(type))  {  return  true;  }  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type))  {  return  true;  }  If(objType.isEquivalentTo(type))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type))    {    return    true;    }    If(objType.isEquivalentTo(type))  {  return  true;  }	  timeout    	non-compiled	[CE]  ';'  expected	142	None	add
775	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type))  {  return  true;  }  if(objType.isEquivalentTo(type))  {  return  true;  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type))  {  return  true;  }  if(objType.isEquivalentTo(type))  {  return  true;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type))    {    return    true;    }    if(objType.isEquivalentTo(type))  {  return  true;	  timeout    	non-compiled	[CE]  ';'  expected	142	None	add
776	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type))  {  return  false;  }  if(objType.isEquivalentTo(type))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(type))    {    return    false;    }    if(objType.isEquivalentTo(type))  {  return  false;  }	  timeout    	compilable	timeout	100	1	add
777	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type))  {  return  false;  }  if(objType.isEquivalentTo(type))  {  return  false;  }  timeout  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type))  {  return  false;  }  if(objType.isEquivalentTo(type))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type))    {    return    false;    }    if(objType.isEquivalentTo(type))  {  return  false;  }	  timeout    	compilable	timeout	100	1	add
778	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type))  {  return  false;  }  if(objType.isEQUIvalentTo(type))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type))  {  return  false;  }  if(objType.isEQUIvalentTo(type))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type))    {    return    false;    }    if(objType.isEQUIvalentTo(type))  {  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	100	None	add
779	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type))  {  return  false;  }  if(objType.isEquivalentTo(type))  {  return  false;  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type))  {  return  false;  }  if(objType.isEquivalentTo(type))  {  return  false;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type))    {    return    false;    }    if(objType.isEquivalentTo(type))  {  return  false;	  timeout    	non-compiled	[CE]  ';'  expected	100	None	add
780	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type))  {  return  false;  }  If(objType.isEquivalentTo(type))  {  return  false;  }  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type))  {  return  false;  }  If(objType.isEquivalentTo(type))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type))    {    return    false;    }    If(objType.isEquivalentTo(type))  {  return  false;  }	  timeout    	non-compiled	[CE]  ';'  expected	100	None	add
781	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface())  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isInterface())  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(ObjType.isEquivalentTo(prototype))    {    return    true;    }    	compilable	timeout	107	1	replace
782	[BUG]  [BUGGY]  if(objType.isInterface())  {  return  true;  }  timeout  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface())  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface())  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(ObjType.isEquivalentTo(prototype))    {    return    true;    }    	compilable	timeout	107	1	replace
783	[BUG]  [BUGGY]  return  objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(type);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(type);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(type);	  return    objType.isEquivalentTo(type)||    objType.isEquivalentTo(propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	3	None	replace
784	[BUG]  [BUGGY]  return  type.isEquivalentTo(objType)||  objType.isEquivalentTo(propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  type.isEquivalentTo(objType)||  objType.isEquivalentTo(propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  type.isEquivalentTo(objType)||  objType.isEquivalentTo(propertyNode);	  return    objType.isEquivalentTo(type)||    objType.isEquivalentTo(propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	3	None	replace
785	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode,  inferred,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode,  inferred,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode,  inferred,  propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    inferred))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	27	None	replace
786	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(propertyNode,  inferred))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(propertyNode,  inferred))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(propertyNode,  inferred))  {  return  false;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    inferred))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	27	None	replace
787	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type,  name))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type,  name))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type,  name))  {  return  true;  }	  if(objType.isEquivalentTo(name,    propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	84	None	replace
788	[BUG]  [BUGGY]  if(objType!=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType!=  null  &&  objType.getEquivalentTo(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType!=  null  &&  objType.getEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=    null    &&    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType!=  null  &&  objType.getEquivalentTo(prototype))  {  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	174	None	add
789	[BUG]  [BUGGY]  if(objType!=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType!=  null  &&  objType.isEquivalentTo(Prototype))  {  return  false;  }  [CE]  cannot  find  symbol  Prototype  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType!=  null  &&  objType.isEquivalentTo(Prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=    null    &&    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType!=  null  &&  objType.isEquivalentTo(Prototype))  {  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol  Prototype	174	None	add
790	[BUG]  [BUGGY]  objType  =  objType.getImplicitPrototype();  Node  objType  =  objType.getImplicitPrototype();  [CE]  variable  objType  is  already  defined  in  method  defineProperty(String,JSType,boolean,Node)  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.getImplicitPrototype();  Node  objType  =  objType.getImplicitPrototype();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType    =    objType.getImplicitPrototype();    Node  objType  =  objType.getImplicitPrototype();	  timeout    	non-compiled	[CE]  variable  objType  is  already  defined  in  method  defineProperty(String,JSType,boolean,Node)	158	None	add
791	[BUG]  [BUGGY]  timeout  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.getImplicitPrototype();  type  =  objType.getImplicitPrototype();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	objType    =    objType.getImplicitPrototype();    type  =  objType.getImplicitPrototype();	  timeout    	compilable	timeout	158	1	add
792	[BUG]  [BUGGY]  objType  =  objType.getImplicitPrototype();  type  =  objType.getImplicitPrototype();  timeout  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.getImplicitPrototype();  type  =  objType.getImplicitPrototype();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType    =    objType.getImplicitPrototype();    type  =  objType.getImplicitPrototype();	  timeout    	compilable	timeout	158	1	add
793	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.equals(name))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.equals(name))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.equivalentTo(prototype))    {    return    true;    }    	compilable	timeout	172	1	replace
794	[BUG]  [BUGGY]  if(objType.equals(name))  {  return  true;  }  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.equals(name))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.equals(name))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.equivalentTo(prototype))    {    return    true;    }    	compilable	timeout	172	1	replace
795	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingProperty(name,  objType,  inferred,  propertyNode);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  aughtExceptionHandler.handleMissingProperty(name,  objType,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	aughtExceptionHandler.handleMissingProperty(name,  objType,  inferred,  propertyNode);	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    If(objType.isEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	106	None	replace
796	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingProperty(name,  objType,  propertyNode);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  aughtExceptionHandler.handleMissingProperty(name,  objType,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	aughtExceptionHandler.handleMissingProperty(name,  objType,  propertyNode);	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    If(objType.isEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	106	None	replace
797	[BUG]  [BUGGY]  if(objType.isPrototype()  ||  objType.isEquivalentTo(PROTOTYPE))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype()  ||  objType.isEquivalentTo(PROTOTYPE))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype()  ||  objType.isEquivalentTo(PROTOTYPE))  {  return  false;  }	  if(objType.isPrototype()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
798	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.equals(type))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.equals(type))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  objType.equals(type))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.equals(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	116	None	replace
799	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.equals(name))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.equals(name))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  objType.equals(name))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.equals(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	116	None	replace
800	[BUG]  [BUGGY]  timeout  [FE]                                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface())  {  this.setPrototypeBasedOn(objType);  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isInterface())  {  this.setPrototypeBasedOn(objType);  return  false;  }	          if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    false;    }    timeout    	compilable	timeout	58	1	replace
801	[BUG]  [BUGGY]  if(objType.isInterface())  {  this.setPrototypeBasedOn(objType);  return  false;  }  timeout  [FE]                                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface())  {  this.setPrototypeBasedOn(objType);  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface())  {  this.setPrototypeBasedOn(objType);  return  false;  }	          if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    false;    }    timeout    	compilable	timeout	58	1	replace
802	[BUG]  [BUGGY]  ObjectType  objType  =  objType.toObjectType();  [CE]  variable  objType  is  already  defined  in  method  defineProperty(String,JSType,boolean,Node)  [FE]                                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  ObjectType  objType  =  objType.toObjectType();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	ObjectType  objType  =  objType.toObjectType();	          if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    false;    }    timeout    	non-compiled	[CE]  variable  objType  is  already  defined  in  method  defineProperty(String,JSType,boolean,Node)	58	None	replace
803	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type)||  propertyNode.isEquivalentTo(type))  {  return  true;  }  [CE]  no  suitable  method  found  for  isEquivalentTo(JSType)  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type)||  propertyNode.isEquivalentTo(type))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type)||  propertyNode.isEquivalentTo(type))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||    type.isEquivalentTo(propertyNode))    {    return    true;    }    	non-compiled	[CE]  no  suitable  method  found  for  isEquivalentTo(JSType)	86	None	replace
804	[BUG]  [BUGGY]  if(objType.isEquivalentTo(name)||!inferred)  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(name)||!inferred)  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(name)||!inferred)  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||!inferred)    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	146	None	replace
805	[BUG]  [BUGGY]  return  objType.isEquivalentTo(type,  propertyNode)&&  objType.isEquivalentTo(propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(type,  propertyNode)&&  objType.isEquivalentTo(propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(type,  propertyNode)&&  objType.isEquivalentTo(propertyNode);	  return    objType.isEquivalentTo(type,    propertyNode)||    objType.isEquivalentTo(propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	149	None	replace
806	[BUG]  [BUGGY]  return  type.isEquivalentTo(objType,  propertyNode)&&  objType.isEquivalentTo(propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  type.isEquivalentTo(objType,  propertyNode)&&  objType.isEquivalentTo(propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  type.isEquivalentTo(objType,  propertyNode)&&  objType.isEquivalentTo(propertyNode);	  return    objType.isEquivalentTo(type,    propertyNode)||    objType.isEquivalentTo(propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	149	None	replace
807	[BUG]  [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  if(objType.isequivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  if(objType.isequivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	                if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    true;    }    if(objType.isequivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	52	None	add
808	[BUG]  [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  if(objType.getEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  if(objType.getEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	                if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    true;    }    if(objType.getEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	52	None	add
809	[BUG]  [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  if(objType.equivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  if(objType.equivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	                if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    true;    }    if(objType.equivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	52	None	add
810	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(prototype,  type))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(prototype,  type))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(prototype,  type))  {  return  true;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    type))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	78	None	replace
811	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type))  {  return  false;  }  if(objType.isequivalentTo(type))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type))  {  return  false;  }  if(objType.isequivalentTo(type))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type))    {    return    false;    }    if(objType.isequivalentTo(type))  {  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	100	None	add
812	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type))  {  return  false;  }  if(objType.getEquivalentTo(type))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type))  {  return  false;  }  if(objType.getEquivalentTo(type))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type))    {    return    false;    }    if(objType.getEquivalentTo(type))  {  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	100	None	add
813	[BUG]  [BUGGY]  parent!=  null  &&  propertyNode.isEquivalentTo(objType))  {  return  false;  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent!=  null  &&  propertyNode.isEquivalentTo(objType))  {  return  false;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent!=  null  &&  propertyNode.isEquivalentTo(objType))  {  return  false;	  parent!=    null    &&    objType.isEquivalentTo(propertyNode))    {    return    false;    	non-compiled	[CE]  not  a  statement	64	None	replace
814	[BUG]  [BUGGY]  if(objType.isInterface()  &&  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface()  &&  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface()  &&  objType.isEquivalentTo(propertyNode))  {  return  false;  }	  if(objType.isInterface()    ||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	128	None	replace
815	[BUG]  [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(inferred,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(inferred,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface()  ||  objType.isEquivalentTo(inferred,  propertyNode))  {  return  false;  }	  if(objType.isInterface()    ||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	128	None	replace
816	[BUG]  [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(value,  propertyNode))  {  return  false;  }  [CE]  cannot  find  symbol  value  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(value,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface()  ||  objType.isEquivalentTo(value,  propertyNode))  {  return  false;  }	  if(objType.isInterface()    ||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  value	128	None	replace
817	[BUG]  [BUGGY]  this.setPrototypeBasedOn(objType,  inferred);  return  true;  [CE]  method  setPrototypeBasedOn  in  class  FunctionType  cannot  be  applied  to  given  types;  [FE]                                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  this.setPrototypeBasedOn(objType,  inferred);  return  true;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	this.setPrototypeBasedOn(objType,  inferred);  return  true;	          if(objType.isEquivalentTo(propertyNode))    {    this.setPrototypeBasedOn(objType);    return    true;    }    	non-compiled	[CE]  method  setPrototypeBasedOn  in  class  FunctionType  cannot  be  applied  to  given  types;	56	None	replace
818	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype,  propertyNode))  {  this.setPrototypeBasedOn(objType);  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype,  propertyNode))  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype,  propertyNode))  {  this.setPrototypeBasedOn(objType);  return  true;  }	          if(objType.isEquivalentTo(propertyNode))    {    this.setPrototypeBasedOn(objType);    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	56	None	replace
819	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(type,  inferred))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(type,  inferred))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(type,  inferred))  {  return  false;  }	  if(!objType.isEquivalentTo(type,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	108	None	replace
820	[BUG]  [BUGGY]  return  objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(type,  propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(type,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(type,  propertyNode);	  return    objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(prototype);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	1	None	replace
821	[BUG]  [BUGGY]  ObjectType  objType  =  objType.getPropertyType(name);  [CE]  variable  objType  is  already  defined  in  method  defineProperty(String,JSType,boolean,Node)  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  ObjectType  objType  =  objType.getPropertyType(name);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	ObjectType  objType  =  objType.getPropertyType(name);	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  variable  objType  is  already  defined  in  method  defineProperty(String,JSType,boolean,Node)	33	None	replace
822	[BUG]  [BUGGY]  if(objType.isEquivalentTo(name,  propertyNode))  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(name,  propertyNode))  {  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(name,  propertyNode))  {	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	33	None	replace
823	[BUG]  [BUGGY]  parent  ==  null  &&  parent.isEquivalentTo(objType))  {  return  true;  }  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent  ==  null  &&  parent.isEquivalentTo(objType))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent  ==  null  &&  parent.isEquivalentTo(objType))  {  return  true;  }	  parent!=    null    &&    objType.isEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	153	None	replace
824	[BUG]  [BUGGY]  parent!=  null  &&  type.isEquivalentTo(prototype))  {  return  true;  }  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent!=  null  &&  type.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent!=  null  &&  type.isEquivalentTo(prototype))  {  return  true;  }	  parent!=    null    &&    objType.isEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	153	None	replace
825	[BUG]  [BUGGY]  parent!=  null  &&  parent.isPrototype(objType))  {  return  true;  }  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent!=  null  &&  parent.isPrototype(objType))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent!=  null  &&  parent.isPrototype(objType))  {  return  true;  }	  parent!=    null    &&    objType.isEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	153	None	replace
826	[BUG]  [BUGGY]  parent!=  null  &&  objType.isEquivalentTo(parent))  {  return  true;  }  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent!=  null  &&  objType.isEquivalentTo(parent))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent!=  null  &&  objType.isEquivalentTo(parent))  {  return  true;  }	  parent!=    null    &&    objType.isEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	153	None	replace
827	[BUG]  [BUGGY]  return  super.defineProperty(name,  type,  objType,  inferred,  propertyNode);  [CE]  no  suitable  method  found  for  defineProperty(String,JSType,ObjectType,boolean,Node)  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  super.defineProperty(name,  type,  objType,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  super.defineProperty(name,  type,  objType,  inferred,  propertyNode);	          return    super.defineProperty(name,    type,    inferred,    propertyNode);    	non-compiled	[CE]  no  suitable  method  found  for  defineProperty(String,JSType,ObjectType,boolean,Node)	54	None	replace
828	[BUG]  [BUGGY]  return  super.defineProperty(name,  type,  inferred,  propertiesNode);  [CE]  cannot  find  symbol  propertiesNode  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  super.defineProperty(name,  type,  inferred,  propertiesNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  super.defineProperty(name,  type,  inferred,  propertiesNode);	          return    super.defineProperty(name,    type,    inferred,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  propertiesNode	54	None	replace
829	[BUG]  [BUGGY]  return  super.defineProperty(name,  type,  inferred,  propertyNode)&&  objType.isEquivalentTo(propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  super.defineProperty(name,  type,  inferred,  propertyNode)&&  objType.isEquivalentTo(propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  super.defineProperty(name,  type,  inferred,  propertyNode)&&  objType.isEquivalentTo(propertyNode);	          return    super.defineProperty(name,    type,    inferred,    propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	54	None	replace
830	[BUG]  [BUGGY]  timeout  [FE]                                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  super.defineProperty(name,  type,  inferred,  propertyNode)&&  objType.isEquivalentTo(prototype);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	return  super.defineProperty(name,  type,  inferred,  propertyNode)&&  objType.isEquivalentTo(prototype);	          return    super.defineProperty(name,    type,    inferred,    propertyNode);    	compilable	timeout	54	1	replace
831	[BUG]  [BUGGY]  return  super.defineProperty(name,  type,  inferred,  propertyNode)&&  objType.isEquivalentTo(prototype);  timeout  [FE]                                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  super.defineProperty(name,  type,  inferred,  propertyNode)&&  objType.isEquivalentTo(prototype);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  super.defineProperty(name,  type,  inferred,  propertyNode)&&  objType.isEquivalentTo(prototype);	          return    super.defineProperty(name,    type,    inferred,    propertyNode);    	compilable	timeout	54	1	replace
832	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(type))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }	  return    false;    if(objType.isEquivalentTo(propertyNode))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    return    true;    }    	compilable	timeout	161	1	replace
833	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  timeout  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }	  return    false;    if(objType.isEquivalentTo(propertyNode))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    return    true;    }    	compilable	timeout	161	1	replace
834	[BUG]  [BUGGY]  if(objType.isEquivalentTo(name))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(name))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(name))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }	  return    false;    if(objType.isEquivalentTo(propertyNode))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	161	None	replace
835	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType.defineProperty(name,  objType,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	objType.defineProperty(name,  objType,  inferred,  propertyNode);	  parent.defineProperty(name,    objType,    inferred,    propertyNode);    	compilable	timeout	139	1	replace
836	[BUG]  [BUGGY]  objType.defineProperty(name,  objType,  inferred,  propertyNode);  timeout  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType.defineProperty(name,  objType,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType.defineProperty(name,  objType,  inferred,  propertyNode);	  parent.defineProperty(name,    objType,    inferred,    propertyNode);    	compilable	timeout	139	1	replace
837	[BUG]  [BUGGY]  return  type.isEquivalentTo(objType)||  type.isEquivalentTo(propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  type.isEquivalentTo(objType)||  type.isEquivalentTo(propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  type.isEquivalentTo(objType)||  type.isEquivalentTo(propertyNode);	  return    objType.isEquivalentTo(prototype)||    type.isEquivalentTo(propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	6	None	replace
838	[BUG]  [BUGGY]  return  type.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  type.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  type.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(propertyNode);	  return    objType.isEquivalentTo(prototype)||    type.isEquivalentTo(propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	6	None	replace
839	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(inferred,  propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(inferred,  propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(inferred,  propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(inferred,    propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	134	None	replace
840	[BUG]  [BUGGY]  if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(inferred,  propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(inferred,  propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(inferred,  propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(inferred,    propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	134	None	replace
841	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  type.getEquivalentTo(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  type.getEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  type.getEquivalentTo(prototype))  {  return  false;  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.getEquivalentTo(prototype))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
842	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.hasProperty(name))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(prototype)||  objType.hasProperty(name))  {  return  false;  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.getEquivalentTo(prototype))    {    return    false;    }    	compilable	timeout	124	1	replace
843	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.hasProperty(name))  {  return  false;  }  timeout  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.hasProperty(name))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.hasProperty(name))  {  return  false;  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.getEquivalentTo(prototype))    {    return    false;    }    	compilable	timeout	124	1	replace
844	[BUG]  [BUGGY]  if(objType.isPrototype()  ||  objType.equals(prototype))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype()  ||  objType.equals(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype()  ||  objType.equals(prototype))  {  return  true;  }	  if(objType.isPrototype()    ||    objType.isEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
845	[BUG]  [BUGGY]  if(objType.isPrototype()  ||  objType.isEquivalentTo(PROTOTYPE))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype()  ||  objType.isEquivalentTo(PROTOTYPE))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype()  ||  objType.isEquivalentTo(PROTOTYPE))  {  return  true;  }	  if(objType.isPrototype()    ||    objType.isEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
846	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  type.getEquivalentTo(prototype))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  type.getEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  type.getEquivalentTo(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.getEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
847	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  true;  }  else  if(objType.getEquivalentTo(prototype))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  true;  }  else  if(objType.getEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))  {  return  true;  }  else  if(objType.getEquivalentTo(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.getEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
848	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.hasEquivalentTo(prototype))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.hasEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.hasEquivalentTo(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.hasEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	173	None	replace
849	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.hasEquivalentTo(propertyNode))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.hasEquivalentTo(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.hasEquivalentTo(propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.hasEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	173	None	replace
850	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode))  {  return  true;  }  else  if(objType.hasEquivalentTo(propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode))  {  return  true;  }  else  if(objType.hasEquivalentTo(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode))  {  return  true;  }  else  if(objType.hasEquivalentTo(propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.hasEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	173	None	replace
851	[BUG]  [BUGGY]  return(objType.isEquivalentTo(name)||  objType.isEquivalentTo(inferred,  propertyNode));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(name)||  objType.isEquivalentTo(inferred,  propertyNode));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(name)||  objType.isEquivalentTo(inferred,  propertyNode));	  return(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(inferred,    propertyNode));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	135	None	replace
852	[BUG]  [BUGGY]  if(objType  ==  null)  {  if(objType.isEquivalentTo(prototype))  {  return  true;  }  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType  ==  null)  {  if(objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType  ==  null)  {  if(objType.isEquivalentTo(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))    {    return    true;    	non-compiled	[CE]  ';'  expected	105	None	replace
853	[BUG]  [BUGGY]  if(objType.isConstructor())  {  if(objType.isEquivalentTo(prototype))  {  return  true;  }  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor())  {  if(objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor())  {  if(objType.isEquivalentTo(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))    {    return    true;    	non-compiled	[CE]  ';'  expected	105	None	replace
854	[BUG]  [BUGGY]  if(objType  ==  null)  {  if(objType.isEquivalentTo(prototype))  {  return  false;  }  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType  ==  null)  {  if(objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType  ==  null)  {  if(objType.isEquivalentTo(prototype))  {  return  false;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))    {    return    true;    	non-compiled	[CE]  ';'  expected	105	None	replace
855	[BUG]  [BUGGY]  if(objType.isInterface())  {  if(objType.isEquivalentTo(prototype))  {  return  true;  }  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface())  {  if(objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface())  {  if(objType.isEquivalentTo(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))    {    return    true;    	non-compiled	[CE]  ';'  expected	105	None	replace
856	[BUG]  [BUGGY]  if(objType.isPrototype()  ||  objType.isEquivalentTo(inferred))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype()  ||  objType.isEquivalentTo(inferred))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype()  ||  objType.isEquivalentTo(inferred))  {  return  false;  }	  if(objType.isPrototype()    ||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
857	[BUG]  [BUGGY]  if(objType.isPrototype()  ||  objType.equals(propertyNode))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype()  ||  objType.equals(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype()  ||  objType.equals(propertyNode))  {  return  false;  }	  if(objType.isPrototype()    ||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
858	[BUG]  [BUGGY]  if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(name)||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	25	None	replace
859	[BUG]  [BUGGY]  return(type.isEquivalentTo(prototype)||  type.isEquivalentTo(propertyNode));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(type.isEquivalentTo(prototype)||  type.isEquivalentTo(propertyNode));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(type.isEquivalentTo(prototype)||  type.isEquivalentTo(propertyNode));	  return(objType.isEquivalentTo(prototype)||    type.isEquivalentTo(propertyNode));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	67	None	replace
860	[BUG]  [BUGGY]  return(type.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(propertyNode));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(type.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(propertyNode));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(type.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(propertyNode));	  return(objType.isEquivalentTo(prototype)||    type.isEquivalentTo(propertyNode));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	67	None	replace
861	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  ||!objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType!=  null  ||!objType.isEquivalentTo(prototype))  {  return  true;  }	  if(!objType.isEquivalentTo(prototype))    {    return    true;    }    timeout    	compilable	timeout	92	1	replace
862	[BUG]  [BUGGY]  if(objType!=  null  ||!objType.isEquivalentTo(prototype))  {  return  true;  }  timeout  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  ||!objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=  null  ||!objType.isEquivalentTo(prototype))  {  return  true;  }	  if(!objType.isEquivalentTo(prototype))    {    return    true;    }    timeout    	compilable	timeout	92	1	replace
863	[BUG]  [BUGGY]  parent!=  null  &&!objType.isEquivalentTo(propertyNode))  {  return  true;  }  [CE]  not  a  statement  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent!=  null  &&!objType.isEquivalentTo(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent!=  null  &&!objType.isEquivalentTo(propertyNode))  {  return  true;  }	  if(!objType.isEquivalentTo(prototype))    {    return    true;    }    timeout    	non-compiled	[CE]  not  a  statement	92	None	replace
864	[BUG]  [BUGGY]  parent  ==  null  &&!objType.isEquivalentTo(propertyNode))  {  return  true;  }  [CE]  not  a  statement  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent  ==  null  &&!objType.isEquivalentTo(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent  ==  null  &&!objType.isEquivalentTo(propertyNode))  {  return  true;  }	  if(!objType.isEquivalentTo(prototype))    {    return    true;    }    timeout    	non-compiled	[CE]  not  a  statement	92	None	replace
865	[BUG]  [BUGGY]  if(objType!=  null  ||!objType.isEquivalentTo(propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  ||!objType.isEquivalentTo(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=  null  ||!objType.isEquivalentTo(propertyNode))  {  return  true;  }	  if(!objType.isEquivalentTo(prototype))    {    return    true;    }    timeout    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	92	None	replace
866	[BUG]  [BUGGY]  parent  ==  null  &&!objType.isEquivalentTo(propertyNode))  {  return  true;  [CE]  not  a  statement  [FE]                                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent  ==  null  &&!objType.isEquivalentTo(propertyNode))  {  return  true;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent  ==  null  &&!objType.isEquivalentTo(propertyNode))  {  return  true;	  if(!objType.isEquivalentTo(prototype))    {    return    true;    }    timeout    	non-compiled	[CE]  not  a  statement	92	None	replace
867	[BUG]  [BUGGY]  parent!=  null  &&!objType.isEquivalentTo(prototype))  {  return  true;  }  [CE]  not  a  statement  [FE]                                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent!=  null  &&!objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent!=  null  &&!objType.isEquivalentTo(prototype))  {  return  true;  }	  if(!objType.isEquivalentTo(prototype))    {    return    true;    }    timeout    	non-compiled	[CE]  not  a  statement	92	None	replace
868	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(type))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isInterface()  ||  objType.isEquivalentTo(type))  {  return  false;  }	  if(objType.isEquivalentTo(type))    {    return    false;    }    timeout    	compilable	timeout	101	1	replace
869	[BUG]  [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(type))  {  return  false;  }  timeout  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(type))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface()  ||  objType.isEquivalentTo(type))  {  return  false;  }	  if(objType.isEquivalentTo(type))    {    return    false;    }    timeout    	compilable	timeout	101	1	replace
870	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(inferred))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(inferred))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  ||  objType.isEquivalentTo(inferred))  {  return  false;  }	  if(objType.isEquivalentTo(type))    {    return    false;    }    timeout    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	101	None	replace
871	[BUG]  [BUGGY]  if(objType!=  null  ||  objType.isEquivalentTo(name))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  ||  objType.isEquivalentTo(name))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=  null  ||  objType.isEquivalentTo(name))  {  return  false;  }	  if(objType!=    null    ||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	131	None	replace
872	[BUG]  [BUGGY]  if(objType.isEquivalentTo(inferred,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(inferred,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(inferred,  propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode,    inferred))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	96	None	replace
873	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface()  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isInterface()  &&  objType.isEquivalentTo(prototype))  {  return  false;  }	  if(objType.isInterface()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	compilable	timeout	130	1	replace
874	[BUG]  [BUGGY]  if(objType.isInterface()  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  timeout  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface()  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface()  &&  objType.isEquivalentTo(prototype))  {  return  false;  }	  if(objType.isInterface()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	compilable	timeout	130	1	replace
875	[BUG]  [BUGGY]  if(objType.isEquivalentTo(name,  inferred))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(name,  inferred))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(name,  inferred))  {  return  true;  }	  if(objType.isEquivalentTo(name))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	141	None	replace
876	[BUG]  [BUGGY]  if(objType.isEquivalentTo(name,  propertyNode)&&  inferred)  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(name,  propertyNode)&&  inferred)  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(name,  propertyNode)&&  inferred)  {  return  false;  }	  if(objType.isEquivalentTo(name,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	97	None	replace
877	[BUG]  [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(name,  inferred);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(name,  inferred);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType  ==  null)?  false  :  objType.isEquivalentTo(name,  inferred);	  return(objType    ==    null)?    false    :    objType.isEquivalentTo(name);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	133	None	replace
878	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(type,  inferred))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(type,  inferred))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(type,  inferred))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(type,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	38	None	replace
879	[BUG]  [BUGGY]  if(objType.isEquivalentTo(value)||  objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }  [CE]  cannot  find  symbol  value  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(value)||  objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(value)||  objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(type,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  value	38	None	replace
880	[BUG]  [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(value,  propertyNode,  inferred);  [CE]  cannot  find  symbol  value  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(value,  propertyNode,  inferred);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType  ==  null)?  false  :  objType.isEquivalentTo(value,  propertyNode,  inferred);	  return(objType    ==    null)?    false    :    objType.isEquivalentTo(propertyNode,    inferred);    	non-compiled	[CE]  cannot  find  symbol  value	45	None	replace
881	[BUG]  [BUGGY]  return  defineProperty(name,  objType,  propertyNode,  inferred);  [CE]  no  suitable  method  found  for  defineProperty(String,ObjectType,Node,boolean)  [FE]                                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  defineProperty(name,  objType,  propertyNode,  inferred);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  defineProperty(name,  objType,  propertyNode,  inferred);	          return    defineProperty(name,    objType,    inferred,    propertyNode);    	non-compiled	[CE]  no  suitable  method  found  for  defineProperty(String,ObjectType,Node,boolean)	59	None	replace
882	[BUG]  [BUGGY]  return  defineProperty(name,  objType,  false,  inferred,  propertyNode);  [CE]  no  suitable  method  found  for  defineProperty(String,ObjectType,boolean,boolean,Node)  [FE]                                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  defineProperty(name,  objType,  false,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  defineProperty(name,  objType,  false,  inferred,  propertyNode);	          return    defineProperty(name,    objType,    inferred,    propertyNode);    	non-compiled	[CE]  no  suitable  method  found  for  defineProperty(String,ObjectType,boolean,boolean,Node)	59	None	replace
883	[BUG]  [BUGGY]  return  defineProperty(name,  objType,  inferred,  propertyNode,  type);  [CE]  no  suitable  method  found  for  defineProperty(String,ObjectType,boolean,Node,JSType)  [FE]                                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  defineProperty(name,  objType,  inferred,  propertyNode,  type);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  defineProperty(name,  objType,  inferred,  propertyNode,  type);	          return    defineProperty(name,    objType,    inferred,    propertyNode);    	non-compiled	[CE]  no  suitable  method  found  for  defineProperty(String,ObjectType,boolean,Node,JSType)	59	None	replace
884	[BUG]  [BUGGY]  return  defineProperty(name,  objType,  inferred,  propertyNode  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  defineProperty(name,  objType,  inferred,  propertyNode  +  1);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  defineProperty(name,  objType,  inferred,  propertyNode  +  1);	          return    defineProperty(name,    objType,    inferred,    propertyNode);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	59	None	replace
885	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null)  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType!=  null)  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    	compilable	timeout	13	1	replace
886	[BUG]  [BUGGY]  if(objType!=  null)  {  return  false;  }  timeout  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null)  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=  null)  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    	compilable	timeout	13	1	replace
887	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface())  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isInterface())  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    	compilable	timeout	13	1	replace
888	[BUG]  [BUGGY]  if(objType.isInterface())  {  return  false;  }  timeout  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface())  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface())  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    	compilable	timeout	13	1	replace
889	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType  ==  null)  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType  ==  null)  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    	compilable	timeout	13	1	replace
890	[BUG]  [BUGGY]  if(objType  ==  null)  {  return  false;  }  timeout  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType  ==  null)  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType  ==  null)  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    	compilable	timeout	13	1	replace
891	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor())  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isConstructor())  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    	compilable	timeout	13	1	replace
892	[BUG]  [BUGGY]  if(objType.isConstructor())  {  return  false;  }  timeout  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor())  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor())  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    	compilable	timeout	13	1	replace
893	[BUG]  [BUGGY]  if(objType.isEquivalentTo(value)&&  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  cannot  find  symbol  value  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(value)&&  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(value)&&  objType.isEquivalentTo(propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode)&&    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  value	37	None	replace
894	[BUG]  [BUGGY]  if(objType.isConstructor()  &&  objType.isEquivalentTo(propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  &&  objType.isEquivalentTo(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  &&  objType.isEquivalentTo(propertyNode))  {  return  true;  }	  if(objType.isConstructor()    ||    objType.isEquivalentTo(propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	138	None	replace
895	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(inferred,  propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(inferred,  propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  ||  objType.isEquivalentTo(inferred,  propertyNode))  {  return  true;  }	  if(objType.isConstructor()    ||    objType.isEquivalentTo(propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	138	None	replace
896	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(value,  propertyNode))  {  return  true;  }  [CE]  cannot  find  symbol  value  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(value,  propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  ||  objType.isEquivalentTo(value,  propertyNode))  {  return  true;  }	  if(objType.isConstructor()    ||    objType.isEquivalentTo(propertyNode))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  value	138	None	replace
897	[BUG]  [BUGGY]  ObjectType  objType  =  objType.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  [CE]  variable  objType  is  already  defined  in  method  defineProperty(String,JSType,boolean,Node)  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  ObjectType  objType  =  objType.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	ObjectType  objType  =  objType.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);	  parent.defineProperty(name,    objType,    inferred,    propertyNode);    this.setPrototypeBasedOn(objType);    	non-compiled	[CE]  variable  objType  is  already  defined  in  method  defineProperty(String,JSType,boolean,Node)	176	None	replace
898	[BUG]  [BUGGY]  if(objType!=  null)  {  if(objType.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null)  {  if(objType.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=  null)  {  if(objType.isEquivalentTo(propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    If(objType.isEquivalentTo(prototype))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	35	None	replace
899	[BUG]  [BUGGY]  if(objType!=  null)  {  if(objType.isEmpty())  {  return  false;  }  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null)  {  if(objType.isEmpty())  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=  null)  {  if(objType.isEmpty())  {  return  false;  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    If(objType.isEquivalentTo(prototype))    {    return    false;    }    	non-compiled	[CE]  ';'  expected	35	None	replace
900	[BUG]  [BUGGY]  if(objType.isPrototype()  ||  objType.equals(propertyNode))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype()  ||  objType.equals(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype()  ||  objType.equals(propertyNode))  {  return  true;  }	  if(objType.isPrototype()    ||    objType.isEquivalentTo(propertyNode))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
901	[BUG]  [BUGGY]  if(objType.isPrototype()  ||  objType.isEquivalentTo(inferred))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype()  ||  objType.isEquivalentTo(inferred))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype()  ||  objType.isEquivalentTo(inferred))  {  return  true;  }	  if(objType.isPrototype()    ||    objType.isEquivalentTo(propertyNode))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
902	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isConstructor()  ||  objType.getEquivalentTo(prototype))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isConstructor()  ||  objType.getEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isConstructor()  ||  objType.getEquivalentTo(prototype))  {  return  true;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	136	None	add
903	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isConstructor()  ||  objType.isequivalentTo(prototype))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isConstructor()  ||  objType.isequivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isConstructor()  ||  objType.isequivalentTo(prototype))  {  return  true;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	136	None	add
904	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.getConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.getConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.getConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	136	None	add
905	[BUG]  [BUGGY]  parent!=  null  &&  type.isEquivalentTo(prototype))  {  return  false;  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent!=  null  &&  type.isEquivalentTo(prototype))  {  return  false;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent!=  null  &&  type.isEquivalentTo(prototype))  {  return  false;	  parent!=    null    &&    objType.isEquivalentTo(prototype))    {    return    false;    	non-compiled	[CE]  not  a  statement	66	None	replace
906	[BUG]  [BUGGY]  parent!=  null  &&  parent.isPrototype(objType))  {  return  false;  [CE]  not  a  statement  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent!=  null  &&  parent.isPrototype(objType))  {  return  false;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent!=  null  &&  parent.isPrototype(objType))  {  return  false;	  parent!=    null    &&    objType.isEquivalentTo(prototype))    {    return    false;    	non-compiled	[CE]  not  a  statement	66	None	replace
907	[BUG]  [BUGGY]  parent!=  null  &&  objType.isEquivalentTo(parent))  {  return  false;  [CE]  not  a  statement  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent!=  null  &&  objType.isEquivalentTo(parent))  {  return  false;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent!=  null  &&  objType.isEquivalentTo(parent))  {  return  false;	  parent!=    null    &&    objType.isEquivalentTo(prototype))    {    return    false;    	non-compiled	[CE]  not  a  statement	66	None	replace
908	[BUG]  [BUGGY]  parent!=  null  &&  type.isEquivalentTo(prototype))  {  return  true;  [CE]  not  a  statement  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent!=  null  &&  type.isEquivalentTo(prototype))  {  return  true;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent!=  null  &&  type.isEquivalentTo(prototype))  {  return  true;	  parent!=    null    &&    objType.isEquivalentTo(prototype))    {    return    true;    	non-compiled	[CE]  not  a  statement	20	None	replace
909	[BUG]  [BUGGY]  parent!=  null  &&  parent.isPrototype(objType))  {  return  true;  [CE]  not  a  statement  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent!=  null  &&  parent.isPrototype(objType))  {  return  true;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent!=  null  &&  parent.isPrototype(objType))  {  return  true;	  parent!=    null    &&    objType.isEquivalentTo(prototype))    {    return    true;    	non-compiled	[CE]  not  a  statement	20	None	replace
910	[BUG]  [BUGGY]  parent!=  null  &&  objType.isEquivalentTo(parent))  {  return  true;  [CE]  not  a  statement  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent!=  null  &&  objType.isEquivalentTo(parent))  {  return  true;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent!=  null  &&  objType.isEquivalentTo(parent))  {  return  true;	  parent!=    null    &&    objType.isEquivalentTo(prototype))    {    return    true;    	non-compiled	[CE]  not  a  statement	20	None	replace
911	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(type))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isConstructor()  ||  objType.isEquivalentTo(type))  {  return  true;  }	  if(objType.isEquivalentTo(type))    {    return    true;    }    timeout    	compilable	timeout	143	1	replace
912	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(type))  {  return  true;  }  timeout  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(type))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  ||  objType.isEquivalentTo(type))  {  return  true;  }	  if(objType.isEquivalentTo(type))    {    return    true;    }    timeout    	compilable	timeout	143	1	replace
913	[BUG]  [BUGGY]  if(objType.isEquivalentTo(name))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(name))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(name))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  return    false;    if(objType.isEquivalentTo(propertyNode))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	14	None	replace
914	[BUG]  [BUGGY]  if(type.isEquivalentTo(prototype)||  type.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(type.isEquivalentTo(prototype)||  type.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(type.isEquivalentTo(prototype)||  type.isEquivalentTo(propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(prototype)||    type.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	24	None	replace
915	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(type);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	return(objType  ==  null)?  false  :  objType.isEquivalentTo(type);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(prototype);    timeout    	compilable	timeout	168	1	replace
916	[BUG]  [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(type);  timeout  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(type);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType  ==  null)?  false  :  objType.isEquivalentTo(type);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(prototype);    timeout    	compilable	timeout	168	1	replace
917	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(type);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	return(objType!=  null)?  false  :  objType.isEquivalentTo(type);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(prototype);    timeout    	compilable	timeout	168	1	replace
918	[BUG]  [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(type);  timeout  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(type);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=  null)?  false  :  objType.isEquivalentTo(type);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(prototype);    timeout    	compilable	timeout	168	1	replace
919	[BUG]  [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(name);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(name);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=  null)?  false  :  objType.isEquivalentTo(name);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(prototype);    timeout    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	168	None	replace
920	[BUG]  [BUGGY]  return(objType  ==  null)?  false  :  objType.isPrototypeBasedOn(prototype);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType  ==  null)?  false  :  objType.isPrototypeBasedOn(prototype);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType  ==  null)?  false  :  objType.isPrototypeBasedOn(prototype);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(prototype);    timeout    	non-compiled	[CE]  cannot  find  symbol	168	None	replace
921	[BUG]  [BUGGY]  if(objType!=  null  ||  objType.isEmpty())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  ||  objType.isEmpty())  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=  null  ||  objType.isEmpty())  {  return  false;  }	  if(objType!=    null    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
922	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  ||  objType.isEquivalentTo(type))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType!=  null  ||  objType.isEquivalentTo(type))  {  return  false;  }	  if(objType!=    null    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	compilable	timeout	127	1	replace
923	[BUG]  [BUGGY]  if(objType!=  null  ||  objType.isEquivalentTo(type))  {  return  false;  }  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  ||  objType.isEquivalentTo(type))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=  null  ||  objType.isEquivalentTo(type))  {  return  false;  }	  if(objType!=    null    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	compilable	timeout	127	1	replace
924	[BUG]  [BUGGY]  if(objType.isEquivalentTo(name,  inferred))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(name,  inferred))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(name,  inferred))  {  return  false;  }	  if(objType.isEquivalentTo(name))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	121	None	replace
925	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isInterface())  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isConstructor()  ||  objType.isInterface())  {  return  true;  }	  if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    true;    }    timeout    	compilable	timeout	137	1	replace
926	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isInterface())  {  return  true;  }  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isInterface())  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  ||  objType.isInterface())  {  return  true;  }	  if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    true;    }    timeout    	compilable	timeout	137	1	replace
927	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(value))  {  return  true;  }  [CE]  cannot  find  symbol  value  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(value))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  ||  objType.isEquivalentTo(value))  {  return  true;  }	  if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    true;    }    timeout    	non-compiled	[CE]  cannot  find  symbol  value	137	None	replace
928	[BUG]  [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  if(objType.isequivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  [CE]  cannot  find  symbol  [FE]                                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  if(objType.isequivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	                if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    false;    }    if(objType.isequivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	57	None	add
929	[BUG]  [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  if(objType.getEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  [CE]  cannot  find  symbol  [FE]                                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  if(objType.getEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	                if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    false;    }    if(objType.getEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	57	None	add
930	[BUG]  [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  if(objType.equivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  [CE]  cannot  find  symbol  [FE]                                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  if(objType.equivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	                if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    false;    }    if(objType.equivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	57	None	add
931	[BUG]  [BUGGY]  this.setPrototypeOfThis(objType);  return  false;  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  this.setPrototypeOfThis(objType);  return  false;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	this.setPrototypeOfThis(objType);  return  false;	          this.setPrototypeBasedOn(objType);    return    false;    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
932	[BUG]  [BUGGY]  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  if(objType!=  null)  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  else  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  [CE]  unreachable  statement  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  if(objType!=  null)  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  else  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return    super.defineProperty(name,    objType,    inferred,    propertyNode);    if(objType!=  null)  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  else  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }	  timeout    	non-compiled	[CE]  unreachable  statement	113	None	add
933	[BUG]  [BUGGY]  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  if(objType.isEquivalentTo(propertyNode))  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  else  {  return  super.defineProperty(name,  objType,  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  if(objType.isEquivalentTo(propertyNode))  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  else  {  return  super.defineProperty(name,  objType,  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return    super.defineProperty(name,    objType,    inferred,    propertyNode);    if(objType.isEquivalentTo(propertyNode))  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  else  {  return  super.defineProperty(name,  objType,	  timeout    	non-compiled	[CE]  illegal  start  of  expression	113	None	add
934	[BUG]  [BUGGY]  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  if(objType.isEquivalentTo(propertyNode))  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  else  {  return  super.defineProperty(name,  objType,  inferred,  property  [CE]  ')'  expected  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  if(objType.isEquivalentTo(propertyNode))  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  else  {  return  super.defineProperty(name,  objType,  inferred,  property  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return    super.defineProperty(name,    objType,    inferred,    propertyNode);    if(objType.isEquivalentTo(propertyNode))  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  else  {  return  super.defineProperty(name,  objType,  inferred,  property	  timeout    	non-compiled	[CE]  ')'  expected	113	None	add
935	[BUG]  [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(name,  inferred,  propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(name,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType  ==  null)?  false  :  objType.isEquivalentTo(name,  inferred,  propertyNode);	  return(objType    ==    null)?    false    :    objType.isEquivalentTo(name,    propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	132	None	replace
936	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type))  {  return  true;  }  if(objType.isequivalentTo(type))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type))  {  return  true;  }  if(objType.isequivalentTo(type))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type))    {    return    true;    }    if(objType.isequivalentTo(type))  {  return  true;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	142	None	add
937	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type))  {  return  true;  }  if(objType.getEquivalentTo(type))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type))  {  return  true;  }  if(objType.getEquivalentTo(type))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type))    {    return    true;    }    if(objType.getEquivalentTo(type))  {  return  true;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	142	None	add
938	[BUG]  [BUGGY]  objType  =  objectType.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  objectType  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objectType.restrictByNotNullOrUndefined();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType  =  objectType.restrictByNotNullOrUndefined();	  objType    =    objType.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol  objectType	155	None	replace
939	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.equals(type))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.equals(type))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  objType.equals(type))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.equals(propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	151	None	replace
940	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.equals(name))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.equals(name))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  objType.equals(name))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.equals(propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	151	None	replace
941	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(type.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(type.isEquivalentTo(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(ObjType.isEquivalentTo(prototype))    {    return    true;    }    	compilable	timeout	107	1	replace
942	[BUG]  [BUGGY]  if(type.isEquivalentTo(prototype))  {  return  true;  }  timeout  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(type.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(type.isEquivalentTo(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(ObjType.isEquivalentTo(prototype))    {    return    true;    }    	compilable	timeout	107	1	replace
943	[BUG]  [BUGGY]  if(objType.isNone())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isNone())  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isNone())  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(ObjType.isEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
944	[BUG]  [BUGGY]  if(objType.isFunctionPrototype())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isFunctionPrototype())  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isFunctionPrototype())  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(ObjType.isEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
945	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEQUIvalentTo(prototype))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEQUIvalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.isEQUIvalentTo(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEQUIvalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
946	[BUG]  [BUGGY]  if(objType.isEquivalentTo(inferred,  propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(inferred,  propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(inferred,  propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode,    inferred))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	81	None	replace
947	[BUG]  [BUGGY]  if(objType!=  null  &&!objType.isEquivalentTo(name,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  &&!objType.isEquivalentTo(name,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=  null  &&!objType.isEquivalentTo(name,  propertyNode))  {  return  false;  }	  if(objType!=    null    &&!objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	125	None	replace
948	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  if(objType.getPrototype().isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  if(objType.getPrototype().isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    if(objType.getPrototype().isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	47	None	add
949	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  if(objType.isequivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  if(objType.isequivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    if(objType.isequivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	47	None	add
950	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  if(objType.isInferredTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  if(objType.isInferredTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    if(objType.isInferredTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	47	None	add
951	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  if(objType.equivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  if(objType.equivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    if(objType.equivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	47	None	add
952	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(prototype))  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(prototype))    {    return    false;    }    	compilable	timeout	162	1	replace
953	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(prototype))  {  return  false;  }  timeout  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(prototype))  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(prototype))    {    return    false;    }    	compilable	timeout	162	1	replace
954	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isInferred(propertyNode))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isInferred(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.isInferred(propertyNode))  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(prototype))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
955	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInstanceType()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isInstanceType()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(prototype))    {    return    false;    }    	compilable	timeout	162	1	replace
956	[BUG]  [BUGGY]  if(objType.isInstanceType()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  timeout  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInstanceType()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInstanceType()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(prototype))    {    return    false;    }    	compilable	timeout	162	1	replace
957	[BUG]  [BUGGY]  timeout  [FE]            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType  ==  null)  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType  ==  null)  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }	  return    false;    if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    return    true;    }    	compilable	timeout	160	1	replace
958	[BUG]  [BUGGY]  if(objType  ==  null)  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  timeout  [FE]            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType  ==  null)  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType  ==  null)  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }	  return    false;    if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    return    true;    }    	compilable	timeout	160	1	replace
959	[BUG]  [BUGGY]  if(objType.isPrototype())  {  this.setPrototypeBasedOn(objType);  return  true;  }  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype())  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype())  {  this.setPrototypeBasedOn(objType);  return  true;  }	          if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    true;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
960	[BUG]  [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(propertyNode,  propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(propertyNode,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType  ==  null)?  false  :  objType.isEquivalentTo(propertyNode,  propertyNode);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(propertyNode,    objType);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	165	None	replace
961	[BUG]  [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(type,  propertyNode,  objType);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(type,  propertyNode,  objType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=  null)?  false  :  objType.isEquivalentTo(type,  propertyNode,  objType);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(propertyNode,    objType);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	165	None	replace
962	[BUG]  [BUGGY]  result  =  objType.defineProperty(name,  type,  inferred,  propertyNode);  [CE]  cannot  find  symbol  result  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  result  =  objType.defineProperty(name,  type,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	result  =  objType.defineProperty(name,  type,  inferred,  propertyNode);	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	non-compiled	[CE]  cannot  find  symbol  result	31	None	replace
963	[BUG]  [BUGGY]  if(objType.isInterface())  {  if(objType.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface())  {  if(objType.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface())  {  if(objType.isEquivalentTo(propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	non-compiled	[CE]  ';'  expected	31	None	replace
964	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(propertyNode,  propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(propertyNode,  propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(propertyNode,  propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(propertyNode,    type))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	89	None	replace
965	[BUG]  [BUGGY]  if(objType.isEquivalentTo(inferred))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(inferred))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(inferred))  {  return  false;  }	  if(objType.isEquivalentTo(value))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	122	None	replace
966	[BUG]  [BUGGY]  if(objType.isEquivalentTo(baseType))  {  return  false;  }  [CE]  cannot  find  symbol  baseType  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(baseType))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(baseType))  {  return  false;  }	  if(objType.isEquivalentTo(value))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  baseType	122	None	replace
967	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  &&  objType.isEquivalentTo(type))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType!=  null  &&  objType.isEquivalentTo(type))  {  return  false;  }	  if(objType!=    null    &&    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	compilable	timeout	175	1	replace
968	[BUG]  [BUGGY]  if(objType!=  null  &&  objType.isEquivalentTo(type))  {  return  false;  }  timeout  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  &&  objType.isEquivalentTo(type))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=  null  &&  objType.isEquivalentTo(type))  {  return  false;  }	  if(objType!=    null    &&    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	compilable	timeout	175	1	replace
969	[BUG]  [BUGGY]  objType  =  objType.getReferenceName();  [CE]  incompatible  types  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.getReferenceName();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType  =  objType.getReferenceName();	  objType    =    objType.getImplicitPrototype();    timeout    	non-compiled	[CE]  incompatible  types	159	None	replace
970	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isConstructor()  ||  objType.getEquivalentTo(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isConstructor()  ||  objType.getEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isConstructor()  ||  objType.getEquivalentTo(prototype))  {  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	61	None	add
971	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.getConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.getConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.getConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	61	None	add
972	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isConstructor()  ||  objType.isequivalentTo(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isConstructor()  ||  objType.isequivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isConstructor()  ||  objType.isequivalentTo(prototype))  {  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	61	None	add
973	[BUG]  [BUGGY]  return  false;  if(objType.isEquivalentTo(prototype)||  type.isEquivalentTo(inferred))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  false;  if(objType.isEquivalentTo(prototype)||  type.isEquivalentTo(inferred))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  false;  if(objType.isEquivalentTo(prototype)||  type.isEquivalentTo(inferred))  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(objectType))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	118	None	replace
974	[BUG]  [BUGGY]  return  false;  if(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  false;  if(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  false;  if(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(propertyNode))  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(objectType))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	118	None	replace
975	[BUG]  [BUGGY]  if(objType.isConstructor()  &&  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  &&  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  &&  objType.isEquivalentTo(propertyNode))  {  return  false;  }	  if(objType.isConstructor()    ||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	65	None	replace
976	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(inferred,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(inferred,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  ||  objType.isEquivalentTo(inferred,  propertyNode))  {  return  false;  }	  if(objType.isConstructor()    ||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	65	None	replace
977	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(value,  propertyNode))  {  return  false;  }  [CE]  cannot  find  symbol  value  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(value,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  ||  objType.isEquivalentTo(value,  propertyNode))  {  return  false;  }	  if(objType.isConstructor()    ||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  value	65	None	replace
978	[BUG]  [BUGGY]  if(objType!=  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType!=  null  ||  objType.getEquivalentTo(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType!=  null  ||  objType.getEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=    null    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType!=  null  ||  objType.getEquivalentTo(prototype))  {  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	126	None	add
979	[BUG]  [BUGGY]  if(objType!=  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType!=  null  ||  objType.isEquivalentTo(Prototype))  {  return  false;  }  [CE]  cannot  find  symbol  Prototype  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType!=  null  ||  objType.isEquivalentTo(Prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=    null    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType!=  null  ||  objType.isEquivalentTo(Prototype))  {  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol  Prototype	126	None	add
980	[BUG]  [BUGGY]  timeout  [FE]            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType!=  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    timeout    	compilable	timeout	48	1	replace
981	[BUG]  [BUGGY]  if(objType!=  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  timeout  [FE]            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    timeout    	compilable	timeout	48	1	replace
982	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.equivalentTo(propertyNode))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.equivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.equivalentTo(propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.equivalentTo(prototype))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	171	None	replace
983	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isNone())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isNone())  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  ||  objType.isNone())  {  return  false;  }	  if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
984	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(value))  {  return  false;  }  [CE]  cannot  find  symbol  value  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(value))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  ||  objType.isEquivalentTo(value))  {  return  false;  }	  if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	non-compiled	[CE]  cannot  find  symbol  value	62	None	replace
985	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType  ==  null  ||!objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType  ==  null  ||!objType.isEquivalentTo(prototype))  {  return  false;  }	  if(!objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	compilable	timeout	111	1	replace
986	[BUG]  [BUGGY]  if(objType  ==  null  ||!objType.isEquivalentTo(prototype))  {  return  false;  }  timeout  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType  ==  null  ||!objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType  ==  null  ||!objType.isEquivalentTo(prototype))  {  return  false;  }	  if(!objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	compilable	timeout	111	1	replace
987	[BUG]  [BUGGY]  if(objType  ==  null  ||!objType.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType  ==  null  ||!objType.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType  ==  null  ||!objType.isEquivalentTo(propertyNode))  {  return  false;  }	  if(!objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	111	None	replace
988	[BUG]  [BUGGY]  if(objType.isInterface()  ||!objType.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface()  ||!objType.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface()  ||!objType.isEquivalentTo(propertyNode))  {  return  false;  }	  if(!objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	111	None	replace
989	[BUG]  [BUGGY]  timeout  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface()  ||!objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isInterface()  ||!objType.isEquivalentTo(prototype))  {  return  false;  }	  if(!objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	compilable	timeout	111	1	replace
990	[BUG]  [BUGGY]  if(objType.isInterface()  ||!objType.isEquivalentTo(prototype))  {  return  false;  }  timeout  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface()  ||!objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface()  ||!objType.isEquivalentTo(prototype))  {  return  false;  }	  if(!objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	compilable	timeout	111	1	replace
991	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type,  name,  propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type,  name,  propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type,  name,  propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(name,    propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	84	None	replace
992	[BUG]  [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(name,  propertyNode,  type);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(name,  propertyNode,  type);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType  ==  null)?  false  :  objType.isEquivalentTo(name,  propertyNode,  type);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(propertyNode,    type);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	43	None	replace
993	[BUG]  [BUGGY]  return(type!=  null)?  false  :  objType.isEquivalentTo(propertyNode,  objType);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(type!=  null)?  false  :  objType.isEquivalentTo(propertyNode,  objType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(type!=  null)?  false  :  objType.isEquivalentTo(propertyNode,  objType);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(propertyNode,    type);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	43	None	replace
994	[BUG]  [BUGGY]  if(objType.isEquivalentTo(value)||  objType.isEquivalentTo(type))  {  return  false;  }  [CE]  cannot  find  symbol  value  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(value)||  objType.isEquivalentTo(type))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(value)||  objType.isEquivalentTo(type))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(type))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  value	169	None	replace
995	[BUG]  [BUGGY]  if(objType.isEquivalentTo(value)||  objType.isEquivalentTo(type))  {  return  true;  }  [CE]  cannot  find  symbol  value  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(value)||  objType.isEquivalentTo(type))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(value)||  objType.isEquivalentTo(type))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(type))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  value	152	None	replace
996	[BUG]  [BUGGY]  type.defineProperty(name,  objType,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  return  true;  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  type.defineProperty(name,  objType,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  return  true;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	type.defineProperty(name,  objType,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  return  true;	  parent.defineProperty(name,    type,    inferred,    propertyNode);    this.setPrototypeBasedOn(objType);    return    true;    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
997	[BUG]  [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(prototype,  inferred,  propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(prototype,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType  ==  null)?  false  :  objType.isEquivalentTo(prototype,  inferred,  propertyNode);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(prototype,    propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	46	None	replace
998	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(inferred))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(inferred))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(inferred))  {  return  true;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(valueNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	170	None	replace
999	[BUG]  [BUGGY]  if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(valueNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(valueNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(valueNode))  {  return  true;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(valueNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	170	None	replace
1000	[BUG]  [BUGGY]  return  false;  if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(baseType))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  false;  if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(baseType))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  false;  if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(baseType))  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(baseType)||    objType.isEquivalentTo(baseType))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	117	None	replace
1001	[BUG]  [BUGGY]  return  false;  if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(baseType))  {  return  false;  }  [CE]  cannot  find  symbol  baseType  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  false;  if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(baseType))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  false;  if(objType.isEquivalentTo(type)||  objType.isEquivalentTo(baseType))  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(baseType)||    objType.isEquivalentTo(baseType))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  baseType	117	None	replace
1002	[BUG]  [BUGGY]  return  false;  if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(value))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  false;  if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(value))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  false;  if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(value))  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(baseType)||    objType.isEquivalentTo(baseType))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	117	None	replace
1003	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  false;  }  if(!objType.isEQUIvalentTo(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  false;  }  if(!objType.isEQUIvalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(prototype))    {    return    false;    }    if(!objType.isEQUIvalentTo(prototype))  {  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	110	None	add
1004	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  false;  }  if(!objType.equivalentTo(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  false;  }  if(!objType.equivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(prototype))    {    return    false;    }    if(!objType.equivalentTo(prototype))  {  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	110	None	add
1005	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  false;  }  if(!objType.getEquivalentTo(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  false;  }  if(!objType.getEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(prototype))    {    return    false;    }    if(!objType.getEquivalentTo(prototype))  {  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	110	None	add
1006	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  false;  }  if(!objType.isequivalentTo(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  false;  }  if(!objType.isequivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(prototype))    {    return    false;    }    if(!objType.isequivalentTo(prototype))  {  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	110	None	add
1007	[BUG]  [BUGGY]  parent!=  null  &&  propertyNode.isEquivalentTo(objType))  {  return  true;  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent!=  null  &&  propertyNode.isEquivalentTo(objType))  {  return  true;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent!=  null  &&  propertyNode.isEquivalentTo(objType))  {  return  true;	  parent!=    null    &&    objType.isEquivalentTo(propertyNode))    {    return    true;    	non-compiled	[CE]  not  a  statement	18	None	replace
1008	[BUG]  [BUGGY]  objType  =  objType.withPrototype(propertyNode);  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.withPrototype(propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType  =  objType.withPrototype(propertyNode);	  objType    =    objType.getPrototype();    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
1009	[BUG]  [BUGGY]  objType  =  objType.withPrototype(prototype);  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.withPrototype(prototype);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType  =  objType.withPrototype(prototype);	  objType    =    objType.getPrototype();    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
1010	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(type,  inferred))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(type,  inferred))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(type,  inferred))  {  return  true;  }	  if(!objType.isEquivalentTo(type,    propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	93	None	replace
1011	[BUG]  [BUGGY]  return(objType!=  null  &&  objType.isEquivalentTo(name,  propertyNode));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null  &&  objType.isEquivalentTo(name,  propertyNode));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=  null  &&  objType.isEquivalentTo(name,  propertyNode));	  return(objType!=    null    &&    objType.isEquivalentTo(propertyNode));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	166	None	replace
1012	[BUG]  [BUGGY]  return(objType!=  null  &&  objType.isEquivalentTo(propertyNode),  inferred);  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null  &&  objType.isEquivalentTo(propertyNode),  inferred);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=  null  &&  objType.isEquivalentTo(propertyNode),  inferred);	  return(objType!=    null    &&    objType.isEquivalentTo(propertyNode));    	non-compiled	[CE]  ')'  expected	166	None	replace
1013	[BUG]  [BUGGY]  if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(type,  propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(type,  propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(type,  propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(type,    propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	88	None	replace
1014	[BUG]  [BUGGY]  return(objType.isEquivalentTo(name)||  objType.isEquivalentTo(propertyNode),  inferred);  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(name)||  objType.isEquivalentTo(propertyNode),  inferred);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(name)||  objType.isEquivalentTo(propertyNode),  inferred);	  return(objType.isEquivalentTo(name)||    objType.isEquivalentTo(propertyNode));    	non-compiled	[CE]  ')'  expected	69	None	replace
1015	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(propertyNode,  type))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(propertyNode,  type))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(propertyNode,  type))  {  return  false;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    type))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	28	None	replace
1016	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(prototype,  type))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(prototype,  type))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(prototype,  type))  {  return  false;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    type))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	28	None	replace
1017	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType  ==  null)  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType  ==  null)  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }	  return    super.defineProperty(name,    objType,    inferred,    propertyNode);    timeout    	compilable	timeout	114	1	replace
1018	[BUG]  [BUGGY]  if(objType  ==  null)  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  timeout  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType  ==  null)  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType  ==  null)  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }	  return    super.defineProperty(name,    objType,    inferred,    propertyNode);    timeout    	compilable	timeout	114	1	replace
1019	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(prototype))  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }	  return    super.defineProperty(name,    objType,    inferred,    propertyNode);    timeout    	compilable	timeout	114	1	replace
1020	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  timeout  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }	  return    super.defineProperty(name,    objType,    inferred,    propertyNode);    timeout    	compilable	timeout	114	1	replace
1021	[BUG]  [BUGGY]  return  type.isEquivalentTo(prototype)&&  objType.isEquivalentTo(propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  type.isEquivalentTo(prototype)&&  objType.isEquivalentTo(propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  type.isEquivalentTo(prototype)&&  objType.isEquivalentTo(propertyNode);	  return    type.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	148	None	replace
1022	[BUG]  [BUGGY]  return  type.isEquivalentTo(name)||  objType.isEquivalentTo(propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  type.isEquivalentTo(name)||  objType.isEquivalentTo(propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  type.isEquivalentTo(name)||  objType.isEquivalentTo(propertyNode);	  return    type.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	148	None	replace
1023	[BUG]  [BUGGY]  return  type.isEquivalentTo(inferred)||  objType.isEquivalentTo(propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  type.isEquivalentTo(inferred)||  objType.isEquivalentTo(propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  type.isEquivalentTo(inferred)||  objType.isEquivalentTo(propertyNode);	  return    type.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	148	None	replace
1024	[BUG]  [BUGGY]  if(type.isEquivalentTo(propertyNode)||  type.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(type.isEquivalentTo(propertyNode)||  type.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(type.isEquivalentTo(propertyNode)||  type.isEquivalentTo(propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode)||    type.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	36	None	replace
1025	[BUG]  [BUGGY]  if(type.isEquivalentTo(propertyNode)||  type.isEquivalentTo(inferred))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(type.isEquivalentTo(propertyNode)||  type.isEquivalentTo(inferred))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(type.isEquivalentTo(propertyNode)||  type.isEquivalentTo(inferred))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode)||    type.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	36	None	replace
1026	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isequivalentTo(prototype))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isequivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.isequivalentTo(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isequivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
1027	[BUG]  [BUGGY]  if(type.isEquivalentTo(prototype)||  type.isEquivalentTo(propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(type.isEquivalentTo(prototype)||  type.isEquivalentTo(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(type.isEquivalentTo(prototype)||  type.isEquivalentTo(propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(prototype)||    type.isEquivalentTo(propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	75	None	replace
1028	[BUG]  [BUGGY]  objType  =  objType.toEquivalentType();  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.toEquivalentType();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType  =  objType.toEquivalentType();	  objType    =    objType.toObjectType();    timeout    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
1029	[BUG]  [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(prototype);  return(objType!=  null)?  false  :  objType.getEquivalentTo(prototype);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(prototype);  return(objType!=  null)?  false  :  objType.getEquivalentTo(prototype);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=    null)?    false    :    objType.isEquivalentTo(prototype);    return(objType!=  null)?  false  :  objType.getEquivalentTo(prototype);	  timeout    	non-compiled	[CE]  cannot  find  symbol	167	None	add
1030	[BUG]  [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(prototype);  if(objType!=  null)?  false  :  objType.isEquivalentTo(prototype);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(prototype);  if(objType!=  null)?  false  :  objType.isEquivalentTo(prototype);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=    null)?    false    :    objType.isEquivalentTo(prototype);    if(objType!=  null)?  false  :  objType.isEquivalentTo(prototype);	  timeout    	non-compiled	[CE]  illegal  start  of  expression	167	None	add
1031	[BUG]  [BUGGY]  return(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(propertyNode,  type));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(propertyNode,  type));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(propertyNode,  type));	  return(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    type));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	71	None	replace
1032	[BUG]  [BUGGY]  return(objType.isEquivalentTo(prototype)||  type.isEquivalentTo(propertyNode,  propertyNode));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(prototype)||  type.isEquivalentTo(propertyNode,  propertyNode));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(prototype)||  type.isEquivalentTo(propertyNode,  propertyNode));	  return(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    type));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	71	None	replace
1033	[BUG]  [BUGGY]  this.setPrototypeOfThis(objType);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  this.setPrototypeOfThis(objType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	this.setPrototypeOfThis(objType);	          this.setPrototypeBasedOn(objType);    timeout    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
1034	[BUG]  [BUGGY]  this.setPrototypeBasedOn(propertyNode);  [CE]  method  setPrototypeBasedOn  in  class  FunctionType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  this.setPrototypeBasedOn(propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	this.setPrototypeBasedOn(propertyNode);	          this.setPrototypeBasedOn(objType);    timeout    	non-compiled	[CE]  method  setPrototypeBasedOn  in  class  FunctionType  cannot  be  applied  to  given  types;	51	None	replace
1035	[BUG]  [BUGGY]  this.setTypeOfThis(objType);  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  this.setTypeOfThis(objType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	this.setTypeOfThis(objType);	          this.setPrototypeBasedOn(objType);    timeout    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
1036	[BUG]  [BUGGY]  if(objType.isEquivalentTo(name)&&  inferred)  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(name)&&  inferred)  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(name)&&  inferred)  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)&&    inferred)    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	144	None	replace
1037	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          this.setPrototypeBasedOn(objType);  if(objType!=  null)  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	                this.setPrototypeBasedOn(objType);    if(objType!=  null)  {  this.setPrototypeBasedOn(objType);  }	  timeout    	compilable	timeout	50	1	add
1038	[BUG]  [BUGGY]          this.setPrototypeBasedOn(objType);  if(objType!=  null)  {  this.setPrototypeBasedOn(objType);  }  timeout  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          this.setPrototypeBasedOn(objType);  if(objType!=  null)  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	                this.setPrototypeBasedOn(objType);    if(objType!=  null)  {  this.setPrototypeBasedOn(objType);  }	  timeout    	compilable	timeout	50	1	add
1039	[BUG]  [BUGGY]          this.setPrototypeBasedOn(objType);  if(objType.isEquivalentTo(propertyNode))  {  this.setPrototypeBasedOn(objType);  }  else  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          this.setPrototypeBasedOn(objType);  if(objType.isEquivalentTo(propertyNode))  {  this.setPrototypeBasedOn(objType);  }  else  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	                this.setPrototypeBasedOn(objType);    if(objType.isEquivalentTo(propertyNode))  {  this.setPrototypeBasedOn(objType);  }  else  {  return  false;  }	  timeout    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	50	None	add
1040	[BUG]  [BUGGY]          this.setPrototypeBasedOn(objType);  if(objType.isEquivalentTo(propertyNode))  {  this.setPrototypeBasedOn(objType);  }  else  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          this.setPrototypeBasedOn(objType);  if(objType.isEquivalentTo(propertyNode))  {  this.setPrototypeBasedOn(objType);  }  else  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	                this.setPrototypeBasedOn(objType);    if(objType.isEquivalentTo(propertyNode))  {  this.setPrototypeBasedOn(objType);  }  else  {  return  true;  }	  timeout    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	50	None	add
1041	[BUG]  [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isInterface()  ||  objType.getEquivalentTo(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isInterface()  ||  objType.getEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isInterface()  ||  objType.getEquivalentTo(prototype))  {  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	129	None	add
1042	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode,  inferred)&&  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode,  inferred)&&  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode,  inferred)&&  objType.isEquivalentTo(propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode,    inferred)||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	39	None	replace
1043	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode,  inferred)&&  objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode,  inferred)&&  objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode,  inferred)&&  objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode,    inferred)||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	39	None	replace
1044	[BUG]  [BUGGY]  if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(inferred,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(inferred,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(name)||  objType.isEquivalentTo(inferred,  propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(inferred,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	145	None	replace
1045	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(name,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(name,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(name,  propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(inferred,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	145	None	replace
1046	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  true;  }  if(!objType.getEquivalentTo(prototype))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  true;  }  if(!objType.getEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(prototype))    {    return    true;    }    if(!objType.getEquivalentTo(prototype))  {  return  true;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	91	None	add
1047	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  true;  }  if(!objType.equivalentTo(prototype))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  true;  }  if(!objType.equivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(prototype))    {    return    true;    }    if(!objType.equivalentTo(prototype))  {  return  true;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	91	None	add
1048	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  true;  }  if(!objType.isequivalentTo(prototype))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  true;  }  if(!objType.isequivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(prototype))    {    return    true;    }    if(!objType.isequivalentTo(prototype))  {  return  true;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	91	None	add
1049	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  true;  }  if(!objType.getPrototype())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(prototype))  {  return  true;  }  if(!objType.getPrototype())  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(prototype))    {    return    true;    }    if(!objType.getPrototype())  {  return  true;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	91	None	add
1050	[BUG]  [BUGGY]  if(type.isInterface())  {  if(objType.isEquivalentTo(prototype))  {  return  false;  }  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(type.isInterface())  {  if(objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(type.isInterface())  {  if(objType.isEquivalentTo(prototype))  {  return  false;  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))    {    return    false;    	non-compiled	[CE]  ';'  expected	34	None	replace
1051	[BUG]  [BUGGY]  ObjectType  baseType  =  object.getBaseType();  this.setPrototypeBasedOn(baseType);  [CE]  cannot  find  symbol  object  [FE]                                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  ObjectType  baseType  =  object.getBaseType();  this.setPrototypeBasedOn(baseType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	ObjectType  baseType  =  object.getBaseType();  this.setPrototypeBasedOn(baseType);	          ObjectType    baseType    =    objType.getBaseType();    this.setPrototypeBasedOn(baseType);    	non-compiled	[CE]  cannot  find  symbol  object	60	None	replace
1052	[BUG]  [BUGGY]  timeout  [FE]                                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  ObjectType  baseType  =  objType.toObjectType();  this.setPrototypeBasedOn(baseType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	ObjectType  baseType  =  objType.toObjectType();  this.setPrototypeBasedOn(baseType);	          ObjectType    baseType    =    objType.getBaseType();    this.setPrototypeBasedOn(baseType);    	compilable	timeout	60	1	replace
1053	[BUG]  [BUGGY]  ObjectType  baseType  =  objType.toObjectType();  this.setPrototypeBasedOn(baseType);  timeout  [FE]                                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  ObjectType  baseType  =  objType.toObjectType();  this.setPrototypeBasedOn(baseType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	ObjectType  baseType  =  objType.toObjectType();  this.setPrototypeBasedOn(baseType);	          ObjectType    baseType    =    objType.getBaseType();    this.setPrototypeBasedOn(baseType);    	compilable	timeout	60	1	replace
1054	[BUG]  [BUGGY]  objType  =  objType.toObjectType();  ObjectType  objType  =  objType.toObjectType();  [CE]  variable  objType  is  already  defined  in  method  defineProperty(String,JSType,boolean,Node)  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.toObjectType();  ObjectType  objType  =  objType.toObjectType();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType    =    objType.toObjectType();    ObjectType  objType  =  objType.toObjectType();	  timeout    	non-compiled	[CE]  variable  objType  is  already  defined  in  method  defineProperty(String,JSType,boolean,Node)	156	None	add
1055	[BUG]  [BUGGY]  timeout  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.toObjectType();  this.setPrototypeBasedOn(objType.toObjectType());  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	objType    =    objType.toObjectType();    this.setPrototypeBasedOn(objType.toObjectType());	  timeout    	compilable	timeout	156	1	add
1056	[BUG]  [BUGGY]  objType  =  objType.toObjectType();  this.setPrototypeBasedOn(objType.toObjectType());  timeout  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.toObjectType();  this.setPrototypeBasedOn(objType.toObjectType());  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType    =    objType.toObjectType();    this.setPrototypeBasedOn(objType.toObjectType());	  timeout    	compilable	timeout	156	1	add
1057	[BUG]  [BUGGY]  objType  =  objType.toObjectType();  this.setPrototypeBasedOn(objType.toObjectType();  [CE]  ')'  expected  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.toObjectType();  this.setPrototypeBasedOn(objType.toObjectType();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType    =    objType.toObjectType();    this.setPrototypeBasedOn(objType.toObjectType();	  timeout    	non-compiled	[CE]  ')'  expected	156	None	add
1058	[BUG]  [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(prototype,  inferred,  propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(prototype,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=  null)?  false  :  objType.isEquivalentTo(prototype,  inferred,  propertyNode);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(prototype,    propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	46	None	replace
1059	[BUG]  [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(prototype,  propertyNode,  inferred);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(prototype,  propertyNode,  inferred);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=  null)?  false  :  objType.isEquivalentTo(prototype,  propertyNode,  inferred);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(prototype,    propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	46	None	replace
1060	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  this.defineProperty(name,  type,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	this.defineProperty(name,  type,  inferred,  propertyNode);	  parent.defineProperty(name,    type,    inferred,    propertyNode);    	compilable	timeout	16	1	replace
1061	[BUG]  [BUGGY]  this.defineProperty(name,  type,  inferred,  propertyNode);  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  this.defineProperty(name,  type,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	this.defineProperty(name,  type,  inferred,  propertyNode);	  parent.defineProperty(name,    type,    inferred,    propertyNode);    	compilable	timeout	16	1	replace
1062	[BUG]  [BUGGY]  if(objType.isPrototype()  ||!objType.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype()  ||!objType.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype()  ||!objType.isEquivalentTo(propertyNode))  {  return  false;  }	  if(!objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
1063	[BUG]  [BUGGY]  vice.defineProperty(name,  type,  inferred,  propertyNode);  [CE]  cannot  find  symbol  vice  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  vice.defineProperty(name,  type,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	vice.defineProperty(name,  type,  inferred,  propertyNode);	  if(!objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	non-compiled	[CE]  cannot  find  symbol  vice	111	None	replace
1064	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(inferred))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(inferred))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  objType.isEquivalentTo(inferred))  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(inferred))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	15	None	replace
1065	[BUG]  [BUGGY]  if(objType!=  null)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null)  {  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=  null)  {	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))    {    return    true;    	non-compiled	[CE]  ';'  expected	105	None	replace
1066	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType  ==  null  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType  ==  null  ||  objType.isEquivalentTo(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))    {    return    true;    	compilable	timeout	105	1	replace
1067	[BUG]  [BUGGY]  if(objType  ==  null  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  timeout  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType  ==  null  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType  ==  null  ||  objType.isEquivalentTo(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))    {    return    true;    	compilable	timeout	105	1	replace
1068	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(name,  objType);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  aughtExceptionHandler.handleMissingName(name,  objType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	aughtExceptionHandler.handleMissingName(name,  objType);	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))    {    return    true;    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	105	None	replace
1069	[BUG]  [BUGGY]  if(objType.isFunctionPrototype()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isFunctionPrototype()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isFunctionPrototype()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }	  if(objType.isInterface()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
1070	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface()  ||  objType.isUnknownType())  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isInterface()  ||  objType.isUnknownType())  {  return  false;  }	  if(objType.isInterface()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	compilable	timeout	130	1	replace
1071	[BUG]  [BUGGY]  if(objType.isInterface()  ||  objType.isUnknownType())  {  return  false;  }  timeout  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface()  ||  objType.isUnknownType())  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface()  ||  objType.isUnknownType())  {  return  false;  }	  if(objType.isInterface()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	compilable	timeout	130	1	replace
1072	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType  ==  null  ||!objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType  ==  null  ||!objType.isEquivalentTo(prototype))  {  return  true;  }	  if(!objType.isEquivalentTo(prototype))    {    return    true;    }    timeout    	compilable	timeout	92	1	replace
1073	[BUG]  [BUGGY]  if(objType  ==  null  ||!objType.isEquivalentTo(prototype))  {  return  true;  }  timeout  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType  ==  null  ||!objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType  ==  null  ||!objType.isEquivalentTo(prototype))  {  return  true;  }	  if(!objType.isEquivalentTo(prototype))    {    return    true;    }    timeout    	compilable	timeout	92	1	replace
1074	[BUG]  [BUGGY]  parent!=  null  &&!objType.isEquivalentTo(parent))  {  return  true;  }  [CE]  not  a  statement  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent!=  null  &&!objType.isEquivalentTo(parent))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent!=  null  &&!objType.isEquivalentTo(parent))  {  return  true;  }	  if(!objType.isEquivalentTo(prototype))    {    return    true;    }    timeout    	non-compiled	[CE]  not  a  statement	92	None	replace
1075	[BUG]  [BUGGY]  if(objType.isEquivalentTo(name,  propertyNode)||  objType.isPrimitive(propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(name,  propertyNode)||  objType.isPrimitive(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(name,  propertyNode)||  objType.isPrimitive(propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(name,    propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	84	None	replace
1076	[BUG]  [BUGGY]  timeout  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isUnknownType())  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isUnknownType())  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }	          return    super.defineProperty(name,    type,    inferred,    propertyNode);    	compilable	timeout	54	1	replace
1077	[BUG]  [BUGGY]  if(objType.isUnknownType())  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  timeout  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isUnknownType())  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isUnknownType())  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }	          return    super.defineProperty(name,    type,    inferred,    propertyNode);    	compilable	timeout	54	1	replace
1078	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode))  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  else  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode))  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  else  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode))  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  else  {  return  false;  }	          return    super.defineProperty(name,    type,    inferred,    propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	54	None	replace
1079	[BUG]  [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(propertyNode,  objType);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType  ==  null)?  false  :  objType.isEquivalentTo(propertyNode,  objType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType  ==  null)?  false  :  objType.isEquivalentTo(propertyNode,  objType);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(propertyNode,    objType);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	165	None	replace
1080	[BUG]  [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(propertyNode,  type,  objType);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(propertyNode,  type,  objType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=  null)?  false  :  objType.isEquivalentTo(propertyNode,  type,  objType);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(propertyNode,    objType);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	165	None	replace
1081	[BUG]  [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(value,  propertyNode,  objType);  [CE]  cannot  find  symbol  value  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(value,  propertyNode,  objType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=  null)?  false  :  objType.isEquivalentTo(value,  propertyNode,  objType);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(propertyNode,    objType);    	non-compiled	[CE]  cannot  find  symbol  value	165	None	replace
1082	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  else  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(prototype))  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  else  {  return  false;  }	  return    super.defineProperty(name,    objType,    inferred,    propertyNode);    timeout    	compilable	timeout	114	1	replace
1083	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  else  {  return  false;  }  timeout  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  else  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))  {  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  else  {  return  false;  }	  return    super.defineProperty(name,    objType,    inferred,    propertyNode);    timeout    	compilable	timeout	114	1	replace
1084	[BUG]  [BUGGY]  if( "prototype ".equals(name))  {  if(objType.isEquivalentTo(prototype))  {  return  false;  }  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if( "prototype ".equals(name))  {  if(objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if( "prototype ".equals(name))  {  if(objType.isEquivalentTo(prototype))  {  return  false;  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))    {    return    false;    	non-compiled	[CE]  ';'  expected	34	None	replace
1085	[BUG]  [BUGGY]  if(objType  ==  null  ||  objType.isUnknownType())  {  if(objType.isEquivalentTo(prototype))  {  return  false;  }  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType  ==  null  ||  objType.isUnknownType())  {  if(objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType  ==  null  ||  objType.isUnknownType())  {  if(objType.isEquivalentTo(prototype))  {  return  false;  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))    {    return    false;    	non-compiled	[CE]  ';'  expected	34	None	replace
1086	[BUG]  [BUGGY]  if( "prototype ".equals(name))  {  if(objType.isEquivalentTo(prototype)||  objType.isInstanceType())  {  return  false;  }  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if( "prototype ".equals(name))  {  if(objType.isEquivalentTo(prototype)||  objType.isInstanceType())  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if( "prototype ".equals(name))  {  if(objType.isEquivalentTo(prototype)||  objType.isInstanceType())  {  return  false;  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))    {    return    false;    	non-compiled	[CE]  ';'  expected	34	None	replace
1087	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type))  {  return  false;  }  if(objType.equivalentTo(type))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type))  {  return  false;  }  if(objType.equivalentTo(type))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type))    {    return    false;    }    if(objType.equivalentTo(type))  {  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	100	None	add
1088	[BUG]  [BUGGY]  aughtExceptionHandler.handleTypeProperty(name,  type,  inferred,  propertyNode);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  aughtExceptionHandler.handleTypeProperty(name,  type,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	aughtExceptionHandler.handleTypeProperty(name,  type,  inferred,  propertyNode);	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    If(objType.isEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	106	None	replace
1089	[BUG]  [BUGGY]  parent.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  return  false;  [CE]  cannot  find  symbol  parent  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  return  false;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  return  false;	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    If(objType.isEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  parent	106	None	replace
1090	[BUG]  [BUGGY]  parent!=  null  &&  parent.isPrototypeType(objType))  {  return  true;  }  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent!=  null  &&  parent.isPrototypeType(objType))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent!=  null  &&  parent.isPrototypeType(objType))  {  return  true;  }	  parent!=    null    &&    objType.isEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	153	None	replace
1091	[BUG]  [BUGGY]  parent!=  null  &&  objType.isFunctionPrototype(parent))  {  return  true;  }  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent!=  null  &&  objType.isFunctionPrototype(parent))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent!=  null  &&  objType.isFunctionPrototype(parent))  {  return  true;  }	  parent!=    null    &&    objType.isEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  not  a  statement	153	None	replace
1092	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode,  propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(prototype,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	99	None	replace
1093	[BUG]  [BUGGY]  if(objType.isEquivalentTo(value,  propertyNode))  {  return  false;  }  [CE]  cannot  find  symbol  value  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(value,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(value,  propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(type,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  value	95	None	replace
1094	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type,  propertyNode)||  objType.equals(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type,  propertyNode)||  objType.equals(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type,  propertyNode)||  objType.equals(propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(type,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	95	None	replace
1095	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(name,  propertyNode,  type))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(name,  propertyNode,  type))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(name,  propertyNode,  type))  {  return  false;  }	  if(!objType.isEquivalentTo(propertyNode,    type))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	150	None	replace
1096	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode,  type)||!inferred)  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode,  type)||!inferred)  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode,  type)||!inferred)  {  return  false;  }	  if(!objType.isEquivalentTo(propertyNode,    type))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	150	None	replace
1097	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(propertyNode,  type)&&  inferred)  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(propertyNode,  type)&&  inferred)  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(propertyNode,  type)&&  inferred)  {  return  false;  }	  if(!objType.isEquivalentTo(propertyNode,    type))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	150	None	replace
1098	[BUG]  [BUGGY]  return(objType!=  null  &&  objType.isEquivalentTo(propertyNode,  propertyNode));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null  &&  objType.isEquivalentTo(propertyNode,  propertyNode));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=  null  &&  objType.isEquivalentTo(propertyNode,  propertyNode));	  return(objType!=    null    &&    objType.isEquivalentTo(propertyNode));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	166	None	replace
1099	[BUG]  [BUGGY]  return(objType!=  null  &&  objType.isEquivalentTo(propertyNode,  this));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null  &&  objType.isEquivalentTo(propertyNode,  this));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=  null  &&  objType.isEquivalentTo(propertyNode,  this));	  return(objType!=    null    &&    objType.isEquivalentTo(propertyNode));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	166	None	replace
1100	[BUG]  [BUGGY]  if(objType.isPrototypeType())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototypeType())  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototypeType())  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(ObjType.isEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
1101	[BUG]  [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface()  ||  objType.isEquivalentTo(propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(ObjType.isEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	107	None	replace
1102	[BUG]  [BUGGY]  timeout  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isUnknownType())  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isUnknownType())  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(ObjType.isEquivalentTo(prototype))    {    return    true;    }    	compilable	timeout	107	1	replace
1103	[BUG]  [BUGGY]  if(objType.isUnknownType())  {  return  true;  }  timeout  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isUnknownType())  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isUnknownType())  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(ObjType.isEquivalentTo(prototype))    {    return    true;    }    	compilable	timeout	107	1	replace
1104	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isFunctionPrototype())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isFunctionPrototype())  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.isFunctionPrototype())  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(ObjType.isEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
1105	[BUG]  [BUGGY]  this.setImplicitPrototypeBasedOn(objType);  return  false;  [CE]  cannot  find  symbol  [FE]                                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  this.setImplicitPrototypeBasedOn(objType);  return  false;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	this.setImplicitPrototypeBasedOn(objType);  return  false;	          if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    false;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
1106	[BUG]  [BUGGY]  this.setInferredProperty(name,  objType);  return  false;  [CE]  cannot  find  symbol  [FE]                                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  this.setInferredProperty(name,  objType);  return  false;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	this.setInferredProperty(name,  objType);  return  false;	          if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    false;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
1107	[BUG]  [BUGGY]  if(objType.isPrototypeType()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototypeType()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototypeType()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEQUIvalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
1108	[BUG]  [BUGGY]  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  if(objType  ==  null)  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  else  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  [CE]  unreachable  statement  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  if(objType  ==  null)  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  else  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return    super.defineProperty(name,    objType,    inferred,    propertyNode);    if(objType  ==  null)  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }  else  {  return  super.defineProperty(name,  objType,  inferred,  propertyNode);  }	  timeout    	non-compiled	[CE]  unreachable  statement	113	None	add
1109	[BUG]  [BUGGY]  if(objType!=  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType!=  null  ||  objType.equivalentTo(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType!=  null  ||  objType.equivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=    null    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType!=  null  ||  objType.equivalentTo(prototype))  {  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	126	None	add
1110	[BUG]  [BUGGY]  if(objType!=  null  ||  objType.isEquivalentTo(value,  propertyNode))  {  return  false;  }  [CE]  cannot  find  symbol  value  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  ||  objType.isEquivalentTo(value,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=  null  ||  objType.isEquivalentTo(value,  propertyNode))  {  return  false;  }	  if(objType!=    null    ||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  value	131	None	replace
1111	[BUG]  [BUGGY]  if(objType.isEquivalentTo(value,  propertyNode))  {  return  true;  }  [CE]  cannot  find  symbol  value  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(value,  propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(value,  propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(type,    propertyNode))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  value	82	None	replace
1112	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type,  propertyNode)&&!inferred)  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type,  propertyNode)&&!inferred)  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type,  propertyNode)&&!inferred)  {  return  true;  }	  if(objType.isEquivalentTo(type,    propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	82	None	replace
1113	[BUG]  [BUGGY]  objType  =  objType.getImplicitPrototype();  objType  =  objectType.getImplicitPrototype();  [CE]  cannot  find  symbol  objectType  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.getImplicitPrototype();  objType  =  objectType.getImplicitPrototype();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType    =    objType.getImplicitPrototype();    objType  =  objectType.getImplicitPrototype();	  timeout    	non-compiled	[CE]  cannot  find  symbol  objectType	158	None	add
1114	[BUG]  [BUGGY]  objType  =  objType.getImplicitPrototype();  objType  =  objType.getImplicitPROtotype();  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.getImplicitPrototype();  objType  =  objType.getImplicitPROtotype();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType    =    objType.getImplicitPrototype();    objType  =  objType.getImplicitPROtotype();	  timeout    	non-compiled	[CE]  cannot  find  symbol	158	None	add
1115	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.equals(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(prototype))        {        return        false;        }        if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.equals(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }	  timeout    	compilable	timeout	30	1	add
1116	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.equals(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  timeout  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.equals(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))        {        return        false;        }        if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.equals(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }	  timeout    	compilable	timeout	30	1	add
1117	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEQUIvalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEQUIvalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))        {        return        false;        }        if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEQUIvalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	30	None	add
1118	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isPrototype())  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isPrototype())  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))        {        return        false;        }        if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isPrototype())  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	30	None	add
1119	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isInstanceType())  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(prototype))        {        return        false;        }        if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isInstanceType())  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }	  timeout    	compilable	timeout	30	1	add
1120	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isInstanceType())  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  timeout  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isInstanceType())  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))        {        return        false;        }        if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isInstanceType())  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }	  timeout    	compilable	timeout	30	1	add
1121	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isPrototype(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isPrototype(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))        {        return        false;        }        if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isPrototype(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	30	None	add
1122	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEQUIvalentTo(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEQUIvalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))        {        return        false;        }        if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEQUIvalentTo(prototype))  {  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	30	None	add
1123	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))        {        return        false;        }        if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.isEquivalentTo(prototype))  {  return  false;	  timeout    	non-compiled	[CE]  ';'  expected	30	None	add
1124	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isUnknownType()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isUnknownType()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  return    false;    if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    	compilable	timeout	13	1	replace
1125	[BUG]  [BUGGY]  if(objType.isUnknownType()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  timeout  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isUnknownType()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isUnknownType()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  return    false;    if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    	compilable	timeout	13	1	replace
1126	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isUnknownType()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isUnknownType()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    	compilable	timeout	13	1	replace
1127	[BUG]  [BUGGY]  if(objType.isUnknownType()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  timeout  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isUnknownType()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isUnknownType()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    	compilable	timeout	13	1	replace
1128	[BUG]  [BUGGY]  if(objType.isUnknownType()  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isUnknownType()  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isUnknownType()  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	13	None	replace
1129	[BUG]  [BUGGY]  if(objType.isUnknownType()  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isUnknownType()  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isUnknownType()  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  return    false;    if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	13	None	replace
1130	[BUG]  [BUGGY]  parent!=  null  &&  parent.isPrototypeType(objType))  {  return  false;  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent!=  null  &&  parent.isPrototypeType(objType))  {  return  false;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent!=  null  &&  parent.isPrototypeType(objType))  {  return  false;	  parent!=    null    &&    objType.isEquivalentTo(propertyNode))    {    return    false;    	non-compiled	[CE]  not  a  statement	64	None	replace
1131	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)&&  objType.equivalentTo(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)&&  objType.equivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)&&  objType.equivalentTo(prototype))  {  return  false;  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.equivalentTo(prototype))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	171	None	replace
1132	[BUG]  [BUGGY]  timeout  [FE]            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  if(objType.equals(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    if(objType.equals(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  timeout    	compilable	timeout	47	1	add
1133	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  if(objType.equals(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  timeout  [FE]            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  if(objType.equals(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    if(objType.equals(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  timeout    	compilable	timeout	47	1	add
1134	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  if(objType.getPrototype()!=  null)  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  if(objType.getPrototype()!=  null)  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    if(objType.getPrototype()!=  null)  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	47	None	add
1135	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(propertyNode,  type))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(propertyNode,  type))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)&&  objType.isEquivalentTo(propertyNode,  type))  {  return  false;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    type))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	28	None	replace
1136	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode,  type),  inferred)  {  return  false;  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode,  type),  inferred)  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode,  type),  inferred)  {  return  false;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    type))    {    return    false;    }    	non-compiled	[CE]  	28	None	replace
1137	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isUnknownType())  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isConstructor()  ||  objType.isUnknownType())  {  return  false;  }	  if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	compilable	timeout	62	1	replace
1138	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isUnknownType())  {  return  false;  }  timeout  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isUnknownType())  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  ||  objType.isUnknownType())  {  return  false;  }	  if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	compilable	timeout	62	1	replace
1139	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isInstanceType())  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isConstructor()  ||  objType.isInstanceType())  {  return  false;  }	  if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	compilable	timeout	62	1	replace
1140	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isInstanceType())  {  return  false;  }  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isInstanceType())  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  ||  objType.isInstanceType())  {  return  false;  }	  if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	compilable	timeout	62	1	replace
1141	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isFunctionPrototype())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isFunctionPrototype())  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  ||  objType.isFunctionPrototype())  {  return  false;  }	  if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
1142	[BUG]  [BUGGY]  timeout  [FE]            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }	  return    false;    if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    return    true;    }    	compilable	timeout	160	1	replace
1143	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  timeout  [FE]            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }	  return    false;    if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    return    true;    }    	compilable	timeout	160	1	replace
1144	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isUnknownType())  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isUnknownType())  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }	  return    false;    if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    return    true;    }    	compilable	timeout	160	1	replace
1145	[BUG]  [BUGGY]  if(objType.isUnknownType())  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  timeout  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isUnknownType())  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isUnknownType())  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }	  return    false;    if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    return    true;    }    	compilable	timeout	160	1	replace
1146	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }	  return    false;    if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	160	None	replace
1147	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode,  type),  inferred)  {  return  true;  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode,  type),  inferred)  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode,  type),  inferred)  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode,    type))    {    return    true;    }    	non-compiled	[CE]  	83	None	replace
1148	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode,  type)||  objType.isEquivalentTo(type))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode,  type)||  objType.isEquivalentTo(type))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode,  type)||  objType.isEquivalentTo(type))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode,    type))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	83	None	replace
1149	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isInstanceType())  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(prototype))        {        return        true;        }        if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isInstanceType())  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }	  timeout    	compilable	timeout	102	1	add
1150	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isInstanceType())  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isInstanceType())  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))        {        return        true;        }        if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isInstanceType())  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }	  timeout    	compilable	timeout	102	1	add
1151	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isConstructor())  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isEquivalentTo(prototype))        {        return        true;        }        if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isConstructor())  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }	  timeout    	compilable	timeout	102	1	add
1152	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isConstructor())  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  timeout  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isConstructor())  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))        {        return        true;        }        if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isConstructor())  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }	  timeout    	compilable	timeout	102	1	add
1153	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isPrototype(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isPrototype(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype))        {        return        true;        }        if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isPrototype(prototype))  {  return  true;  }  if(objType.isEquivalentTo(prototype))  {  return  true;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	102	None	add
1154	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type,  propertyNode)||  objType.isEquivalentTo(type,  propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type,  propertyNode)||  objType.isEquivalentTo(type,  propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type,  propertyNode)||  objType.isEquivalentTo(type,  propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(type,    propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	88	None	replace
1155	[BUG]  [BUGGY]  parent  <  0  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent  <  0  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent  <  0  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    timeout    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
1156	[BUG]  [BUGGY]  parent  <  0  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent  <  0  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent  <  0  ||  objType.isEquivalentTo(propertyNode))  {  return  false;	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    timeout    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
1157	[BUG]  [BUGGY]  parent  <  0  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent  <  0  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent  <  0  ||  objType.isEquivalentTo(propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    timeout    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
1158	[BUG]  [BUGGY]  parentType.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  [CE]  cannot  find  symbol  parentType  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parentType.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parentType.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    timeout    	non-compiled	[CE]  cannot  find  symbol  parentType	48	None	replace
1159	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  this.defineProperty(name,  objType,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	this.defineProperty(name,  objType,  inferred,  propertyNode);	  parent.defineProperty(name,    objType,    inferred,    propertyNode);    	compilable	timeout	139	1	replace
1160	[BUG]  [BUGGY]  this.defineProperty(name,  objType,  inferred,  propertyNode);  timeout  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  this.defineProperty(name,  objType,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	this.defineProperty(name,  objType,  inferred,  propertyNode);	  parent.defineProperty(name,    objType,    inferred,    propertyNode);    	compilable	timeout	139	1	replace
1161	[BUG]  [BUGGY]  this.setPrototype(objType);  [CE]  method  setPrototype  in  class  FunctionType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  this.setPrototype(objType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	this.setPrototype(objType);	          this.setPrototypeBasedOn(objType);    timeout    	non-compiled	[CE]  method  setPrototype  in  class  FunctionType  cannot  be  applied  to  given  types;	51	None	replace
1162	[BUG]  [BUGGY]  this.setPrototypeInferred(inferred);  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  this.setPrototypeInferred(inferred);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	this.setPrototypeInferred(inferred);	          this.setPrototypeBasedOn(objType);    timeout    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
1163	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)&&  this.setPrototypeBasedOn(objType);  return  true;  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)&&  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)&&  this.setPrototypeBasedOn(objType);  return  true;  }	          if(objType.isEquivalentTo(propertyNode))    {    this.setPrototypeBasedOn(objType);    return    true;    }    	non-compiled	[CE]  	56	None	replace
1164	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)&&  objType.equals(type))  {  this.setPrototypeBasedOn(objType);  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)&&  objType.equals(type))  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)&&  objType.equals(type))  {  this.setPrototypeBasedOn(objType);  return  true;  }	          if(objType.isEquivalentTo(propertyNode))    {    this.setPrototypeBasedOn(objType);    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	56	None	replace
1165	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)&&  objType.isPrototype())  {  this.setPrototypeBasedOn(objType);  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)&&  objType.isPrototype())  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)&&  objType.isPrototype())  {  this.setPrototypeBasedOn(objType);  return  true;  }	          if(objType.isEquivalentTo(propertyNode))    {    this.setPrototypeBasedOn(objType);    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	56	None	replace
1166	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(propertyNode,  objType))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(propertyNode,  objType))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(propertyNode,  objType))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(propertyNode,    type))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	89	None	replace
1167	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type,  propertyNode)||  objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type,  propertyNode)||  objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type,  propertyNode)||  objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(type,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	38	None	replace
1168	[BUG]  [BUGGY]  parent!=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent!=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent!=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }	  if(objType!=    null    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	non-compiled	[CE]  not  a  statement	127	None	replace
1169	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  ||  objType.isUnknownType())  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType!=  null  ||  objType.isUnknownType())  {  return  false;  }	  if(objType!=    null    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	compilable	timeout	127	1	replace
1170	[BUG]  [BUGGY]  if(objType!=  null  ||  objType.isUnknownType())  {  return  false;  }  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  ||  objType.isUnknownType())  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=  null  ||  objType.isUnknownType())  {  return  false;  }	  if(objType!=    null    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	compilable	timeout	127	1	replace
1171	[BUG]  [BUGGY]  parent!=  null  &&  objType.isEquivalentTo(type))  {  return  true;  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent!=  null  &&  objType.isEquivalentTo(type))  {  return  true;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent!=  null  &&  objType.isEquivalentTo(type))  {  return  true;	  if(objType.isEquivalentTo(type))    {    return    true;    }    timeout    	non-compiled	[CE]  not  a  statement	143	None	replace
1172	[BUG]  [BUGGY]  parent!=  null  &&  objType.isEquivalentTo(type))  {  return  true;  }  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent!=  null  &&  objType.isEquivalentTo(type))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent!=  null  &&  objType.isEquivalentTo(type))  {  return  true;  }	  if(objType.isEquivalentTo(type))    {    return    true;    }    timeout    	non-compiled	[CE]  not  a  statement	143	None	replace
1173	[BUG]  [BUGGY]  parent  ==  null  &&  objType.isEquivalentTo(type))  {  return  true;  }  [CE]  not  a  statement  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent  ==  null  &&  objType.isEquivalentTo(type))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent  ==  null  &&  objType.isEquivalentTo(type))  {  return  true;  }	  if(objType.isEquivalentTo(type))    {    return    true;    }    timeout    	non-compiled	[CE]  not  a  statement	143	None	replace
1174	[BUG]  [BUGGY]  parent  ==  null  &&  objType.isEquivalentTo(parent))  {  return  true;  }  [CE]  not  a  statement  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  parent  ==  null  &&  objType.isEquivalentTo(parent))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	parent  ==  null  &&  objType.isEquivalentTo(parent))  {  return  true;  }	  if(objType.isEquivalentTo(type))    {    return    true;    }    timeout    	non-compiled	[CE]  not  a  statement	143	None	replace
1175	[BUG]  [BUGGY]  objType  =  objType.defineProperty(name,  type.toObjectType());  [CE]  method  defineProperty  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.defineProperty(name,  type.toObjectType());  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType  =  objType.defineProperty(name,  type.toObjectType());	  objType    =    objType.getPrototype();    	non-compiled	[CE]  method  defineProperty  in  class  ObjectType  cannot  be  applied  to  given  types;	115	None	replace
1176	[BUG]  [BUGGY]  if(objType.isInterface()  ||  objType.hasEquivalentTo(prototype))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface()  ||  objType.hasEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface()  ||  objType.hasEquivalentTo(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.hasEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	173	None	replace
1177	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isUnknownType()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isUnknownType()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.hasEquivalentTo(prototype))    {    return    true;    }    	compilable	timeout	173	1	replace
1178	[BUG]  [BUGGY]  if(objType.isUnknownType()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  timeout  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isUnknownType()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isUnknownType()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.hasEquivalentTo(prototype))    {    return    true;    }    	compilable	timeout	173	1	replace
1179	[BUG]  [BUGGY]  if(objType.isInterface()  ||  objType.getEquivalentTo(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface()  ||  objType.getEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface()  ||  objType.getEquivalentTo(prototype))  {  return  false;  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.getEquivalentTo(prototype))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
1180	[BUG]  [BUGGY]  return  defineProperty(name,  objType,  inferred,  propertyNode,  this.type);  [CE]  cannot  find  symbol  type  [FE]                                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  defineProperty(name,  objType,  inferred,  propertyNode,  this.type);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  defineProperty(name,  objType,  inferred,  propertyNode,  this.type);	          return    defineProperty(name,    objType,    inferred,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  type	59	None	replace
1181	[BUG]  [BUGGY]  return  defineProperty(name,  objType,  inferred,  propertyNode,  this.baseType);  [CE]  cannot  find  symbol  baseType  [FE]                                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  defineProperty(name,  objType,  inferred,  propertyNode,  this.baseType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  defineProperty(name,  objType,  inferred,  propertyNode,  this.baseType);	          return    defineProperty(name,    objType,    inferred,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  baseType	59	None	replace
1182	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(name,  propertyNode,  type))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(name,  propertyNode,  type))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(name,  propertyNode,  type))  {  return  true;  }	  if(!objType.isEquivalentTo(propertyNode,    type))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	163	None	replace
1183	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(propertyNode,  type)&&  inferred)  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(propertyNode,  type)&&  inferred)  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(propertyNode,  type)&&  inferred)  {  return  true;  }	  if(!objType.isEquivalentTo(propertyNode,    type))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	163	None	replace
1184	[BUG]  [BUGGY]  if(objType.isInterface()  ||  objType.getEquivalentTo(prototype))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface()  ||  objType.getEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface()  ||  objType.getEquivalentTo(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.getEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
1185	[BUG]  [BUGGY]  if(objType.isPrototypeType()  ||  objType.getEquivalentTo(prototype))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototypeType()  ||  objType.getEquivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototypeType()  ||  objType.getEquivalentTo(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.getEquivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
1186	[BUG]  [BUGGY]  if(objType.isPrototypeType()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototypeType()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototypeType()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isequivalentTo(prototype))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
1187	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(valueNode))  {  return  true;  }  [CE]  cannot  find  symbol  valueNode  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(valueNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)&&  objType.isEquivalentTo(valueNode))  {  return  true;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(valueNode))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  valueNode	170	None	replace
1188	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.equals(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.equals(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.equivalentTo(prototype))    {    return    true;    }    	compilable	timeout	172	1	replace
1189	[BUG]  [BUGGY]  if(objType.equals(prototype))  {  return  true;  }  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.equals(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.equals(prototype))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.equivalentTo(prototype))    {    return    true;    }    	compilable	timeout	172	1	replace
1190	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.equivalentTo(propertyNode))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.equivalentTo(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.equivalentTo(propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.equivalentTo(prototype))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	172	None	replace
1191	[BUG]  [BUGGY]  return  objType.isEquivalentTo(name)||  objType.isEquivalentTo(type,  propertyNode);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(name)||  objType.isEquivalentTo(type,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(name)||  objType.isEquivalentTo(type,  propertyNode);	  return    objType.isEquivalentTo(name)||    objType.isEquivalentTo(propertyNode);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	4	None	replace
1192	[BUG]  [BUGGY]  objType  =  objType.toImplicitPrototype();  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.toImplicitPrototype();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType  =  objType.toImplicitPrototype();	  objType    =    objType.getImplicitPrototype();    timeout    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
1193	[BUG]  [BUGGY]  objType  =  objType.defineProperty(name,  type,  inferred,  propertyNode);  [CE]  incompatible  types  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.defineProperty(name,  type,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType  =  objType.defineProperty(name,  type,  inferred,  propertyNode);	  objType    =    objType.restrictByNotNullOrUndefined();    	non-compiled	[CE]  incompatible  types	155	None	replace
1194	[BUG]  [BUGGY]  objType  =  objType.defineProperty(name,  type.toObjectType(),  inferred);  [CE]  method  defineProperty  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.defineProperty(name,  type.toObjectType(),  inferred);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType  =  objType.defineProperty(name,  type.toObjectType(),  inferred);	  objType    =    objType.restrictByNotNullOrUndefined();    	non-compiled	[CE]  method  defineProperty  in  class  ObjectType  cannot  be  applied  to  given  types;	155	None	replace
1195	[BUG]  [BUGGY]  objType  =  objType.getRawClass();  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.getRawClass();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType  =  objType.getRawClass();	  objType    =    objType.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
1196	[BUG]  [BUGGY]  if(objType.isPrototype()  ||  objType.equals(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype()  ||  objType.equals(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype()  ||  objType.equals(prototype))  {  return  false;  }	  if(objType.isPrototype()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
1197	[BUG]  [BUGGY]  aughtExceptionHandler.handlePrototype(name,  objType);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  aughtExceptionHandler.handlePrototype(name,  objType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	aughtExceptionHandler.handlePrototype(name,  objType);	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    If(objType.isEquivalentTo(prototype))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	35	None	replace
1198	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(name);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  aughtExceptionHandler.handleMissingName(name);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	aughtExceptionHandler.handleMissingName(name);	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    If(objType.isEquivalentTo(prototype))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	35	None	replace
1199	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  if(objType.equals(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	                if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    true;    }    if(objType.equals(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }	  timeout    	compilable	timeout	52	1	add
1200	[BUG]  [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  if(objType.equals(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  timeout  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  if(objType.equals(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	                if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    true;    }    if(objType.equals(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }	  timeout    	compilable	timeout	52	1	add
1201	[BUG]  [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  if(objType.isPrototypeBasedOn(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  if(objType.isPrototypeBasedOn(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	                if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    true;    }    if(objType.isPrototypeBasedOn(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	52	None	add
1202	[BUG]  [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  if(objType.getPrototype())  {  this.setPrototypeBasedOn(objType);  return  true;  }  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  if(objType.getPrototype())  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	                if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    true;    }    if(objType.getPrototype())  {  this.setPrototypeBasedOn(objType);  return  true;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	52	None	add
1203	[BUG]  [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  if(objType.isEquivalentTo(prototype))  <  this.setPrototypeBasedOn(objType);  return  true;  }  [CE]  illegal  start  of  type  [FE]                                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  if(objType.isEquivalentTo(prototype))  <  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	                if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    true;    }    if(objType.isEquivalentTo(prototype))  <  this.setPrototypeBasedOn(objType);  return  true;  }	  timeout    	non-compiled	[CE]  illegal  start  of  type	52	None	add
1204	[BUG]  [BUGGY]  Preconditions.checkState(inferred,  type.isEquivalentTo(propertyNode));  this.setPrototypeBasedOn(objType);  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  Preconditions.checkState(inferred,  type.isEquivalentTo(propertyNode));  this.setPrototypeBasedOn(objType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	Preconditions.checkState(inferred,  type.isEquivalentTo(propertyNode));  this.setPrototypeBasedOn(objType);	  parent.defineProperty(name,    type,    inferred,    propertyNode);    this.setPrototypeBasedOn(objType);    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	21	None	replace
1205	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type,  propertyNode)||  objType.isEquivalentTo(propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type,  propertyNode)||  objType.isEquivalentTo(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type,  propertyNode)||  objType.isEquivalentTo(propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(type)||    objType.isEquivalentTo(propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	79	None	replace
1206	[BUG]  [BUGGY]  if(objType.isEquivalentTo(type))  {  return  true;  }  if(objType.equivalentTo(type))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(type))  {  return  true;  }  if(objType.equivalentTo(type))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(type))    {    return    true;    }    if(objType.equivalentTo(type))  {  return  true;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	142	None	add
1207	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEQUIvalentTo(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEQUIvalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.isEQUIvalentTo(prototype))  {  return  false;  }	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEQUIvalentTo(prototype))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
1208	[BUG]  [BUGGY]  if(objType!=  null  &&!objType.isEquivalentTo(value,  propertyNode))  {  return  false;  }  [CE]  cannot  find  symbol  value  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  &&!objType.isEquivalentTo(value,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=  null  &&!objType.isEquivalentTo(value,  propertyNode))  {  return  false;  }	  if(objType!=    null    &&!objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  value	125	None	replace
1209	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isConstructor()  ||  objType.equivalentTo(prototype))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  true;  }  if(objType.isConstructor()  ||  objType.equivalentTo(prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isConstructor()  ||  objType.equivalentTo(prototype))  {  return  true;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	136	None	add
1210	[BUG]  [BUGGY]  this.setPrototypeOfThis(objType);  return  true;  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  this.setPrototypeOfThis(objType);  return  true;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	this.setPrototypeOfThis(objType);  return  true;	          this.setPrototypeBasedOn(objType);    return    false;    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
1211	[BUG]  [BUGGY]  timeout  [FE]                                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  if(objType.equals(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	                if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    false;    }    if(objType.equals(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }	  timeout    	compilable	timeout	57	1	add
1212	[BUG]  [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  if(objType.equals(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  timeout  [FE]                                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  if(objType.equals(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	                if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    false;    }    if(objType.equals(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }	  timeout    	compilable	timeout	57	1	add
1213	[BUG]  [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  if(objType.isPrototypeBasedOn(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  [CE]  cannot  find  symbol  [FE]                                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  if(objType.isPrototypeBasedOn(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	                if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    false;    }    if(objType.isPrototypeBasedOn(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	57	None	add
1214	[BUG]  [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  if(objType.getPrototype())  {  this.setPrototypeBasedOn(objType);  return  false;  }  [CE]  cannot  find  symbol  [FE]                                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  if(objType.getPrototype())  {  this.setPrototypeBasedOn(objType);  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	                if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    false;    }    if(objType.getPrototype())  {  this.setPrototypeBasedOn(objType);  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	57	None	add
1215	[BUG]  [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  if(objType.isEquivalentTo(prototype))  <  this.setPrototypeBasedOn(objType);  return  false;  }  [CE]  illegal  start  of  type  [FE]                                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  false;  }  if(objType.isEquivalentTo(prototype))  <  this.setPrototypeBasedOn(objType);  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	                if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    false;    }    if(objType.isEquivalentTo(prototype))  <  this.setPrototypeBasedOn(objType);  return  false;  }	  timeout    	non-compiled	[CE]  illegal  start  of  type	57	None	add
1216	[BUG]  [BUGGY]  if(objType.isEquivalentTo(value)||  objType.equals(propertyNode))  {  return  false;  }  [CE]  cannot  find  symbol  value  [FE]            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(value)||  objType.equals(propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(value)||  objType.equals(propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.equals(propertyNode))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  value	116	None	replace
1217	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingProperty(name,  objType);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  aughtExceptionHandler.handleMissingProperty(name,  objType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	aughtExceptionHandler.handleMissingProperty(name,  objType);	  if(objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	31	None	replace
1218	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  &&  objType.isUnknownType())  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType!=  null  &&  objType.isUnknownType())  {  return  false;  }	  if(objType!=    null    &&    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	compilable	timeout	175	1	replace
1219	[BUG]  [BUGGY]  if(objType!=  null  &&  objType.isUnknownType())  {  return  false;  }  timeout  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  &&  objType.isUnknownType())  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=  null  &&  objType.isUnknownType())  {  return  false;  }	  if(objType!=    null    &&    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	compilable	timeout	175	1	replace
1220	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  &&  objType.isInstanceType())  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType!=  null  &&  objType.isInstanceType())  {  return  false;  }	  if(objType!=    null    &&    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	compilable	timeout	175	1	replace
1221	[BUG]  [BUGGY]  if(objType!=  null  &&  objType.isInstanceType())  {  return  false;  }  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  &&  objType.isInstanceType())  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=  null  &&  objType.isInstanceType())  {  return  false;  }	  if(objType!=    null    &&    objType.isEquivalentTo(prototype))    {    return    false;    }    timeout    	compilable	timeout	175	1	replace
1222	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(type)||  objType.isEquivalentTo(prototype);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	return  objType.isEquivalentTo(type)||  objType.isEquivalentTo(prototype);	  return    objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(prototype);    	compilable	timeout	1	1	replace
1223	[BUG]  [BUGGY]  return  objType.isEquivalentTo(type)||  objType.isEquivalentTo(prototype);  timeout  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  objType.isEquivalentTo(type)||  objType.isEquivalentTo(prototype);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  objType.isEquivalentTo(type)||  objType.isEquivalentTo(prototype);	  return    objType.isEquivalentTo(propertyNode)||    objType.isEquivalentTo(prototype);    	compilable	timeout	1	1	replace
1224	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)&&  inferred  ||  type.equals(propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)&&  inferred  ||  type.equals(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)&&  inferred  ||  type.equals(propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)&&    inferred)    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	144	None	replace
1225	[BUG]  [BUGGY]  objType.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  return  true;  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  return  true;  }	  parent.defineProperty(name,    type,    inferred,    propertyNode);    this.setPrototypeBasedOn(objType);    return    true;    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
1226	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  return  false;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	objType.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  return  false;	  parent.defineProperty(name,    type,    inferred,    propertyNode);    this.setPrototypeBasedOn(objType);    return    true;    	compilable	timeout	154	1	replace
1227	[BUG]  [BUGGY]  objType.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  return  false;  timeout  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  return  false;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType.defineProperty(name,  type,  inferred,  propertyNode);  this.setPrototypeBasedOn(objType);  return  false;	  parent.defineProperty(name,    type,    inferred,    propertyNode);    this.setPrototypeBasedOn(objType);    return    true;    	compilable	timeout	154	1	replace
1228	[BUG]  [BUGGY]  if(!objType.isEquivalentTo(inferred,  propertyNode))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(!objType.isEquivalentTo(inferred,  propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(!objType.isEquivalentTo(inferred,  propertyNode))  {  return  true;  }	  if(!objType.isEquivalentTo(propertyNode,    inferred))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	90	None	replace
1229	[BUG]  [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.getInterface()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isInterface()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType.getInterface()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isInterface()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType.getInterface()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	129	None	add
1230	[BUG]  [BUGGY]  ObjectType  baseType  =  this.baseType.getBaseType();  this.setPrototypeBasedOn(baseType);  [CE]  cannot  find  symbol  baseType  [FE]                                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  ObjectType  baseType  =  this.baseType.getBaseType();  this.setPrototypeBasedOn(baseType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	ObjectType  baseType  =  this.baseType.getBaseType();  this.setPrototypeBasedOn(baseType);	          ObjectType    baseType    =    objType.getBaseType();    this.setPrototypeBasedOn(baseType);    	non-compiled	[CE]  cannot  find  symbol  baseType	60	None	replace
1231	[BUG]  [BUGGY]          this.setPrototypeBasedOn(objType);  This.setPrototypeBasedOn(objType);  [CE]  cannot  find  symbol  This  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          this.setPrototypeBasedOn(objType);  This.setPrototypeBasedOn(objType);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	                this.setPrototypeBasedOn(objType);    This.setPrototypeBasedOn(objType);	  timeout    	non-compiled	[CE]  cannot  find  symbol  This	50	None	add
1232	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          this.setPrototypeBasedOn(objType);  objType  =  objType.toObjectType();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	                this.setPrototypeBasedOn(objType);    objType  =  objType.toObjectType();	  timeout    	compilable	timeout	50	1	add
1233	[BUG]  [BUGGY]          this.setPrototypeBasedOn(objType);  objType  =  objType.toObjectType();  timeout  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          this.setPrototypeBasedOn(objType);  objType  =  objType.toObjectType();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	                this.setPrototypeBasedOn(objType);    objType  =  objType.toObjectType();	  timeout    	compilable	timeout	50	1	add
1234	[BUG]  [BUGGY]          this.setPrototypeBasedOn(objType);  this.setPrototypeBasedOn(objType);  }  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]          this.setPrototypeBasedOn(objType);  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	                this.setPrototypeBasedOn(objType);    this.setPrototypeBasedOn(objType);  }	  timeout    	non-compiled	[CE]  illegal  start  of  type	50	None	add
1235	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isUnknownType())  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.isConstructor()  ||  objType.isUnknownType())  {  return  true;  }	  if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    true;    }    timeout    	compilable	timeout	137	1	replace
1236	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isUnknownType())  {  return  true;  }  timeout  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isUnknownType())  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()  ||  objType.isUnknownType())  {  return  true;  }	  if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    true;    }    timeout    	compilable	timeout	137	1	replace
1237	[BUG]  [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(ObjType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  [CE]  cannot  find  symbol  ObjType  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  if(ObjType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isConstructor()    ||    objType.isEquivalentTo(prototype))    {    return    false;    }    if(ObjType.isConstructor()  ||  objType.isEquivalentTo(prototype))  {  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol  ObjType	61	None	add
1238	[BUG]  [BUGGY]  return(objType!=  null)?  false  :  objType.isPrototype();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null)?  false  :  objType.isPrototype();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=  null)?  false  :  objType.isPrototype();	  return(objType!=    null)?    false    :    objType.isEquivalentTo(prototype);    timeout    	non-compiled	[CE]  cannot  find  symbol	168	None	replace
1239	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType!=  null  &&  objType.equals(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType!=    null    &&    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType!=  null  &&  objType.equals(prototype))  {  return  false;  }	  timeout    	compilable	timeout	174	1	add
1240	[BUG]  [BUGGY]  if(objType!=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType!=  null  &&  objType.equals(prototype))  {  return  false;  }  timeout  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType!=  null  &&  objType.isEquivalentTo(prototype))  {  return  false;  }  if(objType!=  null  &&  objType.equals(prototype))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType!=    null    &&    objType.isEquivalentTo(prototype))    {    return    false;    }    if(objType!=  null  &&  objType.equals(prototype))  {  return  false;  }	  timeout    	compilable	timeout	174	1	add
1241	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode,  prototype))  {  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode,  prototype))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode,  prototype))  {  return  true;  }	  if(objType.isEquivalentTo(prototype,    propertyNode))    {    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	85	None	replace
1242	[BUG]  [BUGGY]  if(objType.isEquivalentTo(value,  name))  {  return  false;  }  [CE]  cannot  find  symbol  value  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(value,  name))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(value,  name))  {  return  false;  }	  if(objType.isEquivalentTo(name,    propertyNode))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  value	97	None	replace
1243	[BUG]  [BUGGY]  this.setInferredProperty(name,  objType);  return  true;  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  this.setInferredProperty(name,  objType);  return  true;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	this.setInferredProperty(name,  objType);  return  true;	          if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    true;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
1244	[BUG]  [BUGGY]  this.setImplicitPrototypeBasedOn(objType);  return  true;  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  this.setImplicitPrototypeBasedOn(objType);  return  true;  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	this.setImplicitPrototypeBasedOn(objType);  return  true;	          if(objType.isEquivalentTo(prototype))    {    this.setPrototypeBasedOn(objType);    return    true;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
1245	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||!inferred,  propertyNode)  {  return  true;  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||!inferred,  propertyNode)  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||!inferred,  propertyNode)  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||!inferred)    {    return    true;    }    	non-compiled	[CE]  	146	None	replace
1246	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode,  type))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode,  type))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode,  type))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }	  return    false;    if(objType.isEquivalentTo(propertyNode))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	161	None	replace
1247	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.isPrototypeBasedOn(propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode)||  objType.isPrototypeBasedOn(propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode)||  objType.isPrototypeBasedOn(propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  return  true;  }	  return    false;    if(objType.isEquivalentTo(propertyNode))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    return    true;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	161	None	replace
1248	[BUG]  [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(value,  propertyNode,  inferred);  [CE]  cannot  find  symbol  value  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType!=  null)?  false  :  objType.isEquivalentTo(value,  propertyNode,  inferred);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType!=  null)?  false  :  objType.isEquivalentTo(value,  propertyNode,  inferred);	  return(objType!=    null)?    false    :    objType.isEquivalentTo(propertyNode,    inferred);    	non-compiled	[CE]  cannot  find  symbol  value	41	None	replace
1249	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode,  type)&&  inferred)  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode,  type)&&  inferred)  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode,  type)&&  inferred)  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode,    type))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	98	None	replace
1250	[BUG]  [BUGGY]  if(objType.isEquivalentTo(parent))  {  return  false;  }  [CE]  cannot  find  symbol  parent  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(parent))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(parent))  {  return  false;  }	  if(objType.isEquivalentTo(value))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  parent	122	None	replace
1251	[BUG]  [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode,  type),  inferred)  {  return  true;  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode,  type),  inferred)  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(propertyNode,  type),  inferred)  {  return  true;  }	  if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(propertyNode,    type))    {    return    true;    }    	non-compiled	[CE]  	78	None	replace
1252	[BUG]  [BUGGY]  if(objType.isEquivalentTo(propertyNode,  inferred)||  objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(propertyNode,  inferred)||  objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(propertyNode,  inferred)||  objType.isEquivalentTo(type,  propertyNode))  {  return  false;  }	  if(objType.isEquivalentTo(propertyNode,    inferred)||    objType.isEquivalentTo(propertyNode))    {    return    false;    }    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	39	None	replace
1253	[BUG]  [BUGGY]  if(objType.isEquivalentTo(value))  {  return  true;  }  [CE]  cannot  find  symbol  value  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(value))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(value))  {  return  true;  }	  if(objType.isEquivalentTo(name))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  value	141	None	replace
1254	[BUG]  [BUGGY]  if(objType.isPrototype()  ||  objType.isUnknownType())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype()  ||  objType.isUnknownType())  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype()  ||  objType.isUnknownType())  {  return  true;  }	  if(objType.isPrototype())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
1255	[BUG]  [BUGGY]  if(objType.isPrototype()  ||  objType.isInterface())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isPrototype()  ||  objType.isInterface())  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isPrototype()  ||  objType.isInterface())  {  return  true;  }	  if(objType.isPrototype())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
1256	[BUG]  [BUGGY]  return  false;  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(type))  {  return  false;  }  [CE]  unreachable  statement  [FE]              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  false;  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(type))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  false;  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(type))  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(objectType))    {    return    false;    }    	non-compiled	[CE]  unreachable  statement	118	None	replace
1257	[BUG]  [BUGGY]  return  false;  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(value))  {  return  false;  }  [CE]  cannot  find  symbol  value  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return  false;  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(value))  {  return  false;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return  false;  if(objType.isEquivalentTo(prototype)||  objType.isEquivalentTo(value))  {  return  false;  }	  return    false;    if(objType.isEquivalentTo(prototype)||    objType.isEquivalentTo(objectType))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  value	118	None	replace
1258	[BUG]  [BUGGY]  objType  =  objType.toEmptyType();  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.toEmptyType();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType  =  objType.toEmptyType();	  objType    =    objType.toObjectType();    timeout    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
1259	[BUG]  [BUGGY]  plainProperty(name,  objType,  inferred,  propertyNode);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  plainProperty(name,  objType,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	plainProperty(name,  objType,  inferred,  propertyNode);	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))    {    return    true;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
1260	[BUG]  [BUGGY]  AnnotationProperty  objType  =  objType.getPropertyAnnotation(propertyNode);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  AnnotationProperty  objType  =  objType.getPropertyAnnotation(propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	AnnotationProperty  objType  =  objType.getPropertyAnnotation(propertyNode);	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))    {    return    true;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
1261	[BUG]  [BUGGY]  plainProperty(name,  type,  inferred,  propertyNode);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  plainProperty(name,  type,  inferred,  propertyNode);  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	plainProperty(name,  type,  inferred,  propertyNode);	  if(objType.isEquivalentTo(prototype))    {    return    true;    }    if(objType.isEquivalentTo(prototype))    {    return    true;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
1262	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.equals(propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	if(objType.equals(propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  return    false;    if(objType.isEquivalentTo(propertyNode))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    	compilable	timeout	14	1	replace
1263	[BUG]  [BUGGY]  if(objType.equals(propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  timeout  [FE]                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.equals(propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.equals(propertyNode))  {  return  false;  }  else  {  this.setPrototypeBasedOn(objType);  }	  return    false;    if(objType.isEquivalentTo(propertyNode))    {    return    false;    }    else    {    this.setPrototypeBasedOn(objType);    }    	compilable	timeout	14	1	replace
1264	[BUG]  [BUGGY]  objType  =  objType.toObjectType();  objType  =  objType.toObjectType();  }  else  {  for(Node  n  =  propertyNode.getFirstChild();  n!=  null;  n  =  n.getNext())  {  objType  =  n.getNext();  }  [CE]  incompatible  types  [FE]                            ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.toObjectType();  objType  =  objType.toObjectType();  }  else  {  for(Node  n  =  propertyNode.getFirstChild();  n!=  null;  n  =  n.getNext())  {  objType  =  n.getNext();  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType    =    objType.toObjectType();    objType  =  objType.toObjectType();  }  else  {  for(Node  n  =  propertyNode.getFirstChild();  n!=  null;  n  =  n.getNext())  {  objType  =  n.getNext();  }	  timeout    	non-compiled	[CE]  incompatible  types	156	None	add
1265	[BUG]  [BUGGY]  objType  =  objType.toObjectType();  objType  =  objType.toObjectType();  }  else  {  for(Node  n  =  propertyNode.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  objType  =  n.getLastChild  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.toObjectType();  objType  =  objType.toObjectType();  }  else  {  for(Node  n  =  propertyNode.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  objType  =  n.getLastChild  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType    =    objType.toObjectType();    objType  =  objType.toObjectType();  }  else  {  for(Node  n  =  propertyNode.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  objType  =  n.getLastChild	  timeout    	non-compiled	[CE]  ';'  expected	156	None	add
1266	[BUG]  [BUGGY]  objType  =  objType.toObjectType();  objType  =  objType.toObjectType();  }  else  if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.toObjectType();  objType  =  objType.toObjectType();  }  else  if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType    =    objType.toObjectType();    objType  =  objType.toObjectType();  }  else  if(objType.isEquivalentTo(prototype))  {  this.setPrototypeBasedOn(objType);  return  true;  }	  timeout    	non-compiled	[CE]  illegal  start  of  type	156	None	add
1267	[BUG]  [BUGGY]  objType  =  objType.toObjectType();  objType  =  objType.toObjectType();  }  else  {  for(Node  n  =  propertyNode.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  objType  =  n.getLastChil  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.toObjectType();  objType  =  objType.toObjectType();  }  else  {  for(Node  n  =  propertyNode.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  objType  =  n.getLastChil  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType    =    objType.toObjectType();    objType  =  objType.toObjectType();  }  else  {  for(Node  n  =  propertyNode.getFirstChild();  n!=  null;  n  =  n.getLastChild())  {  objType  =  n.getLastChil	  timeout    	non-compiled	[CE]  ';'  expected	156	None	add
1268	[BUG]  [BUGGY]  objType  =  objType.toObjectType();  objType  =  objType.toObjectType();  }  else  {  for(Node  n  =  propertyNode.getFirstChild();  n!=  null;  n  =  n.getNext())  {  objType  =  n.getLastChild();  [CE]  'else'  without  'if'  [FE]                                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.toObjectType();  objType  =  objType.toObjectType();  }  else  {  for(Node  n  =  propertyNode.getFirstChild();  n!=  null;  n  =  n.getNext())  {  objType  =  n.getLastChild();  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType    =    objType.toObjectType();    objType  =  objType.toObjectType();  }  else  {  for(Node  n  =  propertyNode.getFirstChild();  n!=  null;  n  =  n.getNext())  {  objType  =  n.getLastChild();	  timeout    	non-compiled	[CE]  'else'  without  'if'	156	None	add
1269	[BUG]  [BUGGY]  objType  =  objType.toObjectType();  objType  =  objType.toObjectType();  }  else  {  for(Node  n  =  propertyNode.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  objType  =  n.getLastChild  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.toObjectType();  objType  =  objType.toObjectType();  }  else  {  for(Node  n  =  propertyNode.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  objType  =  n.getLastChild  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType    =    objType.toObjectType();    objType  =  objType.toObjectType();  }  else  {  for(Node  n  =  propertyNode.getFirstChild();  n!=  null;  n  =  n.getFirstChild())  {  objType  =  n.getLastChild	  timeout    	non-compiled	[CE]  ';'  expected	156	None	add
1270	[BUG]  [BUGGY]  objType  =  objType.toObjectType();  objType  =  objType.toObjectType();  }  else  {  for(Node  n  =  propertyNode.getFirstChild();  n!=  null;  n  =  n.getNext())  {  objType  =  n.getLastChild  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  objType  =  objType.toObjectType();  objType  =  objType.toObjectType();  }  else  {  for(Node  n  =  propertyNode.getFirstChild();  n!=  null;  n  =  n.getNext())  {  objType  =  n.getLastChild  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	objType    =    objType.toObjectType();    objType  =  objType.toObjectType();  }  else  {  for(Node  n  =  propertyNode.getFirstChild();  n!=  null;  n  =  n.getNext())  {  objType  =  n.getLastChild	  timeout    	non-compiled	[CE]  ';'  expected	156	None	add
1271	[BUG]  [BUGGY]  return(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(propertyNode));  [CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  return(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(propertyNode));  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	return(objType.isEquivalentTo(propertyNode)||  type.isEquivalentTo(propertyNode));	  return(objType.isEquivalentTo(prototype)||    type.isEquivalentTo(propertyNode));    	non-compiled	[CE]  method  isEquivalentTo  in  class  JSType  cannot  be  applied  to  given  types;	67	None	replace
1272	[BUG]  [BUGGY]  if(objType.isEquivalentTo(value)||  objType.equals(propertyNode))  {  return  true;  }  [CE]  cannot  find  symbol  value  [FE]                    ComparisonFailure      [CONTEXT]      boolean  defineProperty(String  name,  JSType  type,  boolean  inferred,  Node  propertyNode)  {  if  (     "prototype     ".equals(name))  {  ObjectType  objType  =  type.toObjectType();  if  (objType  !=  null)  {  if  (objType.isEquivalentTo(prototype))  {      [BUGGY]  if(objType.isEquivalentTo(value)||  objType.equals(propertyNode))  {  return  true;  }  [BUGGY]      }  this.setPrototypeBasedOn(objType);  return  true;  }  else  {  return  false;  }  }  return  super.defineProperty(name,  type,  inferred,  propertyNode);  }  [CLASS]  FunctionType  Kind  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  baseType  instance  interfaceType  objType  type  typeOfThis  JSType  type  boolean  inferred  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  propertyNode  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	if(objType.isEquivalentTo(value)||  objType.equals(propertyNode))  {  return  true;  }	  if(objType.isEquivalentTo(propertyNode)||    objType.equals(propertyNode))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  value	151	None	replace
