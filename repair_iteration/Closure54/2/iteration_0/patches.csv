bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Node  params  =  getParameterType();  [CE]  incompatible  types  [FE]    ComparisonFailure  [CONTEXT]  public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  ( "call ".equals(name))  {    [BUGGY]  Node  params  =  getParameterType();  [BUGGY]  if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameterType();	Node  params  =  getParametersNode();  	non-compiled	[CE]  incompatible  types	3	None	replace
2	[BUG]  [BUGGY]  Node  params  =  getParameterTypesNode();  [CE]  cannot  find  symbol  [FE]      ComparisonFailure  [CONTEXT]  public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  ( "call ".equals(name))  {    [BUGGY]  Node  params  =  getParameterTypesNode();  [BUGGY]  if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameterTypesNode();	Node  params  =  getParametersNode();  	non-compiled	[CE]  cannot  find  symbol	3	None	replace
3	[BUG]  [BUGGY]  Node  params  =  getParameter(name);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure  [CONTEXT]  public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  ( "call ".equals(name))  {    [BUGGY]  Node  params  =  getParameter(name);  [BUGGY]  if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameter(name);	Node  params  =  getParametersNode();  	non-compiled	[CE]  cannot  find  symbol	3	None	replace
4	[BUG]  [BUGGY]  Node  params  =  getReturnType();  [CE]  incompatible  types  [FE]          ComparisonFailure  [CONTEXT]  public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  ( "call ".equals(name))  {    [BUGGY]  Node  params  =  getReturnType();  [BUGGY]  if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getReturnType();	Node  params  =  getParametersNode();  	non-compiled	[CE]  incompatible  types	3	None	replace
5	[BUG]  [BUGGY]  Node  params  =  getParameterCount();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure  [CONTEXT]  public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  ( "call ".equals(name))  {    [BUGGY]  Node  params  =  getParameterCount();  [BUGGY]  if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameterCount();	Node  params  =  getParametersNode();  	non-compiled	[CE]  cannot  find  symbol	3	None	replace
6	[BUG]  [BUGGY]  Node  params  =  getDeclaredPropertyNode();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure  [CONTEXT]  public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  ( "call ".equals(name))  {    [BUGGY]  Node  params  =  getDeclaredPropertyNode();  [BUGGY]  if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getDeclaredPropertyNode();	Node  params  =  getParametersNode();  	non-compiled	[CE]  cannot  find  symbol	3	None	replace
7	[BUG]  [BUGGY]  Node  params  =  getParameterTypes();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure  [CONTEXT]  public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  ( "call ".equals(name))  {    [BUGGY]  Node  params  =  getParameterTypes();  [BUGGY]  if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameterTypes();	Node  params  =  getParametersNode();  	non-compiled	[CE]  cannot  find  symbol	3	None	replace
8	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  params  [FE]                  ComparisonFailure  [CONTEXT]  public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  ( "call ".equals(name))  {    [BUGGY]    [BUGGY]  if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	  	Node  params  =  getParametersNode();  	non-compiled	[CE]  cannot  find  symbol  params	3	None	replace
9	[BUG]  [BUGGY]  Node  params  =  getDeclaredParametersNode();  [CE]  cannot  find  symbol  [FE]    ComparisonFailure  [CONTEXT]  public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  ( "call ".equals(name))  {    [BUGGY]  Node  params  =  getDeclaredParametersNode();  [BUGGY]  if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getDeclaredParametersNode();	Node  params  =  getParametersNode();  	non-compiled	[CE]  cannot  find  symbol	3	None	replace
10	[BUG]  [BUGGY]  Node  params  =  getParametersNode(source);  [CE]  method  getParametersNode  in  class  FunctionType  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure  [CONTEXT]  public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  ( "call ".equals(name))  {    [BUGGY]  Node  params  =  getParametersNode(source);  [BUGGY]  if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParametersNode(source);	Node  params  =  getParametersNode();  	non-compiled	[CE]  method  getParametersNode  in  class  FunctionType  cannot  be  applied  to  given  types;	3	None	replace
11	[BUG]  [BUGGY]  Node  params  =  getParametersNode(0);  [CE]  method  getParametersNode  in  class  FunctionType  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure  [CONTEXT]  public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  ( "call ".equals(name))  {    [BUGGY]  Node  params  =  getParametersNode(0);  [BUGGY]  if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParametersNode(0);	Node  params  =  getParametersNode();  	non-compiled	[CE]  method  getParametersNode  in  class  FunctionType  cannot  be  applied  to  given  types;	3	None	replace
12	[BUG]  [BUGGY]  Node  params  =  getParametersNode(thisTypeNode);  [CE]  cannot  find  symbol  thisTypeNode  [FE]    ComparisonFailure  [CONTEXT]  public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  ( "call ".equals(name))  {    [BUGGY]  Node  params  =  getParametersNode(thisTypeNode);  [BUGGY]  if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParametersNode(thisTypeNode);	Node  params  =  getParametersNode();  	non-compiled	[CE]  cannot  find  symbol  thisTypeNode	3	None	replace
13	[BUG]  [BUGGY]  Node  params  =  getParametersNode(name);  [CE]  method  getParametersNode  in  class  FunctionType  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure  [CONTEXT]  public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  ( "call ".equals(name))  {    [BUGGY]  Node  params  =  getParametersNode(name);  [BUGGY]  if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParametersNode(name);	Node  params  =  getParametersNode();  	non-compiled	[CE]  method  getParametersNode  in  class  FunctionType  cannot  be  applied  to  given  types;	3	None	replace
