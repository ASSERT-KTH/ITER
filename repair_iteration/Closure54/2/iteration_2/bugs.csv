bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Node  params  =  getParameterType(0);  [CE]  method  getParameterType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameterType(0);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameterType(0);	  Node    params    =    getParameterType();    	non-compiled	[CE]  method  getParameterType  in  class  ObjectType  cannot  be  applied  to  given  types;	1	None	replace
2	[BUG]  [BUGGY]  Node  params  =  getParameterType().parseFirstChild();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameterType().parseFirstChild();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameterType().parseFirstChild();	  Node    params    =    getParameterType();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
3	[BUG]  [BUGGY]  Node  params  =  getParameterType(name);  [CE]  method  getParameterType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameterType(name);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameterType(name);	  Node    params    =    getParameterType();    	non-compiled	[CE]  method  getParameterType  in  class  ObjectType  cannot  be  applied  to  given  types;	1	None	replace
4	[BUG]  [BUGGY]  Node  params  =  getParameterType().params;  [CE]  cannot  find  symbol  params  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameterType().params;  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameterType().params;	  Node    params    =    getParameterType();    	non-compiled	[CE]  cannot  find  symbol  params	1	None	replace
5	[BUG]  [BUGGY]  Node  params  =  getParameterType().cloneTree();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameterType().cloneTree();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameterType().cloneTree();	  Node    params    =    getParameterType();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
6	[BUG]  [BUGGY]  Node  params  =  getParameterType().getParameterType();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameterType().getParameterType();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameterType().getParameterType();	  Node    params    =    getParameterType();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
7	[BUG]  [BUGGY]  Node  params  =  getPropertyType(name);  [CE]  incompatible  types  [FE]                    ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getPropertyType(name);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getPropertyType(name);	  Node    params    =    getParameterType();    	non-compiled	[CE]  incompatible  types	1	None	replace
8	[BUG]  [BUGGY]  Node  params  =  getParameterTypesNode(name);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameterTypesNode(name);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameterTypesNode(name);	  Node    params    =    getParameterTypesNode();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
9	[BUG]  [BUGGY]  Node  params  =  getParameterTypesNode().cloneTree();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameterTypesNode().cloneTree();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameterTypesNode().cloneTree();	  Node    params    =    getParameterTypesNode();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
10	[BUG]  [BUGGY]  Node  params  =  getParameterTypesNode(source);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameterTypesNode(source);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameterTypesNode(source);	  Node    params    =    getParameterTypesNode();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
11	[BUG]  [BUGGY]  Node  params  =  thisTypeNode.getParameterTypesNode();  [CE]  cannot  find  symbol  thisTypeNode  [FE]                ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  thisTypeNode.getParameterTypesNode();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  thisTypeNode.getParameterTypesNode();	  Node    params    =    getParameterTypesNode();    	non-compiled	[CE]  cannot  find  symbol  thisTypeNode	2	None	replace
12	[BUG]  [BUGGY]  Node  params  =  getParameterTypesNode(0);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameterTypesNode(0);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameterTypesNode(0);	  Node    params    =    getParameterTypesNode();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
13	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  source.getFirstChild();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	add	Node  params  =  source.getFirstChild();	      	compilable	timeout	8	1	replace
14	[BUG]  [BUGGY]  Node  params  =  source.getFirstChild();  timeout  [FE]                      ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  source.getFirstChild();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  source.getFirstChild();	      	compilable	timeout	8	1	replace
15	[BUG]  [BUGGY]  Node  params  =  name.getFirstChild();  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  name.getFirstChild();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  name.getFirstChild();	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
16	[BUG]  [BUGGY]  Node  params  =  lastParam.getFirstChild();  [CE]  cannot  find  symbol  lastParam  [FE]                          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  lastParam.getFirstChild();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  lastParam.getFirstChild();	      	non-compiled	[CE]  cannot  find  symbol  lastParam	8	None	replace
17	[BUG]  [BUGGY]  Node  params  =  lastParam.getNext();  [CE]  cannot  find  symbol  lastParam  [FE]                            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  lastParam.getNext();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  lastParam.getNext();	      	non-compiled	[CE]  cannot  find  symbol  lastParam	8	None	replace
18	[BUG]  [BUGGY]  Node  params  =  lastParam.getLastParam();  [CE]  cannot  find  symbol  lastParam  [FE]                              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  lastParam.getLastParam();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  lastParam.getLastParam();	      	non-compiled	[CE]  cannot  find  symbol  lastParam	8	None	replace
19	[BUG]  [BUGGY]  Node  params  =  name.getNext();  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  name.getNext();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  name.getNext();	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
20	[BUG]  [BUGGY]  Node  params  =  lastParam.getLastChild();  [CE]  cannot  find  symbol  lastParam  [FE]                                  ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  lastParam.getLastChild();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  lastParam.getLastChild();	      	non-compiled	[CE]  cannot  find  symbol  lastParam	8	None	replace
21	[BUG]  [BUGGY]  Node  params  =  getParameterTypes().cloneTree();  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameterTypes().cloneTree();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameterTypes().cloneTree();	  Node    params    =    getParameterTypes();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
22	[BUG]  [BUGGY]  Node  params  =  getParameterTypes(name);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameterTypes(name);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameterTypes(name);	  Node    params    =    getParameterTypes();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
23	[BUG]  [BUGGY]  Node  params  =  getParameterTypes(source);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameterTypes(source);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameterTypes(source);	  Node    params    =    getParameterTypes();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
24	[BUG]  [BUGGY]  Node  params  =  getParameterTypes().getFirstChild();  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameterTypes().getFirstChild();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameterTypes().getFirstChild();	  Node    params    =    getParameterTypes();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
25	[BUG]  [BUGGY]  Node  params  =  getParametersNode(name,  source);  [CE]  method  getParametersNode  in  class  FunctionType  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParametersNode(name,  source);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParametersNode(name,  source);	  Node    params    =    getParametersNode(source);    	non-compiled	[CE]  method  getParametersNode  in  class  FunctionType  cannot  be  applied  to  given  types;	10	None	replace
26	[BUG]  [BUGGY]  Node  params  =  getParametersNode(source,  name);  [CE]  method  getParametersNode  in  class  FunctionType  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParametersNode(source,  name);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParametersNode(source,  name);	  Node    params    =    getParametersNode(source);    	non-compiled	[CE]  method  getParametersNode  in  class  FunctionType  cannot  be  applied  to  given  types;	10	None	replace
27	[BUG]  [BUGGY]  Node  params  =  getParametersNode(thisTypeNode,  source);  [CE]  cannot  find  symbol  thisTypeNode  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParametersNode(thisTypeNode,  source);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParametersNode(thisTypeNode,  source);	  Node    params    =    getParametersNode(source);    	non-compiled	[CE]  cannot  find  symbol  thisTypeNode	10	None	replace
28	[BUG]  [BUGGY]  Node  params  =  getParametersNode(n,  source);  [CE]  cannot  find  symbol  n  [FE]                ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParametersNode(n,  source);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParametersNode(n,  source);	  Node    params    =    getParametersNode(source);    	non-compiled	[CE]  cannot  find  symbol  n	10	None	replace
29	[BUG]  [BUGGY]  Node  params  =  getParametersNode(registry,  source);  [CE]  method  getParametersNode  in  class  FunctionType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParametersNode(registry,  source);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParametersNode(registry,  source);	  Node    params    =    getParametersNode(source);    	non-compiled	[CE]  method  getParametersNode  in  class  FunctionType  cannot  be  applied  to  given  types;	10	None	replace
30	[BUG]  [BUGGY]  Node  params  =  getParametersNode(source,  thisTypeNode);  [CE]  cannot  find  symbol  thisTypeNode  [FE]                    ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParametersNode(source,  thisTypeNode);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParametersNode(source,  thisTypeNode);	  Node    params    =    getParametersNode(source);    	non-compiled	[CE]  cannot  find  symbol  thisTypeNode	10	None	replace
31	[BUG]  [BUGGY]  Node  params  =  getParametersNode(name,  thisTypeNode);  [CE]  cannot  find  symbol  thisTypeNode  [FE]          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParametersNode(name,  thisTypeNode);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParametersNode(name,  thisTypeNode);	  Node    params    =    getParametersNode(name);    	non-compiled	[CE]  cannot  find  symbol  thisTypeNode	13	None	replace
32	[BUG]  [BUGGY]  Node  params  =  getParametersNode(name,  name);  [CE]  method  getParametersNode  in  class  FunctionType  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParametersNode(name,  name);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParametersNode(name,  name);	  Node    params    =    getParametersNode(name);    	non-compiled	[CE]  method  getParametersNode  in  class  FunctionType  cannot  be  applied  to  given  types;	13	None	replace
33	[BUG]  [BUGGY]  Node  params  =  getParametersNode(thisTypeNode,  name);  [CE]  cannot  find  symbol  thisTypeNode  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParametersNode(thisTypeNode,  name);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParametersNode(thisTypeNode,  name);	  Node    params    =    getParametersNode(name);    	non-compiled	[CE]  cannot  find  symbol  thisTypeNode	13	None	replace
34	[BUG]  [BUGGY]  Node  params  =  getParametersNode(name,  n);  [CE]  cannot  find  symbol  n  [FE]                ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParametersNode(name,  n);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParametersNode(name,  n);	  Node    params    =    getParametersNode(name);    	non-compiled	[CE]  cannot  find  symbol  n	13	None	replace
35	[BUG]  [BUGGY]  Node  params  =  getReturnType().cloneTree();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getReturnType().cloneTree();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getReturnType().cloneTree();	  Node    params    =    getReturnType();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
36	[BUG]  [BUGGY]  Node  params  =  getReturnType().getParent();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getReturnType().getParent();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getReturnType().getParent();	  Node    params    =    getReturnType();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
37	[BUG]  [BUGGY]  Node  params  =  getReturnType().getFirstChild();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getReturnType().getFirstChild();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getReturnType().getFirstChild();	  Node    params    =    getReturnType();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
38	[BUG]  [BUGGY]  Node  params  =  getReturnType(),  source);  [CE]  ';'  expected  [FE]                    ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getReturnType(),  source);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getReturnType(),  source);	  Node    params    =    getReturnType();    	non-compiled	[CE]  ';'  expected	4	None	replace
39	[BUG]  [BUGGY]  Node  params  =  getReturnType().getParameterTypes();  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getReturnType().getParameterTypes();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getReturnType().getParameterTypes();	  Node    params    =    getReturnType();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
40	[BUG]  [BUGGY]  Node  params  =  getParametersNode(n);  [CE]  cannot  find  symbol  n  [FE]        ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParametersNode(n);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParametersNode(n);	  Node    params    =    getParametersNode(thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol  n	12	None	replace
41	[BUG]  [BUGGY]  Node  params  =  getParametersNode(parent);  [CE]  cannot  find  symbol  parent  [FE]          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParametersNode(parent);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParametersNode(parent);	  Node    params    =    getParametersNode(thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol  parent	12	None	replace
42	[BUG]  [BUGGY]  Node  params  =  getParametersNode(call);  [CE]  method  getParametersNode  in  class  FunctionType  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParametersNode(call);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParametersNode(call);	  Node    params    =    getParametersNode(thisTypeNode);    	non-compiled	[CE]  method  getParametersNode  in  class  FunctionType  cannot  be  applied  to  given  types;	12	None	replace
43	[BUG]  [BUGGY]  Node  params  =  getDeclaredParametersNode().cloneTree();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getDeclaredParametersNode().cloneTree();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getDeclaredParametersNode().cloneTree();	  Node    params    =    getDeclaredParametersNode();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
44	[BUG]  [BUGGY]  Node  params  =  getDeclaredParametersNode(source);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getDeclaredParametersNode(source);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getDeclaredParametersNode(source);	  Node    params    =    getDeclaredParametersNode();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
45	[BUG]  [BUGGY]  Node  params  =  getDeclaredParametersNode(),  source);  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getDeclaredParametersNode(),  source);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getDeclaredParametersNode(),  source);	  Node    params    =    getDeclaredParametersNode();    	non-compiled	[CE]  ';'  expected	9	None	replace
46	[BUG]  [BUGGY]  Node  params  =  getDeclaredParametersNode(name);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getDeclaredParametersNode(name);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getDeclaredParametersNode(name);	  Node    params    =    getDeclaredParametersNode();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
47	[BUG]  [BUGGY]  Node  params  =  getDeclaredParametersNode(0);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getDeclaredParametersNode(0);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getDeclaredParametersNode(0);	  Node    params    =    getDeclaredParametersNode();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
48	[BUG]  [BUGGY]  Node  params  =  getDeclaredParametersNode().parent;  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getDeclaredParametersNode().parent;  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getDeclaredParametersNode().parent;	  Node    params    =    getDeclaredParametersNode();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
49	[BUG]  [BUGGY]  Node  params  =  getParameter(name,  source);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameter(name,  source);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameter(name,  source);	  Node    params    =    getParameter(name);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
50	[BUG]  [BUGGY]  Node  params  =  getParameter(name.toLowerCase());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameter(name.toLowerCase());  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameter(name.toLowerCase());	  Node    params    =    getParameter(name);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
51	[BUG]  [BUGGY]  Node  params  =  getParameter(name,  thisTypeNode);  [CE]  cannot  find  symbol  thisTypeNode  [FE]                ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameter(name,  thisTypeNode);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameter(name,  thisTypeNode);	  Node    params    =    getParameter(name);    	non-compiled	[CE]  cannot  find  symbol  thisTypeNode	3	None	replace
52	[BUG]  [BUGGY]  Node  params  =  getParameter(name.toString());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameter(name.toString());  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameter(name.toString());	  Node    params    =    getParameter(name);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
53	[BUG]  [BUGGY]  Node  params  =  getParameter(name,  name);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameter(name,  name);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameter(name,  name);	  Node    params    =    getParameter(name);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
54	[BUG]  [BUGGY]  Node  params  =  getParameter(name)+ "call ";  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameter(name)+ "call ";  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameter(name)+ "call ";	  Node    params    =    getParameter(name);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
55	[BUG]  [BUGGY]  Node  params  =  getDeclaredPropertyNode(name);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getDeclaredPropertyNode(name);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getDeclaredPropertyNode(name);	  Node    params    =    getDeclaredPropertyNode();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
56	[BUG]  [BUGGY]  Node  params  =  getDeclaredPropertyNode(source);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getDeclaredPropertyNode(source);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getDeclaredPropertyNode(source);	  Node    params    =    getDeclaredPropertyNode();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
57	[BUG]  [BUGGY]  Node  params  =  getDeclaredPropertyNode().cloneTree();  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getDeclaredPropertyNode().cloneTree();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getDeclaredPropertyNode().cloneTree();	  Node    params    =    getDeclaredPropertyNode();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
58	[BUG]  [BUGGY]  Node  params  =  getDeclaredPropertyNode(0);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getDeclaredPropertyNode(0);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getDeclaredPropertyNode(0);	  Node    params    =    getDeclaredPropertyNode();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
59	[BUG]  [BUGGY]  Node  params  =  getDeclaredPropertyNode(thisTypeNode);  [CE]  cannot  find  symbol  thisTypeNode  [FE]                          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getDeclaredPropertyNode(thisTypeNode);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getDeclaredPropertyNode(thisTypeNode);	  Node    params    =    getDeclaredPropertyNode();    	non-compiled	[CE]  cannot  find  symbol  thisTypeNode	6	None	replace
60	[BUG]  [BUGGY]  Node  params  =  getDeclaredPropertyNode().getParent();  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getDeclaredPropertyNode().getParent();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getDeclaredPropertyNode().getParent();	  Node    params    =    getDeclaredPropertyNode();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
61	[BUG]  [BUGGY]  Node  params  =  getParametersNode(0).cloneTree();  [CE]  method  getParametersNode  in  class  FunctionType  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParametersNode(0).cloneTree();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParametersNode(0).cloneTree();	  Node    params    =    getParametersNode(0);    	non-compiled	[CE]  method  getParametersNode  in  class  FunctionType  cannot  be  applied  to  given  types;	11	None	replace
62	[BUG]  [BUGGY]  Node  params  =  getParametersNode(1).cloneTree();  [CE]  method  getParametersNode  in  class  FunctionType  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParametersNode(1).cloneTree();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParametersNode(1).cloneTree();	  Node    params    =    getParametersNode(0);    	non-compiled	[CE]  method  getParametersNode  in  class  FunctionType  cannot  be  applied  to  given  types;	11	None	replace
63	[BUG]  [BUGGY]  Node  params  =  getParametersNode(2);  [CE]  method  getParametersNode  in  class  FunctionType  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParametersNode(2);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParametersNode(2);	  Node    params    =    getParametersNode(0);    	non-compiled	[CE]  method  getParametersNode  in  class  FunctionType  cannot  be  applied  to  given  types;	11	None	replace
64	[BUG]  [BUGGY]  Node  params  =  getParametersNode(name,  1);  [CE]  method  getParametersNode  in  class  FunctionType  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParametersNode(name,  1);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParametersNode(name,  1);	  Node    params    =    getParametersNode(0);    	non-compiled	[CE]  method  getParametersNode  in  class  FunctionType  cannot  be  applied  to  given  types;	11	None	replace
65	[BUG]  [BUGGY]  Node  params  =  getParametersNode(name,  0);  [CE]  method  getParametersNode  in  class  FunctionType  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParametersNode(name,  0);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParametersNode(name,  0);	  Node    params    =    getParametersNode(0);    	non-compiled	[CE]  method  getParametersNode  in  class  FunctionType  cannot  be  applied  to  given  types;	11	None	replace
66	[BUG]  [BUGGY]  Node  params  =  getParameterCount()  -  1;  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameterCount()  -  1;  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameterCount()  -  1;	  Node    params    =    getParameterCount();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
67	[BUG]  [BUGGY]  Node  params  =  getParameterCount()  +  1;  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameterCount()  +  1;  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameterCount()  +  1;	  Node    params    =    getParameterCount();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
68	[BUG]  [BUGGY]  Node  params  =  getParameterTypeCount();  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameterTypeCount();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameterTypeCount();	  Node    params    =    getParameterCount();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
69	[BUG]  [BUGGY]  Node  params  =  getParameterCount()  /  2;  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameterCount()  /  2;  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameterCount()  /  2;	  Node    params    =    getParameterCount();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
70	[BUG]  [BUGGY]  Node  params  =  getParameterCount()  *  2;  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameterCount()  *  2;  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameterCount()  *  2;	  Node    params    =    getParameterCount();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
71	[BUG]  [BUGGY]  Node  params  =  getParameterCount()  -  2;  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameterCount()  -  2;  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameterCount()  -  2;	  Node    params    =    getParameterCount();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
72	[BUG]  [BUGGY]  Node  params  =  getParameterTypesByName();  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameterTypesByName();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameterTypesByName();	  Node    params    =    getParameterTypes();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
73	[BUG]  [BUGGY]  Node  params  =  getParametersNode(name,  registry);  [CE]  method  getParametersNode  in  class  FunctionType  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParametersNode(name,  registry);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParametersNode(name,  registry);	  Node    params    =    getParametersNode(name);    	non-compiled	[CE]  method  getParametersNode  in  class  FunctionType  cannot  be  applied  to  given  types;	13	None	replace
74	[BUG]  [BUGGY]  Node  params  =  getParametersNode(name,  compiler);  [CE]  cannot  find  symbol  compiler  [FE]            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParametersNode(name,  compiler);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParametersNode(name,  compiler);	  Node    params    =    getParametersNode(name);    	non-compiled	[CE]  cannot  find  symbol  compiler	13	None	replace
75	[BUG]  [BUGGY]  Node  params  =  getParameter(name,  null);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameter(name,  null);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameter(name,  null);	  Node    params    =    getParameter(name);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
76	[BUG]  [BUGGY]  Node  params  =  getParameter(name,  typeOfThis);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameter(name,  typeOfThis);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameter(name,  typeOfThis);	  Node    params    =    getParameter(name);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
77	[BUG]  [BUGGY]  Node  params  =  getParameter(name).getParameter(0);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameter(name).getParameter(0);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameter(name).getParameter(0);	  Node    params    =    getParameter(name);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
78	[BUG]  [BUGGY]  Node  params  =  getDeclaredParametersNode().getParameters();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getDeclaredParametersNode().getParameters();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getDeclaredParametersNode().getParameters();	  Node    params    =    getDeclaredParametersNode();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
79	[BUG]  [BUGGY]  Node  params  =  getReturnType().getParameterType(0);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getReturnType().getParameterType(0);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getReturnType().getParameterType(0);	  Node    params    =    getReturnType();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
80	[BUG]  [BUGGY]  Node  params  =  getTypeOfThis();  [CE]  incompatible  types  [FE]                ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getTypeOfThis();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getTypeOfThis();	  Node    params    =    getReturnType();    	non-compiled	[CE]  incompatible  types	4	None	replace
81	[BUG]  [BUGGY]  Node  params  =  getParameterType().getParameters();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameterType().getParameters();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameterType().getParameters();	  Node    params    =    getParameterType();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
82	[BUG]  [BUGGY]  Node  params  =  getParameterType().getParameterCount();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameterType().getParameterCount();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameterType().getParameterCount();	  Node    params    =    getParameterType();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
83	[BUG]  [BUGGY]  Node  params  =  getParametersNode(source,  registry);  [CE]  method  getParametersNode  in  class  FunctionType  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParametersNode(source,  registry);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParametersNode(source,  registry);	  Node    params    =    getParametersNode(source);    	non-compiled	[CE]  method  getParametersNode  in  class  FunctionType  cannot  be  applied  to  given  types;	10	None	replace
84	[BUG]  [BUGGY]  Node  params  =  getParametersNode(lastParam,  source);  [CE]  cannot  find  symbol  lastParam  [FE]            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParametersNode(lastParam,  source);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParametersNode(lastParam,  source);	  Node    params    =    getParametersNode(source);    	non-compiled	[CE]  cannot  find  symbol  lastParam	10	None	replace
85	[BUG]  [BUGGY]  Node  params  =  getParametersNode(parent,  source);  [CE]  cannot  find  symbol  parent  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParametersNode(parent,  source);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParametersNode(parent,  source);	  Node    params    =    getParametersNode(source);    	non-compiled	[CE]  cannot  find  symbol  parent	10	None	replace
86	[BUG]  [BUGGY]  Node  params  =  getDeclaredPropertyName();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getDeclaredPropertyName();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getDeclaredPropertyName();	  Node    params    =    getDeclaredPropertyNode();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
87	[BUG]  [BUGGY]  Node  params  =  getDeclaredPropertyType();  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getDeclaredPropertyType();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getDeclaredPropertyType();	  Node    params    =    getDeclaredPropertyNode();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
88	[BUG]  [BUGGY]  FunctionBuilderregistry  registry  =  getRegistry();  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  FunctionBuilderregistry  registry  =  getRegistry();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	FunctionBuilderregistry  registry  =  getRegistry();	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
89	[BUG]  [BUGGY]  Node  params  =  getParams();  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParams();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParams();	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
90	[BUG]  [BUGGY]  Node  params  =  source.getParameters();  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  source.getParameters();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  source.getParameters();	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
91	[BUG]  [BUGGY]  Node  params  =  getParameters();  [CE]  incompatible  types  [FE]                            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameters();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameters();	      	non-compiled	[CE]  incompatible  types	8	None	replace
92	[BUG]  [BUGGY]  Node  params  =  getParametersNode(0).getParameterType(0);  [CE]  method  getParametersNode  in  class  FunctionType  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParametersNode(0).getParameterType(0);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParametersNode(0).getParameterType(0);	  Node    params    =    getParametersNode(0);    	non-compiled	[CE]  method  getParametersNode  in  class  FunctionType  cannot  be  applied  to  given  types;	11	None	replace
93	[BUG]  [BUGGY]  Node  params  =  getParametersNode(lastParam);  [CE]  cannot  find  symbol  lastParam  [FE]        ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParametersNode(lastParam);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParametersNode(lastParam);	  Node    params    =    getParametersNode(thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol  lastParam	12	None	replace
94	[BUG]  [BUGGY]  Node  params  =  getType();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getType();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getType();	  Node    params    =    getReturnType();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
95	[BUG]  [BUGGY]  Node  params  =  getReturnType().getParameterCount();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getReturnType().getParameterCount();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getReturnType().getParameterCount();	  Node    params    =    getReturnType();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
96	[BUG]  [BUGGY]  Node  params  =  getParameter(name,  compiler);  [CE]  cannot  find  symbol  compiler  [FE]            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameter(name,  compiler);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameter(name,  compiler);	  Node    params    =    getParameter(name);    	non-compiled	[CE]  cannot  find  symbol  compiler	3	None	replace
97	[BUG]  [BUGGY]  Node  params  =  findParametersNode(source);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  findParametersNode(source);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  findParametersNode(source);	  Node    params    =    getParametersNode(thisTypeNode);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
98	[BUG]  [BUGGY]  Node  params  =  thisTypeNode.getParameters();  [CE]  cannot  find  symbol  thisTypeNode  [FE]                      ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  thisTypeNode.getParameters();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  thisTypeNode.getParameters();	      	non-compiled	[CE]  cannot  find  symbol  thisTypeNode	8	None	replace
99	[BUG]  [BUGGY]  Node  params  =  name.removeFirstChild();  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  name.removeFirstChild();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  name.removeFirstChild();	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
100	[BUG]  [BUGGY]  Node  params  =  name.trim();  [CE]  incompatible  types  [FE]                          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  name.trim();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  name.trim();	      	non-compiled	[CE]  incompatible  types	8	None	replace
101	[BUG]  [BUGGY]  Node  params  =  thisTypeNode.getParameterCount();  [CE]  cannot  find  symbol  thisTypeNode  [FE]                            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  thisTypeNode.getParameterCount();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  thisTypeNode.getParameterCount();	      	non-compiled	[CE]  cannot  find  symbol  thisTypeNode	8	None	replace
102	[BUG]  [BUGGY]  Node  params  =  getParamType();  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParamType();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParamType();	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
103	[BUG]  [BUGGY]  Node  params  =  getParametersNode(name,  declaration);  [CE]  cannot  find  symbol  declaration  [FE]          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParametersNode(name,  declaration);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParametersNode(name,  declaration);	  Node    params    =    getParametersNode(name);    	non-compiled	[CE]  cannot  find  symbol  declaration	13	None	replace
104	[BUG]  [BUGGY]  Node  params  =  getParameterTypesNode(thisTypeNode);  [CE]  cannot  find  symbol  thisTypeNode  [FE]          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameterTypesNode(thisTypeNode);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameterTypesNode(thisTypeNode);	  Node    params    =    getParameterTypesNode();    	non-compiled	[CE]  cannot  find  symbol  thisTypeNode	2	None	replace
105	[BUG]  [BUGGY]  Node  params  =  getParameterTypesNode().getFirstChild();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameterTypesNode().getFirstChild();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameterTypesNode().getFirstChild();	  Node    params    =    getParameterTypesNode();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
106	[BUG]  [BUGGY]  Node  params  =  getDeclaredParametersNode(thisTypeNode);  [CE]  cannot  find  symbol  thisTypeNode  [FE]        ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getDeclaredParametersNode(thisTypeNode);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getDeclaredParametersNode(thisTypeNode);	  Node    params    =    getDeclaredParametersNode();    	non-compiled	[CE]  cannot  find  symbol  thisTypeNode	9	None	replace
107	[BUG]  [BUGGY]  Node  params  =  getParameterType().restrictByNotNullOrUndefined();  [CE]  incompatible  types  [FE]        ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameterType().restrictByNotNullOrUndefined();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameterType().restrictByNotNullOrUndefined();	  Node    params    =    getParameterType();    	non-compiled	[CE]  incompatible  types	1	None	replace
108	[BUG]  [BUGGY]  Node  params  =  getDeclaredPropertyNameNode();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getDeclaredPropertyNameNode();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getDeclaredPropertyNameNode();	  Node    params    =    getDeclaredPropertyNode();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
109	[BUG]  [BUGGY]  Node  params  =  getDeclaredPropertyParam();  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getDeclaredPropertyParam();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getDeclaredPropertyParam();	  Node    params    =    getDeclaredPropertyNode();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
110	[BUG]  [BUGGY]  Node  params  =  getDeclaredPropertyTypeNode();  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getDeclaredPropertyTypeNode();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getDeclaredPropertyTypeNode();	  Node    params    =    getDeclaredPropertyNode();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
111	[BUG]  [BUGGY]  Node  params  =  getParameterTypesByName(name);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameterTypesByName(name);  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameterTypesByName(name);	  Node    params    =    getParameterTypes();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
112	[BUG]  [BUGGY]  Node  params  =  getParameterTypes().iterator().next();  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {      [BUGGY]  Node  params  =  getParameterTypes().iterator().next();  [BUGGY]    if  (params  ==  null)  {    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	Node  params  =  getParameterTypes().iterator().next();	  Node    params    =    getParameterTypes();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
