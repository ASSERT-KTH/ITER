bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.GETPROP)    {    if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	42	None	add
2	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  &&  params.getType()  ==  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  &&  params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.GETPROP)    {    if(params  ==  null  &&  params.getType()  ==  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	42	None	add
3	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params  >=  null  &&  params.getType()  ==  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params  >=  null  &&  params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.GETPROP)    {    if(params  >=  null  &&  params.getType()  ==  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	42	None	add
4	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  If(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  If(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.GETPROP)    {    If(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  	42	None	add
5	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params  >>  null  &&  params.getType()  ==  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params  >>  null  &&  params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.GETPROP)    {    if(params  >>  null  &&  params.getType()  ==  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	42	None	add
6	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  &&  params.getType()  >=  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  &&  params.getType()  >=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.GETPROP)    {    if(params!=  null  &&  params.getType()  >=  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	42	None	add
7	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params  [BUGGY]  null  &&  params.getType()  ==  Token.GETPROP)  {  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params  [BUGGY]  null  &&  params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.GETPROP)    {    if(params  [BUGGY]  null  &&  params.getType()  ==  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  	42	None	add
8	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  if(params!=  null  &&  Params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  if(params!=  null  &&  Params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  if(params!=  null  &&  Params.getType()  ==  Token.NAME)  {	  if(params!=    null    ||    params.getType()    ==    Token.NAME)    {    if(params!=    null    ||    Params.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	121	None	replace
9	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  if(params!=  null  &&  Params.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  if(params!=  null  &&  Params.getType()  ==  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  if(params!=  null  &&  Params.getType()  ==  Token.FUNCTION)  {	  if(params!=    null    ||    params.getType()    ==    Token.NAME)    {    if(params!=    null    ||    Params.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	121	None	replace
10	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  if(params!=  null  &&  Params.getType()  ==  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  if(params!=  null  &&  Params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  if(params!=  null  &&  Params.getType()  ==  Token.GETPROP)  {	  if(params!=    null    ||    params.getType()    ==    Token.NAME)    {    if(params!=    null    ||    Params.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	121	None	replace
11	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.GETELEM)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  &&  params.getType()  ==  Token.GETELEM)  {	  if(params!=    null    &&    params.getType()    ==    Token.GETPROP)    {    timeout    	compilable	timeout	43	1	replace
12	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.GETELEM)  {  timeout  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.GETELEM)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getType()  ==  Token.GETELEM)  {	  if(params!=    null    &&    params.getType()    ==    Token.GETPROP)    {    timeout    	compilable	timeout	43	1	replace
13	[BUG]  [BUGGY]  Node  source  =  params!=  null?  params.getString()  : "null ";  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  params!=  null?  params.getString()  : "null ";  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params!=  null?  params.getString()  : "null ";	  Node    source    =    params.getString();    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
14	[BUG]  [BUGGY]  Node  source  =  params  ==  null?  params.getString()  : "null ";  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  params  ==  null?  params.getString()  : "null ";  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params  ==  null?  params.getString()  : "null ";	  Node    source    =    params.getString();    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
15	[BUG]  [BUGGY]  Node  source  =  params.getString(),  name;  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  params.getString(),  name;  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params.getString(),  name;	  Node    source    =    params.getString();    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
16	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.NAME)    {    if(params!=  null  &&  params.getType()  ==  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	53	None	add
17	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  if(params  ==  null  &&  params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  if(params  ==  null  &&  params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.NAME)    {    if(params  ==  null  &&  params.getType()  ==  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	53	None	add
18	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  if(params  >=  null  &&  params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  if(params  >=  null  &&  params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.NAME)    {    if(params  >=  null  &&  params.getType()  ==  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	53	None	add
19	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  If(params!=  null  &&  params.getType()  ==  Token.NAME)  {  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  If(params!=  null  &&  params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.NAME)    {    If(params!=  null  &&  params.getType()  ==  Token.NAME)  {	  timeout    	non-compiled	[CE]  	53	None	add
20	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  if(params  >>  null  &&  params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  if(params  >>  null  &&  params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.NAME)    {    if(params  >>  null  &&  params.getType()  ==  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	53	None	add
21	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  if(params!=  null  &&  params.getType()  >=  Token.NAME)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  if(params!=  null  &&  params.getType()  >=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.NAME)    {    if(params!=  null  &&  params.getType()  >=  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	53	None	add
22	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  if(params  [BUGGY]  null  &&  params.getType()  ==  Token.NAME)  {  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  if(params  [BUGGY]  null  &&  params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.NAME)    {    if(params  [BUGGY]  null  &&  params.getType()  ==  Token.NAME)  {	  timeout    	non-compiled	[CE]  	53	None	add
23	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETELEM)  {  if(params!=  null  ||  params.getType()  ==  Token.GETELEM)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETELEM)  {  if(params!=  null  ||  params.getType()  ==  Token.GETELEM)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.GETELEM)    {    if(params!=  null  ||  params.getType()  ==  Token.GETELEM)  {	  timeout    	non-compiled	[CE]  ';'  expected	130	None	add
24	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETELEM)  {  if(params  ==  null  ||  params.getType()  ==  Token.GETELEM)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETELEM)  {  if(params  ==  null  ||  params.getType()  ==  Token.GETELEM)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.GETELEM)    {    if(params  ==  null  ||  params.getType()  ==  Token.GETELEM)  {	  timeout    	non-compiled	[CE]  ';'  expected	130	None	add
25	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETELEM)  {  if(params  >=  null  ||  params.getType()  ==  Token.GETELEM)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETELEM)  {  if(params  >=  null  ||  params.getType()  ==  Token.GETELEM)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.GETELEM)    {    if(params  >=  null  ||  params.getType()  ==  Token.GETELEM)  {	  timeout    	non-compiled	[CE]  ';'  expected	130	None	add
26	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETELEM)  {  If(params!=  null  ||  params.getType()  ==  Token.GETELEM)  {  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETELEM)  {  If(params!=  null  ||  params.getType()  ==  Token.GETELEM)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.GETELEM)    {    If(params!=  null  ||  params.getType()  ==  Token.GETELEM)  {	  timeout    	non-compiled	[CE]  	130	None	add
27	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETELEM)  {  if(params!=  null  ||  params.getType()  >=  Token.GETELEM)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETELEM)  {  if(params!=  null  ||  params.getType()  >=  Token.GETELEM)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.GETELEM)    {    if(params!=  null  ||  params.getType()  >=  Token.GETELEM)  {	  timeout    	non-compiled	[CE]  ';'  expected	130	None	add
28	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETELEM)  {  if(params  >>  null  ||  params.getType()  ==  Token.GETELEM)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETELEM)  {  if(params  >>  null  ||  params.getType()  ==  Token.GETELEM)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.GETELEM)    {    if(params  >>  null  ||  params.getType()  ==  Token.GETELEM)  {	  timeout    	non-compiled	[CE]  ';'  expected	130	None	add
29	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETELEM)  {  if(params!=  null  ||  params.getType()  ==  Token.SETELEM)  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETELEM)  {  if(params!=  null  ||  params.getType()  ==  Token.SETELEM)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.GETELEM)    {    if(params!=  null  ||  params.getType()  ==  Token.SETELEM)  {	  timeout    	non-compiled	[CE]  ';'  expected	130	None	add
30	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.SETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  ||  params.getType()  ==  Token.SETPROP)  {	  if(params    ==    null    ||    params.getType()    ==    Token.SETPROP)    {    timeout    	compilable	timeout	155	1	replace
31	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.SETPROP)  {  timeout  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.SETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  ==  Token.SETPROP)  {	  if(params    ==    null    ||    params.getType()    ==    Token.SETPROP)    {    timeout    	compilable	timeout	155	1	replace
32	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.SETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params  ==  null  ||  params.getType()!=  Token.SETPROP)  {	  if(params    ==    null    ||    params.getType()    ==    Token.SETPROP)    {    timeout    	compilable	timeout	155	1	replace
33	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.SETPROP)  {  timeout  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.SETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()!=  Token.SETPROP)  {	  if(params    ==    null    ||    params.getType()    ==    Token.SETPROP)    {    timeout    	compilable	timeout	155	1	replace
34	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.SETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  &&  params.getType()  ==  Token.SETPROP)  {	  if(params    ==    null    ||    params.getType()    ==    Token.SETPROP)    {    timeout    	compilable	timeout	155	1	replace
35	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.SETPROP)  {  timeout  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.SETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getType()  ==  Token.SETPROP)  {	  if(params    ==    null    ||    params.getType()    ==    Token.SETPROP)    {    timeout    	compilable	timeout	155	1	replace
36	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.SETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params  ==  null  &&  params.getType()  ==  Token.SETPROP)  {	  if(params    ==    null    ||    params.getType()    ==    Token.SETPROP)    {    timeout    	compilable	timeout	155	1	replace
37	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.SETPROP)  {  timeout  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.SETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  &&  params.getType()  ==  Token.SETPROP)  {	  if(params    ==    null    ||    params.getType()    ==    Token.SETPROP)    {    timeout    	compilable	timeout	155	1	replace
38	[BUG]  [BUGGY]  timeout  [FE]            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params  ==  null  &&  params.getType()!=  Token.FUNCTION)  {	  if(params    >=    null    ||    params.getType()!=    Token.FUNCTION)    {    	compilable	timeout	138	1	replace
39	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.FUNCTION)  {  timeout  [FE]            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  &&  params.getType()!=  Token.FUNCTION)  {	  if(params    >=    null    ||    params.getType()!=    Token.FUNCTION)    {    	compilable	timeout	138	1	replace
40	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()!=  Token.BLOCK)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()!=  Token.BLOCK)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()!=  Token.BLOCK)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params    ==    null    ||    params.getType()!=    Token.BLOCK)    {    	non-compiled	[CE]  ';'  expected	124	None	replace
41	[BUG]  [BUGGY]  if(params!=  null)  {  If(params  ==  null  ||  params.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null)  {  If(params  ==  null  ||  params.getType()!=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null)  {  If(params  ==  null  ||  params.getType()!=  Token.NAME)  {	  if(params    ==    null    ||    params.getType()!=    Token.NAME)    {    If(params    ==    null    ||    params.getType()!=    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	20	None	replace
42	[BUG]  [BUGGY]  if(params  ==  null)  {  If(params  ==  null  ||  params.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null)  {  If(params  ==  null  ||  params.getType()!=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null)  {  If(params  ==  null  ||  params.getType()!=  Token.NAME)  {	  if(params    ==    null    ||    params.getType()!=    Token.NAME)    {    If(params    ==    null    ||    params.getType()!=    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	20	None	replace
43	[BUG]  [BUGGY]  If(params  ==  null  ||  params.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  If(params  ==  null  ||  params.getType()!=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	If(params  ==  null  ||  params.getType()!=  Token.NAME)  {	  if(params    ==    null    ||    params.getType()!=    Token.NAME)    {    If(params    ==    null    ||    params.getType()!=    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	20	None	replace
44	[BUG]  [BUGGY]  Node  source  =  params!=  null?  params.getSource()  :  null;  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  params!=  null?  params.getSource()  :  null;  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params!=  null?  params.getSource()  :  null;	  Node    source    =    params.getSource();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
45	[BUG]  [BUGGY]  Node  source  =  params  ==  null?  params.getSource()  :  null;  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  params  ==  null?  params.getSource()  :  null;  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params  ==  null?  params.getSource()  :  null;	  Node    source    =    params.getSource();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
46	[BUG]  [BUGGY]  Node  source  =  params!=  null?  params.getSource()  :  Collections.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  params!=  null?  params.getSource()  :  Collections.EMPTY_LIST;  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params!=  null?  params.getSource()  :  Collections.EMPTY_LIST;	  Node    source    =    params.getSource();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
47	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.FUNCTION)  {  if(params  ==  null  &&  params.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.FUNCTION)  {  if(params  ==  null  &&  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()    ==    Token.FUNCTION)    {    if(params  ==  null  &&  params.getType()  ==  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	25	None	add
48	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.FUNCTION)  {  if(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.FUNCTION)  {  if(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()    ==    Token.FUNCTION)    {    if(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	25	None	add
49	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.FUNCTION)  {  if(params  ==  null  &&  params.getType()!=  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.FUNCTION)  {  if(params  ==  null  &&  params.getType()!=  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()    ==    Token.FUNCTION)    {    if(params  ==  null  &&  params.getType()!=  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	25	None	add
50	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.FUNCTION)  {  if(params  >=  null  &&  params.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.FUNCTION)  {  if(params  >=  null  &&  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()    ==    Token.FUNCTION)    {    if(params  >=  null  &&  params.getType()  ==  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	25	None	add
51	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.FUNCTION)  {  If(params  ==  null  &&  params.getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.FUNCTION)  {  If(params  ==  null  &&  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()    ==    Token.FUNCTION)    {    If(params  ==  null  &&  params.getType()  ==  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  	25	None	add
52	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.FUNCTION)  {  if(params  ==  null  &&  params.getType()  >=  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.FUNCTION)  {  if(params  ==  null  &&  params.getType()  >=  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()    ==    Token.FUNCTION)    {    if(params  ==  null  &&  params.getType()  >=  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	25	None	add
53	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.FUNCTION)  {  if(params  >>  null  &&  params.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.FUNCTION)  {  if(params  >>  null  &&  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()    ==    Token.FUNCTION)    {    if(params  >>  null  &&  params.getType()  ==  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	25	None	add
54	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params  ==  null  &&  params.getType()!=  Token.OBJECTLIT)  {	  if(params!=    null    &&    params.getType()!=    Token.OBJECTLIT)    {    timeout    	compilable	timeout	71	1	replace
55	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.OBJECTLIT)  {  timeout  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  &&  params.getType()!=  Token.OBJECTLIT)  {	  if(params!=    null    &&    params.getType()!=    Token.OBJECTLIT)    {    timeout    	compilable	timeout	71	1	replace
56	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.FUNCTION)  {  if(params!=  null  &&  params.getType()!=  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.FUNCTION)  {  if(params!=  null  &&  params.getType()!=  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()!=    Token.FUNCTION)    {    if(params!=  null  &&  params.getType()!=  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	109	None	add
57	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.FUNCTION)  {  if(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.FUNCTION)  {  if(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()!=    Token.FUNCTION)    {    if(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	109	None	add
58	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.FUNCTION)  {  if(params  ==  null  &&  params.getType()!=  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.FUNCTION)  {  if(params  ==  null  &&  params.getType()!=  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()!=    Token.FUNCTION)    {    if(params  ==  null  &&  params.getType()!=  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	109	None	add
59	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.FUNCTION)  {  if(params!=  null  &&  params.getType()  >=  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.FUNCTION)  {  if(params!=  null  &&  params.getType()  >=  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()!=    Token.FUNCTION)    {    if(params!=  null  &&  params.getType()  >=  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	109	None	add
60	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.FUNCTION)  {  if(params!=  null  &&  params.getType()  >>  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.FUNCTION)  {  if(params!=  null  &&  params.getType()  >>  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()!=    Token.FUNCTION)    {    if(params!=  null  &&  params.getType()  >>  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	109	None	add
61	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.FUNCTION)  {  if(params  >=  null  &&  params.getType()!=  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.FUNCTION)  {  if(params  >=  null  &&  params.getType()!=  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()!=    Token.FUNCTION)    {    if(params  >=  null  &&  params.getType()!=  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	109	None	add
62	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.FUNCTION)  {  If(params!=  null  &&  params.getType()!=  Token.FUNCTION)  {  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.FUNCTION)  {  If(params!=  null  &&  params.getType()!=  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()!=    Token.FUNCTION)    {    If(params!=  null  &&  params.getType()!=  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  	109	None	add
63	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.FUNCTION)  {  if(params  >>  null  &&  params.getType()!=  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.FUNCTION)  {  if(params  >>  null  &&  params.getType()!=  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()!=    Token.FUNCTION)    {    if(params  >>  null  &&  params.getType()!=  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	109	None	add
64	[BUG]  [BUGGY]  Node  source  =  params.getProp(Node.SOURCENAME_PROP);  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  params.getProp(Node.SOURCENAME_PROP);  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params.getProp(Node.SOURCENAME_PROP);	  Node    source    =    params.getLineno();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
65	[BUG]  [BUGGY]  Node  source  =  params.getLineno(),  name;  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  params.getLineno(),  name;  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params.getLineno(),  name;	  Node    source    =    params.getLineno();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
66	[BUG]  [BUGGY]  Node  source  =  params.getSourceName();  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  params.getSourceName();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params.getSourceName();	  Node    source    =    params.getLineno();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
67	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.NAME)  {  if(params!=  null  &&  params.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.NAME)  {  if(params!=  null  &&  params.getType()!=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()!=    Token.NAME)    {    if(params!=  null  &&  params.getType()!=  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	38	None	add
68	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.NAME)  {  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.NAME)  {  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()!=    Token.NAME)    {    if(params!=  null  &&  params.getType()  ==  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	38	None	add
69	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.NAME)  {  if(params  ==  null  &&  params.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.NAME)  {  if(params  ==  null  &&  params.getType()!=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()!=    Token.NAME)    {    if(params  ==  null  &&  params.getType()!=  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	38	None	add
70	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.NAME)  {  if(params!=  null  &&  params.getType()  >=  Token.NAME)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.NAME)  {  if(params!=  null  &&  params.getType()  >=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()!=    Token.NAME)    {    if(params!=  null  &&  params.getType()  >=  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	38	None	add
71	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.NAME)  {  if(params  >=  null  &&  params.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.NAME)  {  if(params  >=  null  &&  params.getType()!=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()!=    Token.NAME)    {    if(params  >=  null  &&  params.getType()!=  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	38	None	add
72	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.NAME)  {  if(params!=  null  &&  params.getType()  >>  Token.NAME)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.NAME)  {  if(params!=  null  &&  params.getType()  >>  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()!=    Token.NAME)    {    if(params!=  null  &&  params.getType()  >>  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	38	None	add
73	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.NAME)  {  If(params!=  null  &&  params.getType()!=  Token.NAME)  {  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.NAME)  {  If(params!=  null  &&  params.getType()!=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()!=    Token.NAME)    {    If(params!=  null  &&  params.getType()!=  Token.NAME)  {	  timeout    	non-compiled	[CE]  	38	None	add
74	[BUG]  [BUGGY]  timeout  [FE]            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.VAR)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params  ==  null  &&  params.getType()  ==  Token.VAR)  {	  if(params!=    null    &&    params.getType()    ==    Token.VAR)    {    timeout    	compilable	timeout	133	1	replace
75	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.VAR)  {  timeout  [FE]            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.VAR)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  &&  params.getType()  ==  Token.VAR)  {	  if(params!=    null    &&    params.getType()    ==    Token.VAR)    {    timeout    	compilable	timeout	133	1	replace
76	[BUG]  [BUGGY]  Node  source  =(Node)params.getNext();  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =(Node)params.getNext();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =(Node)params.getNext();	  Node    source    =(Node)params.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
77	[BUG]  [BUGGY]  Node  source  =(Node)params.clonePath();  [CE]  illegal  start  of  type  [FE]                                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =(Node)params.clonePath();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =(Node)params.clonePath();	  Node    source    =(Node)params.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
78	[BUG]  [BUGGY]  Node  source  =(Node)params.next();  [CE]  illegal  start  of  type  [FE]                                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =(Node)params.next();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =(Node)params.next();	  Node    source    =(Node)params.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
79	[BUG]  [BUGGY]  Node  source  =(Node)params.cloneType();  [CE]  illegal  start  of  type  [FE]                                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =(Node)params.cloneType();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =(Node)params.cloneType();	  Node    source    =(Node)params.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
80	[BUG]  [BUGGY]  Node  source  =(Node)params.clone();  [CE]  illegal  start  of  type  [FE]                                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =(Node)params.clone();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =(Node)params.clone();	  Node    source    =(Node)params.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
81	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  If(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  If(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  If(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {	  if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    If(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
82	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  If(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  If(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  If(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {	  if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    If(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
83	[BUG]  [BUGGY]  Node  source  =  params!=  null?  params.getLastChild()  :  params.getLastChild();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  params!=  null?  params.getLastChild()  :  params.getLastChild();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params!=  null?  params.getLastChild()  :  params.getLastChild();	  Node    source    =    params.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
84	[BUG]  [BUGGY]  Node  source  =  params  ==  null?  params.getLastChild()  :  params.getLastChild();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  params  ==  null?  params.getLastChild()  :  params.getLastChild();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params  ==  null?  params.getLastChild()  :  params.getLastChild();	  Node    source    =    params.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
85	[BUG]  [BUGGY]  Node  source  =  params!=  null?  params.getFirstChild()  :  null;  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  params!=  null?  params.getFirstChild()  :  null;  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params!=  null?  params.getFirstChild()  :  null;	  Node    source    =    params.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
86	[BUG]  [BUGGY]  Node  source  =  params!=  null?  params.getNext()  :  params.getFirstChild();  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  params!=  null?  params.getNext()  :  params.getFirstChild();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params!=  null?  params.getNext()  :  params.getFirstChild();	  Node    source    =    params.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
87	[BUG]  [BUGGY]  Node  source  =  params  ==  null?  params.getNext()  :  params.getFirstChild();  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  params  ==  null?  params.getNext()  :  params.getFirstChild();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params  ==  null?  params.getNext()  :  params.getFirstChild();	  Node    source    =    params.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
88	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.OBJECTLIT)    {    if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  ';'  expected	68	None	add
89	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.OBJECTLIT)    {    if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  ';'  expected	68	None	add
90	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.OBJECTLIT)    {    if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  ';'  expected	68	None	add
91	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  If(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  If(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.OBJECTLIT)    {    If(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  	68	None	add
92	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()  >=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()  >=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.OBJECTLIT)    {    if(params  ==  null  ||  params.getType()  >=  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  ';'  expected	68	None	add
93	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  >=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  >=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.OBJECTLIT)    {    if(params  >=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  ';'  expected	68	None	add
94	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  Params.getType()  ==  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  Params.getType()  ==  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.OBJECTLIT)    {    if(params  ==  null  ||  Params.getType()  ==  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  ';'  expected	68	None	add
95	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.EMPTY)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params  ==  null  ||  params.getType()!=  Token.EMPTY)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params    ==    null    ||    params.getType()!=    Token.EMPTY)    {    	compilable	timeout	123	1	replace
96	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.EMPTY)  {  timeout  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.EMPTY)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()!=  Token.EMPTY)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params    ==    null    ||    params.getType()!=    Token.EMPTY)    {    	compilable	timeout	123	1	replace
97	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()!=  Token.EMPTY)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()!=  Token.EMPTY)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()!=  Token.EMPTY)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params    ==    null    ||    params.getType()!=    Token.EMPTY)    {    	non-compiled	[CE]  ';'  expected	123	None	replace
98	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.EMPTY)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  ||  params.getType()!=  Token.EMPTY)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params    ==    null    ||    params.getType()!=    Token.EMPTY)    {    	compilable	timeout	123	1	replace
99	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.EMPTY)  {  timeout  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.EMPTY)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()!=  Token.EMPTY)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params    ==    null    ||    params.getType()!=    Token.EMPTY)    {    	compilable	timeout	123	1	replace
100	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()!=  Token.EMPTY)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()!=  Token.EMPTY)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()!=  Token.EMPTY)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params    ==    null    ||    params.getType()!=    Token.EMPTY)    {    	non-compiled	[CE]  ';'  expected	123	None	replace
101	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.EMPTY)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  ||  params.getType()  ==  Token.EMPTY)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params    ==    null    ||    params.getType()!=    Token.EMPTY)    {    	compilable	timeout	123	1	replace
102	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.EMPTY)  {  timeout  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.EMPTY)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  ==  Token.EMPTY)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params    ==    null    ||    params.getType()!=    Token.EMPTY)    {    	compilable	timeout	123	1	replace
103	[BUG]  [BUGGY]  if(params!=  null  &&  params.hasChildren())  {  if(params!=  null  &&  params.hasChildren())  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.hasChildren())  {  if(params!=  null  &&  params.hasChildren())  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.hasChildren())    {    if(params!=  null  &&  params.hasChildren())  {	  timeout    	non-compiled	[CE]  ';'  expected	134	None	add
104	[BUG]  [BUGGY]  if(params!=  null  &&  params.hasChildren())  {  if(params  ==  null  &&  params.hasChildren())  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.hasChildren())  {  if(params  ==  null  &&  params.hasChildren())  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.hasChildren())    {    if(params  ==  null  &&  params.hasChildren())  {	  timeout    	non-compiled	[CE]  ';'  expected	134	None	add
105	[BUG]  [BUGGY]  if(params!=  null  &&  params.hasChildren())  {  if(params  >=  null  &&  params.hasChildren())  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.hasChildren())  {  if(params  >=  null  &&  params.hasChildren())  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.hasChildren())    {    if(params  >=  null  &&  params.hasChildren())  {	  timeout    	non-compiled	[CE]  ';'  expected	134	None	add
106	[BUG]  [BUGGY]  if(params!=  null  &&  params.hasChildren())  {  If(params!=  null  &&  params.hasChildren())  {  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.hasChildren())  {  If(params!=  null  &&  params.hasChildren())  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.hasChildren())    {    If(params!=  null  &&  params.hasChildren())  {	  timeout    	non-compiled	[CE]  	134	None	add
107	[BUG]  [BUGGY]  if(params!=  null  &&  params.hasChildren())  {  if(params  >>  null  &&  params.hasChildren())  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.hasChildren())  {  if(params  >>  null  &&  params.hasChildren())  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.hasChildren())    {    if(params  >>  null  &&  params.hasChildren())  {	  timeout    	non-compiled	[CE]  ';'  expected	134	None	add
108	[BUG]  [BUGGY]  if(params!=  null  &&  params.hasChildren())  {  if(params  [BUGGY]  null  &&  params.hasChildren())  {  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.hasChildren())  {  if(params  [BUGGY]  null  &&  params.hasChildren())  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.hasChildren())    {    if(params  [BUGGY]  null  &&  params.hasChildren())  {	  timeout    	non-compiled	[CE]  	134	None	add
109	[BUG]  [BUGGY]  if(params!=  null  &&  params.hasChildren())  {  if(params  [Delete]  null  &&  params.hasChildren())  {  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.hasChildren())  {  if(params  [Delete]  null  &&  params.hasChildren())  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.hasChildren())    {    if(params  [Delete]  null  &&  params.hasChildren())  {	  timeout    	non-compiled	[CE]  	134	None	add
110	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.STRING)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params  ==  null  ||  params.getType()!=  Token.STRING)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params    ==    null    ||    params.getType()!=    Token.STRING)    {    	compilable	timeout	129	1	replace
111	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.STRING)  {  timeout  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.STRING)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()!=  Token.STRING)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params    ==    null    ||    params.getType()!=    Token.STRING)    {    	compilable	timeout	129	1	replace
112	[BUG]  [BUGGY]  timeout  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.STRING)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  ||  params.getType()!=  Token.STRING)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params    ==    null    ||    params.getType()!=    Token.STRING)    {    	compilable	timeout	129	1	replace
113	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.STRING)  {  timeout  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.STRING)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()!=  Token.STRING)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params    ==    null    ||    params.getType()!=    Token.STRING)    {    	compilable	timeout	129	1	replace
114	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.STRING)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  ||  params.getType()  ==  Token.STRING)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params    ==    null    ||    params.getType()!=    Token.STRING)    {    	compilable	timeout	129	1	replace
115	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.STRING)  {  timeout  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.STRING)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  ==  Token.STRING)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params    ==    null    ||    params.getType()!=    Token.STRING)    {    	compilable	timeout	129	1	replace
116	[BUG]  [BUGGY]  If(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  If(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	If(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {	  if(params    ==    null    ||    params.getType()!=    Token.FUNCTION)    {    If(params    ==    null    ||    params.getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  ';'  expected	104	None	replace
117	[BUG]  [BUGGY]  if(params!=  null)  {  If(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null)  {  If(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null)  {  If(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {	  if(params    ==    null    ||    params.getType()!=    Token.FUNCTION)    {    If(params    ==    null    ||    params.getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  ';'  expected	104	None	replace
118	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.hasChildren())  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  ||  params.hasChildren())  {	  if(params!=    null    &&    params.hasChildren())    {    timeout    	compilable	timeout	135	1	replace
119	[BUG]  [BUGGY]  if(params!=  null  ||  params.hasChildren())  {  timeout  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.hasChildren())  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.hasChildren())  {	  if(params!=    null    &&    params.hasChildren())    {    timeout    	compilable	timeout	135	1	replace
120	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.hasChildren())  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params  ==  null  &&  params.hasChildren())  {	  if(params!=    null    &&    params.hasChildren())    {    timeout    	compilable	timeout	135	1	replace
121	[BUG]  [BUGGY]  if(params  ==  null  &&  params.hasChildren())  {  timeout  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.hasChildren())  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  &&  params.hasChildren())  {	  if(params!=    null    &&    params.hasChildren())    {    timeout    	compilable	timeout	135	1	replace
122	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.hasChildren())  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params  ==  null  ||  params.hasChildren())  {	  if(params!=    null    &&    params.hasChildren())    {    timeout    	compilable	timeout	135	1	replace
123	[BUG]  [BUGGY]  if(params  ==  null  ||  params.hasChildren())  {  timeout  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.hasChildren())  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.hasChildren())  {	  if(params!=    null    &&    params.hasChildren())    {    timeout    	compilable	timeout	135	1	replace
124	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()!=    Token.GETPROP)    {    if(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	7	None	add
125	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {  if(params!=  null  &&  params.getType()!=  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {  if(params!=  null  &&  params.getType()!=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()!=    Token.GETPROP)    {    if(params!=  null  &&  params.getType()!=  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	7	None	add
126	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()!=    Token.GETPROP)    {    if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	7	None	add
127	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  &&  params.getType()  >=  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  &&  params.getType()  >=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()!=    Token.GETPROP)    {    if(params  ==  null  &&  params.getType()  >=  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	7	None	add
128	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {  if(params  >=  null  &&  params.getType()!=  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {  if(params  >=  null  &&  params.getType()!=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()!=    Token.GETPROP)    {    if(params  >=  null  &&  params.getType()!=  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	7	None	add
129	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  &&  params.getType()  >>  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  &&  params.getType()  >>  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()!=    Token.GETPROP)    {    if(params  ==  null  &&  params.getType()  >>  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	7	None	add
130	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {  If(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {  If(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()!=    Token.GETPROP)    {    If(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  	7	None	add
131	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  >=  Token.NAME)  {  if(params!=  null  ||  params.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  >=  Token.NAME)  {  if(params!=  null  ||  params.getType()!=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    >=    Token.NAME)    {    if(params!=  null  ||  params.getType()!=  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	152	None	add
132	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  >=  Token.NAME)  {  if(params!=  null  ||  params.getType()  >=  Token.NAME)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  >=  Token.NAME)  {  if(params!=  null  ||  params.getType()  >=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    >=    Token.NAME)    {    if(params!=  null  ||  params.getType()  >=  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	152	None	add
133	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  >=  Token.NAME)  {  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  >=  Token.NAME)  {  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    >=    Token.NAME)    {    if(params!=  null  ||  params.getType()  ==  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	152	None	add
134	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  >=  Token.NAME)  {  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  >=  Token.NAME)  {  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    >=    Token.NAME)    {    if(params  ==  null  ||  params.getType()!=  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	152	None	add
135	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  >=  Token.NAME)  {  if(params!=  null  ||  params.getType()  >>  Token.NAME)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  >=  Token.NAME)  {  if(params!=  null  ||  params.getType()  >>  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    >=    Token.NAME)    {    if(params!=  null  ||  params.getType()  >>  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	152	None	add
136	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  >=  Token.NAME)  {  if(params  ==  null  ||  params.getType()  >=  Token.NAME)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  >=  Token.NAME)  {  if(params  ==  null  ||  params.getType()  >=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    >=    Token.NAME)    {    if(params  ==  null  ||  params.getType()  >=  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	152	None	add
137	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  >=  Token.NAME)  {  if(params  >=  null  ||  params.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  >=  Token.NAME)  {  if(params  >=  null  ||  params.getType()!=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    >=    Token.NAME)    {    if(params  >=  null  ||  params.getType()!=  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	152	None	add
138	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  >=  Token.NAME)  {  if(params!=  null  ||  params.getType()  [Delete]  Token.NAME)  {  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  >=  Token.NAME)  {  if(params!=  null  ||  params.getType()  [Delete]  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    >=    Token.NAME)    {    if(params!=  null  ||  params.getType()  [Delete]  Token.NAME)  {	  timeout    	non-compiled	[CE]  	152	None	add
139	[BUG]  [BUGGY]  Node  lastParam  =  params.getFirstChild();  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  lastParam  =  params.getFirstChild();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  lastParam  =  params.getFirstChild();	  Node    lastParam    =    params.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
140	[BUG]  [BUGGY]  Node  lastParam  =  params!=  null?  params.getLastChild()  :  params.getLastChild();  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  lastParam  =  params!=  null?  params.getLastChild()  :  params.getLastChild();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  lastParam  =  params!=  null?  params.getLastChild()  :  params.getLastChild();	  Node    lastParam    =    params.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
141	[BUG]  [BUGGY]  Node  lastParam  =  params.next();  [CE]  illegal  start  of  type  [FE]                                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  lastParam  =  params.next();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  lastParam  =  params.next();	  Node    lastParam    =    params.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
142	[BUG]  [BUGGY]  Node  params  =  params.getFirstChild();  [CE]  illegal  start  of  type  [FE]                                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  params  =  params.getFirstChild();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  params  =  params.getFirstChild();	  Node    lastParam    =    params.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
143	[BUG]  [BUGGY]  Node  lastParam  =  params!=  null?  params.getLastChild()  :  params.getFirstChild();  [CE]  illegal  start  of  type  [FE]                                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  lastParam  =  params!=  null?  params.getLastChild()  :  params.getFirstChild();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  lastParam  =  params!=  null?  params.getLastChild()  :  params.getFirstChild();	  Node    lastParam    =    params.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
144	[BUG]  [BUGGY]  Node  lastParam  =  params!=  null?  params.getLastChild()  :  params.cloneTree();  [CE]  illegal  start  of  type  [FE]                                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  lastParam  =  params!=  null?  params.getLastChild()  :  params.cloneTree();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  lastParam  =  params!=  null?  params.getLastChild()  :  params.cloneTree();	  Node    lastParam    =    params.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
145	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.SETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  ||  params.getType()!=  Token.SETPROP)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params    ==    null    ||    params.getType()!=    Token.SETPROP)    {    	compilable	timeout	125	1	replace
146	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.SETPROP)  {  timeout  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.SETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()!=  Token.SETPROP)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params    ==    null    ||    params.getType()!=    Token.SETPROP)    {    	compilable	timeout	125	1	replace
147	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.RETURN)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  ||  params.getType()  ==  Token.RETURN)  {	  if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    if(params!=    null    ||    params.getType()    ==    Token.RETURN)    {    	compilable	timeout	112	1	replace
148	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.RETURN)  {  timeout  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.RETURN)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  ==  Token.RETURN)  {	  if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    if(params!=    null    ||    params.getType()    ==    Token.RETURN)    {    	compilable	timeout	112	1	replace
149	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.CALL)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  ||  params.getType()  ==  Token.CALL)  {	  if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    if(params!=    null    ||    params.getType()    ==    Token.RETURN)    {    	compilable	timeout	112	1	replace
150	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.CALL)  {  timeout  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.CALL)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  ==  Token.CALL)  {	  if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    if(params!=    null    ||    params.getType()    ==    Token.RETURN)    {    	compilable	timeout	112	1	replace
151	[BUG]  [BUGGY]  Preconditions.checkArgument(params.getType()!=  Token.FUNCTION);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Preconditions.checkArgument(params.getType()!=  Token.FUNCTION);  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Preconditions.checkArgument(params.getType()!=  Token.FUNCTION);	  Preconditions.checkArgument(params.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
152	[BUG]  [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.FUNCTION,  name);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.FUNCTION,  name);  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Preconditions.checkArgument(params.getType()  ==  Token.FUNCTION,  name);	  Preconditions.checkArgument(params.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
153	[BUG]  [BUGGY]  Preconditions.checkState(params.getType()  ==  Token.FUNCTION);  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Preconditions.checkState(params.getType()  ==  Token.FUNCTION);  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Preconditions.checkState(params.getType()  ==  Token.FUNCTION);	  Preconditions.checkArgument(params.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
154	[BUG]  [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.FUNCTION  ||  params.getType()  ==  Token.GETPROP);  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.FUNCTION  ||  params.getType()  ==  Token.GETPROP);  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Preconditions.checkArgument(params.getType()  ==  Token.FUNCTION  ||  params.getType()  ==  Token.GETPROP);	  Preconditions.checkArgument(params.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
155	[BUG]  [BUGGY]  Preconditions.checkArgument(params!=  null  ||  params.getType()  ==  Token.FUNCTION);  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Preconditions.checkArgument(params!=  null  ||  params.getType()  ==  Token.FUNCTION);  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Preconditions.checkArgument(params!=  null  ||  params.getType()  ==  Token.FUNCTION);	  Preconditions.checkArgument(params.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
156	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.NAME)  {  if(params!=  null  ||  params.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.NAME)  {  if(params!=  null  ||  params.getType()!=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()!=    Token.NAME)    {    if(params!=  null  ||  params.getType()!=  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	36	None	add
157	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.NAME)  {  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.NAME)  {  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()!=    Token.NAME)    {    if(params  ==  null  ||  params.getType()!=  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	36	None	add
158	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.NAME)  {  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.NAME)  {  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()!=    Token.NAME)    {    if(params!=  null  ||  params.getType()  ==  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	36	None	add
159	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.NAME)  {  if(params!=  null  ||  params.getType()  >=  Token.NAME)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.NAME)  {  if(params!=  null  ||  params.getType()  >=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()!=    Token.NAME)    {    if(params!=  null  ||  params.getType()  >=  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	36	None	add
160	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.NAME)  {  if(params  >=  null  ||  params.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.NAME)  {  if(params  >=  null  ||  params.getType()!=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()!=    Token.NAME)    {    if(params  >=  null  ||  params.getType()!=  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	36	None	add
161	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.NAME)  {  if(params!=  null  ||  params.getType()  >>  Token.NAME)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.NAME)  {  if(params!=  null  ||  params.getType()  >>  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()!=    Token.NAME)    {    if(params!=  null  ||  params.getType()  >>  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	36	None	add
162	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.NAME)  {  If(params!=  null  ||  params.getType()!=  Token.NAME)  {  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.NAME)  {  If(params!=  null  ||  params.getType()!=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()!=    Token.NAME)    {    If(params!=  null  ||  params.getType()!=  Token.NAME)  {	  timeout    	non-compiled	[CE]  	36	None	add
163	[BUG]  [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.NAME,  name);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.NAME,  name);  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Preconditions.checkArgument(params.getType()  ==  Token.NAME,  name);	  Preconditions.checkArgument(params.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
164	[BUG]  [BUGGY]  Preconditions.checkState(params.getType()  ==  Token.NAME);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Preconditions.checkState(params.getType()  ==  Token.NAME);  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Preconditions.checkState(params.getType()  ==  Token.NAME);	  Preconditions.checkArgument(params.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
165	[BUG]  [BUGGY]  Preconditions.checkArgument(params.getType()!=  Token.NAME);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Preconditions.checkArgument(params.getType()!=  Token.NAME);  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Preconditions.checkArgument(params.getType()!=  Token.NAME);	  Preconditions.checkArgument(params.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
166	[BUG]  [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.NAME,  params.getString());  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.NAME,  params.getString());  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Preconditions.checkArgument(params.getType()  ==  Token.NAME,  params.getString());	  Preconditions.checkArgument(params.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
167	[BUG]  [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.NAME,  call);  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.NAME,  call);  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Preconditions.checkArgument(params.getType()  ==  Token.NAME,  call);	  Preconditions.checkArgument(params.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
168	[BUG]  [BUGGY]  if(params!=  null)  {  If(params  ==  null)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null)  {  If(params  ==  null)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null)  {  If(params  ==  null)  {	  if(params!=    null)    {    If(params!=    null)    {    	non-compiled	[CE]  ';'  expected	83	None	replace
169	[BUG]  [BUGGY]  if(params  ==  null)  {  If(params!=  null)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null)  {  If(params!=  null)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null)  {  If(params!=  null)  {	  if(params!=    null)    {    If(params!=    null)    {    	non-compiled	[CE]  ';'  expected	83	None	replace
170	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.NAME)  {  if(params  ==  null  &&  params.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.NAME)  {  if(params  ==  null  &&  params.getType()!=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()!=    Token.NAME)    {    if(params  ==  null  &&  params.getType()!=  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	40	None	add
171	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.NAME)  {  if(params!=  null  &&  params.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.NAME)  {  if(params!=  null  &&  params.getType()!=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()!=    Token.NAME)    {    if(params!=  null  &&  params.getType()!=  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	40	None	add
172	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.NAME)  {  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.NAME)  {  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()!=    Token.NAME)    {    if(params!=  null  &&  params.getType()  ==  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	40	None	add
173	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.NAME)  {  if(params  ==  null  &&  params.getType()  >=  Token.NAME)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.NAME)  {  if(params  ==  null  &&  params.getType()  >=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()!=    Token.NAME)    {    if(params  ==  null  &&  params.getType()  >=  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	40	None	add
174	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.NAME)  {  if(params  >=  null  &&  params.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.NAME)  {  if(params  >=  null  &&  params.getType()!=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()!=    Token.NAME)    {    if(params  >=  null  &&  params.getType()!=  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	40	None	add
175	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.NAME)  {  if(params  ==  null  &&  params.getType()  >>  Token.NAME)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.NAME)  {  if(params  ==  null  &&  params.getType()  >>  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()!=    Token.NAME)    {    if(params  ==  null  &&  params.getType()  >>  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	40	None	add
176	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.NAME)  {  If(params  ==  null  &&  params.getType()!=  Token.NAME)  {  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.NAME)  {  If(params  ==  null  &&  params.getType()!=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()!=    Token.NAME)    {    If(params  ==  null  &&  params.getType()!=  Token.NAME)  {	  timeout    	non-compiled	[CE]  	40	None	add
177	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  If(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  If(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  If(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    If(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    	non-compiled	[CE]  ';'  expected	76	None	replace
178	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  If(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  If(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  If(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    If(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    	non-compiled	[CE]  ';'  expected	76	None	replace
179	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  If(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  If(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  If(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    If(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    	non-compiled	[CE]  ';'  expected	76	None	replace
180	[BUG]  [BUGGY]  If(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  If(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	If(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    If(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    	non-compiled	[CE]  ';'  expected	76	None	replace
181	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  ';'  expected	66	None	add
182	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  ';'  expected	66	None	add
183	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  ';'  expected	66	None	add
184	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params!=  null  ||  params.getType()  >=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params!=  null  ||  params.getType()  >=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params!=  null  ||  params.getType()  >=  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  ';'  expected	66	None	add
185	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params  >=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params  >=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params  >=  null  ||  params.getType()!=  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  ';'  expected	66	None	add
186	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params!=  null  ||  params.getType()  >>  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params!=  null  ||  params.getType()  >>  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params!=  null  ||  params.getType()  >>  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  ';'  expected	66	None	add
187	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  If(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  If(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()!=    Token.OBJECTLIT)    {    If(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  	66	None	add
188	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params  >>  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params  >>  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params  >>  null  ||  params.getType()!=  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  ';'  expected	66	None	add
189	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params  ==  null  &&  params.getType()  ==  Token.OBJECTLIT)  {	  if(params!=    null    ||    params.getType()    ==    Token.OBJECTLIT)    {    timeout    	compilable	timeout	65	1	replace
190	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.OBJECTLIT)  {  timeout  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  &&  params.getType()  ==  Token.OBJECTLIT)  {	  if(params!=    null    ||    params.getType()    ==    Token.OBJECTLIT)    {    timeout    	compilable	timeout	65	1	replace
191	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.GETPROP)  {  if(params!=  null  &&  params.getType()!=  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.GETPROP)  {  if(params!=  null  &&  params.getType()!=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()!=    Token.GETPROP)    {    if(params!=  null  &&  params.getType()!=  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	5	None	add
192	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.GETPROP)  {  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.GETPROP)  {  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()!=    Token.GETPROP)    {    if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	5	None	add
193	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()!=    Token.GETPROP)    {    if(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	5	None	add
194	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.GETPROP)  {  if(params!=  null  &&  params.getType()  >=  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.GETPROP)  {  if(params!=  null  &&  params.getType()  >=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()!=    Token.GETPROP)    {    if(params!=  null  &&  params.getType()  >=  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	5	None	add
195	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.GETPROP)  {  if(params  >=  null  &&  params.getType()!=  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.GETPROP)  {  if(params  >=  null  &&  params.getType()!=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()!=    Token.GETPROP)    {    if(params  >=  null  &&  params.getType()!=  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	5	None	add
196	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.GETPROP)  {  if(params!=  null  &&  params.getType()  >>  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.GETPROP)  {  if(params!=  null  &&  params.getType()  >>  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()!=    Token.GETPROP)    {    if(params!=  null  &&  params.getType()  >>  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	5	None	add
197	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.GETPROP)  {  If(params!=  null  &&  params.getType()!=  Token.GETPROP)  {  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.GETPROP)  {  If(params!=  null  &&  params.getType()!=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()!=    Token.GETPROP)    {    If(params!=  null  &&  params.getType()!=  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  	5	None	add
198	[BUG]  [BUGGY]  timeout  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.CALL)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params  ==  null  ||  params.getType()!=  Token.CALL)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params    ==    null    ||    params.getType()!=    Token.CALL)    {    	compilable	timeout	128	1	replace
199	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.CALL)  {  timeout  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.CALL)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()!=  Token.CALL)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params    ==    null    ||    params.getType()!=    Token.CALL)    {    	compilable	timeout	128	1	replace
200	[BUG]  [BUGGY]  timeout  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.CALL)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  ||  params.getType()!=  Token.CALL)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params    ==    null    ||    params.getType()!=    Token.CALL)    {    	compilable	timeout	128	1	replace
201	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.CALL)  {  timeout  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.CALL)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()!=  Token.CALL)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params    ==    null    ||    params.getType()!=    Token.CALL)    {    	compilable	timeout	128	1	replace
202	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.OBJECTLIT)    {    if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  ';'  expected	64	None	add
203	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.OBJECTLIT)    {    if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  ';'  expected	64	None	add
204	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  >=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  >=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.OBJECTLIT)    {    if(params  >=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  ';'  expected	64	None	add
205	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  If(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  If(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.OBJECTLIT)    {    If(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  	64	None	add
206	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params!=  null  ||  params.getType()  >=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params!=  null  ||  params.getType()  >=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.OBJECTLIT)    {    if(params!=  null  ||  params.getType()  >=  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  ';'  expected	64	None	add
207	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  >>  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  >>  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.OBJECTLIT)    {    if(params  >>  null  ||  params.getType()  ==  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  ';'  expected	64	None	add
208	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params!=  null  ||  Params.getType()  ==  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params!=  null  ||  Params.getType()  ==  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.OBJECTLIT)    {    if(params!=  null  ||  Params.getType()  ==  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  ';'  expected	64	None	add
209	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.VAR)  {  if(params!=  null  &&  params.getType()  ==  Token.VAR)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.VAR)  {  if(params!=  null  &&  params.getType()  ==  Token.VAR)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.VAR)    {    if(params!=  null  &&  params.getType()  ==  Token.VAR)  {	  timeout    	non-compiled	[CE]  ';'  expected	132	None	add
210	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.VAR)  {  if(params  ==  null  &&  params.getType()  ==  Token.VAR)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.VAR)  {  if(params  ==  null  &&  params.getType()  ==  Token.VAR)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.VAR)    {    if(params  ==  null  &&  params.getType()  ==  Token.VAR)  {	  timeout    	non-compiled	[CE]  ';'  expected	132	None	add
211	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.VAR)  {  if(params  >=  null  &&  params.getType()  ==  Token.VAR)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.VAR)  {  if(params  >=  null  &&  params.getType()  ==  Token.VAR)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.VAR)    {    if(params  >=  null  &&  params.getType()  ==  Token.VAR)  {	  timeout    	non-compiled	[CE]  ';'  expected	132	None	add
212	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.VAR)  {  If(params!=  null  &&  params.getType()  ==  Token.VAR)  {  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.VAR)  {  If(params!=  null  &&  params.getType()  ==  Token.VAR)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.VAR)    {    If(params!=  null  &&  params.getType()  ==  Token.VAR)  {	  timeout    	non-compiled	[CE]  	132	None	add
213	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.VAR)  {  if(params  >>  null  &&  params.getType()  ==  Token.VAR)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.VAR)  {  if(params  >>  null  &&  params.getType()  ==  Token.VAR)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.VAR)    {    if(params  >>  null  &&  params.getType()  ==  Token.VAR)  {	  timeout    	non-compiled	[CE]  ';'  expected	132	None	add
214	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.VAR)  {  if(params!=  null  &&  params.getType()  >=  Token.VAR)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.VAR)  {  if(params!=  null  &&  params.getType()  >=  Token.VAR)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.VAR)    {    if(params!=  null  &&  params.getType()  >=  Token.VAR)  {	  timeout    	non-compiled	[CE]  ';'  expected	132	None	add
215	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.VAR)  {  if(params  [BUGGY]  null  &&  params.getType()  ==  Token.VAR)  {  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.VAR)  {  if(params  [BUGGY]  null  &&  params.getType()  ==  Token.VAR)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.VAR)    {    if(params  [BUGGY]  null  &&  params.getType()  ==  Token.VAR)  {	  timeout    	non-compiled	[CE]  	132	None	add
216	[BUG]  [BUGGY]  Node  source  =  params!=  null?  params.getFirstChild()  :  params.getLastChild();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  params!=  null?  params.getFirstChild()  :  params.getLastChild();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params!=  null?  params.getFirstChild()  :  params.getLastChild();	  Node    source    =    params.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
217	[BUG]  [BUGGY]  Node  source  =  params!=  null?  params.getLastChild()  :  params.getString();  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  params!=  null?  params.getLastChild()  :  params.getString();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params!=  null?  params.getLastChild()  :  params.getString();	  Node    source    =    params.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
218	[BUG]  [BUGGY]  Node  lastParam  =  params.getLastParam();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  lastParam  =  params.getLastParam();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  lastParam  =  params.getLastParam();	  Node    lastParam    =    getLastParam();    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
219	[BUG]  [BUGGY]  Node  lastParam  =  getLastChild();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  lastParam  =  getLastChild();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  lastParam  =  getLastChild();	  Node    lastParam    =    getLastParam();    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
220	[BUG]  [BUGGY]  Node  lastParam  =  getLastParam(),  params);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  lastParam  =  getLastParam(),  params);  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  lastParam  =  getLastParam(),  params);	  Node    lastParam    =    getLastParam();    	non-compiled	[CE]  	118	None	replace
221	[BUG]  [BUGGY]  Node  lastParam  =  getLastParam().getNext();  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  lastParam  =  getLastParam().getNext();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  lastParam  =  getLastParam().getNext();	  Node    lastParam    =    getLastParam();    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
222	[BUG]  [BUGGY]  Node  lastParam  =  getLastParam().cloneTree();  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  lastParam  =  getLastParam().cloneTree();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  lastParam  =  getLastParam().cloneTree();	  Node    lastParam    =    getLastParam();    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
223	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.VAR)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params  ==  null  ||  params.getType()!=  Token.VAR)  {	  if(params    ==    null    ||    params.getType()    ==    Token.VAR)    {    timeout    	compilable	timeout	146	1	replace
224	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.VAR)  {  timeout  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.VAR)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()!=  Token.VAR)  {	  if(params    ==    null    ||    params.getType()    ==    Token.VAR)    {    timeout    	compilable	timeout	146	1	replace
225	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.FUNCTION)  {  if(params!=  null  ||  params.getType()!=  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.FUNCTION)  {  if(params!=  null  ||  params.getType()!=  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()!=    Token.FUNCTION)    {    if(params!=  null  ||  params.getType()!=  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	107	None	add
226	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.FUNCTION)  {  if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.FUNCTION)  {  if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()!=    Token.FUNCTION)    {    if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	107	None	add
227	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.FUNCTION)  {  if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.FUNCTION)  {  if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()!=    Token.FUNCTION)    {    if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	107	None	add
228	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.FUNCTION)  {  if(params!=  null  ||  params.getType()  >=  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.FUNCTION)  {  if(params!=  null  ||  params.getType()  >=  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()!=    Token.FUNCTION)    {    if(params!=  null  ||  params.getType()  >=  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	107	None	add
229	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.FUNCTION)  {  if(params!=  null  ||  params.getType()  >>  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.FUNCTION)  {  if(params!=  null  ||  params.getType()  >>  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()!=    Token.FUNCTION)    {    if(params!=  null  ||  params.getType()  >>  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	107	None	add
230	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.FUNCTION)  {  if(params  >=  null  ||  params.getType()!=  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.FUNCTION)  {  if(params  >=  null  ||  params.getType()!=  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()!=    Token.FUNCTION)    {    if(params  >=  null  ||  params.getType()!=  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	107	None	add
231	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.FUNCTION)  {  If(params!=  null  ||  params.getType()!=  Token.FUNCTION)  {  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.FUNCTION)  {  If(params!=  null  ||  params.getType()!=  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()!=    Token.FUNCTION)    {    If(params!=  null  ||  params.getType()!=  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  	107	None	add
232	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.NAME)  {  if(params  ==  null  &&  params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.NAME)  {  if(params  ==  null  &&  params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()    ==    Token.NAME)    {    if(params  ==  null  &&  params.getType()  ==  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	55	None	add
233	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.NAME)  {  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.NAME)  {  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()    ==    Token.NAME)    {    if(params!=  null  &&  params.getType()  ==  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	55	None	add
234	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.NAME)  {  if(params  ==  null  &&  params.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.NAME)  {  if(params  ==  null  &&  params.getType()!=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()    ==    Token.NAME)    {    if(params  ==  null  &&  params.getType()!=  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	55	None	add
235	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.NAME)  {  if(params  >=  null  &&  params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.NAME)  {  if(params  >=  null  &&  params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()    ==    Token.NAME)    {    if(params  >=  null  &&  params.getType()  ==  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	55	None	add
236	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.NAME)  {  If(params  ==  null  &&  params.getType()  ==  Token.NAME)  {  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.NAME)  {  If(params  ==  null  &&  params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()    ==    Token.NAME)    {    If(params  ==  null  &&  params.getType()  ==  Token.NAME)  {	  timeout    	non-compiled	[CE]  	55	None	add
237	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.NAME)  {  if(params  ==  null  &&  params.getType()  >=  Token.NAME)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.NAME)  {  if(params  ==  null  &&  params.getType()  >=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()    ==    Token.NAME)    {    if(params  ==  null  &&  params.getType()  >=  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	55	None	add
238	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.NAME)  {  if(params  >>  null  &&  params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.NAME)  {  if(params  >>  null  &&  params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()    ==    Token.NAME)    {    if(params  >>  null  &&  params.getType()  ==  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	55	None	add
239	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  If(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  If(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  If(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    If(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    	non-compiled	[CE]  ';'  expected	97	None	replace
240	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  If(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  If(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  If(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    If(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    	non-compiled	[CE]  ';'  expected	97	None	replace
241	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.NAME)  {  If(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.NAME)  {  If(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()!=  Token.NAME)  {  If(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    If(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    	non-compiled	[CE]  ';'  expected	97	None	replace
242	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  If(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  If(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  If(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    If(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    	non-compiled	[CE]  ';'  expected	97	None	replace
243	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.FUNCTION)  {  If(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.FUNCTION)  {  If(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()!=  Token.FUNCTION)  {  If(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    If(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    	non-compiled	[CE]  ';'  expected	97	None	replace
244	[BUG]  [BUGGY]  If(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  If(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	If(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    If(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    	non-compiled	[CE]  ';'  expected	97	None	replace
245	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETELEM)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params  ==  null  ||  params.getType()  ==  Token.GETELEM)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETELEM)    {    timeout    	compilable	timeout	149	1	replace
246	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETELEM)  {  timeout  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETELEM)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()  ==  Token.GETELEM)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETELEM)    {    timeout    	compilable	timeout	149	1	replace
247	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.GETELEM)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  ||  params.getType()!=  Token.GETELEM)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETELEM)    {    timeout    	compilable	timeout	149	1	replace
248	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.GETELEM)  {  timeout  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.GETELEM)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()!=  Token.GETELEM)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETELEM)    {    timeout    	compilable	timeout	149	1	replace
249	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  &&  params.getType()  ==  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  &&  params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()    ==    Token.GETPROP)    {    if(params  ==  null  &&  params.getType()  ==  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	44	None	add
250	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()    ==    Token.GETPROP)    {    if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	44	None	add
251	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()    ==    Token.GETPROP)    {    if(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	44	None	add
252	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params  >=  null  &&  params.getType()  ==  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params  >=  null  &&  params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()    ==    Token.GETPROP)    {    if(params  >=  null  &&  params.getType()  ==  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	44	None	add
253	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.GETPROP)  {  If(params  ==  null  &&  params.getType()  ==  Token.GETPROP)  {  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.GETPROP)  {  If(params  ==  null  &&  params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()    ==    Token.GETPROP)    {    If(params  ==  null  &&  params.getType()  ==  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  	44	None	add
254	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  &&  params.getType()  >=  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  &&  params.getType()  >=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()    ==    Token.GETPROP)    {    if(params  ==  null  &&  params.getType()  >=  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	44	None	add
255	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params  >>  null  &&  params.getType()  ==  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params  >>  null  &&  params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()    ==    Token.GETPROP)    {    if(params  >>  null  &&  params.getType()  ==  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	44	None	add
256	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.OBJECTLIT)  {  if(params!=  null  &&  params.getType()!=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.OBJECTLIT)  {  if(params!=  null  &&  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()!=    Token.OBJECTLIT)    {    if(params!=  null  &&  params.getType()!=  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  ';'  expected	70	None	add
257	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.OBJECTLIT)  {  if(params!=  null  &&  params.getType()  ==  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.OBJECTLIT)  {  if(params!=  null  &&  params.getType()  ==  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()!=    Token.OBJECTLIT)    {    if(params!=  null  &&  params.getType()  ==  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  ';'  expected	70	None	add
258	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.OBJECTLIT)  {  if(params  ==  null  &&  params.getType()!=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.OBJECTLIT)  {  if(params  ==  null  &&  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()!=    Token.OBJECTLIT)    {    if(params  ==  null  &&  params.getType()!=  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  ';'  expected	70	None	add
259	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.OBJECTLIT)  {  if(params!=  null  &&  params.getType()  >=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.OBJECTLIT)  {  if(params!=  null  &&  params.getType()  >=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()!=    Token.OBJECTLIT)    {    if(params!=  null  &&  params.getType()  >=  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  ';'  expected	70	None	add
260	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.OBJECTLIT)  {  if(params!=  null  &&  params.getType()  >>  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.OBJECTLIT)  {  if(params!=  null  &&  params.getType()  >>  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()!=    Token.OBJECTLIT)    {    if(params!=  null  &&  params.getType()  >>  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  ';'  expected	70	None	add
261	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.OBJECTLIT)  {  if(params  >=  null  &&  params.getType()!=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.OBJECTLIT)  {  if(params  >=  null  &&  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()!=    Token.OBJECTLIT)    {    if(params  >=  null  &&  params.getType()!=  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  ';'  expected	70	None	add
262	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.OBJECTLIT)  {  If(params!=  null  &&  params.getType()!=  Token.OBJECTLIT)  {  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.OBJECTLIT)  {  If(params!=  null  &&  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()!=    Token.OBJECTLIT)    {    If(params!=  null  &&  params.getType()!=  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  	70	None	add
263	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.OBJECTLIT)  {  if(params  >>  null  &&  params.getType()!=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.OBJECTLIT)  {  if(params  >>  null  &&  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()!=    Token.OBJECTLIT)    {    if(params  >>  null  &&  params.getType()!=  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  ';'  expected	70	None	add
264	[BUG]  [BUGGY]  If(params  ==  null  ||  params.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  If(params  ==  null  ||  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	If(params  ==  null  ||  params.getType()  ==  Token.FUNCTION)  {	  if(params    ==    null    ||    params.getType()    ==    Token.FUNCTION)    {    If(params    ==    null    ||    params.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ';'  expected	31	None	replace
265	[BUG]  [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.OBJECTLIT  ||  params.getType()  ==  Token.NAME);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.OBJECTLIT  ||  params.getType()  ==  Token.NAME);  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Preconditions.checkArgument(params.getType()  ==  Token.OBJECTLIT  ||  params.getType()  ==  Token.NAME);	  Preconditions.checkArgument(params.getType()    ==    Token.OBJECTLIT);    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
266	[BUG]  [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.OBJECTLIT,  name);  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.OBJECTLIT,  name);  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Preconditions.checkArgument(params.getType()  ==  Token.OBJECTLIT,  name);	  Preconditions.checkArgument(params.getType()    ==    Token.OBJECTLIT);    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
267	[BUG]  [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.OBJECTLIT  ||  params.getType()  ==  Token.GETPROP);  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.OBJECTLIT  ||  params.getType()  ==  Token.GETPROP);  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Preconditions.checkArgument(params.getType()  ==  Token.OBJECTLIT  ||  params.getType()  ==  Token.GETPROP);	  Preconditions.checkArgument(params.getType()    ==    Token.OBJECTLIT);    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
268	[BUG]  [BUGGY]  Preconditions.checkArgument(params.getType()!=  Token.OBJECTLIT);  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Preconditions.checkArgument(params.getType()!=  Token.OBJECTLIT);  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Preconditions.checkArgument(params.getType()!=  Token.OBJECTLIT);	  Preconditions.checkArgument(params.getType()    ==    Token.OBJECTLIT);    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
269	[BUG]  [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.OBJECTLIT  ||  params.getType()  ==  Token.FUNCTION);  [CE]  illegal  start  of  type  [FE]                                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.OBJECTLIT  ||  params.getType()  ==  Token.FUNCTION);  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Preconditions.checkArgument(params.getType()  ==  Token.OBJECTLIT  ||  params.getType()  ==  Token.FUNCTION);	  Preconditions.checkArgument(params.getType()    ==    Token.OBJECTLIT);    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
270	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()!=    Token.GETPROP)    {    if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	1	None	add
271	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()!=    Token.GETPROP)    {    if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	1	None	add
272	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()!=    Token.GETPROP)    {    if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	1	None	add
273	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  if(params!=  null  ||  params.getType()  >=  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  if(params!=  null  ||  params.getType()  >=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()!=    Token.GETPROP)    {    if(params!=  null  ||  params.getType()  >=  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	1	None	add
274	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  if(params  >=  null  ||  params.getType()!=  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  if(params  >=  null  ||  params.getType()!=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()!=    Token.GETPROP)    {    if(params  >=  null  ||  params.getType()!=  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	1	None	add
275	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  if(params!=  null  ||  params.getType()  >>  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  if(params!=  null  ||  params.getType()  >>  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()!=    Token.GETPROP)    {    if(params!=  null  ||  params.getType()  >>  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	1	None	add
276	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  If(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  If(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()!=    Token.GETPROP)    {    If(params!=  null  ||  params.getType()!=  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  	1	None	add
277	[BUG]  [BUGGY]  Node  source  =  getSourceNode();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  getSourceNode();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  getSourceNode();	  Node    source    =    getSource();    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
278	[BUG]  [BUGGY]  Node  source  =  params.next();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  params.next();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params.next();	  Node    source    =    getSource();    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
279	[BUG]  [BUGGY]  Node  source  =  params!=  null?  getSource()  :  null;  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  params!=  null?  getSource()  :  null;  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params!=  null?  getSource()  :  null;	  Node    source    =    getSource();    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
280	[BUG]  [BUGGY]  Node  source  =  getSource(),  params);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  getSource(),  params);  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  getSource(),  params);	  Node    source    =    getSource();    	non-compiled	[CE]  	141	None	replace
281	[BUG]  [BUGGY]  Node  source  =  getSource().getNext();  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  getSource().getNext();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  getSource().getNext();	  Node    source    =    getSource();    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
282	[BUG]  [BUGGY]  if(params!=  null)  {  If(params!=  null  ||  params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null)  {  If(params!=  null  ||  params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null)  {  If(params!=  null  ||  params.getType()  ==  Token.NAME)  {	  if(params!=    null    ||    params.getType()    ==    Token.NAME)    {    If(params!=    null    ||    params.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	60	None	replace
283	[BUG]  [BUGGY]  if(params  ==  null)  {  If(params!=  null  ||  params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null)  {  If(params!=  null  ||  params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null)  {  If(params!=  null  ||  params.getType()  ==  Token.NAME)  {	  if(params!=    null    ||    params.getType()    ==    Token.NAME)    {    If(params!=    null    ||    params.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	60	None	replace
284	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  If(params!=  null  ||  params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  If(params!=  null  ||  params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  If(params!=  null  ||  params.getType()  ==  Token.NAME)  {	  if(params!=    null    ||    params.getType()    ==    Token.NAME)    {    If(params!=    null    ||    params.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	60	None	replace
285	[BUG]  [BUGGY]  if(params!=  null)  {  If(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null)  {  If(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null)  {  If(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {	  if(params!=    null    ||    params.getType()    ==    Token.FUNCTION)    {    If(params!=    null    ||    params.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
286	[BUG]  [BUGGY]  If(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  If(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	If(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {	  if(params!=    null    ||    params.getType()    ==    Token.FUNCTION)    {    If(params!=    null    ||    params.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
287	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.VAR)  {  if(params!=  null  ||  params.getType()  ==  Token.VAR)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.VAR)  {  if(params!=  null  ||  params.getType()  ==  Token.VAR)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.VAR)    {    if(params!=  null  ||  params.getType()  ==  Token.VAR)  {	  timeout    	non-compiled	[CE]  ';'  expected	114	None	add
288	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.VAR)  {  if(params  ==  null  ||  params.getType()  ==  Token.VAR)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.VAR)  {  if(params  ==  null  ||  params.getType()  ==  Token.VAR)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.VAR)    {    if(params  ==  null  ||  params.getType()  ==  Token.VAR)  {	  timeout    	non-compiled	[CE]  ';'  expected	114	None	add
289	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.VAR)  {  if(params  >=  null  ||  params.getType()  ==  Token.VAR)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.VAR)  {  if(params  >=  null  ||  params.getType()  ==  Token.VAR)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.VAR)    {    if(params  >=  null  ||  params.getType()  ==  Token.VAR)  {	  timeout    	non-compiled	[CE]  ';'  expected	114	None	add
290	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.VAR)  {  If(params!=  null  ||  params.getType()  ==  Token.VAR)  {  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.VAR)  {  If(params!=  null  ||  params.getType()  ==  Token.VAR)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.VAR)    {    If(params!=  null  ||  params.getType()  ==  Token.VAR)  {	  timeout    	non-compiled	[CE]  	114	None	add
291	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.VAR)  {  if(params!=  null  ||  params.getType()  >=  Token.VAR)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.VAR)  {  if(params!=  null  ||  params.getType()  >=  Token.VAR)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.VAR)    {    if(params!=  null  ||  params.getType()  >=  Token.VAR)  {	  timeout    	non-compiled	[CE]  ';'  expected	114	None	add
292	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.VAR)  {  if(params  >>  null  ||  params.getType()  ==  Token.VAR)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.VAR)  {  if(params  >>  null  ||  params.getType()  ==  Token.VAR)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.VAR)    {    if(params  >>  null  ||  params.getType()  ==  Token.VAR)  {	  timeout    	non-compiled	[CE]  ';'  expected	114	None	add
293	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.VAR)  {  if(params  [BUGGY]  null  ||  params.getType()  ==  Token.VAR)  {  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.VAR)  {  if(params  [BUGGY]  null  ||  params.getType()  ==  Token.VAR)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.VAR)    {    if(params  [BUGGY]  null  ||  params.getType()  ==  Token.VAR)  {	  timeout    	non-compiled	[CE]  	114	None	add
294	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.GETELEM)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params  ==  null  &&  params.getType()  ==  Token.GETELEM)  {	  if(params!=    null    ||    params.getType()    ==    Token.GETELEM)    {    timeout    	compilable	timeout	131	1	replace
295	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.GETELEM)  {  timeout  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.GETELEM)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  &&  params.getType()  ==  Token.GETELEM)  {	  if(params!=    null    ||    params.getType()    ==    Token.GETELEM)    {    timeout    	compilable	timeout	131	1	replace
296	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.NAME)    {    if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	34	None	add
297	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.NAME)    {    if(params!=  null  ||  params.getType()  ==  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	34	None	add
298	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.NAME)    {    if(params  ==  null  ||  params.getType()!=  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	34	None	add
299	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  If(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  If(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.NAME)    {    If(params  ==  null  ||  params.getType()  ==  Token.NAME)  {	  timeout    	non-compiled	[CE]  	34	None	add
300	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  if(params  ==  null  ||  params.getType()  >=  Token.NAME)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  if(params  ==  null  ||  params.getType()  >=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.NAME)    {    if(params  ==  null  ||  params.getType()  >=  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	34	None	add
301	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  if(params  >=  null  ||  params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  if(params  >=  null  ||  params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.NAME)    {    if(params  >=  null  ||  params.getType()  ==  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	34	None	add
302	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  if(params  ==  null  ||  Params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  if(params  ==  null  ||  Params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.NAME)    {    if(params  ==  null  ||  Params.getType()  ==  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	34	None	add
303	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.OBJECTLIT)  {  if(params!=  null  &&  params.getType()  ==  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.OBJECTLIT)  {  if(params!=  null  &&  params.getType()  ==  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.OBJECTLIT)    {    if(params!=  null  &&  params.getType()  ==  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  ';'  expected	136	None	add
304	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  &&  params.getType()  ==  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  &&  params.getType()  ==  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.OBJECTLIT)    {    if(params  ==  null  &&  params.getType()  ==  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  ';'  expected	136	None	add
305	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.OBJECTLIT)  {  if(params  >=  null  &&  params.getType()  ==  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.OBJECTLIT)  {  if(params  >=  null  &&  params.getType()  ==  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.OBJECTLIT)    {    if(params  >=  null  &&  params.getType()  ==  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  ';'  expected	136	None	add
306	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.OBJECTLIT)  {  If(params!=  null  &&  params.getType()  ==  Token.OBJECTLIT)  {  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.OBJECTLIT)  {  If(params!=  null  &&  params.getType()  ==  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.OBJECTLIT)    {    If(params!=  null  &&  params.getType()  ==  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  	136	None	add
307	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.OBJECTLIT)  {  if(params  >>  null  &&  params.getType()  ==  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.OBJECTLIT)  {  if(params  >>  null  &&  params.getType()  ==  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.OBJECTLIT)    {    if(params  >>  null  &&  params.getType()  ==  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  ';'  expected	136	None	add
308	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.OBJECTLIT)  {  if(params!=  null  &&  params.getType()  >=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.OBJECTLIT)  {  if(params!=  null  &&  params.getType()  >=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.OBJECTLIT)    {    if(params!=  null  &&  params.getType()  >=  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  ';'  expected	136	None	add
309	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.OBJECTLIT)  {  if(params  [BUGGY]  null  &&  params.getType()  ==  Token.OBJECTLIT)  {  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.OBJECTLIT)  {  if(params  [BUGGY]  null  &&  params.getType()  ==  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.OBJECTLIT)    {    if(params  [BUGGY]  null  &&  params.getType()  ==  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  	136	None	add
310	[BUG]  [BUGGY]  Node  source  =  params!=  null?  params.getNext()  :  null;  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  params!=  null?  params.getNext()  :  null;  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params!=  null?  params.getNext()  :  null;	  Node    source    =    params.getNext();    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
311	[BUG]  [BUGGY]  Node  source  =  params  ==  null?  params.getNext()  :  null;  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  params  ==  null?  params.getNext()  :  null;  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params  ==  null?  params.getNext()  :  null;	  Node    source    =    params.getNext();    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
312	[BUG]  [BUGGY]  Node  source  =  params.getNext(),  thisTypeNode;  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  params.getNext(),  thisTypeNode;  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params.getNext(),  thisTypeNode;	  Node    source    =    params.getNext();    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
313	[BUG]  [BUGGY]  Node  source  =  params.getNext(),  thisTypeNode);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  params.getNext(),  thisTypeNode);  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params.getNext(),  thisTypeNode);	  Node    source    =    params.getNext();    	non-compiled	[CE]  	87	None	replace
314	[BUG]  [BUGGY]  Node  source  =  params.getNext()  :  null;  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  params.getNext()  :  null;  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params.getNext()  :  null;	  Node    source    =    params.getNext();    	non-compiled	[CE]  	87	None	replace
315	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.GETPROP)    {    if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	3	None	add
316	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.GETPROP)    {    if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	3	None	add
317	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.GETPROP)    {    if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	3	None	add
318	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  If(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  If(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.GETPROP)    {    If(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  	3	None	add
319	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()  >=  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()  >=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.GETPROP)    {    if(params  ==  null  ||  params.getType()  >=  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	3	None	add
320	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  >=  null  ||  params.getType()  ==  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  >=  null  ||  params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.GETPROP)    {    if(params  >=  null  ||  params.getType()  ==  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	3	None	add
321	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()  ==  Token.SETPROP)  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()  ==  Token.SETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.GETPROP)    {    if(params  ==  null  ||  params.getType()  ==  Token.SETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	3	None	add
322	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {  if(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {  if(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.FUNCTION)    {    if(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	23	None	add
323	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {  if(params  ==  null  &&  params.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {  if(params  ==  null  &&  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.FUNCTION)    {    if(params  ==  null  &&  params.getType()  ==  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	23	None	add
324	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {  if(params  >=  null  &&  params.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {  if(params  >=  null  &&  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.FUNCTION)    {    if(params  >=  null  &&  params.getType()  ==  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	23	None	add
325	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {  If(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {  If(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.FUNCTION)    {    If(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  	23	None	add
326	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {  if(params  >>  null  &&  params.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {  if(params  >>  null  &&  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.FUNCTION)    {    if(params  >>  null  &&  params.getType()  ==  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	23	None	add
327	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {  if(params!=  null  &&  params.getType()  >=  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {  if(params!=  null  &&  params.getType()  >=  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.FUNCTION)    {    if(params!=  null  &&  params.getType()  >=  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	23	None	add
328	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {  if(params  [BUGGY]  null  &&  params.getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {  if(params  [BUGGY]  null  &&  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.FUNCTION)    {    if(params  [BUGGY]  null  &&  params.getType()  ==  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  	23	None	add
329	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.VAR)  {  if(params  ==  null  ||  params.getType()  ==  Token.VAR)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.VAR)  {  if(params  ==  null  ||  params.getType()  ==  Token.VAR)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.VAR)    {    if(params  ==  null  ||  params.getType()  ==  Token.VAR)  {	  timeout    	non-compiled	[CE]  ';'  expected	145	None	add
330	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.VAR)  {  if(params!=  null  ||  params.getType()  ==  Token.VAR)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.VAR)  {  if(params!=  null  ||  params.getType()  ==  Token.VAR)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.VAR)    {    if(params!=  null  ||  params.getType()  ==  Token.VAR)  {	  timeout    	non-compiled	[CE]  ';'  expected	145	None	add
331	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.VAR)  {  if(params  ==  null  ||  params.getType()!=  Token.VAR)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.VAR)  {  if(params  ==  null  ||  params.getType()!=  Token.VAR)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.VAR)    {    if(params  ==  null  ||  params.getType()!=  Token.VAR)  {	  timeout    	non-compiled	[CE]  ';'  expected	145	None	add
332	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.VAR)  {  If(params  ==  null  ||  params.getType()  ==  Token.VAR)  {  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.VAR)  {  If(params  ==  null  ||  params.getType()  ==  Token.VAR)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.VAR)    {    If(params  ==  null  ||  params.getType()  ==  Token.VAR)  {	  timeout    	non-compiled	[CE]  	145	None	add
333	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.VAR)  {  if(params  ==  null  ||  params.getType()  >=  Token.VAR)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.VAR)  {  if(params  ==  null  ||  params.getType()  >=  Token.VAR)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.VAR)    {    if(params  ==  null  ||  params.getType()  >=  Token.VAR)  {	  timeout    	non-compiled	[CE]  ';'  expected	145	None	add
334	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.VAR)  {  if(params  >=  null  ||  params.getType()  ==  Token.VAR)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.VAR)  {  if(params  >=  null  ||  params.getType()  ==  Token.VAR)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.VAR)    {    if(params  >=  null  ||  params.getType()  ==  Token.VAR)  {	  timeout    	non-compiled	[CE]  ';'  expected	145	None	add
335	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.VAR)  {  if(params  ==  null  ||  params.getType()  ==  Token.VOID)  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.VAR)  {  if(params  ==  null  ||  params.getType()  ==  Token.VOID)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.VAR)    {    if(params  ==  null  ||  params.getType()  ==  Token.VOID)  {	  timeout    	non-compiled	[CE]  ';'  expected	145	None	add
336	[BUG]  [BUGGY]  if(params  ==  null  ||  Params.getType()!=  Token.NAME)  {  [CE]  cannot  find  symbol  Params  [FE]            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  Params.getType()!=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  Params.getType()!=  Token.NAME)  {	  if(params    ==    null    ||    params.getType()!=    Token.NAME)    {    if(params    ==    null    ||    Params.getType()!=    Token.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  Params	120	None	replace
337	[BUG]  [BUGGY]  Node  lastParam  =  params.getLastParameter(),  source);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  lastParam  =  params.getLastParameter(),  source);  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  lastParam  =  params.getLastParameter(),  source);	  Node    lastParam    =    params.getLastParameter();    	non-compiled	[CE]  	119	None	replace
338	[BUG]  [BUGGY]  Node  lastParam  =  params.getFirstParameter();  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  lastParam  =  params.getFirstParameter();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  lastParam  =  params.getFirstParameter();	  Node    lastParam    =    params.getLastParameter();    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
339	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETELEM)  {  if(params  ==  null  ||  params.getType()!=  Token.GETELEM)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETELEM)  {  if(params  ==  null  ||  params.getType()!=  Token.GETELEM)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.GETELEM)    {    if(params  ==  null  ||  params.getType()!=  Token.GETELEM)  {	  timeout    	non-compiled	[CE]  ';'  expected	148	None	add
340	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETELEM)  {  if(params!=  null  ||  params.getType()!=  Token.GETELEM)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETELEM)  {  if(params!=  null  ||  params.getType()!=  Token.GETELEM)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.GETELEM)    {    if(params!=  null  ||  params.getType()!=  Token.GETELEM)  {	  timeout    	non-compiled	[CE]  ';'  expected	148	None	add
341	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETELEM)  {  if(params  ==  null  ||  params.getType()  >=  Token.GETELEM)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETELEM)  {  if(params  ==  null  ||  params.getType()  >=  Token.GETELEM)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.GETELEM)    {    if(params  ==  null  ||  params.getType()  >=  Token.GETELEM)  {	  timeout    	non-compiled	[CE]  ';'  expected	148	None	add
342	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETELEM)  {  if(params  ==  null  ||  params.getType()  >>  Token.GETELEM)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETELEM)  {  if(params  ==  null  ||  params.getType()  >>  Token.GETELEM)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.GETELEM)    {    if(params  ==  null  ||  params.getType()  >>  Token.GETELEM)  {	  timeout    	non-compiled	[CE]  ';'  expected	148	None	add
343	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETELEM)  {  If(params  ==  null  ||  params.getType()!=  Token.GETELEM)  {  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETELEM)  {  If(params  ==  null  ||  params.getType()!=  Token.GETELEM)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.GETELEM)    {    If(params  ==  null  ||  params.getType()!=  Token.GETELEM)  {	  timeout    	non-compiled	[CE]  	148	None	add
344	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETELEM)  {  if(params  >=  null  ||  params.getType()!=  Token.GETELEM)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETELEM)  {  if(params  >=  null  ||  params.getType()!=  Token.GETELEM)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.GETELEM)    {    if(params  >=  null  ||  params.getType()!=  Token.GETELEM)  {	  timeout    	non-compiled	[CE]  ';'  expected	148	None	add
345	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETELEM)  {  if(params  ==  null  ||  params.getType()!=  Token.SETELEM)  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETELEM)  {  if(params  ==  null  ||  params.getType()!=  Token.SETELEM)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.GETELEM)    {    if(params  ==  null  ||  params.getType()!=  Token.SETELEM)  {	  timeout    	non-compiled	[CE]  ';'  expected	148	None	add
346	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.RETURN)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params  ==  null  ||  params.getType()!=  Token.RETURN)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params    ==    null    ||    params.getType()!=    Token.RETURN)    {    	compilable	timeout	126	1	replace
347	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.RETURN)  {  timeout  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.RETURN)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()!=  Token.RETURN)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params    ==    null    ||    params.getType()!=    Token.RETURN)    {    	compilable	timeout	126	1	replace
348	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.SETPROP)  {  if(params  ==  null  ||  params.getType()  ==  Token.SETPROP)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.SETPROP)  {  if(params  ==  null  ||  params.getType()  ==  Token.SETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.SETPROP)    {    if(params  ==  null  ||  params.getType()  ==  Token.SETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	154	None	add
349	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.SETPROP)  {  if(params!=  null  ||  params.getType()  ==  Token.SETPROP)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.SETPROP)  {  if(params!=  null  ||  params.getType()  ==  Token.SETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.SETPROP)    {    if(params!=  null  ||  params.getType()  ==  Token.SETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	154	None	add
350	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.SETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.SETPROP)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.SETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.SETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.SETPROP)    {    if(params  ==  null  ||  params.getType()!=  Token.SETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	154	None	add
351	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.SETPROP)  {  If(params  ==  null  ||  params.getType()  ==  Token.SETPROP)  {  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.SETPROP)  {  If(params  ==  null  ||  params.getType()  ==  Token.SETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.SETPROP)    {    If(params  ==  null  ||  params.getType()  ==  Token.SETPROP)  {	  timeout    	non-compiled	[CE]  	154	None	add
352	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.SETPROP)  {  if(params  ==  null  ||  params.getType()  >=  Token.SETPROP)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.SETPROP)  {  if(params  ==  null  ||  params.getType()  >=  Token.SETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.SETPROP)    {    if(params  ==  null  ||  params.getType()  >=  Token.SETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	154	None	add
353	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.SETPROP)  {  if(params  >=  null  ||  params.getType()  ==  Token.SETPROP)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.SETPROP)  {  if(params  >=  null  ||  params.getType()  ==  Token.SETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.SETPROP)    {    if(params  >=  null  ||  params.getType()  ==  Token.SETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	154	None	add
354	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.SETPROP)  {  if(params  ==  null  ||  Params.getType()  ==  Token.SETPROP)  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.SETPROP)  {  if(params  ==  null  ||  Params.getType()  ==  Token.SETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.SETPROP)    {    if(params  ==  null  ||  Params.getType()  ==  Token.SETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	154	None	add
355	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETELEM)  {  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETELEM)  {  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.GETELEM)    {    if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	130	None	add
356	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETELEM)  {  if(params!=  null  ||  params.getType()  ==  Token.GETELM)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETELEM)  {  if(params!=  null  ||  params.getType()  ==  Token.GETELM)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.GETELEM)    {    if(params!=  null  ||  params.getType()  ==  Token.GETELM)  {	  timeout    	non-compiled	[CE]  ';'  expected	130	None	add
357	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {  if(params!=  null  &&  Params.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {  if(params!=  null  &&  Params.getType()  ==  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.FUNCTION)    {    if(params!=  null  &&  Params.getType()  ==  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	23	None	add
358	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.FUNCTION)  {  if(params  ==  null  ||  params.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.FUNCTION)  {  if(params  ==  null  ||  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()    ==    Token.FUNCTION)    {    if(params  ==  null  ||  params.getType()  ==  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	25	None	add
359	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.FUNCTION)  {  if(params  ==  null  &&  Params.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.FUNCTION)  {  if(params  ==  null  &&  Params.getType()  ==  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()    ==    Token.FUNCTION)    {    if(params  ==  null  &&  Params.getType()  ==  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	25	None	add
360	[BUG]  [BUGGY]  Node  source  =  getSource(params);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  getSource(params);  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  getSource(params);	  Node    source    =    getSource();    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
361	[BUG]  [BUGGY]  Node  source  =  getSourceFile();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  getSourceFile();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  getSourceFile();	  Node    source    =    getSource();    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
362	[BUG]  [BUGGY]  Node  source  =  getSourceRoot();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  getSourceRoot();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  getSourceRoot();	  Node    source    =    getSource();    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
363	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  >=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  ||  params.getType()  >=  Token.GETPROP)  {	  if(params    >=    null    ||    params.getType()!=    Token.GETPROP)    {    	compilable	timeout	147	1	replace
364	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  >=  Token.GETPROP)  {  timeout  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  >=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  >=  Token.GETPROP)  {	  if(params    >=    null    ||    params.getType()!=    Token.GETPROP)    {    	compilable	timeout	147	1	replace
365	[BUG]  [BUGGY]  if(params  >=  null  ||  params.getType()  ==  Token.GETPROP)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  >=  null  ||  params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  >=  null  ||  params.getType()  ==  Token.GETPROP)  {	  if(params    >=    null    ||    params.getType()!=    Token.GETPROP)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	147	None	replace
366	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {	  if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    if(params!=    null    ||    params.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	113	None	replace
367	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()  ==  Token.RETURN)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()  ==  Token.RETURN)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.GETPROP)    {    if(params  ==  null  ||  params.getType()  ==  Token.RETURN)  {	  timeout    	non-compiled	[CE]  ';'  expected	3	None	add
368	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.GETPROP)    {    if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	3	None	add
369	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETELEM)  {  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETELEM)  {  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.GETELEM)    {    if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	148	None	add
370	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params!=    null    ||    params.getType()!=    Token.GETPROP)    {    	non-compiled	[CE]  ';'  expected	73	None	replace
371	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params!=    null    ||    params.getType()!=    Token.GETPROP)    {    	non-compiled	[CE]  ';'  expected	73	None	replace
372	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params!=    null    ||    params.getType()!=    Token.GETPROP)    {    	non-compiled	[CE]  ';'  expected	73	None	replace
373	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params!=    null    ||    params.getType()!=    Token.GETPROP)    {    	non-compiled	[CE]  ';'  expected	73	None	replace
374	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  If(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  If(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  If(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {	  if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    If(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
375	[BUG]  [BUGGY]  if(params  ==  null)  {  If(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null)  {  If(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null)  {  If(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {	  if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    If(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
376	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  &&  params.getType()  ==  Token.SETPROP)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  &&  params.getType()  ==  Token.SETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.GETPROP)    {    if(params!=  null  &&  params.getType()  ==  Token.SETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	42	None	add
377	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  &&  params.getType()  ==  Token.RETURN)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  &&  params.getType()  ==  Token.RETURN)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.GETPROP)    {    if(params!=  null  &&  params.getType()  ==  Token.RETURN)  {	  timeout    	non-compiled	[CE]  ';'  expected	42	None	add
378	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.GETPROP)    {    if(params!=  null  &&  params.getType()  ==  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	42	None	add
379	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()!=  Token.BLOCK)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()!=  Token.BLOCK)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()!=  Token.BLOCK)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params    ==    null    ||    params.getType()!=    Token.BLOCK)    {    	non-compiled	[CE]  ';'  expected	124	None	replace
380	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()!=  Token.BLOCK)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()!=  Token.BLOCK)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()!=  Token.BLOCK)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params    ==    null    ||    params.getType()!=    Token.BLOCK)    {    	non-compiled	[CE]  ';'  expected	124	None	replace
381	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()  ==  Token.BLOCK)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()  ==  Token.BLOCK)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()  ==  Token.BLOCK)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params    ==    null    ||    params.getType()!=    Token.BLOCK)    {    	non-compiled	[CE]  ';'  expected	124	None	replace
382	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()  ==  Token.BLOCK)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()  ==  Token.BLOCK)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()  ==  Token.BLOCK)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params    ==    null    ||    params.getType()!=    Token.BLOCK)    {    	non-compiled	[CE]  ';'  expected	124	None	replace
383	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()  ==  Token.BLOCK)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()  ==  Token.BLOCK)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()  ==  Token.BLOCK)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params    ==    null    ||    params.getType()!=    Token.BLOCK)    {    	non-compiled	[CE]  ';'  expected	124	None	replace
384	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()  ==  Token.EMPTY)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()  ==  Token.EMPTY)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.OBJECTLIT)    {    if(params  ==  null  ||  params.getType()  ==  Token.EMPTY)  {	  timeout    	non-compiled	[CE]  ';'  expected	68	None	add
385	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params!=  null  ||  params.getType()  ==  Token.EMPTY)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params!=  null  ||  params.getType()  ==  Token.EMPTY)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.OBJECTLIT)    {    if(params!=  null  ||  params.getType()  ==  Token.EMPTY)  {	  timeout    	non-compiled	[CE]  ';'  expected	64	None	add
386	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.OBJECTLIT)  {  if(params!=  null  &&  Params.getType()  ==  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.OBJECTLIT)  {  if(params!=  null  &&  Params.getType()  ==  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.OBJECTLIT)    {    if(params!=  null  &&  Params.getType()  ==  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  ';'  expected	136	None	add
387	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.OBJECTLIT)  {  if(params!=  null  &&  params.getType()  ==  Token.EMPTY)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.OBJECTLIT)  {  if(params!=  null  &&  params.getType()  ==  Token.EMPTY)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.OBJECTLIT)    {    if(params!=  null  &&  params.getType()  ==  Token.EMPTY)  {	  timeout    	non-compiled	[CE]  ';'  expected	136	None	add
388	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {	  if(params    ==    null    ||    params.getType()!=    Token.NAME)    {    if(params!=    null    ||    params.getType()!=    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	17	None	replace
389	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  if(params!=  null  ||  params.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  if(params!=  null  ||  params.getType()!=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  if(params!=  null  ||  params.getType()!=  Token.NAME)  {	  if(params    ==    null    ||    params.getType()!=    Token.NAME)    {    if(params!=    null    ||    params.getType()!=    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	17	None	replace
390	[BUG]  [BUGGY]  if(params  ==  null)  {  if(params!=  null  ||  params.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null)  {  if(params!=  null  ||  params.getType()!=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null)  {  if(params!=  null  ||  params.getType()!=  Token.NAME)  {	  if(params    ==    null    ||    params.getType()!=    Token.NAME)    {    if(params!=    null    ||    params.getType()!=    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	17	None	replace
391	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  ||  params.getType()  ==  Token.RETURN)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  ||  params.getType()  ==  Token.RETURN)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  ||  params.getType()  ==  Token.RETURN)  {	  if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    if(params!=    null    ||    params.getType()    ==    Token.RETURN)    {    	non-compiled	[CE]  ';'  expected	112	None	replace
392	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.STRING)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.STRING)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.STRING)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params    ==    null    ||    params.getType()!=    Token.STRING)    {    	non-compiled	[CE]  ';'  expected	129	None	replace
393	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.STRING)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.STRING)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.STRING)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params    ==    null    ||    params.getType()!=    Token.STRING)    {    	non-compiled	[CE]  ';'  expected	129	None	replace
394	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.STRING)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params  ==  null  ||  params.getType()  ==  Token.STRING)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params    ==    null    ||    params.getType()!=    Token.STRING)    {    	compilable	timeout	129	1	replace
395	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.STRING)  {  timeout  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.STRING)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()  ==  Token.STRING)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params    ==    null    ||    params.getType()!=    Token.STRING)    {    	compilable	timeout	129	1	replace
396	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()  ==  Token.STRING)  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()  ==  Token.STRING)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()  ==  Token.STRING)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params    ==    null    ||    params.getType()!=    Token.STRING)    {    	non-compiled	[CE]  ';'  expected	129	None	replace
397	[BUG]  [BUGGY]  Node  source  =  params!=  null?  params.getNext()  :  Collections.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  params!=  null?  params.getNext()  :  Collections.EMPTY_LIST;  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params!=  null?  params.getNext()  :  Collections.EMPTY_LIST;	  Node    source    =    params.getNext();    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
398	[BUG]  [BUGGY]  Node  source  =  params.cloneTree();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  params.cloneTree();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params.cloneTree();	  Node    source    =    params.getNext();    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
399	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params    >=    null    ||    params.getType()!=    Token.GETPROP)    {    	non-compiled	[CE]  ';'  expected	77	None	replace
400	[BUG]  [BUGGY]  timeout  [FE]            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  >=  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  ||  params.getType()  >=  Token.FUNCTION)  {	  if(params    >=    null    ||    params.getType()!=    Token.FUNCTION)    {    	compilable	timeout	138	1	replace
401	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  >=  Token.FUNCTION)  {  timeout  [FE]            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  >=  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  >=  Token.FUNCTION)  {	  if(params    >=    null    ||    params.getType()!=    Token.FUNCTION)    {    	compilable	timeout	138	1	replace
402	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  &&  params.getType()  ==  Token.SETPROP)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  &&  params.getType()  ==  Token.SETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()    ==    Token.GETPROP)    {    if(params  ==  null  &&  params.getType()  ==  Token.SETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	44	None	add
403	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  &&  params.getType()  ==  Token.RETURN)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  &&  params.getType()  ==  Token.RETURN)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()    ==    Token.GETPROP)    {    if(params  ==  null  &&  params.getType()  ==  Token.RETURN)  {	  timeout    	non-compiled	[CE]  ';'  expected	44	None	add
404	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  &&  params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  &&  params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()    ==    Token.GETPROP)    {    if(params  ==  null  &&  params.getType()  ==  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	44	None	add
405	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.SETPROP)  {  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.SETPROP)  {  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.SETPROP)    {    if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	154	None	add
406	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getChildCount()  >  1)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  &&  params.getChildCount()  >  1)  {	  if(params!=    null    &&    params.hasChildren())    {    timeout    	compilable	timeout	135	1	replace
407	[BUG]  [BUGGY]  if(params!=  null  &&  params.getChildCount()  >  1)  {  timeout  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getChildCount()  >  1)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getChildCount()  >  1)  {	  if(params!=    null    &&    params.hasChildren())    {    timeout    	compilable	timeout	135	1	replace
408	[BUG]  [BUGGY]  Node  lastParam  =  params!=  null?  params.getLastParameter()  :  params.getLastParameter();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  lastParam  =  params!=  null?  params.getLastParameter()  :  params.getLastParameter();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  lastParam  =  params!=  null?  params.getLastParameter()  :  params.getLastParameter();	  Node    lastParam    =    params.getLastParameter();    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
409	[BUG]  [BUGGY]  Node  lastParam  =  params  ==  null?  params.getLastParameter()  :  params.getLastParameter();  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  lastParam  =  params  ==  null?  params.getLastParameter()  :  params.getLastParameter();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  lastParam  =  params  ==  null?  params.getLastParameter()  :  params.getLastParameter();	  Node    lastParam    =    params.getLastParameter();    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
410	[BUG]  [BUGGY]  Node  lastParam  =  params!=  null?  params.getLastParameter()  :  params.cloneTree();  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  lastParam  =  params!=  null?  params.getLastParameter()  :  params.cloneTree();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  lastParam  =  params!=  null?  params.getLastParameter()  :  params.cloneTree();	  Node    lastParam    =    params.getLastParameter();    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
411	[BUG]  [BUGGY]  Node  lastParam  =  params  ==  null?  params.getLastParameter()  :  params.cloneTree();  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  lastParam  =  params  ==  null?  params.getLastParameter()  :  params.cloneTree();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  lastParam  =  params  ==  null?  params.getLastParameter()  :  params.cloneTree();	  Node    lastParam    =    params.getLastParameter();    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
412	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  if(params!=  null  ||  Params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  if(params!=  null  ||  Params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  if(params!=  null  ||  Params.getType()  ==  Token.NAME)  {	  if(params!=    null    ||    params.getType()    ==    Token.NAME)    {    if(params!=    null    ||    Params.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	121	None	replace
413	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  if(params!=  null  ||  Params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  if(params!=  null  ||  Params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  if(params!=  null  ||  Params.getType()  ==  Token.NAME)  {	  if(params!=    null    ||    params.getType()    ==    Token.NAME)    {    if(params!=    null    ||    Params.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	121	None	replace
414	[BUG]  [BUGGY]  Node  source  =(Node)params.getProp(Node.SOURCENAME_PROP);  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =(Node)params.getProp(Node.SOURCENAME_PROP);  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =(Node)params.getProp(Node.SOURCENAME_PROP);	  Node    source    =(Node)params.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
415	[BUG]  [BUGGY]  Node  source  =(Node)params.getFirstChild();  [CE]  illegal  start  of  type  [FE]                                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =(Node)params.getFirstChild();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =(Node)params.getFirstChild();	  Node    source    =(Node)params.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
416	[BUG]  [BUGGY]  Node  source  =(Node)params.getParent();  [CE]  illegal  start  of  type  [FE]                                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =(Node)params.getParent();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =(Node)params.getParent();	  Node    source    =(Node)params.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
417	[BUG]  [BUGGY]  Node  source  =(Node)params.getProp(Node.SOURCEFILE_PROP);  [CE]  illegal  start  of  type  [FE]                                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =(Node)params.getProp(Node.SOURCEFILE_PROP);  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =(Node)params.getProp(Node.SOURCEFILE_PROP);	  Node    source    =(Node)params.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
418	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  If(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  If(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  If(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    If(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    	non-compiled	[CE]  ';'  expected	76	None	replace
419	[BUG]  [BUGGY]  if(params!=  null)  {  If(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null)  {  If(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null)  {  If(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    If(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    	non-compiled	[CE]  ';'  expected	76	None	replace
420	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  If(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  If(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  If(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    If(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    	non-compiled	[CE]  ';'  expected	76	None	replace
421	[BUG]  [BUGGY]  if(params  ==  null)  {  If(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null)  {  If(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null)  {  If(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    If(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    	non-compiled	[CE]  ';'  expected	76	None	replace
422	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  If(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  If(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  If(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    If(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    	non-compiled	[CE]  ';'  expected	76	None	replace
423	[BUG]  [BUGGY]  Node  source  =  params  ==  null?  params.getFirstChild()  :  params.getLastChild();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  params  ==  null?  params.getFirstChild()  :  params.getLastChild();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params  ==  null?  params.getFirstChild()  :  params.getLastChild();	  Node    source    =    params.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
424	[BUG]  [BUGGY]  Node  source  =  params!=  null?  params.getLastChild()  :  params.getFirstChild();  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  params!=  null?  params.getLastChild()  :  params.getFirstChild();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params!=  null?  params.getLastChild()  :  params.getFirstChild();	  Node    source    =    params.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
425	[BUG]  [BUGGY]  if(params  ==  null)  {  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null)  {  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null)  {  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {	  if(params    ==    null    ||    params.getType()!=    Token.NAME)    {    if(params    >=    null    ||    params.getType()!=    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
426	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params!=  null  ||  params.getType()!=  Token.EMPTY)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params!=  null  ||  params.getType()!=  Token.EMPTY)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params!=  null  ||  params.getType()!=  Token.EMPTY)  {	  timeout    	non-compiled	[CE]  ';'  expected	66	None	add
427	[BUG]  [BUGGY]  Node  source  =  params!=  null?  params.getSource()  :  thisTypeNode;  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  params!=  null?  params.getSource()  :  thisTypeNode;  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params!=  null?  params.getSource()  :  thisTypeNode;	  Node    source    =    params.getSource();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
428	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  &&  params.getType()!=  Token.SETPROP)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  &&  params.getType()!=  Token.SETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()!=    Token.GETPROP)    {    if(params  ==  null  &&  params.getType()!=  Token.SETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	7	None	add
429	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  &&  params.getType()!=  Token.RETURN)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  &&  params.getType()!=  Token.RETURN)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()!=    Token.GETPROP)    {    if(params  ==  null  &&  params.getType()!=  Token.RETURN)  {	  timeout    	non-compiled	[CE]  ';'  expected	7	None	add
430	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  &&  params.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  &&  params.getType()!=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()!=    Token.GETPROP)    {    if(params  ==  null  &&  params.getType()!=  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	7	None	add
431	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  &&  params.getType()!=  Token.CALL)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  &&  params.getType()!=  Token.CALL)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()!=    Token.GETPROP)    {    if(params  ==  null  &&  params.getType()!=  Token.CALL)  {	  timeout    	non-compiled	[CE]  ';'  expected	7	None	add
432	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.OBJECTLIT)  {  if(params!=  null  &&  params.getType()!=  Token.EMPTY)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.OBJECTLIT)  {  if(params!=  null  &&  params.getType()!=  Token.EMPTY)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()!=    Token.OBJECTLIT)    {    if(params!=  null  &&  params.getType()!=  Token.EMPTY)  {	  timeout    	non-compiled	[CE]  ';'  expected	70	None	add
433	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.CALL)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.CALL)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.CALL)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params    ==    null    ||    params.getType()!=    Token.CALL)    {    	non-compiled	[CE]  ';'  expected	128	None	replace
434	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.CALL)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.CALL)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.CALL)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params    ==    null    ||    params.getType()!=    Token.CALL)    {    	non-compiled	[CE]  ';'  expected	128	None	replace
435	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()  ==  Token.CALL)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()  ==  Token.CALL)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()  ==  Token.CALL)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params    ==    null    ||    params.getType()!=    Token.CALL)    {    	non-compiled	[CE]  ';'  expected	128	None	replace
436	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()  ==  Token.CALL)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()  ==  Token.CALL)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()  ==  Token.CALL)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params    ==    null    ||    params.getType()!=    Token.CALL)    {    	non-compiled	[CE]  ';'  expected	128	None	replace
437	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  ||  params.getType()!=  Token.CALL)  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  ||  params.getType()!=  Token.CALL)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  ||  params.getType()!=  Token.CALL)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params    ==    null    ||    params.getType()!=    Token.CALL)    {    	non-compiled	[CE]  ';'  expected	128	None	replace
438	[BUG]  [BUGGY]  Preconditions.checkArgument(params!=  null  &&  params.getType()  ==  Token.OBJECTLIT);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Preconditions.checkArgument(params!=  null  &&  params.getType()  ==  Token.OBJECTLIT);  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Preconditions.checkArgument(params!=  null  &&  params.getType()  ==  Token.OBJECTLIT);	  Preconditions.checkArgument(params.getType()    ==    Token.OBJECTLIT);    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
439	[BUG]  [BUGGY]  Preconditions.checkArgument(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT);  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Preconditions.checkArgument(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT);  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Preconditions.checkArgument(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT);	  Preconditions.checkArgument(params.getType()    ==    Token.OBJECTLIT);    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
440	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.NAME)  {  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.NAME)  {  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()!=    Token.NAME)    {    if(params  ==  null  ||  params.getType()!=  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	40	None	add
441	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.NAME)  {  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.NAME)  {  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()    ==    Token.NAME)    {    if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	55	None	add
442	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.NAME)  {  if(params  ==  null  &&  Params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.NAME)  {  if(params  ==  null  &&  Params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()    ==    Token.NAME)    {    if(params  ==  null  &&  Params.getType()  ==  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	55	None	add
443	[BUG]  [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.NAME,   "call ");  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.NAME,   "call ");  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Preconditions.checkArgument(params.getType()  ==  Token.NAME,   "call ");	  Preconditions.checkArgument(params.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
444	[BUG]  [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(params));  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(params));  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Preconditions.checkArgument(params.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(params));	  Preconditions.checkArgument(params.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
445	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()!=  Token.EMPTY)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()!=  Token.EMPTY)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()!=  Token.EMPTY)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params    ==    null    ||    params.getType()!=    Token.EMPTY)    {    	non-compiled	[CE]  ';'  expected	123	None	replace
446	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()  ==  Token.EMPTY)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()  ==  Token.EMPTY)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()  ==  Token.EMPTY)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params    ==    null    ||    params.getType()!=    Token.EMPTY)    {    	non-compiled	[CE]  ';'  expected	123	None	replace
447	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()  ==  Token.EMPTY)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()  ==  Token.EMPTY)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()  ==  Token.EMPTY)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params    ==    null    ||    params.getType()!=    Token.EMPTY)    {    	non-compiled	[CE]  ';'  expected	123	None	replace
448	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.VAR)  {  if(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.VAR)  {  if(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.VAR)    {    if(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	132	None	add
449	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.VAR)  {  if(params!=  null  &&  params.getType()  ==  Token.VOID)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.VAR)  {  if(params!=  null  &&  params.getType()  ==  Token.VOID)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.VAR)    {    if(params!=  null  &&  params.getType()  ==  Token.VOID)  {	  timeout    	non-compiled	[CE]  ';'  expected	132	None	add
450	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.VAR)  {  if(params!=  null  &&  params.getType()  ==  Token.FOR)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.VAR)  {  if(params!=  null  &&  params.getType()  ==  Token.FOR)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.VAR)    {    if(params!=  null  &&  params.getType()  ==  Token.FOR)  {	  timeout    	non-compiled	[CE]  ';'  expected	132	None	add
451	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  if(params  ==  null  ||  Params.getType()!=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  if(params  ==  null  ||  Params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  if(params  ==  null  ||  Params.getType()!=  Token.OBJECTLIT)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params    ==    null    ||    Params.getType()!=    Token.OBJECTLIT)    {    	non-compiled	[CE]  ';'  expected	150	None	replace
452	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  Params.getType()!=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  Params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  Params.getType()!=  Token.OBJECTLIT)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params    ==    null    ||    Params.getType()!=    Token.OBJECTLIT)    {    	non-compiled	[CE]  ';'  expected	150	None	replace
453	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  if(params  ==  null  ||  Params.getType()!=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  if(params  ==  null  ||  Params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  if(params  ==  null  ||  Params.getType()!=  Token.OBJECTLIT)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params    ==    null    ||    Params.getType()!=    Token.OBJECTLIT)    {    	non-compiled	[CE]  ';'  expected	150	None	replace
454	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  Params.getType()!=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  Params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params  ==  null  ||  Params.getType()!=  Token.OBJECTLIT)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params    ==    null    ||    Params.getType()!=    Token.OBJECTLIT)    {    	non-compiled	[CE]  ';'  expected	150	None	replace
455	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  if(params  ==  null  ||  Params.getType()!=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  if(params  ==  null  ||  Params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  if(params  ==  null  ||  Params.getType()!=  Token.OBJECTLIT)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params    ==    null    ||    Params.getType()!=    Token.OBJECTLIT)    {    	non-compiled	[CE]  ';'  expected	150	None	replace
456	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  if(params  ==  null  ||  Params.getType()!=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  if(params  ==  null  ||  Params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  if(params  ==  null  ||  Params.getType()!=  Token.OBJECTLIT)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params    ==    null    ||    Params.getType()!=    Token.OBJECTLIT)    {    	non-compiled	[CE]  ';'  expected	150	None	replace
457	[BUG]  [BUGGY]  if(params!=  null)  {  If(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null)  {  If(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null)  {  If(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    If(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    	non-compiled	[CE]  ';'  expected	97	None	replace
458	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  If(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  If(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  If(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    If(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    	non-compiled	[CE]  ';'  expected	97	None	replace
459	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  If(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  If(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  If(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    If(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    	non-compiled	[CE]  ';'  expected	97	None	replace
460	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  If(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  If(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  If(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    If(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    	non-compiled	[CE]  ';'  expected	97	None	replace
461	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  if(params  ==  null  ||  Params.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  if(params  ==  null  ||  Params.getType()!=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  if(params  ==  null  ||  Params.getType()!=  Token.NAME)  {	  if(params    ==    null    ||    params.getType()!=    Token.NAME)    {    if(params    ==    null    ||    Params.getType()!=    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	120	None	replace
462	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  if(params  ==  null  ||  Params.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  if(params  ==  null  ||  Params.getType()!=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  if(params  ==  null  ||  Params.getType()!=  Token.NAME)  {	  if(params    ==    null    ||    params.getType()!=    Token.NAME)    {    if(params    ==    null    ||    Params.getType()!=    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	120	None	replace
463	[BUG]  [BUGGY]  Node  source  =  params!=  null?  params.getString()  :  name;  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  params!=  null?  params.getString()  :  name;  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params!=  null?  params.getString()  :  name;	  Node    source    =    params.getString();    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
464	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params    ==    null    ||    params.getType()!=    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	127	None	replace
465	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params    ==    null    ||    params.getType()!=    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	127	None	replace
466	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params    ==    null    ||    params.getType()!=    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	127	None	replace
467	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  If(params!=  null  ||  params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  If(params!=  null  ||  params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  If(params!=  null  ||  params.getType()  ==  Token.NAME)  {	  if(params!=    null    ||    params.getType()    ==    Token.NAME)    {    If(params!=    null    ||    params.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	60	None	replace
468	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  If(params!=  null  ||  params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  If(params!=  null  ||  params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  If(params!=  null  ||  params.getType()  ==  Token.NAME)  {	  if(params!=    null    ||    params.getType()    ==    Token.NAME)    {    If(params!=    null    ||    params.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	60	None	replace
469	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.VAR)  {  if(params  ==  null  ||  params.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.VAR)  {  if(params  ==  null  ||  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.VAR)    {    if(params  ==  null  ||  params.getType()  ==  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	145	None	add
470	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.VAR)  {  if(params  ==  null  ||  params.getType()  ==  Token.FOR)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.VAR)  {  if(params  ==  null  ||  params.getType()  ==  Token.FOR)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.VAR)    {    if(params  ==  null  ||  params.getType()  ==  Token.FOR)  {	  timeout    	non-compiled	[CE]  ';'  expected	145	None	add
471	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  ||  params.getType()  ==  Token.SETPROP)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  ||  params.getType()  ==  Token.SETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  ||  params.getType()  ==  Token.SETPROP)  {	  if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    if(params!=    null    ||    params.getType()    ==    Token.SETPROP)    {    	non-compiled	[CE]  ';'  expected	111	None	replace
472	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params!=    null    ||    params.getType()!=    Token.OBJECTLIT)    {    	non-compiled	[CE]  ';'  expected	94	None	replace
473	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params!=    null    ||    params.getType()!=    Token.OBJECTLIT)    {    	non-compiled	[CE]  ';'  expected	94	None	replace
474	[BUG]  [BUGGY]  if(params  ==  null)  {  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null)  {  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null)  {  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params!=    null    ||    params.getType()!=    Token.OBJECTLIT)    {    	non-compiled	[CE]  ';'  expected	94	None	replace
475	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params!=    null    ||    params.getType()!=    Token.OBJECTLIT)    {    	non-compiled	[CE]  ';'  expected	94	None	replace
476	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params!=    null    ||    params.getType()!=    Token.OBJECTLIT)    {    	non-compiled	[CE]  ';'  expected	94	None	replace
477	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.VAR)  {  if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.VAR)  {  if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.VAR)    {    if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	114	None	add
478	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.VAR)  {  if(params!=  null  ||  params.getType()  ==  Token.FOR)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.VAR)  {  if(params!=  null  ||  params.getType()  ==  Token.FOR)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.VAR)    {    if(params!=  null  ||  params.getType()  ==  Token.FOR)  {	  timeout    	non-compiled	[CE]  ';'  expected	114	None	add
479	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.VAR)  {  if(params!=  null  ||  params.getType()  ==  Token.VOID)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.VAR)  {  if(params!=  null  ||  params.getType()  ==  Token.VOID)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.VAR)    {    if(params!=  null  ||  params.getType()  ==  Token.VOID)  {	  timeout    	non-compiled	[CE]  ';'  expected	114	None	add
480	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  >=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  ||  params.getType()  >=  Token.OBJECTLIT)  {	  if(params    >=    null    ||    params.getType()!=    Token.OBJECTLIT)    {    	compilable	timeout	140	1	replace
481	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  >=  Token.OBJECTLIT)  {  timeout  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  >=  Token.OBJECTLIT)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  >=  Token.OBJECTLIT)  {	  if(params    >=    null    ||    params.getType()!=    Token.OBJECTLIT)    {    	compilable	timeout	140	1	replace
482	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.SETPROP)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.SETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.SETPROP)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params    ==    null    ||    params.getType()!=    Token.SETPROP)    {    	non-compiled	[CE]  ';'  expected	125	None	replace
483	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.SETPROP)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.SETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.SETPROP)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params    ==    null    ||    params.getType()!=    Token.SETPROP)    {    	non-compiled	[CE]  ';'  expected	125	None	replace
484	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.SETPROP)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.SETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.SETPROP)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params    ==    null    ||    params.getType()!=    Token.SETPROP)    {    	non-compiled	[CE]  ';'  expected	125	None	replace
485	[BUG]  [BUGGY]  Node  source  =  params!=  null?  params.getLineno()  :  0;  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  params!=  null?  params.getLineno()  :  0;  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params!=  null?  params.getLineno()  :  0;	  Node    source    =    params.getLineno();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
486	[BUG]  [BUGGY]  Node  source  =  params.getLastParam();  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  params.getLastParam();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params.getLastParam();	  Node    source    =    params.getLineno();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
487	[BUG]  [BUGGY]  Node  lastParam  =  params  ==  null?  params.getLastChild()  :  params.getLastChild();  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  lastParam  =  params  ==  null?  params.getLastChild()  :  params.getLastChild();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  lastParam  =  params  ==  null?  params.getLastChild()  :  params.getLastChild();	  Node    lastParam    =    params.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
488	[BUG]  [BUGGY]  Node  lastParam  =  params  ==  null?  params.getLastChild()  :  params.getFirstChild();  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  lastParam  =  params  ==  null?  params.getLastChild()  :  params.getFirstChild();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  lastParam  =  params  ==  null?  params.getLastChild()  :  params.getFirstChild();	  Node    lastParam    =    params.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
489	[BUG]  [BUGGY]  Preconditions.checkArgument(params!=  null  &&  params.getType()  ==  Token.FUNCTION);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Preconditions.checkArgument(params!=  null  &&  params.getType()  ==  Token.FUNCTION);  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Preconditions.checkArgument(params!=  null  &&  params.getType()  ==  Token.FUNCTION);	  Preconditions.checkArgument(params.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
490	[BUG]  [BUGGY]  Preconditions.checkArgument(params  ==  null  ||  params.getType()  ==  Token.FUNCTION);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Preconditions.checkArgument(params  ==  null  ||  params.getType()  ==  Token.FUNCTION);  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Preconditions.checkArgument(params  ==  null  ||  params.getType()  ==  Token.FUNCTION);	  Preconditions.checkArgument(params.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
491	[BUG]  [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.FUNCTION  ||  params.hasChildren());  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.FUNCTION  ||  params.hasChildren());  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Preconditions.checkArgument(params.getType()  ==  Token.FUNCTION  ||  params.hasChildren());	  Preconditions.checkArgument(params.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
492	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  >=  Token.NAME)  {  if(params  >=  null  ||  params.getType()  >=  Token.NAME)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  >=  Token.NAME)  {  if(params  >=  null  ||  params.getType()  >=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    >=    Token.NAME)    {    if(params  >=  null  ||  params.getType()  >=  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	152	None	add
493	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  >=  Token.NAME)  {  If(params!=  null  ||  params.getType()  >=  Token.NAME)  {  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  >=  Token.NAME)  {  If(params!=  null  ||  params.getType()  >=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    >=    Token.NAME)    {    If(params!=  null  ||  params.getType()  >=  Token.NAME)  {	  timeout    	non-compiled	[CE]  	152	None	add
494	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.GETPROP)  {  if(params!=  null  &&  params.getType()!=  Token.SETPROP)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.GETPROP)  {  if(params!=  null  &&  params.getType()!=  Token.SETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()!=    Token.GETPROP)    {    if(params!=  null  &&  params.getType()!=  Token.SETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	5	None	add
495	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.GETPROP)  {  if(params!=  null  &&  params.getType()!=  Token.RETURN)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.GETPROP)  {  if(params!=  null  &&  params.getType()!=  Token.RETURN)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()!=    Token.GETPROP)    {    if(params!=  null  &&  params.getType()!=  Token.RETURN)  {	  timeout    	non-compiled	[CE]  ';'  expected	5	None	add
496	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.GETPROP)  {  if(params!=  null  &&  params.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.GETPROP)  {  if(params!=  null  &&  params.getType()!=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()!=    Token.GETPROP)    {    if(params!=  null  &&  params.getType()!=  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	5	None	add
497	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.GETPROP)  {  if(params!=  null  &&  params.getType()!=  Token.CALL)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.GETPROP)  {  if(params!=  null  &&  params.getType()!=  Token.CALL)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()!=    Token.GETPROP)    {    if(params!=  null  &&  params.getType()!=  Token.CALL)  {	  timeout    	non-compiled	[CE]  ';'  expected	5	None	add
498	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  >=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  &&  params.getType()  >=  Token.NAME)  {	  if(params!=    null    &&    params.getType()!=    Token.NAME)    {    timeout    	compilable	timeout	39	1	replace
499	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  >=  Token.NAME)  {  timeout  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  >=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getType()  >=  Token.NAME)  {	  if(params!=    null    &&    params.getType()!=    Token.NAME)    {    timeout    	compilable	timeout	39	1	replace
500	[BUG]  [BUGGY]  if(params!=  null  &&  params.hasChildren())  {  if(params!=  null  &&  Params.hasChildren())  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.hasChildren())  {  if(params!=  null  &&  Params.hasChildren())  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.hasChildren())    {    if(params!=  null  &&  Params.hasChildren())  {	  timeout    	non-compiled	[CE]  ';'  expected	134	None	add
501	[BUG]  [BUGGY]  Node  lastParam  =  getLastParam(params);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  lastParam  =  getLastParam(params);  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  lastParam  =  getLastParam(params);	  Node    lastParam    =    getLastParam();    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
502	[BUG]  [BUGGY]  Node  lastParam  =  getLastParamNode();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  lastParam  =  getLastParamNode();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  lastParam  =  getLastParamNode();	  Node    lastParam    =    getLastParam();    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
503	[BUG]  [BUGGY]  Node  lastParam  =  getLastParam(0);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  lastParam  =  getLastParam(0);  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  lastParam  =  getLastParam(0);	  Node    lastParam    =    getLastParam();    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
504	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  if(params!=  null  ||  params.getType()!=  Token.SETPROP)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  if(params!=  null  ||  params.getType()!=  Token.SETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()!=    Token.GETPROP)    {    if(params!=  null  ||  params.getType()!=  Token.SETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	1	None	add
505	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  if(params!=  null  ||  params.getType()!=  Token.RETURN)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  if(params!=  null  ||  params.getType()!=  Token.RETURN)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()!=    Token.GETPROP)    {    if(params!=  null  ||  params.getType()!=  Token.RETURN)  {	  timeout    	non-compiled	[CE]  ';'  expected	1	None	add
506	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  if(params!=  null  ||  params.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  if(params!=  null  ||  params.getType()!=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()!=    Token.GETPROP)    {    if(params!=  null  ||  params.getType()!=  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	1	None	add
507	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  if(params!=  null  ||  params.getType()!=  Token.CALL)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  if(params!=  null  ||  params.getType()!=  Token.CALL)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()!=    Token.GETPROP)    {    if(params!=  null  ||  params.getType()!=  Token.CALL)  {	  timeout    	non-compiled	[CE]  ';'  expected	1	None	add
508	[BUG]  [BUGGY]  if(params  ==  null)  {  if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null)  {  if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null)  {  if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {	  if(params    ==    null    ||    params.getType()!=    Token.FUNCTION)    {    if(params    >=    null    ||    params.getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  ';'  expected	105	None	replace
509	[BUG]  [BUGGY]  if(params  ==  null)  {  if(params!=  null  ||  params.getType()!=  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null)  {  if(params!=  null  ||  params.getType()!=  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null)  {  if(params!=  null  ||  params.getType()!=  Token.FUNCTION)  {	  if(params    ==    null    ||    params.getType()!=    Token.FUNCTION)    {    if(params!=    null    ||    params.getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  ';'  expected	101	None	replace
510	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  If(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  If(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  If(params  ==  null  ||  params.getType()  ==  Token.NAME)  {	  if(params    ==    null    ||    params.getType()!=    Token.NAME)    {    If(params    ==    null    ||    params.getType()!=    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	20	None	replace
511	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  If(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  If(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  If(params  ==  null  ||  params.getType()  ==  Token.NAME)  {	  if(params    ==    null    ||    params.getType()!=    Token.NAME)    {    If(params    ==    null    ||    params.getType()!=    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	20	None	replace
512	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  If(params  ==  null  ||  params.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  If(params  ==  null  ||  params.getType()!=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  If(params  ==  null  ||  params.getType()!=  Token.NAME)  {	  if(params    ==    null    ||    params.getType()!=    Token.NAME)    {    If(params    ==    null    ||    params.getType()!=    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	20	None	replace
513	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.RETURN)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.RETURN)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.RETURN)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params    ==    null    ||    params.getType()!=    Token.RETURN)    {    	non-compiled	[CE]  ';'  expected	126	None	replace
514	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.RETURN)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.RETURN)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.RETURN)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params    ==    null    ||    params.getType()!=    Token.RETURN)    {    	non-compiled	[CE]  ';'  expected	126	None	replace
515	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()  ==  Token.RETURN)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()  ==  Token.RETURN)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()  ==  Token.RETURN)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params    ==    null    ||    params.getType()!=    Token.RETURN)    {    	non-compiled	[CE]  ';'  expected	126	None	replace
516	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()  ==  Token.RETURN)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()  ==  Token.RETURN)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()  ==  Token.RETURN)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params    ==    null    ||    params.getType()!=    Token.RETURN)    {    	non-compiled	[CE]  ';'  expected	126	None	replace
517	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  ||  Params.getType()  ==  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  ||  Params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  ||  Params.getType()  ==  Token.GETPROP)  {	  if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    if(params!=    null    ||    Params.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  ';'  expected	52	None	replace
518	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  if(params!=  null  ||  Params.getType()  ==  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  if(params!=  null  ||  Params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  if(params!=  null  ||  Params.getType()  ==  Token.GETPROP)  {	  if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    if(params!=    null    ||    Params.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  ';'  expected	52	None	replace
519	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  if(params!=  null  ||  Params.getType()  ==  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  if(params!=  null  ||  Params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  if(params!=  null  ||  Params.getType()  ==  Token.GETPROP)  {	  if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    if(params!=    null    ||    Params.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  ';'  expected	52	None	replace
520	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  >=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params  ==  null  ||  params.getType()  >=  Token.NAME)  {	  if(params!=    null    ||    params.getType()    >=    Token.NAME)    {    timeout    	compilable	timeout	153	1	replace
521	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  >=  Token.NAME)  {  timeout  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  >=  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()  >=  Token.NAME)  {	  if(params!=    null    ||    params.getType()    >=    Token.NAME)    {    timeout    	compilable	timeout	153	1	replace
522	[BUG]  [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.OBJECTLIT  ||  params.getType()  ==  Token.VAR);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.OBJECTLIT  ||  params.getType()  ==  Token.VAR);  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Preconditions.checkArgument(params.getType()  ==  Token.OBJECTLIT  ||  params.getType()  ==  Token.VAR);	  Preconditions.checkArgument(params.getType()    ==    Token.OBJECTLIT);    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
523	[BUG]  [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.OBJECTLIT  ||  params.getType()  ==  Token.CALL);  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.OBJECTLIT  ||  params.getType()  ==  Token.CALL);  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Preconditions.checkArgument(params.getType()  ==  Token.OBJECTLIT  ||  params.getType()  ==  Token.CALL);	  Preconditions.checkArgument(params.getType()    ==    Token.OBJECTLIT);    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
524	[BUG]  [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.OBJECTLIT  ||  params.getType()  ==  Token.BLOCK);  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.OBJECTLIT  ||  params.getType()  ==  Token.BLOCK);  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Preconditions.checkArgument(params.getType()  ==  Token.OBJECTLIT  ||  params.getType()  ==  Token.BLOCK);	  Preconditions.checkArgument(params.getType()    ==    Token.OBJECTLIT);    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
525	[BUG]  [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.FUNCTION  ||  params.getType()  ==  Token.VAR);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.FUNCTION  ||  params.getType()  ==  Token.VAR);  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Preconditions.checkArgument(params.getType()  ==  Token.FUNCTION  ||  params.getType()  ==  Token.VAR);	  Preconditions.checkArgument(params.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
526	[BUG]  [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.FUNCTION  ||  params.getType()  ==  Token.CALL);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.FUNCTION  ||  params.getType()  ==  Token.CALL);  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Preconditions.checkArgument(params.getType()  ==  Token.FUNCTION  ||  params.getType()  ==  Token.CALL);	  Preconditions.checkArgument(params.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
527	[BUG]  [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.FUNCTION  ||  params.getType()  ==  Token.NAME);  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.FUNCTION  ||  params.getType()  ==  Token.NAME);  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Preconditions.checkArgument(params.getType()  ==  Token.FUNCTION  ||  params.getType()  ==  Token.NAME);	  Preconditions.checkArgument(params.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
528	[BUG]  [BUGGY]  Node  source  =  params.getLineno(),  params.getCharno();  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  params.getLineno(),  params.getCharno();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params.getLineno(),  params.getCharno();	  Node    source    =    params.getLineno();    	non-compiled	[CE]  	90	None	replace
529	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME  ||  params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  &&  params.getType()  ==  Token.NAME  ||  params.getType()  ==  Token.GETPROP)  {	  if(params!=    null    &&    params.getType()    ==    Token.NAME)    {    timeout    	compilable	timeout	54	1	replace
530	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME  ||  params.getType()  ==  Token.GETPROP)  {  timeout  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME  ||  params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getType()  ==  Token.NAME  ||  params.getType()  ==  Token.GETPROP)  {	  if(params!=    null    &&    params.getType()    ==    Token.NAME)    {    timeout    	compilable	timeout	54	1	replace
531	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME  ||  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  &&  params.getType()  ==  Token.NAME  ||  params.getType()  ==  Token.FUNCTION)  {	  if(params!=    null    &&    params.getType()    ==    Token.NAME)    {    timeout    	compilable	timeout	54	1	replace
532	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME  ||  params.getType()  ==  Token.FUNCTION)  {  timeout  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME  ||  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getType()  ==  Token.NAME  ||  params.getType()  ==  Token.FUNCTION)  {	  if(params!=    null    &&    params.getType()    ==    Token.NAME)    {    timeout    	compilable	timeout	54	1	replace
533	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.VAR)  {  if(params!=  null  &&  Params.getType()  ==  Token.VAR)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.VAR)  {  if(params!=  null  &&  Params.getType()  ==  Token.VAR)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.VAR)    {    if(params!=  null  &&  Params.getType()  ==  Token.VAR)  {	  timeout    	non-compiled	[CE]  ';'  expected	132	None	add
534	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.CALL)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  &&  params.getType()  ==  Token.CALL)  {	  if(params!=    null    &&    params.getType()    ==    Token.GETPROP)    {    timeout    	compilable	timeout	43	1	replace
535	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.CALL)  {  timeout  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.CALL)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getType()  ==  Token.CALL)  {	  if(params!=    null    &&    params.getType()    ==    Token.GETPROP)    {    timeout    	compilable	timeout	43	1	replace
536	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  >=  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  &&  params.getType()  >=  Token.FUNCTION)  {	  if(params!=    null    &&    params.getType()!=    Token.FUNCTION)    {    timeout    	compilable	timeout	110	1	replace
537	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  >=  Token.FUNCTION)  {  timeout  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  >=  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getType()  >=  Token.FUNCTION)  {	  if(params!=    null    &&    params.getType()!=    Token.FUNCTION)    {    timeout    	compilable	timeout	110	1	replace
538	[BUG]  [BUGGY]  timeout  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.CALL)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params  ==  null  ||  params.getType()  ==  Token.CALL)  {	  if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    if(params    >>    null    ||    params.getType()    ==    Token.GETPROP)    {    	compilable	timeout	51	1	replace
539	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.CALL)  {  timeout  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.CALL)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()  ==  Token.CALL)  {	  if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    if(params    >>    null    ||    params.getType()    ==    Token.GETPROP)    {    	compilable	timeout	51	1	replace
540	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  Params.getType()  ==  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  Params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.GETPROP)    {    if(params  ==  null  ||  Params.getType()  ==  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	3	None	add
541	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.VAR)  {  if(params!=  null  ||  Params.getType()  ==  Token.VAR)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.VAR)  {  if(params!=  null  ||  Params.getType()  ==  Token.VAR)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.VAR)    {    if(params!=  null  ||  Params.getType()  ==  Token.VAR)  {	  timeout    	non-compiled	[CE]  ';'  expected	114	None	add
542	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  If(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  If(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  If(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {	  if(params!=    null    ||    params.getType()    ==    Token.NAME)    {    If(params!=    null    ||    params.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	60	None	replace
543	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  If(params!=  null  &&  params.getType()  ==  Token.CALL)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  If(params!=  null  &&  params.getType()  ==  Token.CALL)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  If(params!=  null  &&  params.getType()  ==  Token.CALL)  {	  if(params!=    null    ||    params.getType()    ==    Token.NAME)    {    If(params!=    null    ||    params.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	60	None	replace
544	[BUG]  [BUGGY]  Node  lastParam  =  params!=  null?  params.getLastParameter()  :  null;  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  lastParam  =  params!=  null?  params.getLastParameter()  :  null;  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  lastParam  =  params!=  null?  params.getLastParameter()  :  null;	  Node    lastParam    =    params.getLastParameter();    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
545	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.SETELEM)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params  ==  null  ||  params.getType()  ==  Token.SETELEM)  {	  if(params    ==    null    ||    params.getType()    ==    Token.SETPROP)    {    timeout    	compilable	timeout	155	1	replace
546	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.SETELEM)  {  timeout  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.SETELEM)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()  ==  Token.SETELEM)  {	  if(params    ==    null    ||    params.getType()    ==    Token.SETPROP)    {    timeout    	compilable	timeout	155	1	replace
547	[BUG]  [BUGGY]  Node  lastParam  =  params!=  null?  params.getLastChild()  :  params.getNext();  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  lastParam  =  params!=  null?  params.getLastChild()  :  params.getNext();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  lastParam  =  params!=  null?  params.getLastChild()  :  params.getNext();	  Node    lastParam    =    params.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
548	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  >=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  &&  params.getType()  >=  Token.GETPROP)  {	  if(params!=    null    &&    params.getType()!=    Token.GETPROP)    {    timeout    	compilable	timeout	6	1	replace
549	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  >=  Token.GETPROP)  {  timeout  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  >=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getType()  >=  Token.GETPROP)  {	  if(params!=    null    &&    params.getType()!=    Token.GETPROP)    {    timeout    	compilable	timeout	6	1	replace
550	[BUG]  [BUGGY]  if(params  [Delete]  null  &&  params.getType()  ==  Token.NAME)  {  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  [Delete]  null  &&  params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  [Delete]  null  &&  params.getType()  ==  Token.NAME)  {	  if(params    >=    null    ||    params.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	139	None	replace
551	[BUG]  [BUGGY]  if(params!=  null  &&  parameters.getType()  ==  Token.NAME)  {  [CE]  cannot  find  symbol  parameters  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  parameters.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  parameters.getType()  ==  Token.NAME)  {	  if(params    >=    null    ||    params.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  parameters	139	None	replace
552	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  ||  params.getType()  ==  Token.RETURN)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  ||  params.getType()  ==  Token.RETURN)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  ||  params.getType()  ==  Token.RETURN)  {	  if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    if(params!=    null    ||    params.getType()    ==    Token.RETURN)    {    	non-compiled	[CE]  ';'  expected	112	None	replace
553	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  &&  params.getType()  ==  Token.RESTURN)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  &&  params.getType()  ==  Token.RESTURN)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  &&  params.getType()  ==  Token.RESTURN)  {	  if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    if(params!=    null    ||    params.getType()    ==    Token.RETURN)    {    	non-compiled	[CE]  ';'  expected	112	None	replace
554	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.GETELEM)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  &&  params.getType()!=  Token.GETELEM)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETELEM)    {    timeout    	compilable	timeout	149	1	replace
555	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.GETELEM)  {  timeout  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.GETELEM)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getType()!=  Token.GETELEM)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETELEM)    {    timeout    	compilable	timeout	149	1	replace
556	[BUG]  [BUGGY]  if(params  >=  null  ||  params.getType()  ==  Token.FUNCTION)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  >=  null  ||  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  >=  null  ||  params.getType()  ==  Token.FUNCTION)  {	  if(params    >=    null    ||    params.getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	138	None	replace
557	[BUG]  [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.NAME  &&  NodeUtil.isExpressionNode(params));  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.NAME  &&  NodeUtil.isExpressionNode(params));  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Preconditions.checkArgument(params.getType()  ==  Token.NAME  &&  NodeUtil.isExpressionNode(params));	  Preconditions.checkArgument(params.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
558	[BUG]  [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.NAME  ||  params.getType()  ==  Token.GETPROP);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.NAME  ||  params.getType()  ==  Token.GETPROP);  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Preconditions.checkArgument(params.getType()  ==  Token.NAME  ||  params.getType()  ==  Token.GETPROP);	  Preconditions.checkArgument(params.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
559	[BUG]  [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.NAME,  params.cloneTree());  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.NAME,  params.cloneTree());  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Preconditions.checkArgument(params.getType()  ==  Token.NAME,  params.cloneTree());	  Preconditions.checkArgument(params.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
560	[BUG]  [BUGGY]  if(params  >=  null  &&  params.getType()  ==  Token.NAME)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  >=  null  &&  params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  >=  null  &&  params.getType()  ==  Token.NAME)  {	  if(params    ==    null    &&    params.getType()    ==    Token.NAME)    {    timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	56	None	replace
561	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.VAR)  {  if(params  ==  null  ||  Params.getType()  ==  Token.VAR)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.VAR)  {  if(params  ==  null  ||  Params.getType()  ==  Token.VAR)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.VAR)    {    if(params  ==  null  ||  Params.getType()  ==  Token.VAR)  {	  timeout    	non-compiled	[CE]  ';'  expected	145	None	add
562	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.BLOCK)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  &&  params.getType()  ==  Token.BLOCK)  {	  if(params    ==    null    &&    params.getType()    ==    Token.GETPROP)    {    timeout    	compilable	timeout	45	1	replace
563	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.BLOCK)  {  timeout  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.BLOCK)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getType()  ==  Token.BLOCK)  {	  if(params    ==    null    &&    params.getType()    ==    Token.GETPROP)    {    timeout    	compilable	timeout	45	1	replace
564	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.BLOCK)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params  ==  null  ||  params.getType()!=  Token.BLOCK)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params    ==    null    ||    params.getType()!=    Token.BLOCK)    {    	compilable	timeout	124	1	replace
565	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.BLOCK)  {  timeout  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.BLOCK)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()!=  Token.BLOCK)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params    ==    null    ||    params.getType()!=    Token.BLOCK)    {    	compilable	timeout	124	1	replace
566	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.BLOCK)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  ||  params.getType()!=  Token.BLOCK)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params    ==    null    ||    params.getType()!=    Token.BLOCK)    {    	compilable	timeout	124	1	replace
567	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.BLOCK)  {  timeout  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.BLOCK)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()!=  Token.BLOCK)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params    ==    null    ||    params.getType()!=    Token.BLOCK)    {    	compilable	timeout	124	1	replace
568	[BUG]  [BUGGY]  If(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  If(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	If(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {	  if(params!=    null    ||    params.getType()    ==    Token.FUNCTION)    {    If(params!=    null    ||    params.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
569	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  [Delete]  Token.GETPROP)  {  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  [Delete]  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getType()  [Delete]  Token.GETPROP)  {	  if(params    ==    null    &&    params.getType()!=    Token.GETPROP)    {    timeout    	non-compiled	[CE]  ')'  expected	8	None	replace
570	[BUG]  [BUGGY]  if(params  [Delete]  null  &&  params.getType()!=  Token.GETPROP)  {  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  [Delete]  null  &&  params.getType()!=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  [Delete]  null  &&  params.getType()!=  Token.GETPROP)  {	  if(params!=    null    ||    params.getType()!=    Token.GETPROP)    {    timeout    	non-compiled	[CE]  ')'  expected	2	None	replace
571	[BUG]  [BUGGY]  If(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  If(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	If(params  ==  null  ||  params.getType()  ==  Token.NAME)  {	  if(params    ==    null    ||    params.getType()!=    Token.NAME)    {    If(params    ==    null    ||    params.getType()!=    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	20	None	replace
572	[BUG]  [BUGGY]  Node  source  =(Node)params.cloneChildren();  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =(Node)params.cloneChildren();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =(Node)params.cloneChildren();	  Node    source    =(Node)params.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
573	[BUG]  [BUGGY]  Node  source  =(Node)params.clonePosition();  [CE]  illegal  start  of  type  [FE]                                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =(Node)params.clonePosition();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =(Node)params.clonePosition();	  Node    source    =(Node)params.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
574	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getString().equals( "prototype "))  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  &&  params.getString().equals( "prototype "))  {	  if(params!=    null    &&    params.getType()!=    Token.NAME)    {    timeout    	compilable	timeout	39	1	replace
575	[BUG]  [BUGGY]  if(params!=  null  &&  params.getString().equals( "prototype "))  {  timeout  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getString().equals( "prototype "))  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getString().equals( "prototype "))  {	  if(params!=    null    &&    params.getType()!=    Token.NAME)    {    timeout    	compilable	timeout	39	1	replace
576	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  &&  Params.getType()  ==  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  &&  Params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    &&    params.getType()    ==    Token.GETPROP)    {    if(params!=  null  &&  Params.getType()  ==  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	42	None	add
577	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  [Delete]  Token.NAME)  {  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  [Delete]  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getType()  [Delete]  Token.NAME)  {	  if(params    ==    null    &&    params.getType()!=    Token.NAME)    {    timeout    	non-compiled	[CE]  ')'  expected	41	None	replace
578	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.FUNCTION  ||  params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  &&  params.getType()  ==  Token.FUNCTION  ||  params.getType()  ==  Token.GETPROP)  {	  if(params!=    null    &&    params.getType()    ==    Token.FUNCTION)    {    timeout    	compilable	timeout	24	1	replace
579	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.FUNCTION  ||  params.getType()  ==  Token.GETPROP)  {  timeout  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.FUNCTION  ||  params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getType()  ==  Token.FUNCTION  ||  params.getType()  ==  Token.GETPROP)  {	  if(params!=    null    &&    params.getType()    ==    Token.FUNCTION)    {    timeout    	compilable	timeout	24	1	replace
580	[BUG]  [BUGGY]  timeout  [FE]            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.VAR  ||  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  &&  params.getType()  ==  Token.VAR  ||  params.getType()  ==  Token.FUNCTION)  {	  if(params!=    null    &&    params.getType()    ==    Token.VAR)    {    timeout    	compilable	timeout	133	1	replace
581	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.VAR  ||  params.getType()  ==  Token.FUNCTION)  {  timeout  [FE]            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.VAR  ||  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getType()  ==  Token.VAR  ||  params.getType()  ==  Token.FUNCTION)  {	  if(params!=    null    &&    params.getType()    ==    Token.VAR)    {    timeout    	compilable	timeout	133	1	replace
582	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.VAR  ||  params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  &&  params.getType()  ==  Token.VAR  ||  params.getType()  ==  Token.GETPROP)  {	  if(params!=    null    &&    params.getType()    ==    Token.VAR)    {    timeout    	compilable	timeout	133	1	replace
583	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.VAR  ||  params.getType()  ==  Token.GETPROP)  {  timeout  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.VAR  ||  params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getType()  ==  Token.VAR  ||  params.getType()  ==  Token.GETPROP)  {	  if(params!=    null    &&    params.getType()    ==    Token.VAR)    {    timeout    	compilable	timeout	133	1	replace
584	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()!=    Token.GETPROP)    {    if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	7	None	add
585	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETELEM)  {  if(params  ==  null  ||  params.getType()  [Delete]  Token.GETELEM)  {  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETELEM)  {  if(params  ==  null  ||  params.getType()  [Delete]  Token.GETELEM)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.GETELEM)    {    if(params  ==  null  ||  params.getType()  [Delete]  Token.GETELEM)  {	  timeout    	non-compiled	[CE]  	148	None	add
586	[BUG]  [BUGGY]  Node  source  =  params!=  null?  getSource()  :  params;  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  params!=  null?  getSource()  :  params;  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params!=  null?  getSource()  :  params;	  Node    source    =    getSource();    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
587	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  if(params!=  null  &&  Params.getType()  ==  Token.CALL)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  if(params!=  null  &&  Params.getType()  ==  Token.CALL)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  if(params!=  null  &&  Params.getType()  ==  Token.CALL)  {	  if(params!=    null    ||    params.getType()    ==    Token.NAME)    {    if(params!=    null    ||    Params.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	121	None	replace
588	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  if(params!=  null  &&  Params.getType()  ==  Token.VAR)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  if(params!=  null  &&  Params.getType()  ==  Token.VAR)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  if(params!=  null  &&  Params.getType()  ==  Token.VAR)  {	  if(params!=    null    ||    params.getType()    ==    Token.NAME)    {    if(params!=    null    ||    Params.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	121	None	replace
589	[BUG]  [BUGGY]  Node  source  =  params.removeFirstChild();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  params.removeFirstChild();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params.removeFirstChild();	  Node    source    =    params.getNext();    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
590	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    &&    params.getType()    ==    Token.GETPROP)    {    if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	44	None	add
591	[BUG]  [BUGGY]  Node  source  =  params  ==  null?  params.getLastChild()  :  params.getFirstChild();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  source  =  params  ==  null?  params.getLastChild()  :  params.getFirstChild();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params  ==  null?  params.getLastChild()  :  params.getFirstChild();	  Node    source    =    params.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
592	[BUG]  [BUGGY]  Node  lastParam  =  params.lastParam();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  Node  lastParam  =  params.lastParam();  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  lastParam  =  params.lastParam();	  Node    lastParam    =    getLastParam();    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
593	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  If(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  If(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  If(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {	  if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    If(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
594	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  If(params!=  null  &&  params.getType()  ==  Token.GETELEM)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  If(params!=  null  &&  params.getType()  ==  Token.GETELEM)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  If(params!=  null  &&  params.getType()  ==  Token.GETELEM)  {	  if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    If(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
595	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  If(params!=  null  &&  params.getType()  ==  Token.SETPROP)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  If(params!=  null  &&  params.getType()  ==  Token.SETPROP)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  If(params!=  null  &&  params.getType()  ==  Token.SETPROP)  {	  if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    If(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
596	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  >>  Token.NAME)  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]              ComparisonFailure      [CONTEXT]      public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (     "call     ".equals(name))  {  Node  params  =  getParametersNode();      [BUGGY]  if(params!=  null  &&  params.getType()  >>  Token.NAME)  {  [BUGGY]        defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,       "thisType     ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getType()  >>  Token.NAME)  {	  if(params!=    null    ||    params.getType()    >=    Token.NAME)    {    timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	153	None	replace
