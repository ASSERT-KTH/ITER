bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  timeout  [FE]            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    timeout    	compilable	timeout	17	1	replace
2	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  timeout  [FE]            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    timeout    	compilable	timeout	17	1	replace
3	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    timeout    	compilable	timeout	17	1	replace
4	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  timeout  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    timeout    	compilable	timeout	17	1	replace
5	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.GETPROP)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  &&  params.getType()!=  Token.GETPROP)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    timeout    	compilable	timeout	17	1	replace
6	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.GETPROP)  {  timeout  [FE]                ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.GETPROP)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getType()!=  Token.GETPROP)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    timeout    	compilable	timeout	17	1	replace
7	[BUG]  [BUGGY]  timeout  [FE]                  ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    timeout    	compilable	timeout	17	1	replace
8	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {  timeout  [FE]                  ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  &&  params.getType()!=  Token.GETPROP)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    timeout    	compilable	timeout	17	1	replace
9	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.FUNCTION)    {    if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	3	None	add
10	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  if(params  ==  null  ||  params.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  if(params  ==  null  ||  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.FUNCTION)    {    if(params  ==  null  ||  params.getType()  ==  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	3	None	add
11	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  if(params  >=  null  ||  params.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  if(params  >=  null  ||  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.FUNCTION)    {    if(params  >=  null  ||  params.getType()  ==  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	3	None	add
12	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  If(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  If(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.FUNCTION)    {    If(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  	3	None	add
13	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  if(params!=  null  ||  params.getType()  >=  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  if(params!=  null  ||  params.getType()  >=  Token.FUNCTION)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.FUNCTION)    {    if(params!=  null  ||  params.getType()  >=  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	3	None	add
14	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  if(params  >>  null  ||  params.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  if(params  >>  null  ||  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.FUNCTION)    {    if(params  >>  null  ||  params.getType()  ==  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	3	None	add
15	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  if(params  [BUGGY]  null  ||  params.getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  if(params  [BUGGY]  null  ||  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.FUNCTION)    {    if(params  [BUGGY]  null  ||  params.getType()  ==  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  	3	None	add
16	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.NAME)    {    if(params  ==  null  ||  params.getType()!=  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	12	None	add
17	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  if(params!=  null  ||  params.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  if(params!=  null  ||  params.getType()!=  Token.NAME)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.NAME)    {    if(params!=  null  ||  params.getType()!=  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	12	None	add
18	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  if(params  ==  null  ||  params.getType()  >=  Token.NAME)  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  if(params  ==  null  ||  params.getType()  >=  Token.NAME)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.NAME)    {    if(params  ==  null  ||  params.getType()  >=  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	12	None	add
19	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  if(params  ==  null  ||  params.getType()  >>  Token.NAME)  {  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  if(params  ==  null  ||  params.getType()  >>  Token.NAME)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.NAME)    {    if(params  ==  null  ||  params.getType()  >>  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	12	None	add
20	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  If(params  ==  null  ||  params.getType()!=  Token.NAME)  {  [CE]  [FE]                ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  If(params  ==  null  ||  params.getType()!=  Token.NAME)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.NAME)    {    If(params  ==  null  ||  params.getType()!=  Token.NAME)  {	  timeout    	non-compiled	[CE]  	12	None	add
21	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  if(params  >=  null  ||  params.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  if(params  >=  null  ||  params.getType()!=  Token.NAME)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.NAME)    {    if(params  >=  null  ||  params.getType()!=  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	12	None	add
22	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  if(params  ==  null  ||  params.getType()  [Delete]  Token.NAME)  {  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  if(params  ==  null  ||  params.getType()  [Delete]  Token.NAME)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.NAME)    {    if(params  ==  null  ||  params.getType()  [Delete]  Token.NAME)  {	  timeout    	non-compiled	[CE]  	12	None	add
23	[BUG]  [BUGGY]  timeout  [FE]          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {	  if(params!=    null    ||    params.getType()    ==    Token.FUNCTION)    {    timeout    	compilable	timeout	4	1	replace
24	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {  timeout  [FE]          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getType()  ==  Token.FUNCTION)  {	  if(params!=    null    ||    params.getType()    ==    Token.FUNCTION)    {    timeout    	compilable	timeout	4	1	replace
25	[BUG]  [BUGGY]  timeout  [FE]            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params  ==  null  &&  params.getType()  ==  Token.FUNCTION)  {	  if(params!=    null    ||    params.getType()    ==    Token.FUNCTION)    {    timeout    	compilable	timeout	4	1	replace
26	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.FUNCTION)  {  timeout  [FE]            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  &&  params.getType()  ==  Token.FUNCTION)  {	  if(params!=    null    ||    params.getType()    ==    Token.FUNCTION)    {    timeout    	compilable	timeout	4	1	replace
27	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.FUNCTION)  {  if(params  ==  null  ||  params.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.FUNCTION)  {  if(params  ==  null  ||  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.FUNCTION)    {    if(params  ==  null  ||  params.getType()  ==  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	18	None	add
28	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.FUNCTION)  {  if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.FUNCTION)  {  if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.FUNCTION)    {    if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	18	None	add
29	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.FUNCTION)  {  if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.FUNCTION)  {  if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.FUNCTION)    {    if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	18	None	add
30	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.FUNCTION)  {  if(params  ==  null  ||  params.getType()  >=  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.FUNCTION)  {  if(params  ==  null  ||  params.getType()  >=  Token.FUNCTION)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.FUNCTION)    {    if(params  ==  null  ||  params.getType()  >=  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	18	None	add
31	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.FUNCTION)  {  If(params  ==  null  ||  params.getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.FUNCTION)  {  If(params  ==  null  ||  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.FUNCTION)    {    If(params  ==  null  ||  params.getType()  ==  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  	18	None	add
32	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.FUNCTION)  {  if(params  >=  null  ||  params.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.FUNCTION)  {  if(params  >=  null  ||  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.FUNCTION)    {    if(params  >=  null  ||  params.getType()  ==  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	18	None	add
33	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.FUNCTION)  {  if(params  ==  null  ||  Params.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.FUNCTION)  {  if(params  ==  null  ||  Params.getType()  ==  Token.FUNCTION)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()    ==    Token.FUNCTION)    {    if(params  ==  null  ||  Params.getType()  ==  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	18	None	add
34	[BUG]  [BUGGY]  timeout  [FE]        ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {	  if(params    ==    null    ||    params.getType()!=    Token.NAME)    {    timeout    	compilable	timeout	13	1	replace
35	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  timeout  [FE]        ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {	  if(params    ==    null    ||    params.getType()!=    Token.NAME)    {    timeout    	compilable	timeout	13	1	replace
36	[BUG]  [BUGGY]  timeout  [FE]          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.NAME)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  ||  params.getType()!=  Token.NAME)  {	  if(params    ==    null    ||    params.getType()!=    Token.NAME)    {    timeout    	compilable	timeout	13	1	replace
37	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.NAME)  {  timeout  [FE]          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.NAME)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()!=  Token.NAME)  {	  if(params    ==    null    ||    params.getType()!=    Token.NAME)    {    timeout    	compilable	timeout	13	1	replace
38	[BUG]  [BUGGY]  timeout  [FE]            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.NAME)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  &&  params.getType()!=  Token.NAME)  {	  if(params    ==    null    ||    params.getType()!=    Token.NAME)    {    timeout    	compilable	timeout	13	1	replace
39	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.NAME)  {  timeout  [FE]            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.NAME)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getType()!=  Token.NAME)  {	  if(params    ==    null    ||    params.getType()!=    Token.NAME)    {    timeout    	compilable	timeout	13	1	replace
40	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.NAME)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params  ==  null  &&  params.getType()!=  Token.NAME)  {	  if(params    ==    null    ||    params.getType()!=    Token.NAME)    {    timeout    	compilable	timeout	13	1	replace
41	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.NAME)  {  timeout  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  &&  params.getType()!=  Token.NAME)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  &&  params.getType()!=  Token.NAME)  {	  if(params    ==    null    ||    params.getType()!=    Token.NAME)    {    timeout    	compilable	timeout	13	1	replace
42	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {	  if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    timeout    	compilable	timeout	8	1	replace
43	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  timeout  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getType()  ==  Token.GETPROP)  {	  if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    timeout    	compilable	timeout	8	1	replace
44	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.GETPROP)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params  ==  null  &&  params.getType()  ==  Token.GETPROP)  {	  if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    timeout    	compilable	timeout	8	1	replace
45	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.GETPROP)  {  timeout  [FE]                ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.GETPROP)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  &&  params.getType()  ==  Token.GETPROP)  {	  if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    timeout    	compilable	timeout	8	1	replace
46	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	7	None	add
47	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    if(params  ==  null  ||  params.getType()  ==  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	7	None	add
48	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  >=  null  ||  params.getType()  ==  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  >=  null  ||  params.getType()  ==  Token.GETPROP)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    if(params  >=  null  ||  params.getType()  ==  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	7	None	add
49	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  If(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  If(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    If(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  	7	None	add
50	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  ||  params.getType()  >=  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  ||  params.getType()  >=  Token.GETPROP)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    if(params!=  null  ||  params.getType()  >=  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	7	None	add
51	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  >>  null  ||  params.getType()  ==  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params  >>  null  ||  params.getType()  ==  Token.GETPROP)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    if(params  >>  null  ||  params.getType()  ==  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	7	None	add
52	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  ||  Params.getType()  ==  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  ||  Params.getType()  ==  Token.GETPROP)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    if(params!=  null  ||  Params.getType()  ==  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	7	None	add
53	[BUG]  [BUGGY]  timeout  [FE]            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  &&  params.getType()  ==  Token.NAME)  {	  if(params!=    null    ||    params.getType()    ==    Token.NAME)    {    timeout    	compilable	timeout	6	1	replace
54	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  timeout  [FE]            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.NAME)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getType()  ==  Token.NAME)  {	  if(params!=    null    ||    params.getType()    ==    Token.NAME)    {    timeout    	compilable	timeout	6	1	replace
55	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.NAME)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params  ==  null  &&  params.getType()  ==  Token.NAME)  {	  if(params!=    null    ||    params.getType()    ==    Token.NAME)    {    timeout    	compilable	timeout	6	1	replace
56	[BUG]  [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.NAME)  {  timeout  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  &&  params.getType()  ==  Token.NAME)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  &&  params.getType()  ==  Token.NAME)  {	  if(params!=    null    ||    params.getType()    ==    Token.NAME)    {    timeout    	compilable	timeout	6	1	replace
57	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.NAME)    {    if(params!=  null  ||  params.getType()  ==  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	5	None	add
58	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.NAME)    {    if(params  ==  null  ||  params.getType()  ==  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	5	None	add
59	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  if(params  >=  null  ||  params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  if(params  >=  null  ||  params.getType()  ==  Token.NAME)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.NAME)    {    if(params  >=  null  ||  params.getType()  ==  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	5	None	add
60	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  If(params!=  null  ||  params.getType()  ==  Token.NAME)  {  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  If(params!=  null  ||  params.getType()  ==  Token.NAME)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.NAME)    {    If(params!=  null  ||  params.getType()  ==  Token.NAME)  {	  timeout    	non-compiled	[CE]  	5	None	add
61	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  if(params!=  null  ||  params.getType()  >=  Token.NAME)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  if(params!=  null  ||  params.getType()  >=  Token.NAME)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.NAME)    {    if(params!=  null  ||  params.getType()  >=  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	5	None	add
62	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  if(params  >>  null  ||  params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  if(params  >>  null  ||  params.getType()  ==  Token.NAME)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.NAME)    {    if(params  >>  null  ||  params.getType()  ==  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	5	None	add
63	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  if(params  [BUGGY]  null  ||  params.getType()  ==  Token.NAME)  {  [CE]  [FE]                        ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  if(params  [BUGGY]  null  ||  params.getType()  ==  Token.NAME)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.NAME)    {    if(params  [BUGGY]  null  ||  params.getType()  ==  Token.NAME)  {	  timeout    	non-compiled	[CE]  	5	None	add
64	[BUG]  [BUGGY]  timeout  [FE]          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    timeout    	compilable	timeout	15	1	replace
65	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  timeout  [FE]          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  ==  Token.OBJECTLIT)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    timeout    	compilable	timeout	15	1	replace
66	[BUG]  [BUGGY]  timeout  [FE]            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    timeout    	compilable	timeout	15	1	replace
67	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  timeout  [FE]            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    timeout    	compilable	timeout	15	1	replace
68	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    timeout    	compilable	timeout	15	1	replace
69	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  timeout  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()  ==  Token.OBJECTLIT)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    timeout    	compilable	timeout	15	1	replace
70	[BUG]  [BUGGY]  timeout  [FE]                ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  &&  params.getType()!=  Token.OBJECTLIT)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    timeout    	compilable	timeout	15	1	replace
71	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.OBJECTLIT)  {  timeout  [FE]                ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getType()!=  Token.OBJECTLIT)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    timeout    	compilable	timeout	15	1	replace
72	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	16	None	add
73	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params!=  null  ||  params.getType()!=  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	16	None	add
74	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()  >=  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()  >=  Token.GETPROP)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params  ==  null  ||  params.getType()  >=  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	16	None	add
75	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()  >>  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()  >>  Token.GETPROP)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params  ==  null  ||  params.getType()  >>  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	16	None	add
76	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  If(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  If(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    If(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  	16	None	add
77	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  if(params  >=  null  ||  params.getType()!=  Token.GETPROP)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  if(params  >=  null  ||  params.getType()!=  Token.GETPROP)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params  >=  null  ||  params.getType()!=  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	16	None	add
78	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()  [Delete]  Token.GETPROP)  {  [CE]  [FE]                        ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()  [Delete]  Token.GETPROP)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params  ==  null  ||  params.getType()  [Delete]  Token.GETPROP)  {	  timeout    	non-compiled	[CE]  	16	None	add
79	[BUG]  [BUGGY]  if(params!=  null)  {  if(params!=  null)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null)  {  if(params!=  null)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null)    {    if(params!=  null)  {	  timeout    	non-compiled	[CE]  ';'  expected	1	None	add
80	[BUG]  [BUGGY]  if(params!=  null)  {  if(params  ==  null)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null)  {  if(params  ==  null)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null)    {    if(params  ==  null)  {	  timeout    	non-compiled	[CE]  ';'  expected	1	None	add
81	[BUG]  [BUGGY]  if(params!=  null)  {  if(params  >=  null)  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null)  {  if(params  >=  null)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null)    {    if(params  >=  null)  {	  timeout    	non-compiled	[CE]  ';'  expected	1	None	add
82	[BUG]  [BUGGY]  if(params!=  null)  {  if(params  >>  null)  {  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null)  {  if(params  >>  null)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null)    {    if(params  >>  null)  {	  timeout    	non-compiled	[CE]  ';'  expected	1	None	add
83	[BUG]  [BUGGY]  if(params!=  null)  {  If(params!=  null)  {  [CE]  [FE]                ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null)  {  If(params!=  null)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null)    {    If(params!=  null)  {	  timeout    	non-compiled	[CE]  	1	None	add
84	[BUG]  [BUGGY]  if(params!=  null)  {  if(params  [BUGGY]  null)  {  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null)  {  if(params  [BUGGY]  null)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null)    {    if(params  [BUGGY]  null)  {	  timeout    	non-compiled	[CE]  	1	None	add
85	[BUG]  [BUGGY]  if(params!=  null)  {  if(params  [Delete]  null)  {  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null)  {  if(params  [Delete]  null)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null)    {    if(params  [Delete]  null)  {	  timeout    	non-compiled	[CE]  	1	None	add
86	[BUG]  [BUGGY]  Node  source  =  params.getSource();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  Node  source  =  params.getSource();  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params.getSource();	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
87	[BUG]  [BUGGY]  Node  source  =  params.getNext();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  Node  source  =  params.getNext();  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params.getNext();	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
88	[BUG]  [BUGGY]  Node  source  =  params.getLastChild();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  Node  source  =  params.getLastChild();  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params.getLastChild();	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
89	[BUG]  [BUGGY]  Node  source  =  params.getString();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  Node  source  =  params.getString();  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params.getString();	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
90	[BUG]  [BUGGY]  Node  source  =  params.getLineno();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  Node  source  =  params.getLineno();  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params.getLineno();	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
91	[BUG]  [BUGGY]  Node  lastParam  =  params.getLastChild();  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  Node  lastParam  =  params.getLastChild();  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  lastParam  =  params.getLastChild();	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
92	[BUG]  [BUGGY]  Node  source  =(Node)params.cloneTree();  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  Node  source  =(Node)params.cloneTree();  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =(Node)params.cloneTree();	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
93	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  ';'  expected	14	None	add
94	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params!=  null  ||  params.getType()!=  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  ';'  expected	14	None	add
95	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()  >=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()  >=  Token.OBJECTLIT)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params  ==  null  ||  params.getType()  >=  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  ';'  expected	14	None	add
96	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()  >>  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()  >>  Token.OBJECTLIT)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params  ==  null  ||  params.getType()  >>  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  ';'  expected	14	None	add
97	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  If(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  If(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    If(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  	14	None	add
98	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params  >=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params  >=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params  >=  null  ||  params.getType()!=  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  ';'  expected	14	None	add
99	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()  [Delete]  Token.OBJECTLIT)  {  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()  [Delete]  Token.OBJECTLIT)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params  ==  null  ||  params.getType()  [Delete]  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  	14	None	add
100	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.FUNCTION)    {    if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	10	None	add
101	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  if(params!=  null  ||  params.getType()!=  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  if(params!=  null  ||  params.getType()!=  Token.FUNCTION)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.FUNCTION)    {    if(params!=  null  ||  params.getType()!=  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	10	None	add
102	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  if(params  ==  null  ||  params.getType()  >=  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  if(params  ==  null  ||  params.getType()  >=  Token.FUNCTION)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.FUNCTION)    {    if(params  ==  null  ||  params.getType()  >=  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	10	None	add
103	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  if(params  ==  null  ||  params.getType()  >>  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  if(params  ==  null  ||  params.getType()  >>  Token.FUNCTION)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.FUNCTION)    {    if(params  ==  null  ||  params.getType()  >>  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	10	None	add
104	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  If(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  [CE]  [FE]                ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  If(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.FUNCTION)    {    If(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  	10	None	add
105	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  if(params  >=  null  ||  params.getType()!=  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  if(params  >=  null  ||  params.getType()!=  Token.FUNCTION)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.FUNCTION)    {    if(params  >=  null  ||  params.getType()!=  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	10	None	add
106	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  if(params  ==  null  ||  params.getType()  [Delete]  Token.FUNCTION)  {  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  if(params  ==  null  ||  params.getType()  [Delete]  Token.FUNCTION)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.FUNCTION)    {    if(params  ==  null  ||  params.getType()  [Delete]  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  	10	None	add
107	[BUG]  [BUGGY]  timeout  [FE]        ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.FUNCTION)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  ||  params.getType()!=  Token.FUNCTION)  {	  if(params    ==    null    ||    params.getType()!=    Token.FUNCTION)    {    timeout    	compilable	timeout	11	1	replace
108	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.FUNCTION)  {  timeout  [FE]        ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()!=  Token.FUNCTION)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()!=  Token.FUNCTION)  {	  if(params    ==    null    ||    params.getType()!=    Token.FUNCTION)    {    timeout    	compilable	timeout	11	1	replace
109	[BUG]  [BUGGY]  timeout  [FE]          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.FUNCTION)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  &&  params.getType()!=  Token.FUNCTION)  {	  if(params    ==    null    ||    params.getType()!=    Token.FUNCTION)    {    timeout    	compilable	timeout	11	1	replace
110	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.FUNCTION)  {  timeout  [FE]          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  &&  params.getType()!=  Token.FUNCTION)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getType()!=  Token.FUNCTION)  {	  if(params    ==    null    ||    params.getType()!=    Token.FUNCTION)    {    timeout    	compilable	timeout	11	1	replace
111	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  ||  params.getType()  ==  Token.SETPROP)  {  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  ||  params.getType()  ==  Token.SETPROP)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    if(params!=  null  ||  params.getType()  ==  Token.SETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	7	None	add
112	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  ||  params.getType()  ==  Token.RETURN)  {  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  ||  params.getType()  ==  Token.RETURN)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    if(params!=  null  ||  params.getType()  ==  Token.RETURN)  {	  timeout    	non-compiled	[CE]  ';'  expected	7	None	add
113	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    if(params!=  null  ||  params.getType()  ==  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	7	None	add
114	[BUG]  [BUGGY]  timeout  [FE]        ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.VAR)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  ||  params.getType()  ==  Token.VAR)  {	  if(params!=    null)    {    timeout    	compilable	timeout	2	1	replace
115	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.VAR)  {  timeout  [FE]        ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.VAR)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  ==  Token.VAR)  {	  if(params!=    null)    {    timeout    	compilable	timeout	2	1	replace
116	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  if(params!=  null  ||  Params.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  if(params!=  null  ||  Params.getType()  ==  Token.FUNCTION)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.FUNCTION)    {    if(params!=  null  ||  Params.getType()  ==  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	3	None	add
117	[BUG]  [BUGGY]  Node  source  =  params.getFirstChild();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  Node  source  =  params.getFirstChild();  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  params.getFirstChild();	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
118	[BUG]  [BUGGY]  Node  lastParam  =  getLastParam();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  Node  lastParam  =  getLastParam();  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  lastParam  =  getLastParam();	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
119	[BUG]  [BUGGY]  Node  lastParam  =  params.getLastParameter();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  Node  lastParam  =  params.getLastParameter();  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  lastParam  =  params.getLastParameter();	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
120	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  if(params  ==  null  ||  Params.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  if(params  ==  null  ||  Params.getType()!=  Token.NAME)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.NAME)    {    if(params  ==  null  ||  Params.getType()!=  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	12	None	add
121	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  if(params!=  null  ||  Params.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  if(params!=  null  ||  Params.getType()  ==  Token.NAME)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=    null    ||    params.getType()    ==    Token.NAME)    {    if(params!=  null  ||  Params.getType()  ==  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	5	None	add
122	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  if(params  ==  null  ||  Params.getType()!=  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  if(params  ==  null  ||  Params.getType()!=  Token.FUNCTION)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.FUNCTION)    {    if(params  ==  null  ||  Params.getType()!=  Token.FUNCTION)  {	  timeout    	non-compiled	[CE]  ';'  expected	10	None	add
123	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()!=  Token.EMPTY)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()!=  Token.EMPTY)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params  ==  null  ||  params.getType()!=  Token.EMPTY)  {	  timeout    	non-compiled	[CE]  ';'  expected	14	None	add
124	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()!=  Token.BLOCK)  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params  ==  null  ||  params.getType()!=  Token.BLOCK)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params  ==  null  ||  params.getType()!=  Token.BLOCK)  {	  timeout    	non-compiled	[CE]  ';'  expected	14	None	add
125	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.SETPROP)  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.SETPROP)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params  ==  null  ||  params.getType()!=  Token.SETPROP)  {	  timeout    	non-compiled	[CE]  ';'  expected	16	None	add
126	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.RETURN)  {  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.RETURN)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params  ==  null  ||  params.getType()!=  Token.RETURN)  {	  timeout    	non-compiled	[CE]  ';'  expected	16	None	add
127	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params  ==  null  ||  params.getType()!=  Token.NAME)  {	  timeout    	non-compiled	[CE]  ';'  expected	16	None	add
128	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.CALL)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.CALL)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params  ==  null  ||  params.getType()!=  Token.CALL)  {	  timeout    	non-compiled	[CE]  ';'  expected	16	None	add
129	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.STRING)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  if(params  ==  null  ||  params.getType()!=  Token.STRING)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    if(params  ==  null  ||  params.getType()!=  Token.STRING)  {	  timeout    	non-compiled	[CE]  ';'  expected	16	None	add
130	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETELEM)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  ||  params.getType()  ==  Token.GETELEM)  {	  if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    timeout    	compilable	timeout	8	1	replace
131	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETELEM)  {  timeout  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETELEM)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  ==  Token.GETELEM)  {	  if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    timeout    	compilable	timeout	8	1	replace
132	[BUG]  [BUGGY]  timeout  [FE]        ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.VAR)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  &&  params.getType()  ==  Token.VAR)  {	  if(params!=    null)    {    timeout    	compilable	timeout	2	1	replace
133	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.VAR)  {  timeout  [FE]        ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.VAR)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getType()  ==  Token.VAR)  {	  if(params!=    null)    {    timeout    	compilable	timeout	2	1	replace
134	[BUG]  [BUGGY]  timeout  [FE]          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  &&  params.hasChildren())  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  &&  params.hasChildren())  {	  if(params!=    null)    {    timeout    	compilable	timeout	2	1	replace
135	[BUG]  [BUGGY]  if(params!=  null  &&  params.hasChildren())  {  timeout  [FE]          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  &&  params.hasChildren())  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.hasChildren())  {	  if(params!=    null)    {    timeout    	compilable	timeout	2	1	replace
136	[BUG]  [BUGGY]  timeout  [FE]            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.OBJECTLIT)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  &&  params.getType()  ==  Token.OBJECTLIT)  {	  if(params!=    null)    {    timeout    	compilable	timeout	2	1	replace
137	[BUG]  [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.OBJECTLIT)  {  timeout  [FE]            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  &&  params.getType()  ==  Token.OBJECTLIT)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  &&  params.getType()  ==  Token.OBJECTLIT)  {	  if(params!=    null)    {    timeout    	compilable	timeout	2	1	replace
138	[BUG]  [BUGGY]  if(params  >=  null  ||  params.getType()!=  Token.FUNCTION)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  >=  null  ||  params.getType()!=  Token.FUNCTION)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  >=  null  ||  params.getType()!=  Token.FUNCTION)  {	  if(params    ==    null    ||    params.getType()!=    Token.FUNCTION)    {    timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	11	None	replace
139	[BUG]  [BUGGY]  if(params  >=  null  ||  params.getType()  ==  Token.NAME)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  >=  null  ||  params.getType()  ==  Token.NAME)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  >=  null  ||  params.getType()  ==  Token.NAME)  {	  if(params!=    null    ||    params.getType()    ==    Token.NAME)    {    timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	6	None	replace
140	[BUG]  [BUGGY]  if(params  >=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  >=  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  >=  null  ||  params.getType()!=  Token.OBJECTLIT)  {	  if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	15	None	replace
141	[BUG]  [BUGGY]  Node  source  =  getSource();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  Node  source  =  getSource();  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Node  source  =  getSource();	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
142	[BUG]  [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.NAME);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.NAME);  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Preconditions.checkArgument(params.getType()  ==  Token.NAME);	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
143	[BUG]  [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.FUNCTION);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.FUNCTION);  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Preconditions.checkArgument(params.getType()  ==  Token.FUNCTION);	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
144	[BUG]  [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.OBJECTLIT);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  Preconditions.checkArgument(params.getType()  ==  Token.OBJECTLIT);  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	Preconditions.checkArgument(params.getType()  ==  Token.OBJECTLIT);	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
145	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.VAR)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params  ==  null  ||  params.getType()  ==  Token.VAR)  {	  if(params    ==    null    ||    params.getType()    ==    Token.FUNCTION)    {    timeout    	compilable	timeout	19	1	replace
146	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.VAR)  {  timeout  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.VAR)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()  ==  Token.VAR)  {	  if(params    ==    null    ||    params.getType()    ==    Token.FUNCTION)    {    timeout    	compilable	timeout	19	1	replace
147	[BUG]  [BUGGY]  if(params  >=  null  ||  params.getType()!=  Token.GETPROP)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]            ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  >=  null  ||  params.getType()!=  Token.GETPROP)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  >=  null  ||  params.getType()!=  Token.GETPROP)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	17	None	replace
148	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETELEM)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params  ==  null  ||  params.getType()!=  Token.GETELEM)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    timeout    	compilable	timeout	17	1	replace
149	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETELEM)  {  timeout  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETELEM)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()!=  Token.GETELEM)  {	  if(params    ==    null    ||    params.getType()!=    Token.GETPROP)    {    timeout    	compilable	timeout	17	1	replace
150	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params  ==  null  ||  Params.getType()!=  Token.OBJECTLIT)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  if(params  ==  null  ||  Params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params    ==    null    ||    params.getType()!=    Token.OBJECTLIT)    {    if(params  ==  null  ||  Params.getType()!=  Token.OBJECTLIT)  {	  timeout    	non-compiled	[CE]  ';'  expected	14	None	add
151	[BUG]  [BUGGY]  if(params  >=  null  ||  params.getType()!=  Token.NAME)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  >=  null  ||  params.getType()!=  Token.NAME)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  >=  null  ||  params.getType()!=  Token.NAME)  {	  if(params    ==    null    ||    params.getType()!=    Token.NAME)    {    timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	13	None	replace
152	[BUG]  [BUGGY]  timeout  [FE]          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()  >=  Token.NAME)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  ||  params.getType()  >=  Token.NAME)  {	  if(params    ==    null    ||    params.getType()!=    Token.NAME)    {    timeout    	compilable	timeout	13	1	replace
153	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  >=  Token.NAME)  {  timeout  [FE]          ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params!=  null  ||  params.getType()  >=  Token.NAME)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  >=  Token.NAME)  {	  if(params    ==    null    ||    params.getType()!=    Token.NAME)    {    timeout    	compilable	timeout	13	1	replace
154	[BUG]  [BUGGY]  timeout  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.SETPROP)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params  ==  null  ||  params.getType()  ==  Token.SETPROP)  {	  if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    timeout    	compilable	timeout	8	1	replace
155	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.SETPROP)  {  timeout  [FE]              ComparisonFailure    [CONTEXT]    public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  (   "call   ".equals(name))  {  Node  params  =  getParametersNode();    [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.SETPROP)  {  [BUGGY]      defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,     "thisType   ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()  ==  Token.SETPROP)  {	  if(params!=    null    ||    params.getType()    ==    Token.GETPROP)    {    timeout    	compilable	timeout	8	1	replace
