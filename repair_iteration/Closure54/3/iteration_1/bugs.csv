bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  timeout  [FE]    ComparisonFailure  [CONTEXT]  public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  ( "call ".equals(name))  {  Node  params  =  getParametersNode();  [BUGGY]  if(params!=  null)  {  [BUGGY]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,   "thisType ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null)  {	if  (params  ==  null)  {  	compilable	timeout	5	1	replace
2	[BUG]  [BUGGY]  if(params!=  null)  {  timeout  [FE]    ComparisonFailure  [CONTEXT]  public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  ( "call ".equals(name))  {  Node  params  =  getParametersNode();  [BUGGY]  if(params!=  null)  {  [BUGGY]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,   "thisType ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null)  {	if  (params  ==  null)  {  	compilable	timeout	5	1	replace
3	[BUG]  [BUGGY]  timeout  [FE]      ComparisonFailure  [CONTEXT]  public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  ( "call ".equals(name))  {  Node  params  =  getParametersNode();  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,   "thisType ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {	if  (params  ==  null)  {  	compilable	timeout	5	1	replace
4	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  timeout  [FE]      ComparisonFailure  [CONTEXT]  public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  ( "call ".equals(name))  {  Node  params  =  getParametersNode();  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,   "thisType ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  ==  Token.FUNCTION)  {	if  (params  ==  null)  {  	compilable	timeout	5	1	replace
5	[BUG]  [BUGGY]  timeout  [FE]        ComparisonFailure  [CONTEXT]  public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  ( "call ".equals(name))  {  Node  params  =  getParametersNode();  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  [BUGGY]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,   "thisType ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  ||  params.getType()  ==  Token.NAME)  {	if  (params  ==  null)  {  	compilable	timeout	5	1	replace
6	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  timeout  [FE]        ComparisonFailure  [CONTEXT]  public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  ( "call ".equals(name))  {  Node  params  =  getParametersNode();  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.NAME)  {  [BUGGY]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,   "thisType ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  ==  Token.NAME)  {	if  (params  ==  null)  {  	compilable	timeout	5	1	replace
7	[BUG]  [BUGGY]  timeout  [FE]          ComparisonFailure  [CONTEXT]  public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  ( "call ".equals(name))  {  Node  params  =  getParametersNode();  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  [BUGGY]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,   "thisType ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {	if  (params  ==  null)  {  	compilable	timeout	5	1	replace
8	[BUG]  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  timeout  [FE]          ComparisonFailure  [CONTEXT]  public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  ( "call ".equals(name))  {  Node  params  =  getParametersNode();  [BUGGY]  if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {  [BUGGY]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,   "thisType ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params!=  null  ||  params.getType()  ==  Token.GETPROP)  {	if  (params  ==  null)  {  	compilable	timeout	5	1	replace
9	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]            ComparisonFailure  [CONTEXT]  public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  ( "call ".equals(name))  {  Node  params  =  getParametersNode();  [BUGGY]    [BUGGY]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,   "thisType ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	  	if  (params  ==  null)  {  	non-compiled	[CE]  illegal  start  of  type	5	None	replace
10	[BUG]  [BUGGY]  timeout  [FE]    ComparisonFailure  [CONTEXT]  public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  ( "call ".equals(name))  {  Node  params  =  getParametersNode();  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  [BUGGY]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,   "thisType ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {	if  (params  ==  null)  {  	compilable	timeout	5	1	replace
11	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  timeout  [FE]    ComparisonFailure  [CONTEXT]  public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  ( "call ".equals(name))  {  Node  params  =  getParametersNode();  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {  [BUGGY]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,   "thisType ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()!=  Token.FUNCTION)  {	if  (params  ==  null)  {  	compilable	timeout	5	1	replace
12	[BUG]  [BUGGY]  timeout  [FE]    ComparisonFailure  [CONTEXT]  public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  ( "call ".equals(name))  {  Node  params  =  getParametersNode();  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  [BUGGY]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,   "thisType ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params  ==  null  ||  params.getType()!=  Token.NAME)  {	if  (params  ==  null)  {  	compilable	timeout	5	1	replace
13	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  timeout  [FE]    ComparisonFailure  [CONTEXT]  public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  ( "call ".equals(name))  {  Node  params  =  getParametersNode();  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.NAME)  {  [BUGGY]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,   "thisType ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()!=  Token.NAME)  {	if  (params  ==  null)  {  	compilable	timeout	5	1	replace
14	[BUG]  [BUGGY]  timeout  [FE]      ComparisonFailure  [CONTEXT]  public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  ( "call ".equals(name))  {  Node  params  =  getParametersNode();  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,   "thisType ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {	if  (params  ==  null)  {  	compilable	timeout	5	1	replace
15	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  timeout  [FE]      ComparisonFailure  [CONTEXT]  public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  ( "call ".equals(name))  {  Node  params  =  getParametersNode();  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {  [BUGGY]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,   "thisType ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()!=  Token.OBJECTLIT)  {	if  (params  ==  null)  {  	compilable	timeout	5	1	replace
16	[BUG]  [BUGGY]  timeout  [FE]        ComparisonFailure  [CONTEXT]  public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  ( "call ".equals(name))  {  Node  params  =  getParametersNode();  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  [BUGGY]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,   "thisType ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {	if  (params  ==  null)  {  	compilable	timeout	5	1	replace
17	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  timeout  [FE]        ComparisonFailure  [CONTEXT]  public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  ( "call ".equals(name))  {  Node  params  =  getParametersNode();  [BUGGY]  if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {  [BUGGY]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,   "thisType ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()!=  Token.GETPROP)  {	if  (params  ==  null)  {  	compilable	timeout	5	1	replace
18	[BUG]  [BUGGY]  timeout  [FE]          ComparisonFailure  [CONTEXT]  public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  ( "call ".equals(name))  {  Node  params  =  getParametersNode();  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,   "thisType ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	if(params  ==  null  ||  params.getType()  ==  Token.FUNCTION)  {	if  (params  ==  null)  {  	compilable	timeout	5	1	replace
19	[BUG]  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.FUNCTION)  {  timeout  [FE]          ComparisonFailure  [CONTEXT]  public  JSType  getPropertyType(String  name)  {  if  (!hasOwnProperty(name))  {  if  ( "call ".equals(name))  {  Node  params  =  getParametersNode();  [BUGGY]  if(params  ==  null  ||  params.getType()  ==  Token.FUNCTION)  {  [BUGGY]    defineDeclaredProperty(name,  new  FunctionBuilder(registry)  .withReturnType(getReturnType())  .build(),  source);  }  else  {  params  =  params.cloneTree();  Node  thisTypeNode  =  Node.newString(Token.NAME,   "thisType ");  [CLASS]  FunctionType  Kind  [METHOD]  getPropertyType  [RETURN_TYPE]  JSType  String  name  [VARIABLES]  ObjectType  baseType  instance  interfaceType  type  typeOfThis  boolean  Kind  CONSTRUCTOR  INTERFACE  ORDINARY  kind  Node  lastParam  n  params  source  thisTypeNode  ArrowType  arrowType  call  PrototypeObjectType  prototype  List  extendedInterfaces  implementedInterfaces  subTypes  String  name  templateTypeName  SimpleSlot  prototypeSlot  long  serialVersionUID  FunctionParamBuilder  builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	if(params  ==  null  ||  params.getType()  ==  Token.FUNCTION)  {	if  (params  ==  null)  {  	compilable	timeout	5	1	replace
