bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] return true; [FE] ComparisonFailure [CONTEXT] boolean defineProperty(String name, JSType type, boolean inferred, Node propertyNode) { if ("prototype".equals(name)) { ObjectType objType = type.toObjectType(); if (objType != null) { if (objType.isEquivalentTo(prototype)) { [BUGGY] return true; [BUGGY] } this.setPrototypeBasedOn(objType); return true; } else { return false; } } return super.defineProperty(name, type, inferred, propertyNode); } [CLASS] FunctionType Kind [METHOD] defineProperty [RETURN_TYPE] boolean  String name JSType type boolean inferred Node propertyNode [VARIABLES] ObjectType baseType instance interfaceType objType type typeOfThis JSType type boolean inferred Kind CONSTRUCTOR INTERFACE ORDINARY kind Node lastParam n params propertyNode source thisTypeNode ArrowType arrowType call PrototypeObjectType prototype List extendedInterfaces implementedInterfaces subTypes String name templateTypeName SimpleSlot prototypeSlot long serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	replace	
2	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] boolean defineProperty(String name, JSType type, boolean inferred, Node propertyNode) { if ("prototype".equals(name)) { ObjectType objType = type.toObjectType(); if (objType != null) { if (objType.isEquivalentTo(prototype)) { [BUGGY] [BUGGY] return true; } this.setPrototypeBasedOn(objType); return true; } else { return false; } } return super.defineProperty(name, type, inferred, propertyNode); } [CLASS] FunctionType Kind [METHOD] defineProperty [RETURN_TYPE] boolean  String name JSType type boolean inferred Node propertyNode [VARIABLES] ObjectType baseType instance interfaceType objType type typeOfThis JSType type boolean inferred Kind CONSTRUCTOR INTERFACE ORDINARY kind Node lastParam n params propertyNode source thisTypeNode ArrowType arrowType call PrototypeObjectType prototype List extendedInterfaces implementedInterfaces subTypes String name templateTypeName SimpleSlot prototypeSlot long serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3849001794597505	556	556	3	add	
3	[BUG] [BUGGY] Node params = getParametersNode(); [FE] ComparisonFailure [CONTEXT] public JSType getPropertyType(String name) { if (!hasOwnProperty(name)) { if ("call".equals(name)) {  [BUGGY] Node params = getParametersNode(); [BUGGY] if (params == null) {   defineDeclaredProperty(name, new FunctionBuilder(registry) .withReturnType(getReturnType()) .build(), source); } else { params = params.cloneTree(); [CLASS] FunctionType Kind [METHOD] getPropertyType [RETURN_TYPE] JSType  String name [VARIABLES] ObjectType baseType instance interfaceType type typeOfThis boolean Kind CONSTRUCTOR INTERFACE ORDINARY kind Node lastParam n params source thisTypeNode ArrowType arrowType call PrototypeObjectType prototype List extendedInterfaces implementedInterfaces subTypes String name templateTypeName SimpleSlot prototypeSlot long serialVersionUID FunctionParamBuilder builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	replace	
4	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public JSType getPropertyType(String name) { if (!hasOwnProperty(name)) { if ("call".equals(name)) {  [BUGGY] [BUGGY] Node params = getParametersNode(); if (params == null) {   defineDeclaredProperty(name, new FunctionBuilder(registry) .withReturnType(getReturnType()) .build(), source); } else { params = params.cloneTree(); [CLASS] FunctionType Kind [METHOD] getPropertyType [RETURN_TYPE] JSType  String name [VARIABLES] ObjectType baseType instance interfaceType type typeOfThis boolean Kind CONSTRUCTOR INTERFACE ORDINARY kind Node lastParam n params source thisTypeNode ArrowType arrowType call PrototypeObjectType prototype List extendedInterfaces implementedInterfaces subTypes String name templateTypeName SimpleSlot prototypeSlot long serialVersionUID FunctionParamBuilder builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	500	500	3	add	
5	[BUG] [BUGGY] if (params == null) { [FE] ComparisonFailure [CONTEXT] public JSType getPropertyType(String name) { if (!hasOwnProperty(name)) { if ("call".equals(name)) {  Node params = getParametersNode(); [BUGGY] if (params == null) { [BUGGY]   defineDeclaredProperty(name, new FunctionBuilder(registry) .withReturnType(getReturnType()) .build(), source); } else { params = params.cloneTree(); Node thisTypeNode = Node.newString(Token.NAME, "thisType"); [CLASS] FunctionType Kind [METHOD] getPropertyType [RETURN_TYPE] JSType  String name [VARIABLES] ObjectType baseType instance interfaceType type typeOfThis boolean Kind CONSTRUCTOR INTERFACE ORDINARY kind Node lastParam n params source thisTypeNode ArrowType arrowType call PrototypeObjectType prototype List extendedInterfaces implementedInterfaces subTypes String name templateTypeName SimpleSlot prototypeSlot long serialVersionUID FunctionParamBuilder builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	replace	
6	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public JSType getPropertyType(String name) { if (!hasOwnProperty(name)) { if ("call".equals(name)) {  Node params = getParametersNode(); [BUGGY] [BUGGY] if (params == null) {   defineDeclaredProperty(name, new FunctionBuilder(registry) .withReturnType(getReturnType()) .build(), source); } else { params = params.cloneTree(); Node thisTypeNode = Node.newString(Token.NAME, "thisType"); [CLASS] FunctionType Kind [METHOD] getPropertyType [RETURN_TYPE] JSType  String name [VARIABLES] ObjectType baseType instance interfaceType type typeOfThis boolean Kind CONSTRUCTOR INTERFACE ORDINARY kind Node lastParam n params source thisTypeNode ArrowType arrowType call PrototypeObjectType prototype List extendedInterfaces implementedInterfaces subTypes String name templateTypeName SimpleSlot prototypeSlot long serialVersionUID FunctionParamBuilder builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	501	501	3	add	
7	[BUG] [BUGGY] params = params.cloneTree(); [FE] ComparisonFailure [CONTEXT] if (params == null) {   defineDeclaredProperty(name, new FunctionBuilder(registry) .withReturnType(getReturnType()) .build(), source); } else { [BUGGY] params = params.cloneTree(); [BUGGY] Node thisTypeNode = Node.newString(Token.NAME, "thisType"); thisTypeNode.setJSType( registry.createOptionalNullableType(getTypeOfThis())); params.addChildToFront(thisTypeNode); thisTypeNode.setOptionalArg(true); defineDeclaredProperty(name, new FunctionBuilder(registry) .withParamsNode(params) .withReturnType(getReturnType()) [CLASS] FunctionType Kind [METHOD] getPropertyType [RETURN_TYPE] JSType  String name [VARIABLES] ObjectType baseType instance interfaceType type typeOfThis boolean Kind CONSTRUCTOR INTERFACE ORDINARY kind Node lastParam n params source thisTypeNode ArrowType arrowType call PrototypeObjectType prototype List extendedInterfaces implementedInterfaces subTypes String name templateTypeName SimpleSlot prototypeSlot long serialVersionUID FunctionParamBuilder builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	510	510	3	replace	
8	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] if (params == null) {   defineDeclaredProperty(name, new FunctionBuilder(registry) .withReturnType(getReturnType()) .build(), source); } else { [BUGGY] [BUGGY] params = params.cloneTree(); Node thisTypeNode = Node.newString(Token.NAME, "thisType"); thisTypeNode.setJSType( registry.createOptionalNullableType(getTypeOfThis())); params.addChildToFront(thisTypeNode); thisTypeNode.setOptionalArg(true); defineDeclaredProperty(name, new FunctionBuilder(registry) .withParamsNode(params) .withReturnType(getReturnType()) [CLASS] FunctionType Kind [METHOD] getPropertyType [RETURN_TYPE] JSType  String name [VARIABLES] ObjectType baseType instance interfaceType type typeOfThis boolean Kind CONSTRUCTOR INTERFACE ORDINARY kind Node lastParam n params source thisTypeNode ArrowType arrowType call PrototypeObjectType prototype List extendedInterfaces implementedInterfaces subTypes String name templateTypeName SimpleSlot prototypeSlot long serialVersionUID FunctionParamBuilder builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	510	510	3	add	
9	[BUG] [BUGGY] Node thisTypeNode = Node.newString(Token.NAME, "thisType"); [FE] ComparisonFailure [CONTEXT] if (params == null) {   defineDeclaredProperty(name, new FunctionBuilder(registry) .withReturnType(getReturnType()) .build(), source); } else { params = params.cloneTree(); [BUGGY] Node thisTypeNode = Node.newString(Token.NAME, "thisType"); [BUGGY] thisTypeNode.setJSType( registry.createOptionalNullableType(getTypeOfThis())); params.addChildToFront(thisTypeNode); thisTypeNode.setOptionalArg(true); defineDeclaredProperty(name, new FunctionBuilder(registry) .withParamsNode(params) .withReturnType(getReturnType()) .build(), [CLASS] FunctionType Kind [METHOD] getPropertyType [RETURN_TYPE] JSType  String name [VARIABLES] ObjectType baseType instance interfaceType type typeOfThis boolean Kind CONSTRUCTOR INTERFACE ORDINARY kind Node lastParam n params source thisTypeNode ArrowType arrowType call PrototypeObjectType prototype List extendedInterfaces implementedInterfaces subTypes String name templateTypeName SimpleSlot prototypeSlot long serialVersionUID FunctionParamBuilder builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	replace	
10	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] if (params == null) {   defineDeclaredProperty(name, new FunctionBuilder(registry) .withReturnType(getReturnType()) .build(), source); } else { params = params.cloneTree(); [BUGGY] [BUGGY] Node thisTypeNode = Node.newString(Token.NAME, "thisType"); thisTypeNode.setJSType( registry.createOptionalNullableType(getTypeOfThis())); params.addChildToFront(thisTypeNode); thisTypeNode.setOptionalArg(true); defineDeclaredProperty(name, new FunctionBuilder(registry) .withParamsNode(params) .withReturnType(getReturnType()) .build(), [CLASS] FunctionType Kind [METHOD] getPropertyType [RETURN_TYPE] JSType  String name [VARIABLES] ObjectType baseType instance interfaceType type typeOfThis boolean Kind CONSTRUCTOR INTERFACE ORDINARY kind Node lastParam n params source thisTypeNode ArrowType arrowType call PrototypeObjectType prototype List extendedInterfaces implementedInterfaces subTypes String name templateTypeName SimpleSlot prototypeSlot long serialVersionUID FunctionParamBuilder builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	511	511	3	add	
11	[BUG] [BUGGY] thisTypeNode.setJSType( registry.createOptionalNullableType(getTypeOfThis())); [FE] ComparisonFailure [CONTEXT]   defineDeclaredProperty(name, new FunctionBuilder(registry) .withReturnType(getReturnType()) .build(), source); } else { params = params.cloneTree(); Node thisTypeNode = Node.newString(Token.NAME, "thisType"); [BUGGY] thisTypeNode.setJSType(    registry.createOptionalNullableType(getTypeOfThis())); [BUGGY] registry.createOptionalNullableType(getTypeOfThis())); params.addChildToFront(thisTypeNode); thisTypeNode.setOptionalArg(true); defineDeclaredProperty(name, new FunctionBuilder(registry) .withParamsNode(params) .withReturnType(getReturnType()) .build(), source); [CLASS] FunctionType Kind [METHOD] getPropertyType [RETURN_TYPE] JSType  String name [VARIABLES] ObjectType baseType instance interfaceType type typeOfThis boolean Kind CONSTRUCTOR INTERFACE ORDINARY kind Node lastParam n params source thisTypeNode ArrowType arrowType call PrototypeObjectType prototype List extendedInterfaces implementedInterfaces subTypes String name templateTypeName SimpleSlot prototypeSlot long serialVersionUID FunctionParamBuilder builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	512	513	3	replace	
12	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT]   defineDeclaredProperty(name, new FunctionBuilder(registry) .withReturnType(getReturnType()) .build(), source); } else { params = params.cloneTree(); Node thisTypeNode = Node.newString(Token.NAME, "thisType"); [BUGGY] [BUGGY] thisTypeNode.setJSType(    registry.createOptionalNullableType(getTypeOfThis())); registry.createOptionalNullableType(getTypeOfThis())); params.addChildToFront(thisTypeNode); thisTypeNode.setOptionalArg(true); defineDeclaredProperty(name, new FunctionBuilder(registry) .withParamsNode(params) .withReturnType(getReturnType()) .build(), source); [CLASS] FunctionType Kind [METHOD] getPropertyType [RETURN_TYPE] JSType  String name [VARIABLES] ObjectType baseType instance interfaceType type typeOfThis boolean Kind CONSTRUCTOR INTERFACE ORDINARY kind Node lastParam n params source thisTypeNode ArrowType arrowType call PrototypeObjectType prototype List extendedInterfaces implementedInterfaces subTypes String name templateTypeName SimpleSlot prototypeSlot long serialVersionUID FunctionParamBuilder builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	512	513	3	add	
13	[BUG] [BUGGY] params.addChildToFront(thisTypeNode); [FE] ComparisonFailure [CONTEXT] defineDeclaredProperty(name, new FunctionBuilder(registry) .withReturnType(getReturnType()) .build(), source); } else { params = params.cloneTree(); Node thisTypeNode = Node.newString(Token.NAME, "thisType"); thisTypeNode.setJSType( registry.createOptionalNullableType(getTypeOfThis())); [BUGGY] params.addChildToFront(thisTypeNode); [BUGGY] thisTypeNode.setOptionalArg(true); defineDeclaredProperty(name, new FunctionBuilder(registry) .withParamsNode(params) .withReturnType(getReturnType()) .build(), source); } [CLASS] FunctionType Kind [METHOD] getPropertyType [RETURN_TYPE] JSType  String name [VARIABLES] ObjectType baseType instance interfaceType type typeOfThis boolean Kind CONSTRUCTOR INTERFACE ORDINARY kind Node lastParam n params source thisTypeNode ArrowType arrowType call PrototypeObjectType prototype List extendedInterfaces implementedInterfaces subTypes String name templateTypeName SimpleSlot prototypeSlot long serialVersionUID FunctionParamBuilder builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	replace	
14	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] defineDeclaredProperty(name, new FunctionBuilder(registry) .withReturnType(getReturnType()) .build(), source); } else { params = params.cloneTree(); Node thisTypeNode = Node.newString(Token.NAME, "thisType"); thisTypeNode.setJSType( registry.createOptionalNullableType(getTypeOfThis())); [BUGGY] [BUGGY] params.addChildToFront(thisTypeNode); thisTypeNode.setOptionalArg(true); defineDeclaredProperty(name, new FunctionBuilder(registry) .withParamsNode(params) .withReturnType(getReturnType()) .build(), source); } [CLASS] FunctionType Kind [METHOD] getPropertyType [RETURN_TYPE] JSType  String name [VARIABLES] ObjectType baseType instance interfaceType type typeOfThis boolean Kind CONSTRUCTOR INTERFACE ORDINARY kind Node lastParam n params source thisTypeNode ArrowType arrowType call PrototypeObjectType prototype List extendedInterfaces implementedInterfaces subTypes String name templateTypeName SimpleSlot prototypeSlot long serialVersionUID FunctionParamBuilder builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	514	514	3	add	
15	[BUG] [BUGGY] thisTypeNode.setOptionalArg(true); [FE] ComparisonFailure [CONTEXT] new FunctionBuilder(registry) .withReturnType(getReturnType()) .build(), source); } else { params = params.cloneTree(); Node thisTypeNode = Node.newString(Token.NAME, "thisType"); thisTypeNode.setJSType( registry.createOptionalNullableType(getTypeOfThis())); params.addChildToFront(thisTypeNode); [BUGGY] thisTypeNode.setOptionalArg(true); [BUGGY]  defineDeclaredProperty(name, new FunctionBuilder(registry) .withParamsNode(params) .withReturnType(getReturnType()) .build(), source); } [CLASS] FunctionType Kind [METHOD] getPropertyType [RETURN_TYPE] JSType  String name [VARIABLES] ObjectType baseType instance interfaceType type typeOfThis boolean Kind CONSTRUCTOR INTERFACE ORDINARY kind Node lastParam n params source thisTypeNode ArrowType arrowType call PrototypeObjectType prototype List extendedInterfaces implementedInterfaces subTypes String name templateTypeName SimpleSlot prototypeSlot long serialVersionUID FunctionParamBuilder builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	515	515	3	replace	
16	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] new FunctionBuilder(registry) .withReturnType(getReturnType()) .build(), source); } else { params = params.cloneTree(); Node thisTypeNode = Node.newString(Token.NAME, "thisType"); thisTypeNode.setJSType( registry.createOptionalNullableType(getTypeOfThis())); params.addChildToFront(thisTypeNode); [BUGGY] [BUGGY] thisTypeNode.setOptionalArg(true); defineDeclaredProperty(name, new FunctionBuilder(registry) .withParamsNode(params) .withReturnType(getReturnType()) .build(), source); } [CLASS] FunctionType Kind [METHOD] getPropertyType [RETURN_TYPE] JSType  String name [VARIABLES] ObjectType baseType instance interfaceType type typeOfThis boolean Kind CONSTRUCTOR INTERFACE ORDINARY kind Node lastParam n params source thisTypeNode ArrowType arrowType call PrototypeObjectType prototype List extendedInterfaces implementedInterfaces subTypes String name templateTypeName SimpleSlot prototypeSlot long serialVersionUID FunctionParamBuilder builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	515	515	3	add	
17	[BUG] [BUGGY] defineDeclaredProperty(name, new FunctionBuilder(registry)  .withParamsNode(params) [FE] ComparisonFailure [CONTEXT] .build(), source); } else { params = params.cloneTree(); Node thisTypeNode = Node.newString(Token.NAME, "thisType"); thisTypeNode.setJSType( registry.createOptionalNullableType(getTypeOfThis())); params.addChildToFront(thisTypeNode); thisTypeNode.setOptionalArg(true); [BUGGY] defineDeclaredProperty(name,    new FunctionBuilder(registry)       .withParamsNode(params) [BUGGY] new FunctionBuilder(registry) .withParamsNode(params) .withReturnType(getReturnType()) .build(), source); } [CLASS] FunctionType Kind [METHOD] getPropertyType [RETURN_TYPE] JSType  String name [VARIABLES] ObjectType baseType instance interfaceType type typeOfThis boolean Kind CONSTRUCTOR INTERFACE ORDINARY kind Node lastParam n params source thisTypeNode ArrowType arrowType call PrototypeObjectType prototype List extendedInterfaces implementedInterfaces subTypes String name templateTypeName SimpleSlot prototypeSlot long serialVersionUID FunctionParamBuilder builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	517	519	3	replace	
18	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] .build(), source); } else { params = params.cloneTree(); Node thisTypeNode = Node.newString(Token.NAME, "thisType"); thisTypeNode.setJSType( registry.createOptionalNullableType(getTypeOfThis())); params.addChildToFront(thisTypeNode); thisTypeNode.setOptionalArg(true); [BUGGY] [BUGGY] defineDeclaredProperty(name,    new FunctionBuilder(registry)       .withParamsNode(params) new FunctionBuilder(registry) .withParamsNode(params) .withReturnType(getReturnType()) .build(), source); } [CLASS] FunctionType Kind [METHOD] getPropertyType [RETURN_TYPE] JSType  String name [VARIABLES] ObjectType baseType instance interfaceType type typeOfThis boolean Kind CONSTRUCTOR INTERFACE ORDINARY kind Node lastParam n params source thisTypeNode ArrowType arrowType call PrototypeObjectType prototype List extendedInterfaces implementedInterfaces subTypes String name templateTypeName SimpleSlot prototypeSlot long serialVersionUID FunctionParamBuilder builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3481553119113957	517	519	3	add	
19	[BUG] [BUGGY] this.setPrototypeBasedOn(objType); [FE] ComparisonFailure [CONTEXT] boolean defineProperty(String name, JSType type, boolean inferred, Node propertyNode) { if ("prototype".equals(name)) { ObjectType objType = type.toObjectType(); if (objType != null) { if (objType.isEquivalentTo(prototype)) { return true; } [BUGGY] this.setPrototypeBasedOn(objType); [BUGGY] return true; } else { return false; } } return super.defineProperty(name, type, inferred, propertyNode); } [CLASS] FunctionType Kind [METHOD] defineProperty [RETURN_TYPE] boolean  String name JSType type boolean inferred Node propertyNode [VARIABLES] ObjectType baseType instance interfaceType objType type typeOfThis JSType type boolean inferred Kind CONSTRUCTOR INTERFACE ORDINARY kind Node lastParam n params propertyNode source thisTypeNode ArrowType arrowType call PrototypeObjectType prototype List extendedInterfaces implementedInterfaces subTypes String name templateTypeName SimpleSlot prototypeSlot long serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3464101615137754	558	558	3	replace	
20	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] boolean defineProperty(String name, JSType type, boolean inferred, Node propertyNode) { if ("prototype".equals(name)) { ObjectType objType = type.toObjectType(); if (objType != null) { if (objType.isEquivalentTo(prototype)) { return true; } [BUGGY] [BUGGY] this.setPrototypeBasedOn(objType); return true; } else { return false; } } return super.defineProperty(name, type, inferred, propertyNode); } [CLASS] FunctionType Kind [METHOD] defineProperty [RETURN_TYPE] boolean  String name JSType type boolean inferred Node propertyNode [VARIABLES] ObjectType baseType instance interfaceType objType type typeOfThis JSType type boolean inferred Kind CONSTRUCTOR INTERFACE ORDINARY kind Node lastParam n params propertyNode source thisTypeNode ArrowType arrowType call PrototypeObjectType prototype List extendedInterfaces implementedInterfaces subTypes String name templateTypeName SimpleSlot prototypeSlot long serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3464101615137754	558	558	3	add	
21	[BUG] [BUGGY] return true; [FE] ComparisonFailure [CONTEXT] boolean defineProperty(String name, JSType type, boolean inferred, Node propertyNode) { if ("prototype".equals(name)) { ObjectType objType = type.toObjectType(); if (objType != null) { if (objType.isEquivalentTo(prototype)) { return true; } this.setPrototypeBasedOn(objType); [BUGGY] return true; [BUGGY] } else { return false; } } return super.defineProperty(name, type, inferred, propertyNode); } [CLASS] FunctionType Kind [METHOD] defineProperty [RETURN_TYPE] boolean  String name JSType type boolean inferred Node propertyNode [VARIABLES] ObjectType baseType instance interfaceType objType type typeOfThis JSType type boolean inferred Kind CONSTRUCTOR INTERFACE ORDINARY kind Node lastParam n params propertyNode source thisTypeNode ArrowType arrowType call PrototypeObjectType prototype List extendedInterfaces implementedInterfaces subTypes String name templateTypeName SimpleSlot prototypeSlot long serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3464101615137754	559	559	3	replace	
22	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] boolean defineProperty(String name, JSType type, boolean inferred, Node propertyNode) { if ("prototype".equals(name)) { ObjectType objType = type.toObjectType(); if (objType != null) { if (objType.isEquivalentTo(prototype)) { return true; } this.setPrototypeBasedOn(objType); [BUGGY] [BUGGY] return true; } else { return false; } } return super.defineProperty(name, type, inferred, propertyNode); } [CLASS] FunctionType Kind [METHOD] defineProperty [RETURN_TYPE] boolean  String name JSType type boolean inferred Node propertyNode [VARIABLES] ObjectType baseType instance interfaceType objType type typeOfThis JSType type boolean inferred Kind CONSTRUCTOR INTERFACE ORDINARY kind Node lastParam n params propertyNode source thisTypeNode ArrowType arrowType call PrototypeObjectType prototype List extendedInterfaces implementedInterfaces subTypes String name templateTypeName SimpleSlot prototypeSlot long serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3464101615137754	559	559	3	add	
23	[BUG] [BUGGY] ObjectType objType = type.toObjectType(); [FE] ComparisonFailure [CONTEXT] boolean defineProperty(String name, JSType type, boolean inferred, Node propertyNode) { if ("prototype".equals(name)) { [BUGGY] ObjectType objType = type.toObjectType(); [BUGGY] if (objType != null) { if (objType.isEquivalentTo(prototype)) { return true; } this.setPrototypeBasedOn(objType); return true; } else { return false; } } [CLASS] FunctionType Kind [METHOD] defineProperty [RETURN_TYPE] boolean  String name JSType type boolean inferred Node propertyNode [VARIABLES] ObjectType baseType instance interfaceType objType type typeOfThis JSType type boolean inferred Kind CONSTRUCTOR INTERFACE ORDINARY kind Node lastParam n params propertyNode source thisTypeNode ArrowType arrowType call PrototypeObjectType prototype List extendedInterfaces implementedInterfaces subTypes String name templateTypeName SimpleSlot prototypeSlot long serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3061862178478973	553	553	3	replace	
24	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] boolean defineProperty(String name, JSType type, boolean inferred, Node propertyNode) { if ("prototype".equals(name)) { [BUGGY] [BUGGY] ObjectType objType = type.toObjectType(); if (objType != null) { if (objType.isEquivalentTo(prototype)) { return true; } this.setPrototypeBasedOn(objType); return true; } else { return false; } } [CLASS] FunctionType Kind [METHOD] defineProperty [RETURN_TYPE] boolean  String name JSType type boolean inferred Node propertyNode [VARIABLES] ObjectType baseType instance interfaceType objType type typeOfThis JSType type boolean inferred Kind CONSTRUCTOR INTERFACE ORDINARY kind Node lastParam n params propertyNode source thisTypeNode ArrowType arrowType call PrototypeObjectType prototype List extendedInterfaces implementedInterfaces subTypes String name templateTypeName SimpleSlot prototypeSlot long serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3061862178478973	553	553	3	add	
25	[BUG] [BUGGY] if (objType != null) { [FE] ComparisonFailure [CONTEXT] boolean defineProperty(String name, JSType type, boolean inferred, Node propertyNode) { if ("prototype".equals(name)) { ObjectType objType = type.toObjectType(); [BUGGY] if (objType != null) { [BUGGY] if (objType.isEquivalentTo(prototype)) { return true; } this.setPrototypeBasedOn(objType); return true; } else { return false; } } return super.defineProperty(name, type, inferred, propertyNode); [CLASS] FunctionType Kind [METHOD] defineProperty [RETURN_TYPE] boolean  String name JSType type boolean inferred Node propertyNode [VARIABLES] ObjectType baseType instance interfaceType objType type typeOfThis JSType type boolean inferred Kind CONSTRUCTOR INTERFACE ORDINARY kind Node lastParam n params propertyNode source thisTypeNode ArrowType arrowType call PrototypeObjectType prototype List extendedInterfaces implementedInterfaces subTypes String name templateTypeName SimpleSlot prototypeSlot long serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3061862178478973	554	554	3	replace	
26	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] boolean defineProperty(String name, JSType type, boolean inferred, Node propertyNode) { if ("prototype".equals(name)) { ObjectType objType = type.toObjectType(); [BUGGY] [BUGGY] if (objType != null) { if (objType.isEquivalentTo(prototype)) { return true; } this.setPrototypeBasedOn(objType); return true; } else { return false; } } return super.defineProperty(name, type, inferred, propertyNode); [CLASS] FunctionType Kind [METHOD] defineProperty [RETURN_TYPE] boolean  String name JSType type boolean inferred Node propertyNode [VARIABLES] ObjectType baseType instance interfaceType objType type typeOfThis JSType type boolean inferred Kind CONSTRUCTOR INTERFACE ORDINARY kind Node lastParam n params propertyNode source thisTypeNode ArrowType arrowType call PrototypeObjectType prototype List extendedInterfaces implementedInterfaces subTypes String name templateTypeName SimpleSlot prototypeSlot long serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3061862178478973	554	554	3	add	
27	[BUG] [BUGGY] if (objType.isEquivalentTo(prototype)) { [FE] ComparisonFailure [CONTEXT] boolean defineProperty(String name, JSType type, boolean inferred, Node propertyNode) { if ("prototype".equals(name)) { ObjectType objType = type.toObjectType(); if (objType != null) { [BUGGY] if (objType.isEquivalentTo(prototype)) { [BUGGY] return true; } this.setPrototypeBasedOn(objType); return true; } else { return false; } } return super.defineProperty(name, type, inferred, propertyNode); } [CLASS] FunctionType Kind [METHOD] defineProperty [RETURN_TYPE] boolean  String name JSType type boolean inferred Node propertyNode [VARIABLES] ObjectType baseType instance interfaceType objType type typeOfThis JSType type boolean inferred Kind CONSTRUCTOR INTERFACE ORDINARY kind Node lastParam n params propertyNode source thisTypeNode ArrowType arrowType call PrototypeObjectType prototype List extendedInterfaces implementedInterfaces subTypes String name templateTypeName SimpleSlot prototypeSlot long serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3061862178478973	555	555	3	replace	
28	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] boolean defineProperty(String name, JSType type, boolean inferred, Node propertyNode) { if ("prototype".equals(name)) { ObjectType objType = type.toObjectType(); if (objType != null) { [BUGGY] [BUGGY] if (objType.isEquivalentTo(prototype)) { return true; } this.setPrototypeBasedOn(objType); return true; } else { return false; } } return super.defineProperty(name, type, inferred, propertyNode); } [CLASS] FunctionType Kind [METHOD] defineProperty [RETURN_TYPE] boolean  String name JSType type boolean inferred Node propertyNode [VARIABLES] ObjectType baseType instance interfaceType objType type typeOfThis JSType type boolean inferred Kind CONSTRUCTOR INTERFACE ORDINARY kind Node lastParam n params propertyNode source thisTypeNode ArrowType arrowType call PrototypeObjectType prototype List extendedInterfaces implementedInterfaces subTypes String name templateTypeName SimpleSlot prototypeSlot long serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.3061862178478973	555	555	3	add	
29	[BUG] [BUGGY] if ("call".equals(name)) { [FE] ComparisonFailure [CONTEXT] public JSType getPropertyType(String name) { if (!hasOwnProperty(name)) { [BUGGY] if ("call".equals(name)) { [BUGGY]  Node params = getParametersNode(); if (params == null) {   defineDeclaredProperty(name, new FunctionBuilder(registry) .withReturnType(getReturnType()) .build(), source); [CLASS] FunctionType Kind [METHOD] getPropertyType [RETURN_TYPE] JSType  String name [VARIABLES] ObjectType baseType instance interfaceType type typeOfThis boolean Kind CONSTRUCTOR INTERFACE ORDINARY kind Node lastParam n params source thisTypeNode ArrowType arrowType call PrototypeObjectType prototype List extendedInterfaces implementedInterfaces subTypes String name templateTypeName SimpleSlot prototypeSlot long serialVersionUID FunctionParamBuilder builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.22549380840084865	498	498	3	replace	
30	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public JSType getPropertyType(String name) { if (!hasOwnProperty(name)) { [BUGGY] [BUGGY] if ("call".equals(name)) {  Node params = getParametersNode(); if (params == null) {   defineDeclaredProperty(name, new FunctionBuilder(registry) .withReturnType(getReturnType()) .build(), source); [CLASS] FunctionType Kind [METHOD] getPropertyType [RETURN_TYPE] JSType  String name [VARIABLES] ObjectType baseType instance interfaceType type typeOfThis boolean Kind CONSTRUCTOR INTERFACE ORDINARY kind Node lastParam n params source thisTypeNode ArrowType arrowType call PrototypeObjectType prototype List extendedInterfaces implementedInterfaces subTypes String name templateTypeName SimpleSlot prototypeSlot long serialVersionUID FunctionParamBuilder builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.22549380840084865	498	498	3	add	
31	[BUG] [BUGGY] } else if ("apply".equals(name)) { [FE] ComparisonFailure [CONTEXT] params.addChildToFront(thisTypeNode); thisTypeNode.setOptionalArg(true); defineDeclaredProperty(name, new FunctionBuilder(registry) .withParamsNode(params) .withReturnType(getReturnType()) .build(), source); } [BUGGY] } else if ("apply".equals(name)) { [BUGGY]  FunctionParamBuilder builder = new FunctionParamBuilder(registry);     builder.addOptionalParams( registry.createNullableType(getTypeOfThis()), registry.createNullableType( [CLASS] FunctionType Kind [METHOD] getPropertyType [RETURN_TYPE] JSType  String name [VARIABLES] ObjectType baseType instance interfaceType type typeOfThis boolean Kind CONSTRUCTOR INTERFACE ORDINARY kind Node lastParam n params source thisTypeNode ArrowType arrowType call PrototypeObjectType prototype List extendedInterfaces implementedInterfaces subTypes String name templateTypeName SimpleSlot prototypeSlot long serialVersionUID FunctionParamBuilder builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.22549380840084865	524	524	3	replace	
32	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] params.addChildToFront(thisTypeNode); thisTypeNode.setOptionalArg(true); defineDeclaredProperty(name, new FunctionBuilder(registry) .withParamsNode(params) .withReturnType(getReturnType()) .build(), source); } [BUGGY] [BUGGY] } else if ("apply".equals(name)) {  FunctionParamBuilder builder = new FunctionParamBuilder(registry);     builder.addOptionalParams( registry.createNullableType(getTypeOfThis()), registry.createNullableType( [CLASS] FunctionType Kind [METHOD] getPropertyType [RETURN_TYPE] JSType  String name [VARIABLES] ObjectType baseType instance interfaceType type typeOfThis boolean Kind CONSTRUCTOR INTERFACE ORDINARY kind Node lastParam n params source thisTypeNode ArrowType arrowType call PrototypeObjectType prototype List extendedInterfaces implementedInterfaces subTypes String name templateTypeName SimpleSlot prototypeSlot long serialVersionUID FunctionParamBuilder builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.22549380840084865	524	524	3	add	
33	[BUG] [BUGGY] if (!hasOwnProperty(name)) { [FE] ComparisonFailure [CONTEXT] public JSType getPropertyType(String name) { [BUGGY] if (!hasOwnProperty(name)) { [BUGGY] if ("call".equals(name)) {  Node params = getParametersNode(); if (params == null) {   defineDeclaredProperty(name, new FunctionBuilder(registry) .withReturnType(getReturnType()) .build(), [CLASS] FunctionType Kind [METHOD] getPropertyType [RETURN_TYPE] JSType  String name [VARIABLES] ObjectType baseType instance interfaceType type typeOfThis boolean Kind CONSTRUCTOR INTERFACE ORDINARY kind Node lastParam n params source thisTypeNode ArrowType arrowType call PrototypeObjectType prototype List extendedInterfaces implementedInterfaces subTypes String name templateTypeName SimpleSlot prototypeSlot long serialVersionUID FunctionParamBuilder builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.21650635094610968	497	497	3	replace	
34	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public JSType getPropertyType(String name) { [BUGGY] [BUGGY] if (!hasOwnProperty(name)) { if ("call".equals(name)) {  Node params = getParametersNode(); if (params == null) {   defineDeclaredProperty(name, new FunctionBuilder(registry) .withReturnType(getReturnType()) .build(), [CLASS] FunctionType Kind [METHOD] getPropertyType [RETURN_TYPE] JSType  String name [VARIABLES] ObjectType baseType instance interfaceType type typeOfThis boolean Kind CONSTRUCTOR INTERFACE ORDINARY kind Node lastParam n params source thisTypeNode ArrowType arrowType call PrototypeObjectType prototype List extendedInterfaces implementedInterfaces subTypes String name templateTypeName SimpleSlot prototypeSlot long serialVersionUID FunctionParamBuilder builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.21650635094610968	497	497	3	add	
35	[BUG] [BUGGY] return super.getPropertyType(name); [FE] ComparisonFailure [CONTEXT] defineDeclaredProperty(name, new FunctionBuilder(registry) .withParams(builder) .withReturnType(getReturnType()) .build(), source); } } [BUGGY] return super.getPropertyType(name); [BUGGY] } [CLASS] FunctionType Kind [METHOD] getPropertyType [RETURN_TYPE] JSType  String name [VARIABLES] ObjectType baseType instance interfaceType type typeOfThis boolean Kind CONSTRUCTOR INTERFACE ORDINARY kind Node lastParam n params source thisTypeNode ArrowType arrowType call PrototypeObjectType prototype List extendedInterfaces implementedInterfaces subTypes String name templateTypeName SimpleSlot prototypeSlot long serialVersionUID FunctionParamBuilder builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.21650635094610968	546	546	3	replace	
36	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] defineDeclaredProperty(name, new FunctionBuilder(registry) .withParams(builder) .withReturnType(getReturnType()) .build(), source); } } [BUGGY] [BUGGY] return super.getPropertyType(name); } [CLASS] FunctionType Kind [METHOD] getPropertyType [RETURN_TYPE] JSType  String name [VARIABLES] ObjectType baseType instance interfaceType type typeOfThis boolean Kind CONSTRUCTOR INTERFACE ORDINARY kind Node lastParam n params source thisTypeNode ArrowType arrowType call PrototypeObjectType prototype List extendedInterfaces implementedInterfaces subTypes String name templateTypeName SimpleSlot prototypeSlot long serialVersionUID FunctionParamBuilder builder  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.21650635094610968	546	546	3	add	
37	[BUG] [BUGGY] if ("prototype".equals(name)) { [FE] ComparisonFailure [CONTEXT] boolean defineProperty(String name, JSType type, boolean inferred, Node propertyNode) { [BUGGY] if ("prototype".equals(name)) { [BUGGY] ObjectType objType = type.toObjectType(); if (objType != null) { if (objType.isEquivalentTo(prototype)) { return true; } this.setPrototypeBasedOn(objType); return true; } else { return false; } [CLASS] FunctionType Kind [METHOD] defineProperty [RETURN_TYPE] boolean  String name JSType type boolean inferred Node propertyNode [VARIABLES] ObjectType baseType instance interfaceType objType type typeOfThis JSType type boolean inferred Kind CONSTRUCTOR INTERFACE ORDINARY kind Node lastParam n params propertyNode source thisTypeNode ArrowType arrowType call PrototypeObjectType prototype List extendedInterfaces implementedInterfaces subTypes String name templateTypeName SimpleSlot prototypeSlot long serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.21650635094610968	552	552	3	replace	
38	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] boolean defineProperty(String name, JSType type, boolean inferred, Node propertyNode) { [BUGGY] [BUGGY] if ("prototype".equals(name)) { ObjectType objType = type.toObjectType(); if (objType != null) { if (objType.isEquivalentTo(prototype)) { return true; } this.setPrototypeBasedOn(objType); return true; } else { return false; } [CLASS] FunctionType Kind [METHOD] defineProperty [RETURN_TYPE] boolean  String name JSType type boolean inferred Node propertyNode [VARIABLES] ObjectType baseType instance interfaceType objType type typeOfThis JSType type boolean inferred Kind CONSTRUCTOR INTERFACE ORDINARY kind Node lastParam n params propertyNode source thisTypeNode ArrowType arrowType call PrototypeObjectType prototype List extendedInterfaces implementedInterfaces subTypes String name templateTypeName SimpleSlot prototypeSlot long serialVersionUID  	projects/Closure54/src/com/google/javascript/rhino/jstype/FunctionType.java	0.21650635094610968	552	552	3	add	
