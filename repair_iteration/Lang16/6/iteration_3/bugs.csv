bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ',  decPos)+  1;  [CE]  variable  decPos  is  already  defined  in  method  createNumber(String)  [FE]              NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('  ',  decPos)+  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.indexOf('  ',  decPos)+  1;	  int    expPos    =    str.indexOf('    ',    expPos)+    1;    	non-compiled	[CE]  variable  decPos  is  already  defined  in  method  createNumber(String)	42	None	replace
2	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ',  DEC_POP)+  1;  [CE]  variable  decPos  is  already  defined  in  method  createNumber(String)  [FE]                NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('  ',  DEC_POP)+  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.indexOf('  ',  DEC_POP)+  1;	  int    expPos    =    str.indexOf('    ',    expPos)+    1;    	non-compiled	[CE]  variable  decPos  is  already  defined  in  method  createNumber(String)	42	None	replace
3	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('  ',  expPos)+  1;  [CE]  variable  decPos  is  already  defined  in  method  createNumber(String)  [FE]                  NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('  ',  expPos)+  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.lastIndexOf('  ',  expPos)+  1;	  int    expPos    =    str.indexOf('    ',    expPos)+    1;    	non-compiled	[CE]  variable  decPos  is  already  defined  in  method  createNumber(String)	42	None	replace
4	[BUG]  [BUGGY]  expPos  =  str.lastIndexOf('.')+  1;  [CE]  variable  decPos  is  already  defined  in  method  createNumber(String)  [FE]                NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  expPos  =  str.lastIndexOf('.')+  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	expPos  =  str.lastIndexOf('.')+  1;	  expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  variable  decPos  is  already  defined  in  method  createNumber(String)	52	None	replace
5	[BUG]  [BUGGY]  expPos  =  str.indexOf('.',  expPos)+  1;  [CE]  variable  decPos  is  already  defined  in  method  createNumber(String)  [FE]                  NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  expPos  =  str.indexOf('.',  expPos)+  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	expPos  =  str.indexOf('.',  expPos)+  1;	  expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  variable  decPos  is  already  defined  in  method  createNumber(String)	52	None	replace
6	[BUG]  [BUGGY]  expPos  =  str.indexOf('.')+  2;  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  expPos  =  str.indexOf('.')+  2;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	expPos  =  str.indexOf('.')+  2;	  expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
7	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  -  1,  expPos  +  1);  [CE]  variable  decPos  is  already  defined  in  method  createNumber(String)  [FE]              NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  mant  =  str.substring(0,  expPos  -  1,  expPos  +  1);  [BUGGY]      }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	mant  =  str.substring(0,  expPos  -  1,  expPos  +  1);	  mant    =    str.substring(0,    expPos    -    1,    expPos);    	non-compiled	[CE]  variable  decPos  is  already  defined  in  method  createNumber(String)	43	None	replace
8	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  -  1,  decPos);  [CE]  variable  decPos  is  already  defined  in  method  createNumber(String)  [FE]                NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  mant  =  str.substring(0,  expPos  -  1,  decPos);  [BUGGY]      }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	mant  =  str.substring(0,  expPos  -  1,  decPos);	  mant    =    str.substring(0,    expPos    -    1,    expPos);    	non-compiled	[CE]  variable  decPos  is  already  defined  in  method  createNumber(String)	43	None	replace
9	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  -  1,  expPos,  expPos);  [CE]  variable  decPos  is  already  defined  in  method  createNumber(String)  [FE]                  NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  mant  =  str.substring(0,  expPos  -  1,  expPos,  expPos);  [BUGGY]      }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	mant  =  str.substring(0,  expPos  -  1,  expPos,  expPos);	  mant    =    str.substring(0,    expPos    -    1,    expPos);    	non-compiled	[CE]  variable  decPos  is  already  defined  in  method  createNumber(String)	43	None	replace
10	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsUnexpectedChar(expPos,  str);  [CE]  variable  decPos  is  already  defined  in  method  createNumber(String)  [FE]            NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  aughtExceptionHandler.throwAsUnexpectedChar(expPos,  str);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	aughtExceptionHandler.throwAsUnexpectedChar(expPos,  str);	  aughtExceptionHandler.throwAsUnexpectedChar(str,    expPos);    	non-compiled	[CE]  variable  decPos  is  already  defined  in  method  createNumber(String)	11	None	replace
11	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsUnexpectedChar(str,  expPos,  expPos);  [CE]  variable  decPos  is  already  defined  in  method  createNumber(String)  [FE]              NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  aughtExceptionHandler.throwAsUnexpectedChar(str,  expPos,  expPos);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	aughtExceptionHandler.throwAsUnexpectedChar(str,  expPos,  expPos);	  aughtExceptionHandler.throwAsUnexpectedChar(str,    expPos);    	non-compiled	[CE]  variable  decPos  is  already  defined  in  method  createNumber(String)	11	None	replace
12	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsUnexpectedChar(str,  expPos,  dec);  [CE]  variable  decPos  is  already  defined  in  method  createNumber(String)  [FE]                NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  aughtExceptionHandler.throwAsUnexpectedChar(str,  expPos,  dec);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	aughtExceptionHandler.throwAsUnexpectedChar(str,  expPos,  dec);	  aughtExceptionHandler.throwAsUnexpectedChar(str,    expPos);    	non-compiled	[CE]  variable  decPos  is  already  defined  in  method  createNumber(String)	11	None	replace
13	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsUnexpectedChar(str,  decPos);  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  aughtExceptionHandler.throwAsUnexpectedChar(str,  decPos);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	aughtExceptionHandler.throwAsUnexpectedChar(str,  decPos);	  aughtExceptionHandler.throwAsUnexpectedChar(str,    expPos);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
14	[BUG]  [BUGGY]  Integer  expPos  =  str.length();  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Integer  expPos  =  str.length();  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	Integer  expPos  =  str.length();	  int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
15	[BUG]  [BUGGY]  char  expPos  =  str.length();  [CE]  variable  decPos  is  already  defined  in  method  createNumber(String)  [FE]                  NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  char  expPos  =  str.length();  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	char  expPos  =  str.length();	  int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  variable  decPos  is  already  defined  in  method  createNumber(String)	16	None	replace
16	[BUG]  [BUGGY]  nisipr  =  str.charAt(decPos  +  2);  [CE]  variable  decPos  is  already  defined  in  method  createNumber(String)  [FE]              NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  nisipr  =  str.charAt(decPos  +  2);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	nisipr  =  str.charAt(decPos  +  2);	  nisipr    =    str.charAt(decPos    +    1);    	non-compiled	[CE]  variable  decPos  is  already  defined  in  method  createNumber(String)	12	None	replace
17	[BUG]  [BUGGY]  nisipr  =  str.substring(decPos  +  1);  [CE]  variable  decPos  is  already  defined  in  method  createNumber(String)  [FE]                NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  nisipr  =  str.substring(decPos  +  1);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	nisipr  =  str.substring(decPos  +  1);	  nisipr    =    str.charAt(decPos    +    1);    	non-compiled	[CE]  variable  decPos  is  already  defined  in  method  createNumber(String)	12	None	replace
18	[BUG]  [BUGGY]  mant  =  str.substring(1,  expPos  +  1).trim();  [CE]  variable  decPos  is  already  defined  in  method  createNumber(String)  [FE]                      NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  mant  =  str.substring(1,  expPos  +  1).trim();  [BUGGY]      }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	mant  =  str.substring(1,  expPos  +  1).trim();	  mant    =    str.substring(1,    expPos    +    2);    	non-compiled	[CE]  variable  decPos  is  already  defined  in  method  createNumber(String)	31	None	replace
19	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  expPos  +  1,  decPos);  [CE]  variable  decPos  is  already  defined  in  method  createNumber(String)  [FE]                  NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  String  exp  =  str.substring(0,  expPos  +  1,  decPos);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	String  exp  =  str.substring(0,  expPos  +  1,  decPos);	  String    exp    =    str.substring(0,    expPos    +    1,    expPos);    	non-compiled	[CE]  variable  decPos  is  already  defined  in  method  createNumber(String)	47	None	replace
20	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  expPos  +  1,  str.length());  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  String  exp  =  str.substring(0,  expPos  +  1,  str.length());  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	String  exp  =  str.substring(0,  expPos  +  1,  str.length());	  String    exp    =    str.substring(0,    expPos    +    1,    expPos);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
21	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  -  1);  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  -  1);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.indexOf('.',  expPos  -  1);	  int    expPos    =    str.lastIndexOf('.',    expPos    -    1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
22	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  -  2);  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  -  2);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.lastIndexOf('.',  expPos  -  2);	  int    expPos    =    str.lastIndexOf('.',    expPos    -    1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
23	[BUG]  [BUGGY]  NumberFormatException  expPos  =  new  NumberFormatException(str.substring(expPos  +  1));  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  NumberFormatException  expPos  =  new  NumberFormatException(str.substring(expPos  +  1));  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	NumberFormatException  expPos  =  new  NumberFormatException(str.substring(expPos  +  1));	  NumberFormatException    expPos    =    new    NumberFormatException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
24	[BUG]  [BUGGY]  NumberFormatException  expPos  =  new  NumberFormatException(str.substring(expPos  +  1,  str.length()));  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  NumberFormatException  expPos  =  new  NumberFormatException(str.substring(expPos  +  1,  str.length()));  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	NumberFormatException  expPos  =  new  NumberFormatException(str.substring(expPos  +  1,  str.length()));	  NumberFormatException    expPos    =    new    NumberFormatException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
25	[BUG]  [BUGGY]  NumberFormatException  expPos  =  new  NumberFormatException(str,  DEC);  [CE]  illegal  start  of  expression  [FE]                      NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  NumberFormatException  expPos  =  new  NumberFormatException(str,  DEC);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	NumberFormatException  expPos  =  new  NumberFormatException(str,  DEC);	  NumberFormatException    expPos    =    new    NumberFormatException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
26	[BUG]  [BUGGY]  NumberFormatException  expPos  =  new  NumberFormatException(str.substring(expPos  +  1,  str.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                        NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  NumberFormatException  expPos  =  new  NumberFormatException(str.substring(expPos  +  1,  str.length()  -  1));  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	NumberFormatException  expPos  =  new  NumberFormatException(str.substring(expPos  +  1,  str.length()  -  1));	  NumberFormatException    expPos    =    new    NumberFormatException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
27	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  expPos  +  1).trim();  [CE]  illegal  start  of  expression  [FE]                      NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  String  exp  =  str.substring(0,  expPos  +  1).trim();  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	String  exp  =  str.substring(0,  expPos  +  1).trim();	  String    exp    =    str.substring(0,    expPos    +    2);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
28	[BUG]  [BUGGY]  mant  <  0  ||  expPos  >  -1)  {  if(expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  }  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  mant  <  0  ||  expPos  >  -1)  {  if(expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  }  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	mant  <  0  ||  expPos  >  -1)  {  if(expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  }	  bucket    <    0    ||    expPos    >    -1)    {    if(expPos    >    str.length())    {    throw    new    NumberFormatException(   "   "    +    str    +   "    is    not    a    valid    number.       ");    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
29	[BUG]  [BUGGY]  while(expPos  >  -1)  {  expPos  =  str.indexOf('.')/  1;  [CE]  'else'  without  'if'  [FE]              NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  while(expPos  >  -1)  {  expPos  =  str.indexOf('.')/  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	while(expPos  >  -1)  {  expPos  =  str.indexOf('.')/  1;	  while(expPos    >    -1)    {    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  'else'  without  'if'	49	None	replace
30	[BUG]  [BUGGY]  while(expPos  >  -1)  {  expPos  =  str.indexOf('.')+  2;  [CE]  'else'  without  'if'  [FE]                NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  while(expPos  >  -1)  {  expPos  =  str.indexOf('.')+  2;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	while(expPos  >  -1)  {  expPos  =  str.indexOf('.')+  2;	  while(expPos    >    -1)    {    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  'else'  without  'if'	49	None	replace
31	[BUG]  [BUGGY]  mant  <  0  ||  expPos  >  -1)  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  mant  <  0  ||  expPos  >  -1)  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	mant  <  0  ||  expPos  >  -1)  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");	  bucket    <    0    ||    expPos    >    -1)    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
32	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos  +  1);  [CE]  variable  decPos  is  already  defined  in  method  createNumber(String)  [FE]              NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos  +  1);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.lastIndexOf('.',  decPos  +  1);	  int    expPos    =    str.lastIndexOf('.',    decPos);    	non-compiled	[CE]  variable  decPos  is  already  defined  in  method  createNumber(String)	21	None	replace
33	[BUG]  [BUGGY]  while(expPos  <  str.length())  {  expPos  =  str.length();  [CE]  'else'  without  'if'  [FE]            NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  while(expPos  <  str.length())  {  expPos  =  str.length();  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	while(expPos  <  str.length())  {  expPos  =  str.length();	  while(expPos    >    -1)    {    expPos    =    str.length();    	non-compiled	[CE]  'else'  without  'if'	48	None	replace
34	[BUG]  [BUGGY]  while(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  expPos  =  str.length();  [CE]  'else'  without  'if'  [FE]              NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  while(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  expPos  =  str.length();  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	while(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  expPos  =  str.length();	  while(expPos    >    -1)    {    expPos    =    str.length();    	non-compiled	[CE]  'else'  without  'if'	48	None	replace
35	[BUG]  [BUGGY]  while(expPos  >  -1  &&  expPos  <  str.length())  {  expPos  =  str.length();  [CE]  'else'  without  'if'  [FE]                NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  while(expPos  >  -1  &&  expPos  <  str.length())  {  expPos  =  str.length();  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	while(expPos  >  -1  &&  expPos  <  str.length())  {  expPos  =  str.length();	  while(expPos    >    -1)    {    expPos    =    str.length();    	non-compiled	[CE]  'else'  without  'if'	48	None	replace
36	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  expPos  +  1)+  1;  [CE]  class,  interface,  or  enum  expected  [FE]                      NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Integer  expPos  =  str.indexOf('.',  expPos  +  1)+  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	Integer  expPos  =  str.indexOf('.',  expPos  +  1)+  1;	  Integer    expPos    =    str.indexOf('.',    expPos)+    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
37	[BUG]  [BUGGY]  Integer  expPos  =  str.lastIndexOf('.',  expPos)+  1;  [CE]  'catch'  without  'try'  [FE]                        NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Integer  expPos  =  str.lastIndexOf('.',  expPos)+  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	Integer  expPos  =  str.lastIndexOf('.',  expPos)+  1;	  Integer    expPos    =    str.indexOf('.',    expPos)+    1;    	non-compiled	[CE]  'catch'  without  'try'	2	None	replace
38	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  expPos)+  2;  [CE]  'catch'  without  'try'  [FE]                          NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Integer  expPos  =  str.indexOf('.',  expPos)+  2;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	Integer  expPos  =  str.indexOf('.',  expPos)+  2;	  Integer    expPos    =    str.indexOf('.',    expPos)+    1;    	non-compiled	[CE]  'catch'  without  'try'	2	None	replace
39	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.')/  2;  [CE]  'catch'  without  'try'  [FE]                    NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Integer  expPos  =  str.indexOf('.')/  2;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	Integer  expPos  =  str.indexOf('.')/  2;	  Integer    expPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  'catch'  without  'try'	46	None	replace
40	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  expPos)/  1;  [CE]  'catch'  without  'try'  [FE]                      NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Integer  expPos  =  str.indexOf('.',  expPos)/  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	Integer  expPos  =  str.indexOf('.',  expPos)/  1;	  Integer    expPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  'catch'  without  'try'	46	None	replace
41	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  decPos)/  1;  [CE]  'catch'  without  'try'  [FE]                        NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Integer  expPos  =  str.indexOf('.',  decPos)/  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	Integer  expPos  =  str.indexOf('.',  decPos)/  1;	  Integer    expPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  'catch'  without  'try'	46	None	replace
42	[BUG]  [BUGGY]  Integer  expPos  =  str.lastIndexOf('.')/  1;  [CE]  'catch'  without  'try'  [FE]                          NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Integer  expPos  =  str.lastIndexOf('.')/  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	Integer  expPos  =  str.lastIndexOf('.')/  1;	  Integer    expPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  'catch'  without  'try'	46	None	replace
43	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  decPos);  [CE]  variable  decPos  is  already  defined  in  method  createNumber(String)  [FE]                    NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('.',  decPos);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.indexOf('.',  decPos);	  int    expPos    =    str.indexOf('.',    expPos);    	non-compiled	[CE]  variable  decPos  is  already  defined  in  method  createNumber(String)	26	None	replace
44	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  +  2);  [CE]  variable  decPos  is  already  defined  in  method  createNumber(String)  [FE]              NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  +  2);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.lastIndexOf('.',  expPos  +  2);	  int    expPos    =    str.lastIndexOf('.',    expPos    +    1);    	non-compiled	[CE]  variable  decPos  is  already  defined  in  method  createNumber(String)	23	None	replace
45	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('  ')+  2;  [CE]  variable  decPos  is  already  defined  in  method  createNumber(String)  [FE]              NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('  ')+  2;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.lastIndexOf('  ')+  2;	  int    expPos    =    str.lastIndexOf('    ')+    1;    	non-compiled	[CE]  variable  decPos  is  already  defined  in  method  createNumber(String)	4	None	replace
46	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  2;  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  2;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.lastIndexOf('.')+  2;	  int    expPos    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
47	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  expPos  +  1);  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]                NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  expPos  +  1);  [BUGGY]      }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	mant  =  str.substring(0,  expPos  +  1,  expPos  +  1);	  mant    =    str.substring(0,    expPos    +    1,    expPos);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	18	None	replace
48	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  expPos  -  1);  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]                  NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  expPos  -  1);  [BUGGY]      }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	mant  =  str.substring(0,  expPos  +  1,  expPos  -  1);	  mant    =    str.substring(0,    expPos    +    1,    expPos);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	18	None	replace
49	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  expPos  +  2);  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]                    NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  expPos  +  2);  [BUGGY]      }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	mant  =  str.substring(0,  expPos  +  1,  expPos  +  2);	  mant    =    str.substring(0,    expPos    +    1,    expPos);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	18	None	replace
50	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  exp);  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]                NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  exp);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.lastIndexOf('.',  exp);	  int    expPos    =    str.lastIndexOf('.',    dec);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	22	None	replace
51	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC_POP  +  1);  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]            NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC_POP  +  1);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.lastIndexOf('.',  DEC_POP  +  1);	  int    expPos    =    str.lastIndexOf('.',    DEC_POP);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	39	None	replace
52	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  1);  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]              NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  1);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.lastIndexOf('.',  1);	  int    expPos    =    str.lastIndexOf('.',    DEC_POP);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	39	None	replace
53	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  DEC_POP  +  1);  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]                NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('.',  DEC_POP  +  1);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.indexOf('.',  DEC_POP  +  1);	  int    expPos    =    str.lastIndexOf('.',    DEC_POP);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	39	None	replace
54	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')+  expPos  +  1;  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]            NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('.')+  expPos  +  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.indexOf('.')+  expPos  +  1;	  int    expPos    =    str.lastIndexOf('.')+    expPos    +    1;    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	7	None	replace
55	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  expPos  +  2;  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  expPos  +  2;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.lastIndexOf('.')+  expPos  +  2;	  int    expPos    =    str.lastIndexOf('.')+    expPos    +    1;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
56	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  expPos  -  1;  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  expPos  -  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.lastIndexOf('.')+  expPos  -  1;	  int    expPos    =    str.lastIndexOf('.')+    expPos    +    1;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
57	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  expPos  -  1  +  1);  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  String  exp  =  str.substring(0,  expPos  -  1  +  1);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	String  exp  =  str.substring(0,  expPos  -  1  +  1);	  String    exp    =    str.substring(0,    expPos    -    1);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
58	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  expPos  -  2);  [CE]  variable  expPos  is  already  defined  in  method  createNumber(String)  [FE]                      NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  String  exp  =  str.substring(0,  expPos  -  2);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	String  exp  =  str.substring(0,  expPos  -  2);	  String    exp    =    str.substring(0,    expPos    -    1);    	non-compiled	[CE]  variable  expPos  is  already  defined  in  method  createNumber(String)	37	None	replace
59	[BUG]  [BUGGY]  String  exp  =  str.substring(1,  expPos  +  1);  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  String  exp  =  str.substring(1,  expPos  +  1);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	String  exp  =  str.substring(1,  expPos  +  1);	  String    exp    =    str.substring(1,    expPos);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
60	[BUG]  [BUGGY]  String  exp  =  str.substring(1,  expPos  -  1);  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  String  exp  =  str.substring(1,  expPos  -  1);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	String  exp  =  str.substring(1,  expPos  -  1);	  String    exp    =    str.substring(1,    expPos);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
61	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ')/  2;  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('  ')/  2;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.indexOf('  ')/  2;	  int    expPos    =    str.indexOf('    ')+    2;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
62	[BUG]  [BUGGY]  mant  <  0  ||  expPos  >  -1  ||  expPos  >  str.length())  {  throw  new  NumberFormatException( " ");  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  mant  <  0  ||  expPos  >  -1  ||  expPos  >  str.length())  {  throw  new  NumberFormatException( " ");  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	mant  <  0  ||  expPos  >  -1  ||  expPos  >  str.length())  {  throw  new  NumberFormatException( " ");	  bucket    <    0    ||    expPos    >    -1    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
63	[BUG]  [BUGGY]  bucket  <  0  ||  expPos  >  -1  ||  expPos  <  str.length())  {  throw  new  NumberFormatException( " ");  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  bucket  <  0  ||  expPos  >  -1  ||  expPos  <  str.length())  {  throw  new  NumberFormatException( " ");  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	bucket  <  0  ||  expPos  >  -1  ||  expPos  <  str.length())  {  throw  new  NumberFormatException( " ");	  bucket    <    0    ||    expPos    >    -1    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
64	[BUG]  [BUGGY]  bucket  <  0  ||  expPos  >  -1  ||  expPos  <  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number. ");  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  bucket  <  0  ||  expPos  >  -1  ||  expPos  <  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number. ");  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	bucket  <  0  ||  expPos  >  -1  ||  expPos  <  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number. ");	  bucket    <    0    ||    expPos    >    -1    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
65	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  +  2);  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  +  2);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.indexOf('.',  expPos  +  2);	  int    expPos    =    str.indexOf('.',    expPos    +    1);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
66	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  +  1).length();  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  +  1).length();  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.indexOf('.',  expPos  +  1).length();	  int    expPos    =    str.indexOf('.',    expPos    +    1);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
67	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC_PREFIX  +  1);  [CE]  illegal  start  of  expression  [FE]            NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC_PREFIX  +  1);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.lastIndexOf('.',  DEC_PREFIX  +  1);	  int    expPos    =    str.lastIndexOf('.',    DEC_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
68	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  DEC_PREFIX  +  1);  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('.',  DEC_PREFIX  +  1);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.indexOf('.',  DEC_PREFIX  +  1);	  int    expPos    =    str.lastIndexOf('.',    DEC_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
69	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  DEC_PREFIX);  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('.',  DEC_PREFIX);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.indexOf('.',  DEC_PREFIX);	  int    expPos    =    str.lastIndexOf('.',    DEC_PREFIX);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
70	[BUG]  [BUGGY]  Integer  expPos  =  str.lastIndexOf('.')+  2;  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Integer  expPos  =  str.lastIndexOf('.')+  2;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	Integer  expPos  =  str.lastIndexOf('.')+  2;	  Integer    expPos    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
71	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  exp);  [CE]  illegal  start  of  expression  [FE]            NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('.',  exp);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.indexOf('.',  exp);	  int    expPos    =    str.indexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
72	[BUG]  [BUGGY]  nisipr  =  str.charAt(expPos  +  2);  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  nisipr  =  str.charAt(expPos  +  2);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	nisipr  =  str.charAt(expPos  +  2);	  nisipr    =    str.charAt(expPos    +    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
73	[BUG]  [BUGGY]  nisipr  =  str.charAt(expPos  +  1,  expPos);  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  nisipr  =  str.charAt(expPos  +  1,  expPos);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	nisipr  =  str.charAt(expPos  +  1,  expPos);	  nisipr    =    str.charAt(expPos    +    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
74	[BUG]  [BUGGY]  nisipr  =  str.charAt(expPos  +  1).trim();  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  nisipr  =  str.charAt(expPos  +  1).trim();  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	nisipr  =  str.charAt(expPos  +  1).trim();	  nisipr    =    str.charAt(expPos    +    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
75	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  +  1)+  1;  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  +  1)+  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.lastIndexOf('.',  expPos  +  1)+  1;	  int    expPos    =    str.lastIndexOf('.',    expPos)+    1;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
76	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos)+  1;  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('.',  expPos)+  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.indexOf('.',  expPos)+  1;	  int    expPos    =    str.lastIndexOf('.',    expPos)+    1;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
77	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos)+  2;  [CE]  illegal  start  of  expression  [FE]                      NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos)+  2;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.lastIndexOf('.',  expPos)+  2;	  int    expPos    =    str.lastIndexOf('.',    expPos)+    1;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
78	[BUG]  [BUGGY]  while(expPos  >  -1)  {  expPos  =  str.indexOf('.',  expPos  +  1);  [CE]  'else'  without  'if'  [FE]                NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  while(expPos  >  -1)  {  expPos  =  str.indexOf('.',  expPos  +  1);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	while(expPos  >  -1)  {  expPos  =  str.indexOf('.',  expPos  +  1);	  while(expPos    >    -1)    {    expPos    =    str.indexOf('.',    expPos);    	non-compiled	[CE]  'else'  without  'if'	50	None	replace
79	[BUG]  [BUGGY]  while(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  expPos  =  str.indexOf('.',  expPos);  [CE]  'else'  without  'if'  [FE]                  NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  while(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  expPos  =  str.indexOf('.',  expPos);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	while(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  expPos  =  str.indexOf('.',  expPos);	  while(expPos    >    -1)    {    expPos    =    str.indexOf('.',    expPos);    	non-compiled	[CE]  'else'  without  'if'	50	None	replace
80	[BUG]  [BUGGY]  bucket  =  str.indexOf('.',  expPos);  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  bucket  =  str.indexOf('.',  expPos);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	bucket  =  str.indexOf('.',  expPos);	  while(expPos    >    -1)    {    expPos    =    str.indexOf('.',    expPos);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
81	[BUG]  [BUGGY]  aughtException(str  + "  is  not  a  valid  number.   ",  expPos);  [CE]  cannot  find  symbol  decPos  [FE]              NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  aughtException(str  + "  is  not  a  valid  number.   ",  expPos);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	aughtException(str  + "  is  not  a  valid  number.   ",  expPos);	  aughtException(str    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  cannot  find  symbol  decPos	51	None	replace
82	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')+  2;  [CE]  cannot  find  symbol  decPos  [FE]            NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('.')+  2;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.indexOf('.')+  2;	  int    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  cannot  find  symbol  decPos	44	None	replace
83	[BUG]  [BUGGY]  NumberFormatException.this.bucket  <  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  NumberFormatException.this.bucket  <  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	NumberFormatException.this.bucket  <  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");	  bucket    <    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	28	None	replace
84	[BUG]  [BUGGY]  mant  <  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  [CE]  >  expected  [FE]                  NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  mant  <  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	mant  <  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");	  bucket    <    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  >  expected	28	None	replace
85	[BUG]  [BUGGY]  bucket  <  0  ||  expPos  >  -1  ||  expPos  <  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  }  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  bucket  <  0  ||  expPos  >  -1  ||  expPos  <  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  }  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	bucket  <  0  ||  expPos  >  -1  ||  expPos  <  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  }	  bucket    <    0    ||    expPos    >    -1    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.       ");    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
86	[BUG]  [BUGGY]  bucket  <  0  ||  expPos  >  -1  ||  expPos  <  str.length())  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  bucket  <  0  ||  expPos  >  -1  ||  expPos  <  str.length())  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	bucket  <  0  ||  expPos  >  -1  ||  expPos  <  str.length())  {  throw  new  NumberFormatException( " ");  }	  bucket    <    0    ||    expPos    >    -1    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.       ");    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
87	[BUG]  [BUGGY]  mant  =  str.substring(1,  expPos  -  2);  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  mant  =  str.substring(1,  expPos  -  2);  [BUGGY]      }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	mant  =  str.substring(1,  expPos  -  2);	  mant    =    str.substring(1,    expPos    -    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
88	[BUG]  [BUGGY]  mant  <  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  }  [CE]  <identifier>  expected  [FE]              NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  mant  <  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  }  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	mant  <  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  }	  bucket    <    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.       ");    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
89	[BUG]  [BUGGY]  mant  <  0  ||  expPos  >  -1)  {  if(expPos  >  str.length())  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  mant  <  0  ||  expPos  >  -1)  {  if(expPos  >  str.length())  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	mant  <  0  ||  expPos  >  -1)  {  if(expPos  >  str.length())  {  throw  new  NumberFormatException( " ");  }	  bucket    <    0    ||    expPos    >    -1)    {    if(expPos    >    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.       ");    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
90	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('  ')/  1;  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('  ')/  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.lastIndexOf('  ')/  1;	  int    expPos    =    str.indexOf('    ')/    1;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
91	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ',  expPos)/  1;  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('  ',  expPos)/  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.indexOf('  ',  expPos)/  1;	  int    expPos    =    str.indexOf('    ')/    1;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
92	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ')/  4;  [CE]  illegal  start  of  expression  [FE]                      NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('  ')/  4;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.indexOf('  ')/  4;	  int    expPos    =    str.indexOf('    ')/    1;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
93	[BUG]  [BUGGY]  mant  <  0  ||  expPos  >  -1)  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  }  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  mant  <  0  ||  expPos  >  -1)  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  }  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	mant  <  0  ||  expPos  >  -1)  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  }	  bucket    <    0    ||    expPos    >    -1)    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.       ");    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
94	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('  ')+  2;  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Integer  expPos  =  str.indexOf('  ')+  2;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	Integer  expPos  =  str.indexOf('  ')+  2;	  Integer    expPos    =    str.indexOf('    ')+    1;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
95	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('  ')/  1;  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Integer  expPos  =  str.indexOf('  ')/  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	Integer  expPos  =  str.indexOf('  ')/  1;	  Integer    expPos    =    str.indexOf('    ')+    1;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
96	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('  ',  expPos)+  1;  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Integer  expPos  =  str.indexOf('  ',  expPos)+  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	Integer  expPos  =  str.indexOf('  ',  expPos)+  1;	  Integer    expPos    =    str.indexOf('    ')+    1;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
97	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ',  DEC_POT)+  1;  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('  ',  DEC_POT)+  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.indexOf('  ',  DEC_POT)+  1;	  int    expPos    =    str.indexOf('    ',    expPos)+    1;    	non-compiled	[CE]  not  a  statement	42	None	replace
98	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  expPos  -  1).trim();  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  String  exp  =  str.substring(0,  expPos  -  1).trim();  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	String  exp  =  str.substring(0,  expPos  -  1).trim();	  String    exp    =    str.substring(0,    expPos    -    1);    	non-compiled	[CE]  not  a  statement	37	None	replace
99	[BUG]  [BUGGY]  nisipr  =  str.charAt(decPos  +  1).trim();  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  nisipr  =  str.charAt(decPos  +  1).trim();  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	nisipr  =  str.charAt(decPos  +  1).trim();	  nisipr    =    str.charAt(decPos    +    1);    	non-compiled	[CE]  not  a  statement	12	None	replace
100	[BUG]  [BUGGY]  bucket  =  str.indexOf('.')+  1;  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  bucket  =  str.indexOf('.')+  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	bucket  =  str.indexOf('.')+  1;	  while(expPos    >    -1)    {    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	49	None	replace
101	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')+  decPos;  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('.')+  decPos;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.indexOf('.')+  decPos;	  int    expPos    =    str.indexOf('.')+    expPos;    	non-compiled	[CE]  not  a  statement	9	None	replace
102	[BUG]  [BUGGY]  aughtException(null,  str  + "  is  not  a  valid  number.   ");  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  aughtException(null,  str  + "  is  not  a  valid  number.   ");  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	aughtException(null,  str  + "  is  not  a  valid  number.   ");	  aughtException(str    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
103	[BUG]  [BUGGY]  expPos  =  str.indexOf('.',  expPos);  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  expPos  =  str.indexOf('.',  expPos);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	expPos  =  str.indexOf('.',  expPos);	  while(expPos    >    -1)    {    expPos    =    str.indexOf('.',    expPos);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
104	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  decPos);  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  decPos);  [BUGGY]      }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	mant  =  str.substring(0,  expPos  +  1,  decPos);	  mant    =    str.substring(0,    expPos    +    1,    expPos);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
105	[BUG]  [BUGGY]  mant  =  str.substring(1,  expPos  -  1  +  1);  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  mant  =  str.substring(1,  expPos  -  1  +  1);  [BUGGY]      }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	mant  =  str.substring(1,  expPos  -  1  +  1);	  mant    =    str.substring(1,    expPos    -    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
106	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsUnexpectedChar(dec,  expPos);  [CE]  illegal  start  of  expression  [FE]            NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  aughtExceptionHandler.throwAsUnexpectedChar(dec,  expPos);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	aughtExceptionHandler.throwAsUnexpectedChar(dec,  expPos);	  aughtExceptionHandler.throwAsUnexpectedChar(str,    expPos);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
107	[BUG]  [BUGGY]  if(expPos  >  -1)  {  aughtExceptionHandler.throwAsUnexpectedChar(str,  expPos);  }  else  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  if(expPos  >  -1)  {  aughtExceptionHandler.throwAsUnexpectedChar(str,  expPos);  }  else  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	if(expPos  >  -1)  {  aughtExceptionHandler.throwAsUnexpectedChar(str,  expPos);  }  else  {  throw  new  NumberFormatException( " ");  }	  aughtExceptionHandler.throwAsUnexpectedChar(str,    expPos);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
108	[BUG]  [BUGGY]  if(expPos  >  -1)  {  aughtExceptionHandler.throwAsUnexpectedChar(str,  expPos);  }  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  if(expPos  >  -1)  {  aughtExceptionHandler.throwAsUnexpectedChar(str,  expPos);  }  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	if(expPos  >  -1)  {  aughtExceptionHandler.throwAsUnexpectedChar(str,  expPos);  }	  aughtExceptionHandler.throwAsUnexpectedChar(str,    expPos);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
109	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  DEC_POP);  [CE]  illegal  start  of  expression  [FE]            NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('.',  DEC_POP);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.indexOf('.',  DEC_POP);	  int    expPos    =    str.indexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
110	[BUG]  [BUGGY]  NumberFormatException  expPos  =  new  NumberFormatException( "Expected  number: ");  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  NumberFormatException  expPos  =  new  NumberFormatException( "Expected  number: ");  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	NumberFormatException  expPos  =  new  NumberFormatException( "Expected  number: ");	  NumberFormatException    expPos    =    new    NumberFormatException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
111	[BUG]  [BUGGY]  NumberFormatException  expPos  =  new  NumberFormatException( "Expected  numeric  number: ");  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  NumberFormatException  expPos  =  new  NumberFormatException( "Expected  numeric  number: ");  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	NumberFormatException  expPos  =  new  NumberFormatException( "Expected  numeric  number: ");	  NumberFormatException    expPos    =    new    NumberFormatException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
112	[BUG]  [BUGGY]  NumberFormatException  expPos  =  new  NumberFormatException( "Expected  number: "  +  str);  [CE]  ')'  expected  [FE]                      NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  NumberFormatException  expPos  =  new  NumberFormatException( "Expected  number: "  +  str);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	NumberFormatException  expPos  =  new  NumberFormatException( "Expected  number: "  +  str);	  NumberFormatException    expPos    =    new    NumberFormatException(   "   ");    	non-compiled	[CE]  ')'  expected	41	None	replace
113	[BUG]  [BUGGY]  NumberFormatException  expPos  =  new  NumberFormatException( "Expected  numeric  number.   ");  [CE]  ')'  expected  [FE]                        NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  NumberFormatException  expPos  =  new  NumberFormatException( "Expected  numeric  number.   ");  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	NumberFormatException  expPos  =  new  NumberFormatException( "Expected  numeric  number.   ");	  NumberFormatException    expPos    =    new    NumberFormatException(   "   ");    	non-compiled	[CE]  ')'  expected	41	None	replace
114	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  expPos  +  1,  endPos);  [CE]  ')'  expected  [FE]                  NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  String  exp  =  str.substring(0,  expPos  +  1,  endPos);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	String  exp  =  str.substring(0,  expPos  +  1,  endPos);	  String    exp    =    str.substring(0,    expPos    +    1,    expPos);    	non-compiled	[CE]  ')'  expected	47	None	replace
115	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  expPos  +  1,  DEC_SIZE);  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  String  exp  =  str.substring(0,  expPos  +  1,  DEC_SIZE);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	String  exp  =  str.substring(0,  expPos  +  1,  DEC_SIZE);	  String    exp    =    str.substring(0,    expPos    +    1,    expPos);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
116	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  -  1  +  1);  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  -  1  +  1);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.lastIndexOf('.',  expPos  -  1  +  1);	  int    expPos    =    str.lastIndexOf('.',    expPos    -    1);    	non-compiled	[CE]  ')'  expected	24	None	replace
117	[BUG]  [BUGGY]  bucket  <  str.length())  {  throw  new  NumberFormatException( " "  +  str  + "  is  not  a  valid  number.   ");  [CE]  >  expected  [FE]                NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  bucket  <  str.length())  {  throw  new  NumberFormatException( " "  +  str  + "  is  not  a  valid  number.   ");  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	bucket  <  str.length())  {  throw  new  NumberFormatException( " "  +  str  + "  is  not  a  valid  number.   ");	  bucket    <    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  >  expected	28	None	replace
118	[BUG]  [BUGGY]  expPos  =  str.indexOf(',')+  1;  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  expPos  =  str.indexOf(',')+  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	expPos  =  str.indexOf(',')+  1;	  expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  ')'  expected	52	None	replace
119	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  DEC_POP)/  1;  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Integer  expPos  =  str.indexOf('.',  DEC_POP)/  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	Integer  expPos  =  str.indexOf('.',  DEC_POP)/  1;	  Integer    expPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
120	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  expPos  +  1  -  decPos);  [CE]  ')'  expected  [FE]                  NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  String  exp  =  str.substring(0,  expPos  +  1  -  decPos);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	String  exp  =  str.substring(0,  expPos  +  1  -  decPos);	  String    exp    =    str.substring(0,    expPos    +    1);    	non-compiled	[CE]  ')'  expected	36	None	replace
121	[BUG]  [BUGGY]  bucket  <  str.length())  {  throw  new  NumberFormatException( " "  +  str  + "  is  not  a  valid  number.   ");  }  [CE]  <identifier>  expected  [FE]              NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  bucket  <  str.length())  {  throw  new  NumberFormatException( " "  +  str  + "  is  not  a  valid  number.   ");  }  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	bucket  <  str.length())  {  throw  new  NumberFormatException( " "  +  str  + "  is  not  a  valid  number.   ");  }	  bucket    <    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.       ");    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
122	[BUG]  [BUGGY]  String  exp  =  str.substring(1,  expPos  +  2);  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  String  exp  =  str.substring(1,  expPos  +  2);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	String  exp  =  str.substring(1,  expPos  +  2);	  String    exp    =    str.substring(1,    expPos);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
123	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  expPos)+  0;  [CE]  illegal  start  of  expression  [FE]                      NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Integer  expPos  =  str.indexOf('.',  expPos)+  0;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	Integer  expPos  =  str.indexOf('.',  expPos)+  0;	  Integer    expPos    =    str.indexOf('.',    expPos)+    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
124	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  dec)/  1;  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Integer  expPos  =  str.indexOf('.',  dec)/  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	Integer  expPos  =  str.indexOf('.',  dec)/  1;	  Integer    expPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
125	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  decPos  -  1)/  1;  [CE]  illegal  start  of  expression  [FE]                      NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  Integer  expPos  =  str.indexOf('.',  decPos  -  1)/  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	Integer  expPos  =  str.indexOf('.',  decPos  -  1)/  1;	  Integer    expPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
126	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  expPos).trim();  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  expPos).trim();  [BUGGY]      }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	mant  =  str.substring(0,  expPos  +  1,  expPos).trim();	  mant    =    str.substring(0,    expPos    +    1).trim();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
127	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos)/  1;  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos)/  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.lastIndexOf('.',  expPos)/  1;	  int    expPos    =    str.lastIndexOf('.',    expPos)+    1;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
128	[BUG]  [BUGGY]  nisipr  =  str.charAt(decPos  +  1,  expPos);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  nisipr  =  str.charAt(decPos  +  1,  expPos);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	nisipr  =  str.charAt(decPos  +  1,  expPos);	  nisipr    =    str.charAt(decPos    +    1);    	non-compiled	[CE]  not  a  statement	12	None	replace
129	[BUG]  [BUGGY]  mant  <  0  ||  expPos  >  -1  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  mant  <  0  ||  expPos  >  -1  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number. ");  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	mant  <  0  ||  expPos  >  -1  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number. ");	  bucket    <    0    ||    expPos    >    -1    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	35	None	replace
130	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ',  expPos)/  2;  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('  ',  expPos)/  2;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.indexOf('  ',  expPos)/  2;	  int    expPos    =    str.indexOf('    ')/    1;    	non-compiled	[CE]  not  a  statement	6	None	replace
131	[BUG]  [BUGGY]  because(expPos  >  -1)  {  expPos  =  str.indexOf('.',  expPos);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  because(expPos  >  -1)  {  expPos  =  str.indexOf('.',  expPos);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	because(expPos  >  -1)  {  expPos  =  str.indexOf('.',  expPos);	  while(expPos    >    -1)    {    expPos    =    str.indexOf('.',    expPos);    	non-compiled	[CE]  not  a  statement	50	None	replace
132	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  expPos  -  1,  expPos);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  String  exp  =  str.substring(0,  expPos  -  1,  expPos);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	String  exp  =  str.substring(0,  expPos  -  1,  expPos);	  String    exp    =    str.substring(0,    expPos    -    1);    	non-compiled	[CE]  not  a  statement	37	None	replace
133	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  expPos  +  1,  expPos  -  1);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  String  exp  =  str.substring(0,  expPos  +  1,  expPos  -  1);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	String  exp  =  str.substring(0,  expPos  +  1,  expPos  -  1);	  String    exp    =    str.substring(0,    expPos    +    1,    expPos);    	non-compiled	[CE]  not  a  statement	47	None	replace
134	[BUG]  [BUGGY]  NumberFormatException  expPos  =  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  NumberFormatException  expPos  =  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	NumberFormatException  expPos  =  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");	  NumberFormatException    expPos    =    new    NumberFormatException(   "   ");    	non-compiled	[CE]  not  a  statement	41	None	replace
135	[BUG]  [BUGGY]  NumberFormatException  expPos  =  new  NumberFormatException(dec);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  NumberFormatException  expPos  =  new  NumberFormatException(dec);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	NumberFormatException  expPos  =  new  NumberFormatException(dec);	  NumberFormatException    expPos    =    new    NumberFormatException(   "   ");    	non-compiled	[CE]  not  a  statement	41	None	replace
136	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')-  1;  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.')-  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.lastIndexOf('.')-  1;	  int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  not  a  statement	16	None	replace
137	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos)-  1;  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos)-  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.lastIndexOf('.',  decPos)-  1;	  int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  not  a  statement	16	None	replace
138	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')-  1;  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('.')-  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.indexOf('.')-  1;	  int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  not  a  statement	16	None	replace
139	[BUG]  [BUGGY]  bucket  <  expPos)  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  }  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  bucket  <  expPos)  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  }  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	bucket  <  expPos)  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  }	  bucket    <    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.       ");    }    	non-compiled	[CE]  not  a  statement	27	None	replace
140	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ',  expPos)+  2;  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('  ',  expPos)+  2;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.indexOf('  ',  expPos)+  2;	  int    expPos    =    str.indexOf('    ')+    2;    	non-compiled	[CE]  not  a  statement	5	None	replace
141	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')/  1;  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.')/  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.lastIndexOf('.')/  1;	  int    expPos    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	8	None	replace
142	[BUG]  [BUGGY]  expPos  =  str.length();  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  expPos  =  str.length();  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	expPos  =  str.length();	  while(expPos    >    -1)    {    expPos    =    str.length();    	non-compiled	[CE]  not  a  statement	48	None	replace
143	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')/  1;  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('.')/  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.indexOf('.')/  1;	  int    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	44	None	replace
144	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  +  1,  expPos);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  +  1,  expPos);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.indexOf('.',  expPos  +  1,  expPos);	  int    expPos    =    str.indexOf('.',    expPos    +    1);    	non-compiled	[CE]  not  a  statement	25	None	replace
145	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  dec  +  1);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  dec  +  1);  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.lastIndexOf('.',  dec  +  1);	  int    expPos    =    str.lastIndexOf('.',    dec);    	non-compiled	[CE]  not  a  statement	22	None	replace
146	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')/  expPos;  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('.')/  expPos;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.indexOf('.')/  expPos;	  int    expPos    =    str.indexOf('.')+    expPos;    	non-compiled	[CE]  not  a  statement	9	None	replace
147	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ',  dec)+  1;  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }      [BUGGY]  int  expPos  =  str.indexOf('  ',  dec)+  1;  [BUGGY]      mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	int  expPos  =  str.indexOf('  ',  dec)+  1;	  int    expPos    =    str.indexOf('    ',    expPos)+    1;    	non-compiled	[CE]  not  a  statement	42	None	replace
