bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    int  decPos  =  str.length();  [CE]  illegal  start  of  type  [FE]    NumberFormatException  [CONTEXT]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [BUGGY]    int  decPos  =  str.length();  [BUGGY]  if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	502	504	1	replace	    int  decPos  =  str.length();		non-compiled	[CE]  illegal  start  of  type	82	None	add
2	[BUG]  [BUGGY]    Integer  dec  =  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  type  [FE]      NumberFormatException  [CONTEXT]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [BUGGY]    Integer  dec  =  str.substring(0,  str.length()  -  1);  [BUGGY]  if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	502	504	1	replace	    Integer  dec  =  str.substring(0,  str.length()  -  1);		non-compiled	[CE]  illegal  start  of  type	82	None	add
3	[BUG]  [BUGGY]    String  dec  =  numeric.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  type  [FE]        NumberFormatException  [CONTEXT]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [BUGGY]    String  dec  =  numeric.substring(0,  str.length()  -  1);  [BUGGY]  if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	502	504	1	replace	    String  dec  =  numeric.substring(0,  str.length()  -  1);		non-compiled	[CE]  illegal  start  of  type	82	None	add
4	[BUG]  [BUGGY]    int  decPos  =  str.lastIndexOf('.');  [CE]  illegal  start  of  type  [FE]          NumberFormatException  [CONTEXT]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [BUGGY]    int  decPos  =  str.lastIndexOf('.');  [BUGGY]  if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	502	504	1	replace	    int  decPos  =  str.lastIndexOf('.');		non-compiled	[CE]  illegal  start  of  type	82	None	add
5	[BUG]  [BUGGY]    int  decPos  =  str.indexOf('.')+  1;  [CE]  illegal  start  of  type  [FE]            NumberFormatException  [CONTEXT]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [BUGGY]    int  decPos  =  str.indexOf('.')+  1;  [BUGGY]  if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	502	504	1	replace	    int  decPos  =  str.indexOf('.')+  1;		non-compiled	[CE]  illegal  start  of  type	82	None	add
6	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  [CE]  illegal  start  of  type  [FE]    NumberFormatException  [CONTEXT]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  [BUGGY]  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	502	504	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {	if  (dec  ==  null    &&  exp  ==  null      &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  	non-compiled	[CE]  illegal  start  of  type	81	None	replace
7	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  [CE]  illegal  start  of  type  [FE]      NumberFormatException  [CONTEXT]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  [BUGGY]  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	502	504	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {	if  (dec  ==  null    &&  exp  ==  null      &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  	non-compiled	[CE]  illegal  start  of  type	81	None	replace
8	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {  [CE]  illegal  start  of  type  [FE]        NumberFormatException  [CONTEXT]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {  [BUGGY]  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	502	504	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {	if  (dec  ==  null    &&  exp  ==  null      &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  	non-compiled	[CE]  illegal  start  of  type	81	None	replace
9	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  [CE]  illegal  start  of  type  [FE]    NumberFormatException  [CONTEXT]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  [BUGGY]  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	502	504	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {	if  (dec  ==  null    &&  exp  ==  null      &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  	non-compiled	[CE]  illegal  start  of  type	81	None	replace
10	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  [CE]  illegal  start  of  type  [FE]      NumberFormatException  [CONTEXT]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  [BUGGY]  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	502	504	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {	if  (dec  ==  null    &&  exp  ==  null      &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  	non-compiled	[CE]  illegal  start  of  type	81	None	replace
11	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))))  {  [CE]  illegal  start  of  type  [FE]        NumberFormatException  [CONTEXT]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))))  {  [BUGGY]  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	502	504	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))))  {	if  (dec  ==  null    &&  exp  ==  null      &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  	non-compiled	[CE]  illegal  start  of  type	81	None	replace
12	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(2)))  {  [CE]  illegal  start  of  type  [FE]          NumberFormatException  [CONTEXT]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(2)))  {  [BUGGY]  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	502	504	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(2)))  {	if  (dec  ==  null    &&  exp  ==  null      &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  	non-compiled	[CE]  illegal  start  of  type	81	None	replace
13	[BUG]  [BUGGY]    Integer  dec  =  createInteger(numeric);  [CE]  illegal  start  of  type  [FE]    NumberFormatException  [CONTEXT]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [BUGGY]    Integer  dec  =  createInteger(numeric);  [BUGGY]  if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	502	504	1	replace	    Integer  dec  =  createInteger(numeric);		non-compiled	[CE]  illegal  start  of  type	82	None	add
14	[BUG]  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp);  [CE]  illegal  start  of  type  [FE]      NumberFormatException  [CONTEXT]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp);  [BUGGY]  if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	502	504	1	replace	    boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp);		non-compiled	[CE]  illegal  start  of  type	82	None	add
15	[BUG]  [BUGGY]    boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(numeric);  [CE]  illegal  start  of  type  [FE]        NumberFormatException  [CONTEXT]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [BUGGY]    boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(numeric);  [BUGGY]  if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	502	504	1	replace	    boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(numeric);		non-compiled	[CE]  illegal  start  of  type	82	None	add
16	[BUG]  [BUGGY]    String  dec  =  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  type  [FE]          NumberFormatException  [CONTEXT]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [BUGGY]    String  dec  =  str.substring(0,  str.length()  -  1);  [BUGGY]  if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	502	504	1	replace	    String  dec  =  str.substring(0,  str.length()  -  1);		non-compiled	[CE]  illegal  start  of  type	82	None	add
17	[BUG]  [BUGGY]    Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  decPos)));  [CE]  illegal  start  of  type  [FE]    NumberFormatException  [CONTEXT]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [BUGGY]    Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  decPos)));  [BUGGY]  if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	502	504	1	replace	    Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  decPos)));		non-compiled	[CE]  illegal  start  of  type	82	None	add
18	[BUG]  [BUGGY]    Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()));  [CE]  illegal  start  of  type  [FE]      NumberFormatException  [CONTEXT]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [BUGGY]    Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()));  [BUGGY]  if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	502	504	1	replace	    Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()));		non-compiled	[CE]  illegal  start  of  type	82	None	add
19	[BUG]  [BUGGY]    Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1));  [CE]  illegal  start  of  type  [FE]        NumberFormatException  [CONTEXT]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [BUGGY]    Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1));  [BUGGY]  if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	502	504	1	replace	    Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1));		non-compiled	[CE]  illegal  start  of  type	82	None	add
20	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {  [CE]  illegal  start  of  type  [FE]    NumberFormatException  [CONTEXT]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {  [BUGGY]  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	502	504	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {	if  (dec  ==  null    &&  exp  ==  null      &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  	non-compiled	[CE]  illegal  start  of  type	81	None	replace
21	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  [CE]  illegal  start  of  type  [FE]      NumberFormatException  [CONTEXT]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  [BUGGY]  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	502	504	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {	if  (dec  ==  null    &&  exp  ==  null      &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  	non-compiled	[CE]  illegal  start  of  type	81	None	replace
