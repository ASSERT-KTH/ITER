bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos  +  1);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos  +  1);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	int  decPos  =  str.lastIndexOf('.',  expPos  +  1);	  int    decPos    =    str.lastIndexOf('.',    expPos);    	non-compiled	[CE]  not  a  statement	21	None	replace
2	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos  -  1);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos  -  1);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	int  decPos  =  str.lastIndexOf('.',  expPos  -  1);	  int    decPos    =    str.lastIndexOf('.',    expPos);    	non-compiled	[CE]  not  a  statement	21	None	replace
3	[BUG]  [BUGGY]  }  else  if(dec  ==  null)  {  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  }  else  if(dec  ==  null)  {  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	}  else  if(dec  ==  null)  {	  }    else    if(nfe    ==    null)    {    	non-compiled	[CE]  not  a  statement	48	None	replace
4	[BUG]  [BUGGY]  }  else  if(dec  ==  null  ||  exp  ==  null)  {  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  }  else  if(dec  ==  null  ||  exp  ==  null)  {  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	}  else  if(dec  ==  null  ||  exp  ==  null)  {	  }    else    if(nfe    ==    null)    {    	non-compiled	[CE]  not  a  statement	48	None	replace
5	[BUG]  [BUGGY]  }  catch(NoSuchElementException  e)  {  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  }  catch(NoSuchElementException  e)  {  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	}  catch(NoSuchElementException  e)  {	  }    catch(NoSuchElementException    nfe)    {    	non-compiled	[CE]  not  a  statement	20	None	replace
6	[BUG]  [BUGGY]  dec  =  str.substring(expPos  +  1,  str.length()  -  1);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  dec  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	dec  =  str.substring(expPos  +  1,  str.length()  -  1);	  dec    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	27	None	replace
7	[BUG]  [BUGGY]  dec  =  str.substring(expPos  +  1,  str.length()  -  2);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  dec  =  str.substring(expPos  +  1,  str.length()  -  2);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	dec  =  str.substring(expPos  +  1,  str.length()  -  2);	  dec    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	27	None	replace
8	[BUG]  [BUGGY]  Integer  str  =  createInteger(dec);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  Integer  str  =  createInteger(dec);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	Integer  str  =  createInteger(dec);	  Integer    str    =    createInteger(str);    	non-compiled	[CE]  not  a  statement	15	None	replace
9	[BUG]  [BUGGY]  Integer  str  =  createInteger(0);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  Integer  str  =  createInteger(0);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	Integer  str  =  createInteger(0);	  Integer    str    =    createInteger(str);    	non-compiled	[CE]  not  a  statement	15	None	replace
10	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.length());  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  Integer  str  =  createInteger(str.length());  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	Integer  str  =  createInteger(str.length());	  Integer    str    =    createInteger(str);    	non-compiled	[CE]  not  a  statement	15	None	replace
11	[BUG]  [BUGGY]  Integer  str  =  createBigInteger(str);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  Integer  str  =  createBigInteger(str);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	Integer  str  =  createBigInteger(str);	  Integer    str    =    createInteger(str);    	non-compiled	[CE]  not  a  statement	15	None	replace
12	[BUG]  [BUGGY]  return  createLong(str);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  return  createLong(str);  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	return  createLong(str);	  return    createBigInteger(str);    	non-compiled	[CE]  not  a  statement	40	None	replace
13	[BUG]  [BUGGY]  return  createInteger(str);  [CE]  not  a  statement  [FE]                        NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  return  createInteger(str);  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	return  createInteger(str);	  return    createBigInteger(str);    	non-compiled	[CE]  not  a  statement	40	None	replace
14	[BUG]  [BUGGY]  return  createDouble(str);  [CE]  not  a  statement  [FE]                          NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  return  createDouble(str);  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	return  createDouble(str);	  return    createBigInteger(str);    	non-compiled	[CE]  not  a  statement	40	None	replace
15	[BUG]  [BUGGY]  NeighborDecimal  d  =  createNeighborDecimal(dec);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  NeighborDecimal  d  =  createNeighborDecimal(dec);  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	NeighborDecimal  d  =  createNeighborDecimal(dec);	  NeighborDecimal    d    =    createNeighborDecimal(str);    	non-compiled	[CE]  not  a  statement	38	None	replace
16	[BUG]  [BUGGY]  NeighborDecimal  d  =  createNumberDecimal(str);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  NeighborDecimal  d  =  createNumberDecimal(str);  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	NeighborDecimal  d  =  createNumberDecimal(str);	  NeighborDecimal    d    =    createNeighborDecimal(str);    	non-compiled	[CE]  not  a  statement	38	None	replace
17	[BUG]  [BUGGY]  NeighborDecimal  d  =  createNeighborDecimal(str,  dec);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  NeighborDecimal  d  =  createNeighborDecimal(str,  dec);  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	NeighborDecimal  d  =  createNeighborDecimal(str,  dec);	  NeighborDecimal    d    =    createNeighborDecimal(str);    	non-compiled	[CE]  not  a  statement	38	None	replace
18	[BUG]  [BUGGY]  NeighborDecimal  d  =  createNeighborDecimal(str,  expPos);  [CE]  not  a  statement  [FE]                        NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  NeighborDecimal  d  =  createNeighborDecimal(str,  expPos);  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	NeighborDecimal  d  =  createNeighborDecimal(str,  expPos);	  NeighborDecimal    d    =    createNeighborDecimal(str);    	non-compiled	[CE]  not  a  statement	38	None	replace
19	[BUG]  [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  return  createNull(str);  }  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  return  createNull(str);  }  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	}  else  if(dec  ==  null  &&  exp  ==  null)  {  return  createNull(str);  }	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    return    createNumber(str);    }    	non-compiled	[CE]  not  a  statement	3	None	replace
20	[BUG]  [BUGGY]  }  else  if(dec  ==  null  &&  exp!=  null)  {  return  createNumber(str);  }  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  }  else  if(dec  ==  null  &&  exp!=  null)  {  return  createNumber(str);  }  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	}  else  if(dec  ==  null  &&  exp!=  null)  {  return  createNumber(str);  }	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    return    createNumber(str);    }    	non-compiled	[CE]  not  a  statement	3	None	replace
21	[BUG]  [BUGGY]  result  =  str.substring(expPos  +  1,  str.length()  -  1);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  result  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	result  =  str.substring(expPos  +  1,  str.length()  -  1);	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    try    {    return    createBigInteger(str);    }    catch(NumberFormatException    nfe)    {    return    createLong(str);    }    	non-compiled	[CE]  not  a  statement	12	None	replace
22	[BUG]  [BUGGY]  result  =  str.substring(expPos  +  1,  str.length());  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  result  =  str.substring(expPos  +  1,  str.length());  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	result  =  str.substring(expPos  +  1,  str.length());	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    try    {    return    createBigInteger(str);    }    catch(NumberFormatException    nfe)    {    return    createLong(str);    }    	non-compiled	[CE]  not  a  statement	12	None	replace
23	[BUG]  [BUGGY]  result  =  str.substring(decPos  +  1,  str.length()  -  1);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  result  =  str.substring(decPos  +  1,  str.length()  -  1);  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	result  =  str.substring(decPos  +  1,  str.length()  -  1);	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    try    {    return    createBigInteger(str);    }    catch(NumberFormatException    nfe)    {    return    createLong(str);    }    	non-compiled	[CE]  not  a  statement	12	None	replace
24	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_POP  +  1);  [CE]  not  a  statement  [FE]                        NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_POP  +  1);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	int  decPos  =  str.lastIndexOf('.',  DEC_POP  +  1);	  int    decPos    =    str.lastIndexOf('.',    DEC_POP);    	non-compiled	[CE]  not  a  statement	24	None	replace
25	[BUG]  [BUGGY]  NullableString  str  =  str.substring(expPos  +  1,  str.length());  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  NullableString  str  =  str.substring(expPos  +  1,  str.length());  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	NullableString  str  =  str.substring(expPos  +  1,  str.length());	  NullableString    str    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  not  a  statement	49	None	replace
26	[BUG]  [BUGGY]  NullableString  str  =  str.substring(0,  expPos);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  NullableString  str  =  str.substring(0,  expPos);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	NullableString  str  =  str.substring(0,  expPos);	  NullableString    str    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  not  a  statement	49	None	replace
27	[BUG]  [BUGGY]  NullableString  str  =  str.substring(decPos  +  1,  str.length());  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  NullableString  str  =  str.substring(decPos  +  1,  str.length());  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	NullableString  str  =  str.substring(decPos  +  1,  str.length());	  NullableString    str    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  not  a  statement	49	None	replace
28	[BUG]  [BUGGY]  NullableString  str  =  str.substring(decPos  +  1,  expPos  +  1);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  NullableString  str  =  str.substring(decPos  +  1,  expPos  +  1);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	NullableString  str  =  str.substring(decPos  +  1,  expPos  +  1);	  NullableString    str    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  not  a  statement	49	None	replace
29	[BUG]  [BUGGY]  char  decPos  =  exp.length();  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  char  decPos  =  exp.length();  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	char  decPos  =  exp.length();	  int    decPos    =    exp.length();    	non-compiled	[CE]  not  a  statement	45	None	replace
30	[BUG]  [BUGGY]  int  expPos  =  str.length();  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  int  expPos  =  str.length();  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	int  expPos  =  str.length();	  int    decPos    =    exp.length();    	non-compiled	[CE]  not  a  statement	45	None	replace
31	[BUG]  [BUGGY]  long  decPos  =  exp.length();  [CE]  not  a  statement  [FE]                        NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  long  decPos  =  exp.length();  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	long  decPos  =  exp.length();	  int    decPos    =    exp.length();    	non-compiled	[CE]  not  a  statement	45	None	replace
32	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  exp);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  int  decPos  =  str.indexOf('.',  exp);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	int  decPos  =  str.indexOf('.',  exp);	  int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	23	None	replace
33	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  +  1);  [CE]  not  a  statement  [FE]                        NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  +  1);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	int  decPos  =  str.indexOf('.',  expPos  +  1);	  int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	23	None	replace
34	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp!=  null)  {  return  createLong(str);  }  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  if(dec  ==  null  &&  exp!=  null)  {  return  createLong(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	if(dec  ==  null  &&  exp!=  null)  {  return  createLong(str);  }	  if(dec    ==    null    &&    exp!=    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  not  a  statement	16	None	replace
35	[BUG]  [BUGGY]  Integer  dec  =  str.substring(expPos  +  1,  str.length()  -  1);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  Integer  dec  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	Integer  dec  =  str.substring(expPos  +  1,  str.length()  -  1);	  Integer    dec    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	28	None	replace
36	[BUG]  [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  str.length());  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  str.length());  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	Integer  dec  =  str.substring(decPos  +  1,  str.length());	  Integer    dec    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	28	None	replace
37	[BUG]  [BUGGY]  Integer  dec  =  str.substring(expPos  +  1,  str.length()  -  2);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  Integer  dec  =  str.substring(expPos  +  1,  str.length()  -  2);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	Integer  dec  =  str.substring(expPos  +  1,  str.length()  -  2);	  Integer    dec    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	28	None	replace
38	[BUG]  [BUGGY]  Integer  dec  =  str.substring(expPos  +  1,  str.length()  +  1);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  Integer  dec  =  str.substring(expPos  +  1,  str.length()  +  1);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	Integer  dec  =  str.substring(expPos  +  1,  str.length()  +  1);	  Integer    dec    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	28	None	replace
39	[BUG]  [BUGGY]  NeighborDecimal  dec  =  createNumberDecimal(str);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  NeighborDecimal  dec  =  createNumberDecimal(str);  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	NeighborDecimal  dec  =  createNumberDecimal(str);	  NeighborDecimal    dec    =    createNeighborDecimal(str);    	non-compiled	[CE]  not  a  statement	39	None	replace
40	[BUG]  [BUGGY]  NeighborDecimal  dec  =  createNeighborDecimal(dec);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  NeighborDecimal  dec  =  createNeighborDecimal(dec);  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	NeighborDecimal  dec  =  createNeighborDecimal(dec);	  NeighborDecimal    dec    =    createNeighborDecimal(str);    	non-compiled	[CE]  not  a  statement	39	None	replace
41	[BUG]  [BUGGY]  NeighborDecimal  dec  =  createNeighborDecimal(decPos);  [CE]  not  a  statement  [FE]                        NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  NeighborDecimal  dec  =  createNeighborDecimal(decPos);  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	NeighborDecimal  dec  =  createNeighborDecimal(decPos);	  NeighborDecimal    dec    =    createNeighborDecimal(str);    	non-compiled	[CE]  not  a  statement	39	None	replace
42	[BUG]  [BUGGY]  NeighborDecimal  dec  =  createNeighborDecimal(str,  decPos);  [CE]  not  a  statement  [FE]                          NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  NeighborDecimal  dec  =  createNeighborDecimal(str,  decPos);  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	NeighborDecimal  dec  =  createNeighborDecimal(str,  decPos);	  NeighborDecimal    dec    =    createNeighborDecimal(str);    	non-compiled	[CE]  not  a  statement	39	None	replace
43	[BUG]  [BUGGY]  while(null!=  str.length())  {  exp  =  str.substring(0,  str.length()  -  1);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  while(null!=  str.length())  {  exp  =  str.substring(0,  str.length()  -  1);  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	while(null!=  str.length())  {  exp  =  str.substring(0,  str.length()  -  1);	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    try    {    return    createInteger(str);    }    catch(NumberFormatException    nfe)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  not  a  statement	55	None	replace
44	[BUG]  [BUGGY]  while(null!=  str.length())  {  exp  =  str.substring(expPos  +  1,  str.length());  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  while(null!=  str.length())  {  exp  =  str.substring(expPos  +  1,  str.length());  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	while(null!=  str.length())  {  exp  =  str.substring(expPos  +  1,  str.length());	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    try    {    return    createInteger(str);    }    catch(NumberFormatException    nfe)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  not  a  statement	55	None	replace
45	[BUG]  [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos  +  1);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos  +  1);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	Integer  dec  =  str.substring(decPos  +  1,  expPos  +  1);	  Integer    dec    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  not  a  statement	36	None	replace
46	[BUG]  [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	Integer  dec  =  str.substring(decPos  +  1,  str.length()  -  1);	  Integer    dec    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  not  a  statement	36	None	replace
47	[BUG]  [BUGGY]  Dec  =  str.substring(decPos  +  1,  str.length());  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  Dec  =  str.substring(decPos  +  1,  str.length());  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	Dec  =  str.substring(decPos  +  1,  str.length());	  dec    =    str.substring(decPos    +    1,    str.length()    -    2);    	non-compiled	[CE]  not  a  statement	26	None	replace
48	[BUG]  [BUGGY]  DEC  =  str.substring(decPos  +  1,  str.length());  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  DEC  =  str.substring(decPos  +  1,  str.length());  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	DEC  =  str.substring(decPos  +  1,  str.length());	  dec    =    str.substring(decPos    +    1,    str.length()    -    2);    	non-compiled	[CE]  not  a  statement	26	None	replace
49	[BUG]  [BUGGY]  return  createBigDecimal(dec);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  return  createBigDecimal(dec);  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	return  createBigDecimal(dec);	  return    createBigDecimal(str);    	non-compiled	[CE]  not  a  statement	37	None	replace
50	[BUG]  [BUGGY]  expPos  =  str.substring(expPos  +  1,  str.length());  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  expPos  =  str.substring(expPos  +  1,  str.length());  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	expPos  =  str.substring(expPos  +  1,  str.length());	  exp    =    str.substring(expPos    +    1,    str.length()    +    1);    	non-compiled	[CE]  not  a  statement	32	None	replace
51	[BUG]  [BUGGY]  exp  = " "  +  str.substring(expPos  +  1,  str.length());  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  exp  = " "  +  str.substring(expPos  +  1,  str.length());  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	exp  = " "  +  str.substring(expPos  +  1,  str.length());	  exp    =    str.substring(expPos    +    1,    str.length()    +    1);    	non-compiled	[CE]  not  a  statement	32	None	replace
52	[BUG]  [BUGGY]  throw  new  NumberFormatException( " ");  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  throw  new  NumberFormatException( " ");  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	throw  new  NumberFormatException( " ");	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    try    {    return    createBigInteger(str);    }    catch(NumberFormatException    nfe)    {    return    createNull(str);    }    	non-compiled	[CE]  not  a  statement	11	None	replace
53	[BUG]  [BUGGY]  result  =  createBigInteger(str);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  result  =  createBigInteger(str);  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	result  =  createBigInteger(str);	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    try    {    return    createBigInteger(str);    }    catch(NumberFormatException    nfe)    {    return    createNull(str);    }    	non-compiled	[CE]  not  a  statement	11	None	replace
54	[BUG]  [BUGGY]  result  =  createBigDecimal(str);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  result  =  createBigDecimal(str);  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	result  =  createBigDecimal(str);	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    try    {    return    createBigInteger(str);    }    catch(NumberFormatException    nfe)    {    return    createNull(str);    }    	non-compiled	[CE]  not  a  statement	11	None	replace
55	[BUG]  [BUGGY]  else  if(dec  ==  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  else  if(dec  ==  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	else  if(dec  ==  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }	  }    else    if(nfe    ==    null    &&    exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  not  a  statement	35	None	replace
56	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  1;  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  int  decPos  =  str.indexOf('.')+  1;  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	int  decPos  =  str.indexOf('.')+  1;	  }    	non-compiled	[CE]  not  a  statement	1	None	replace
57	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.')+  2;  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  int  decPos  =  str.lastIndexOf('.')+  2;  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	int  decPos  =  str.lastIndexOf('.')+  2;	  int    decPos    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	29	None	replace
58	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos)+  1;  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos)+  1;  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	int  decPos  =  str.lastIndexOf('.',  expPos)+  1;	  int    decPos    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	29	None	replace
59	[BUG]  [BUGGY]  }  catch(Throwable  npe)  {  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  }  catch(Throwable  npe)  {  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	}  catch(Throwable  npe)  {	  }    catch(NumberFormatException    npe)    {    	non-compiled	[CE]  not  a  statement	54	None	replace
60	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length());  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  String  str  =  str.substring(0,  str.length());  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	String  str  =  str.substring(0,  str.length());	  String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	8	None	replace
61	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1);  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	String  str  =  str.substring(0,  str.length()  +  1);	  String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	8	None	replace
62	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()));  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  String  str  =  str.substring(0,  str.length()));  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	String  str  =  str.substring(0,  str.length()));	  String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	8	None	replace
63	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  exp  +  1);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  exp  +  1);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	int  decPos  =  str.lastIndexOf('.',  exp  +  1);	  int    decPos    =    str.lastIndexOf('.',    exp);    	non-compiled	[CE]  not  a  statement	22	None	replace
64	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  exp  -  1);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  exp  -  1);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	int  decPos  =  str.lastIndexOf('.',  exp  -  1);	  int    decPos    =    str.lastIndexOf('.',    exp);    	non-compiled	[CE]  not  a  statement	22	None	replace
65	[BUG]  [BUGGY]  Integer  decPos  =  str.length();  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  Integer  decPos  =  str.length();  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	Integer  decPos  =  str.length();	  int    decPos    =    str.length()    +    1;    	non-compiled	[CE]  not  a  statement	6	None	replace
66	[BUG]  [BUGGY]  }  catch(Throwable  e)  {  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  }  catch(Throwable  e)  {  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	}  catch(Throwable  e)  {	  }    catch(NumberFormatException    e)    {    	non-compiled	[CE]  not  a  statement	18	None	replace
67	[BUG]  [BUGGY]  while(null!=  str.length())  {  exp  =  str.substring(decPos  +  1,  str.length());  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  while(null!=  str.length())  {  exp  =  str.substring(decPos  +  1,  str.length());  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	while(null!=  str.length())  {  exp  =  str.substring(decPos  +  1,  str.length());	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    try    {    return    createNumber(str);    }    catch(NumberFormatException    nfe)    {    return    createInteger(str);    }    	non-compiled	[CE]  not  a  statement	10	None	replace
68	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  str.length()  -  1);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  int  decPos  =  str.indexOf('.',  str.length()  -  1);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	int  decPos  =  str.indexOf('.',  str.length()  -  1);	  int    decPos    =    str.indexOf('.',    expPos);    	non-compiled	[CE]  not  a  statement	33	None	replace
69	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  -  1);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  -  1);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	int  decPos  =  str.indexOf('.',  expPos  -  1);	  int    decPos    =    str.indexOf('.',    expPos);    	non-compiled	[CE]  not  a  statement	33	None	replace
70	[BUG]  [BUGGY]  nisip  =  str.charAt(expPos  +  1);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  nisip  =  str.charAt(expPos  +  1);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	nisip  =  str.charAt(expPos  +  1);	  nisip    =    str.charAt(decPos    +    1);    	non-compiled	[CE]  not  a  statement	14	None	replace
71	[BUG]  [BUGGY]  nisip  =  str.substring(decPos  +  1);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  nisip  =  str.substring(decPos  +  1);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	nisip  =  str.substring(decPos  +  1);	  nisip    =    str.charAt(decPos    +    1);    	non-compiled	[CE]  not  a  statement	14	None	replace
72	[BUG]  [BUGGY]  nisip  =  str.charAt(decPos  +  2);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  nisip  =  str.charAt(decPos  +  2);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	nisip  =  str.charAt(decPos  +  2);	  nisip    =    str.charAt(decPos    +    1);    	non-compiled	[CE]  not  a  statement	14	None	replace
73	[BUG]  [BUGGY]  }  else  if(dec!=  null  &&  exp  ==  null)  {  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  }  else  if(dec!=  null  &&  exp  ==  null)  {  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	}  else  if(dec!=  null  &&  exp  ==  null)  {	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    	non-compiled	[CE]  not  a  statement	51	None	replace
74	[BUG]  [BUGGY]  Integer  dec  =  createInteger(decPos);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  Integer  dec  =  createInteger(decPos);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	Integer  dec  =  createInteger(decPos);	  Integer    dec    =    createInteger(str);    	non-compiled	[CE]  not  a  statement	13	None	replace
75	[BUG]  [BUGGY]  Integer  dec  =  createInteger(0);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  Integer  dec  =  createInteger(0);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	Integer  dec  =  createInteger(0);	  Integer    dec    =    createInteger(str);    	non-compiled	[CE]  not  a  statement	13	None	replace
76	[BUG]  [BUGGY]  Integer  dec  =  createInteger(dec);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  Integer  dec  =  createInteger(dec);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	Integer  dec  =  createInteger(dec);	  Integer    dec    =    createInteger(str);    	non-compiled	[CE]  not  a  statement	13	None	replace
77	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str,  decPos);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  Integer  dec  =  createInteger(str,  decPos);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	Integer  dec  =  createInteger(str,  decPos);	  Integer    dec    =    createInteger(str);    	non-compiled	[CE]  not  a  statement	13	None	replace
78	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null)  {  return  createNull(str);  }  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null)  {  return  createNull(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	if(dec  ==  null  &&  exp  ==  null)  {  return  createNull(str);  }	  if(dec    ==    null    &&    exp    ==    null)    {    return    createNumber(str);    }    	non-compiled	[CE]  not  a  statement	50	None	replace
79	[BUG]  [BUGGY]  }  catch(Throwable  ne)  {  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  }  catch(Throwable  ne)  {  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	}  catch(Throwable  ne)  {	  }    catch(NumberFormatException    ne)    {    	non-compiled	[CE]  not  a  statement	53	None	replace
80	[BUG]  [BUGGY]  }  catch(NullPointerException  nfe)  {  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  }  catch(NullPointerException  nfe)  {  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	}  catch(NullPointerException  nfe)  {	  }    catch(Throwable    nfe)    {    	non-compiled	[CE]  not  a  statement	19	None	replace
81	[BUG]  [BUGGY]  }  catch(Exception  nfe)  {  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  }  catch(Exception  nfe)  {  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	}  catch(Exception  nfe)  {	  }    catch(Throwable    nfe)    {    	non-compiled	[CE]  not  a  statement	19	None	replace
82	[BUG]  [BUGGY]  char  decPos  =  str.length();  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  char  decPos  =  str.length();  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	char  decPos  =  str.length();	  int    decPos    =    str.length()    -    1;    	non-compiled	[CE]  not  a  statement	5	None	replace
83	[BUG]  [BUGGY]  }  else  if(dec  ==  null  ||  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  }  else  if(dec  ==  null  ||  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	}  else  if(dec  ==  null  ||  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    try    {    return    createInteger(str);    }    catch    (NumberFormatException    nfe)    {    }    	non-compiled	[CE]  not  a  statement	4	None	replace
84	[BUG]  [BUGGY]  while(null!=  str.length())  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  while(null!=  str.length())  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	while(null!=  str.length())  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    try    {    return    createInteger(str);    }    catch(NumberFormatException    nfe)    {    return    createBigDecimal(str);    }    	non-compiled	[CE]  not  a  statement	56	None	replace
85	[BUG]  [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  return  createLong(str);  }  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  return  createLong(str);  }  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	}  else  if(dec  ==  null  &&  exp  ==  null)  {  return  createLong(str);  }	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    return    createInteger(str);    }    	non-compiled	[CE]  not  a  statement	2	None	replace
86	[BUG]  [BUGGY]  exp  +=  str.substring(expPos  +  1,  str.length());  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  exp  +=  str.substring(expPos  +  1,  str.length());  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	exp  +=  str.substring(expPos  +  1,  str.length());	  exp    =    str.substring(expPos    +    1,    str.length()    -    2);    	non-compiled	[CE]  not  a  statement	31	None	replace
87	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos.length()  -  1);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos.length()  -  1);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	dec  =  str.substring(decPos  +  1,  expPos.length()  -  1);	  dec    =    str.substring(decPos    +    1,    expPos.length());    	non-compiled	[CE]  not  a  statement	34	None	replace
88	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('  ')+  1;  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  int  decPos  =  str.lastIndexOf('  ')+  1;  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	int  decPos  =  str.lastIndexOf('  ')+  1;	  int    decPos    =    str.indexOf('    ')+    1;    	non-compiled	[CE]  not  a  statement	44	None	replace
89	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ')+  2;  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  int  decPos  =  str.indexOf('  ')+  2;  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	int  decPos  =  str.indexOf('  ')+  2;	  int    decPos    =    str.indexOf('    ')+    1;    	non-compiled	[CE]  not  a  statement	44	None	replace
90	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ')/  1;  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  int  decPos  =  str.indexOf('  ')/  1;  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	int  decPos  =  str.indexOf('  ')/  1;	  int    decPos    =    str.indexOf('    ')+    1;    	non-compiled	[CE]  not  a  statement	44	None	replace
91	[BUG]  [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createBigDecimal(str);  }  catch(NumberFormatException  nfe)  {  return  createNull(str);  }  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createBigDecimal(str);  }  catch(NumberFormatException  nfe)  {  return  createNull(str);  }  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	}  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createBigDecimal(str);  }  catch(NumberFormatException  nfe)  {  return  createNull(str);  }	  }    catch(NumberFormatException    nfe)    {    return    createBigDecimal(str);    	non-compiled	[CE]  not  a  statement	42	None	replace
92	[BUG]  [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createBigDecimal(str);  }  catch(NumberFormatException  nfe)  {  return  createLong(str);  }  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createBigDecimal(str);  }  catch(NumberFormatException  nfe)  {  return  createLong(str);  }  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	}  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createBigDecimal(str);  }  catch(NumberFormatException  nfe)  {  return  createLong(str);  }	  }    catch(NumberFormatException    nfe)    {    return    createBigDecimal(str);    	non-compiled	[CE]  not  a  statement	42	None	replace
93	[BUG]  [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createBigDecimal(str);  }  catch(NumberFormatException  nfe)  {  return  createNumber(str);  }  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createBigDecimal(str);  }  catch(NumberFormatException  nfe)  {  return  createNumber(str);  }  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	}  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createBigDecimal(str);  }  catch(NumberFormatException  nfe)  {  return  createNumber(str);  }	  }    catch(NumberFormatException    nfe)    {    return    createBigDecimal(str);    	non-compiled	[CE]  not  a  statement	42	None	replace
94	[BUG]  [BUGGY]  exp  =  str.substring(decPos  +  1,  str.length()  -  1);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  exp  =  str.substring(decPos  +  1,  str.length()  -  1);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	exp  =  str.substring(decPos  +  1,  str.length()  -  1);	  exp    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	58	None	replace
95	[BUG]  [BUGGY]  exp  =  str.substring(0,  str.length()  -  1);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  exp  =  str.substring(0,  str.length()  -  1);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	exp  =  str.substring(0,  str.length()  -  1);	  exp    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	58	None	replace
96	[BUG]  [BUGGY]  Expr  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  Expr  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	Expr  exp  =  str.substring(expPos  +  1,  str.length()  -  1);	  Expr    exp    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	57	None	replace
97	[BUG]  [BUGGY]  Expr  exp  =  str.substring(expPos  +  1,  str.length()  -  2);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  Expr  exp  =  str.substring(expPos  +  1,  str.length()  -  2);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	Expr  exp  =  str.substring(expPos  +  1,  str.length()  -  2);	  Expr    exp    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	57	None	replace
98	[BUG]  [BUGGY]  Expression  str  =  str.substring(expPos  +  1,  str.length()  -  1);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  Expression  str  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	Expression  str  =  str.substring(expPos  +  1,  str.length()  -  1);	  Expression    str    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	43	None	replace
99	[BUG]  [BUGGY]  Expression  str  =  str.substring(decPos  +  1,  str.length());  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  Expression  str  =  str.substring(decPos  +  1,  str.length());  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	Expression  str  =  str.substring(decPos  +  1,  str.length());	  Expression    str    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	43	None	replace
100	[BUG]  [BUGGY]  Expression  str  =  str.substring(expPos  +  1,  str.length()  -  2);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  Expression  str  =  str.substring(expPos  +  1,  str.length()  -  2);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	Expression  str  =  str.substring(expPos  +  1,  str.length()  -  2);	  Expression    str    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	43	None	replace
101	[BUG]  [BUGGY]  Expression  str  =  str.substring(0,  str.length()  -  1);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  Expression  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	Expression  str  =  str.substring(0,  str.length()  -  1);	  Expression    str    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	43	None	replace
102	[BUG]  [BUGGY]  }  else  if(nfe  ==  null  &&  exp  ==  null)  {  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  }  else  if(nfe  ==  null  &&  exp  ==  null)  {  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	}  else  if(nfe  ==  null  &&  exp  ==  null)  {	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    	non-compiled	[CE]  not  a  statement	51	None	replace
103	[BUG]  [BUGGY]  nisip  =  str.charAt(decPos  +  1).trim();  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  nisip  =  str.charAt(decPos  +  1).trim();  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	nisip  =  str.charAt(decPos  +  1).trim();	  nisip    =    str.charAt(decPos    +    1);    	non-compiled	[CE]  not  a  statement	14	None	replace
104	[BUG]  [BUGGY]  NeighborDecimal  dec  =  mant.substring(decPos  +  1,  str.length()  -  1);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  NeighborDecimal  dec  =  mant.substring(decPos  +  1,  str.length()  -  1);  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	NeighborDecimal  dec  =  mant.substring(decPos  +  1,  str.length()  -  1);	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    try    {    return    createInteger(str);    }    catch(NumberFormatException    nfe)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  not  a  statement	55	None	replace
105	[BUG]  [BUGGY]  NeighborDecimal  dec  =  mant.substring(decPos  +  1,  str.length());  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  NeighborDecimal  dec  =  mant.substring(decPos  +  1,  str.length());  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	NeighborDecimal  dec  =  mant.substring(decPos  +  1,  str.length());	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    try    {    return    createInteger(str);    }    catch(NumberFormatException    nfe)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  not  a  statement	55	None	replace
106	[BUG]  [BUGGY]  NeighborDecimal  dec  =  mant.substring(decPos  +  1,  expPos);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  NeighborDecimal  dec  =  mant.substring(decPos  +  1,  expPos);  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	NeighborDecimal  dec  =  mant.substring(decPos  +  1,  expPos);	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    try    {    return    createInteger(str);    }    catch(NumberFormatException    nfe)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  not  a  statement	55	None	replace
107	[BUG]  [BUGGY]  return  createInteger(dec);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  return  createInteger(dec);  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	return  createInteger(dec);	  return    createBigInteger(str);    	non-compiled	[CE]  not  a  statement	40	None	replace
108	[BUG]  [BUGGY]  Integer  dec  =  createBigInteger(str);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  Integer  dec  =  createBigInteger(str);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	Integer  dec  =  createBigInteger(str);	  Integer    dec    =    createInteger(str);    	non-compiled	[CE]  not  a  statement	13	None	replace
109	[BUG]  [BUGGY]  NeighborDecimal  exp  =  mant.substring(decPos  +  1,  str.length());  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  NeighborDecimal  exp  =  mant.substring(decPos  +  1,  str.length());  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	NeighborDecimal  exp  =  mant.substring(decPos  +  1,  str.length());	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    try    {    return    createBigDecimal(str);    }    catch(NumberFormatException    nfe)    {    return    createInteger(str);    }    	non-compiled	[CE]  not  a  statement	47	None	replace
110	[BUG]  [BUGGY]  NeighborDecimal  exp  =  mant.substring(decPos  +  1,  str.length()  -  1);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  NeighborDecimal  exp  =  mant.substring(decPos  +  1,  str.length()  -  1);  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	NeighborDecimal  exp  =  mant.substring(decPos  +  1,  str.length()  -  1);	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    try    {    return    createBigDecimal(str);    }    catch(NumberFormatException    nfe)    {    return    createInteger(str);    }    	non-compiled	[CE]  not  a  statement	47	None	replace
111	[BUG]  [BUGGY]  NeighborDecimal  exp  =  mant.substring(0,  str.length()  -  1);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  NeighborDecimal  exp  =  mant.substring(0,  str.length()  -  1);  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	NeighborDecimal  exp  =  mant.substring(0,  str.length()  -  1);	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    try    {    return    createBigDecimal(str);    }    catch(NumberFormatException    nfe)    {    return    createInteger(str);    }    	non-compiled	[CE]  not  a  statement	47	None	replace
112	[BUG]  [BUGGY]  }  else  if(nfe!=  null)  {  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  }  else  if(nfe!=  null)  {  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	}  else  if(nfe!=  null)  {	  }    else    if(nfe    ==    null)    {    	non-compiled	[CE]  not  a  statement	48	None	replace
113	[BUG]  [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos  -  1);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos  -  1);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	Integer  dec  =  str.substring(decPos  +  1,  expPos  -  1);	  Integer    dec    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  not  a  statement	36	None	replace
114	[BUG]  [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos  +  2);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos  +  2);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	Integer  dec  =  str.substring(decPos  +  1,  expPos  +  2);	  Integer    dec    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  not  a  statement	36	None	replace
115	[BUG]  [BUGGY]  NeighborDecimal  dec  =  createNeighborDecimal(mant);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  NeighborDecimal  dec  =  createNeighborDecimal(mant);  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	NeighborDecimal  dec  =  createNeighborDecimal(mant);	  NeighborDecimal    dec    =    createNeighborDecimal(str);    	non-compiled	[CE]  not  a  statement	39	None	replace
116	[BUG]  [BUGGY]  NeighborDecimal  dec  =  createNumberDecimal(dec);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  NeighborDecimal  dec  =  createNumberDecimal(dec);  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	NeighborDecimal  dec  =  createNumberDecimal(dec);	  NeighborDecimal    dec    =    createNeighborDecimal(str);    	non-compiled	[CE]  not  a  statement	39	None	replace
117	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos.length()  -  2);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos.length()  -  2);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	dec  =  str.substring(decPos  +  1,  expPos.length()  -  2);	  dec    =    str.substring(decPos    +    1,    expPos.length());    	non-compiled	[CE]  not  a  statement	34	None	replace
118	[BUG]  [BUGGY]  }  catch(NumberFormatException  nfe)  {  return  createBigDecimal(dec);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  }  catch(NumberFormatException  nfe)  {  return  createBigDecimal(dec);  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	}  catch(NumberFormatException  nfe)  {  return  createBigDecimal(dec);	  }    catch(NumberFormatException    nfe)    {    return    createBigDecimal(str);    	non-compiled	[CE]  not  a  statement	42	None	replace
119	[BUG]  [BUGGY]  }  catch(NumberFormatException  nfe)  {  return  createMant(str);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  }  catch(NumberFormatException  nfe)  {  return  createMant(str);  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	}  catch(NumberFormatException  nfe)  {  return  createMant(str);	  }    catch(NumberFormatException    nfe)    {    return    createBigDecimal(str);    	non-compiled	[CE]  not  a  statement	42	None	replace
120	[BUG]  [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  return  createBigDecimal(str);  }  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  return  createBigDecimal(str);  }  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	}  else  if(dec  ==  null  &&  exp  ==  null)  {  return  createBigDecimal(str);  }	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    return    createInteger(str);    }    	non-compiled	[CE]  not  a  statement	2	None	replace
121	[BUG]  [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createBigInteger(str);  }  catch(NumberFormatException  nfe)  {  return  createInteger(nfe);  }  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createBigInteger(str);  }  catch(NumberFormatException  nfe)  {  return  createInteger(nfe);  }  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	}  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createBigInteger(str);  }  catch(NumberFormatException  nfe)  {  return  createInteger(nfe);  }	  }    catch(NumberFormatException    nfe)    {    return    createInteger(str);    	non-compiled	[CE]  not  a  statement	46	None	replace
122	[BUG]  [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createBigInteger(str);  }  catch(NumberFormatException  nfe)  {  return  createInteger(str);  }  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createBigInteger(str);  }  catch(NumberFormatException  nfe)  {  return  createInteger(str);  }  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	}  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createBigInteger(str);  }  catch(NumberFormatException  nfe)  {  return  createInteger(str);  }	  }    catch(NumberFormatException    nfe)    {    return    createInteger(str);    	non-compiled	[CE]  not  a  statement	46	None	replace
123	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  expPos)+  1;  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  int  decPos  =  str.indexOf('  ',  expPos)+  1;  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	int  decPos  =  str.indexOf('  ',  expPos)+  1;	  int    decPos    =    str.indexOf('    ')+    1;    	non-compiled	[CE]  not  a  statement	44	None	replace
124	[BUG]  [BUGGY]  }  else  if(nfe  ==  null  &&  exp  ==  null)  {  return  createNumber(str);  }  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  }  else  if(nfe  ==  null  &&  exp  ==  null)  {  return  createNumber(str);  }  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	}  else  if(nfe  ==  null  &&  exp  ==  null)  {  return  createNumber(str);  }	  }    else    if(nfe    ==    null    &&    exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  not  a  statement	35	None	replace
125	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_MINUS_ONE);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_MINUS_ONE);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	int  decPos  =  str.indexOf('.',  DEC_MINUS_ONE);	  int    decPos    =    str.indexOf('.',    expPos);    	non-compiled	[CE]  not  a  statement	33	None	replace
126	[BUG]  [BUGGY]  int  decPos  =  exp.length()  -  1;  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  int  decPos  =  exp.length()  -  1;  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	int  decPos  =  exp.length()  -  1;	  int    decPos    =    exp.length();    	non-compiled	[CE]  not  a  statement	45	None	replace
127	[BUG]  [BUGGY]  NullableString  str  =  str.substring(expPos  +  1,  decPos);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  NullableString  str  =  str.substring(expPos  +  1,  decPos);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	NullableString  str  =  str.substring(expPos  +  1,  decPos);	  NullableString    str    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  not  a  statement	49	None	replace
128	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_POP);  [CE]  not  a  statement  [FE]                        NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_POP);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	int  decPos  =  str.indexOf('.',  DEC_POP);	  int    decPos    =    str.lastIndexOf('.',    DEC_POP);    	non-compiled	[CE]  not  a  statement	24	None	replace
129	[BUG]  [BUGGY]  NeighborDecimal  d  =  createNeighborDecimal(mant);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  NeighborDecimal  d  =  createNeighborDecimal(mant);  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	NeighborDecimal  d  =  createNeighborDecimal(mant);	  NeighborDecimal    d    =    createNeighborDecimal(str);    	non-compiled	[CE]  not  a  statement	38	None	replace
130	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()).length();  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()).length();  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	exp  =  str.substring(expPos  +  1,  str.length()).length();	  exp    =    str.substring(expPos    +    1,    str.length()    +    1);    	non-compiled	[CE]  not  a  statement	32	None	replace
131	[BUG]  [BUGGY]  String  str  =  str.substring(0,  expPos.length()  -  1);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  String  str  =  str.substring(0,  expPos.length()  -  1);  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	String  str  =  str.substring(0,  expPos.length()  -  1);	  String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	8	None	replace
132	[BUG]  [BUGGY]  }  catch(NullPointerException  npe)  {  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  }  catch(NullPointerException  npe)  {  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	}  catch(NullPointerException  npe)  {	  }    catch(NumberFormatException    npe)    {    	non-compiled	[CE]  not  a  statement	54	None	replace
133	[BUG]  [BUGGY]  NeighborDecimal  exp  =  createNeighborDecimal(str);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  NeighborDecimal  exp  =  createNeighborDecimal(str);  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	NeighborDecimal  exp  =  createNeighborDecimal(str);	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    try    {    return    createInteger(str);    }    catch(NumberFormatException    nfe)    {    return    createBigDecimal(str);    }    	non-compiled	[CE]  not  a  statement	56	None	replace
134	[BUG]  [BUGGY]  NeighborDecimal  d  =  createMantDecimal(str);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  NeighborDecimal  d  =  createMantDecimal(str);  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	NeighborDecimal  d  =  createMantDecimal(str);	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    try    {    return    createInteger(str);    }    catch(NumberFormatException    nfe)    {    return    createBigDecimal(str);    }    	non-compiled	[CE]  not  a  statement	56	None	replace
135	[BUG]  [BUGGY]  NeighborDecimal  dec  =  getDecimalDecimal(decPos,  expPos);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  NeighborDecimal  dec  =  getDecimalDecimal(decPos,  expPos);  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	NeighborDecimal  dec  =  getDecimalDecimal(decPos,  expPos);	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    try    {    return    createBigInteger(str);    }    catch(NumberFormatException    nfe)    {    return    createLong(str);    }    	non-compiled	[CE]  not  a  statement	12	None	replace
136	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str,  dec);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  Integer  dec  =  createInteger(str,  dec);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	Integer  dec  =  createInteger(str,  dec);	  Integer    dec    =    createInteger(str);    	non-compiled	[CE]  not  a  statement	13	None	replace
137	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length();  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length();  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	exp  =  str.substring(expPos  +  1,  str.length();	  exp    =    str.substring(expPos    +    1,    str.length()    +    1);    	non-compiled	[CE]  not  a  statement	32	None	replace
138	[BUG]  [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createLong(str);  }  catch(NumberFormatException  nfe)  {  return  createBigDecimal(str);  }  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createLong(str);  }  catch(NumberFormatException  nfe)  {  return  createBigDecimal(str);  }  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	}  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createLong(str);  }  catch(NumberFormatException  nfe)  {  return  createBigDecimal(str);  }	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    try    {    return    createInteger(str);    }    catch(NumberFormatException    nfe)    {    return    createBigDecimal(str);    }    	non-compiled	[CE]  not  a  statement	56	None	replace
139	[BUG]  [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createBigDecimal(str);  }  catch(NumberFormatException  nfe)  {  return  createBigDecimal(str);  }  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createBigDecimal(str);  }  catch(NumberFormatException  nfe)  {  return  createBigDecimal(str);  }  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	}  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createBigDecimal(str);  }  catch(NumberFormatException  nfe)  {  return  createBigDecimal(str);  }	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    try    {    return    createInteger(str);    }    catch(NumberFormatException    nfe)    {    return    createBigDecimal(str);    }    	non-compiled	[CE]  not  a  statement	56	None	replace
140	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	dec  =  str.substring(decPos  +  1,  expPos  +  1);	  dec    =    str.substring(decPos    +    1,    expPos.length());    	non-compiled	[CE]  not  a  statement	34	None	replace
141	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +.length());  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +.length());  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	dec  =  str.substring(decPos  +  1,  expPos  +.length());	  dec    =    str.substring(decPos    +    1,    expPos.length());    	non-compiled	[CE]  not  a  statement	34	None	replace
142	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  2);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  2);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	dec  =  str.substring(decPos  +  1,  expPos  +  2);	  dec    =    str.substring(decPos    +    1,    expPos.length());    	non-compiled	[CE]  not  a  statement	34	None	replace
143	[BUG]  [BUGGY]  NullableString  str  =  str.substring(expPos  +  1,  expPos);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  NullableString  str  =  str.substring(expPos  +  1,  expPos);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	NullableString  str  =  str.substring(expPos  +  1,  expPos);	  NullableString    str    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  not  a  statement	49	None	replace
144	[BUG]  [BUGGY]  }  catch(NoSuchElementException  ne)  {  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  }  catch(NoSuchElementException  ne)  {  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	}  catch(NoSuchElementException  ne)  {	  }    catch(NumberFormatException    ne)    {    	non-compiled	[CE]  not  a  statement	53	None	replace
145	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  dec);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  Integer  str  =  createInteger(str,  dec);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	Integer  str  =  createInteger(str,  dec);	  Integer    str    =    createInteger(str);    	non-compiled	[CE]  not  a  statement	15	None	replace
146	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(1));  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  Integer  str  =  createInteger(str.substring(1));  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	Integer  str  =  createInteger(str.substring(1));	  Integer    str    =    createInteger(str);    	non-compiled	[CE]  not  a  statement	15	None	replace
147	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(decPos  +  1));  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  Integer  str  =  createInteger(str.substring(decPos  +  1));  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	Integer  str  =  createInteger(str.substring(decPos  +  1));	  Integer    str    =    createInteger(str);    	non-compiled	[CE]  not  a  statement	15	None	replace
148	[BUG]  [BUGGY]  exp  -=  str.substring(expPos  +  1,  str.length());  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  exp  -=  str.substring(expPos  +  1,  str.length());  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	exp  -=  str.substring(expPos  +  1,  str.length());	  exp    =    str.substring(expPos    +    1,    str.length()    -    3);    	non-compiled	[CE]  not  a  statement	41	None	replace
149	[BUG]  [BUGGY]  }  else  if(nfe  ==  null  &&  exp  <  str.length()  -  1)  {  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  }  else  if(nfe  ==  null  &&  exp  <  str.length()  -  1)  {  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	}  else  if(nfe  ==  null  &&  exp  <  str.length()  -  1)  {	  }    else    if(nfe    ==    null)    {    	non-compiled	[CE]  not  a  statement	48	None	replace
150	[BUG]  [BUGGY]  }  else  if(nfe  ==  null  ||  exp  ==  null)  {  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  }  else  if(nfe  ==  null  ||  exp  ==  null)  {  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	}  else  if(nfe  ==  null  ||  exp  ==  null)  {	  }    else    if(nfe    ==    null)    {    	non-compiled	[CE]  not  a  statement	48	None	replace
151	[BUG]  [BUGGY]  String  str  =  str.substring(0,  expPos.length());  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  String  str  =  str.substring(0,  expPos.length());  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	String  str  =  str.substring(0,  expPos.length());	  String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	8	None	replace
152	[BUG]  [BUGGY]  Integer  decPos  =  exp.length();  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  Integer  decPos  =  exp.length();  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	Integer  decPos  =  exp.length();	  int    decPos    =    exp.length();    	non-compiled	[CE]  not  a  statement	45	None	replace
153	[BUG]  [BUGGY]  while(expPos  <  decPos)  {  exp  =  str.substring(decPos  +  1,  expPos);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  while(expPos  <  decPos)  {  exp  =  str.substring(decPos  +  1,  expPos);  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	while(expPos  <  decPos)  {  exp  =  str.substring(decPos  +  1,  expPos);	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    try    {    return    createBigInteger(str);    }    catch(NumberFormatException    nfe)    {    return    createNull(str);    }    	non-compiled	[CE]  not  a  statement	11	None	replace
154	[BUG]  [BUGGY]  while(expPos  <  expPos)  {  exp  =  str.substring(expPos  +  1,  str.length());  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  while(expPos  <  expPos)  {  exp  =  str.substring(expPos  +  1,  str.length());  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	while(expPos  <  expPos)  {  exp  =  str.substring(expPos  +  1,  str.length());	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    try    {    return    createBigInteger(str);    }    catch(NumberFormatException    nfe)    {    return    createNull(str);    }    	non-compiled	[CE]  not  a  statement	11	None	replace
155	[BUG]  [BUGGY]  while(expPos  <  decPos)  {  exp  =  str.substring(decPos  +  1,  str.length());  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  while(expPos  <  decPos)  {  exp  =  str.substring(decPos  +  1,  str.length());  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	while(expPos  <  decPos)  {  exp  =  str.substring(decPos  +  1,  str.length());	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    try    {    return    createBigInteger(str);    }    catch(NumberFormatException    nfe)    {    return    createNull(str);    }    	non-compiled	[CE]  not  a  statement	11	None	replace
156	[BUG]  [BUGGY]  NeighborDecimal  exp  =  str.substring(decPos  +  1,  expPos);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  NeighborDecimal  exp  =  str.substring(decPos  +  1,  expPos);  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	NeighborDecimal  exp  =  str.substring(decPos  +  1,  expPos);	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    try    {    return    createBigInteger(str);    }    catch(NumberFormatException    nfe)    {    return    createNull(str);    }    	non-compiled	[CE]  not  a  statement	11	None	replace
157	[BUG]  [BUGGY]  while(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  while(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	while(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    try    {    return    createBigInteger(str);    }    catch(NumberFormatException    nfe)    {    return    createLong(str);    }    	non-compiled	[CE]  not  a  statement	12	None	replace
158	[BUG]  [BUGGY]  while(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  while(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	while(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    try    {    return    createBigInteger(str);    }    catch(NumberFormatException    nfe)    {    return    createLong(str);    }    	non-compiled	[CE]  not  a  statement	12	None	replace
159	[BUG]  [BUGGY]  while(expPos  <  decPos  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(decPos  +  1,  expPos);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  while(expPos  <  decPos  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(decPos  +  1,  expPos);  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	while(expPos  <  decPos  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(decPos  +  1,  expPos);	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    try    {    return    createNumber(str);    }    catch(NumberFormatException    nfe)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  not  a  statement	9	None	replace
160	[BUG]  [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createLong(str);  }  catch(NumberFormatException  nfe)  {  return  createInteger(str);  }  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createLong(str);  }  catch(NumberFormatException  nfe)  {  return  createInteger(str);  }  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	}  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createLong(str);  }  catch(NumberFormatException  nfe)  {  return  createInteger(str);  }	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    try    {    return    createBigDecimal(str);    }    catch(NumberFormatException    nfe)    {    return    createInteger(str);    }    	non-compiled	[CE]  not  a  statement	47	None	replace
161	[BUG]  [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch(NumberFormatException  nfe)  {  return  createInteger(str);  }  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch(NumberFormatException  nfe)  {  return  createInteger(str);  }  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	}  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch(NumberFormatException  nfe)  {  return  createInteger(str);  }	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    try    {    return    createBigDecimal(str);    }    catch(NumberFormatException    nfe)    {    return    createInteger(str);    }    	non-compiled	[CE]  not  a  statement	47	None	replace
162	[BUG]  [BUGGY]  while(expPos  >  0  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  while(expPos  >  0  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	while(expPos  >  0  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    try    {    return    createInteger(str);    }    catch(NumberFormatException    nfe)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  not  a  statement	55	None	replace
163	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.')-  1;  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  int  decPos  =  str.lastIndexOf('.')-  1;  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	int  decPos  =  str.lastIndexOf('.')-  1;	  int    decPos    =    str.length()    -    1;    	non-compiled	[CE]  not  a  statement	5	None	replace
164	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos)-  1;  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos)-  1;  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	int  decPos  =  str.lastIndexOf('.',  expPos)-  1;	  int    decPos    =    str.length()    -    1;    	non-compiled	[CE]  not  a  statement	5	None	replace
165	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.')/  1;  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  int  decPos  =  str.lastIndexOf('.')/  1;  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD      //  ignore  the  bad  number        }  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	int  decPos  =  str.lastIndexOf('.')/  1;	  int    decPos    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	29	None	replace
166	[BUG]  [BUGGY]  return  createBigDecimal(str.substring(decPos  +  1));  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  return  createBigDecimal(str.substring(decPos  +  1));  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	return  createBigDecimal(str.substring(decPos  +  1));	  return    createBigDecimal(str);    	non-compiled	[CE]  not  a  statement	37	None	replace
167	[BUG]  [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createBigInteger(str);  }  catch(NumberFormatException  nfe)  {  return  createBigInteger(str);  }  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);      [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createBigInteger(str);  }  catch(NumberFormatException  nfe)  {  return  createBigInteger(str);  }  [BUGGY]        }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	560	562	1	replace	}  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createBigInteger(str);  }  catch(NumberFormatException  nfe)  {  return  createBigInteger(str);  }	  }    else    if(dec    ==    null    &&    exp    ==    null)    {    try    {    return    createNumber(str);    }    catch(NumberFormatException    nfe)    {    return    createInteger(str);    }    	non-compiled	[CE]  not  a  statement	10	None	replace
