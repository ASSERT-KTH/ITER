bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ||  str.startsWith( "-0x   "))  {  return  createBigInteger(str);  }  [CE]  illegal  start  of  expression  [FE]        NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  ||  str.startsWith( "-0x   "))  {  return  createBigInteger(str);  }  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	||  str.startsWith( "-0x   "))  {  return  createBigInteger(str);  }	      if(str.startsWith(   "-   ")||    str.startsWith(   "-0x   "))    {    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
2	[BUG]  [BUGGY]  ||  str.startsWith( "-   "))  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [FE]          NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  ||  str.startsWith( "-   "))  {  return  createInteger(str);  }  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	||  str.startsWith( "-   "))  {  return  createInteger(str);  }	      if(str.startsWith(   "-   ")||    str.startsWith(   "-   "))    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
3	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "- "))  {  return  createNumber(str);  }  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "- "))  {  return  createNumber(str);  }  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	if(str.startsWith( "- ")||  str.startsWith( "- "))  {  return  createNumber(str);  }	      if(str.startsWith(   "-   ")||    str.startsWith(   "-   "))    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
4	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length());  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  String  str  =  str.substring(0,  str.length());  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	String  str  =  str.substring(0,  str.length());	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
5	[BUG]  [BUGGY]  char  str  =  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  char  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	char  str  =  str.substring(0,  str.length()  -  1);	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
6	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1);  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1);  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	String  str  =  str.substring(0,  str.length()  +  1);	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
7	[BUG]  [BUGGY]  String  lastChar  =  str.charAt(str.length())+  1;  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  String  lastChar  =  str.charAt(str.length())+  1;  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	String  lastChar  =  str.charAt(str.length())+  1;	  char    lastChar    =    str.charAt(str.length())+    1;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
8	[BUG]  [BUGGY]  char  lastChar  =  str.charAt(str.length()  -  1)+  1;  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  char  lastChar  =  str.charAt(str.length()  -  1)+  1;  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	char  lastChar  =  str.charAt(str.length()  -  1)+  1;	  char    lastChar    =    str.charAt(str.length())+    1;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
9	[BUG]  [BUGGY]  char  lastChar  =  str.charAt(str.length()  +  1)+  1;  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  char  lastChar  =  str.charAt(str.length()  +  1)+  1;  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	char  lastChar  =  str.charAt(str.length()  +  1)+  1;	  char    lastChar    =    str.charAt(str.length())+    1;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
10	[BUG]  [BUGGY]  char  lastChar  =  str.charAt(str.length()  -  2);  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  char  lastChar  =  str.charAt(str.length()  -  2);  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	char  lastChar  =  str.charAt(str.length()  -  2);	  char    lastChar    =    str.charAt(str.length());    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
11	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.length());  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  Integer  str  =  createInteger(str.length());  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	Integer  str  =  createInteger(str.length());	      Integer    str    =    createInteger(str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
12	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.length()  +  1);  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  Integer  str  =  createInteger(str.length()  +  1);  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	Integer  str  =  createInteger(str.length()  +  1);	      Integer    str    =    createInteger(str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
13	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  str.length()  -  1);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  Integer  str  =  createInteger(str,  str.length()  -  1);  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	Integer  str  =  createInteger(str,  str.length()  -  1);	      Integer    str    =    createInteger(str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
14	[BUG]  [BUGGY]  Integer  str  =  createInteger(mant);  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  Integer  str  =  createInteger(mant);  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	Integer  str  =  createInteger(mant);	      Integer    str    =    createInteger(str);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
15	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  1));  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  1));  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	Integer  str  =  createInteger(str.substring(0,  str.length()  -  1));	      Integer    str    =    createInteger(str);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
16	[BUG]  [BUGGY]  Integer  str  =  createInteger(0);  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  Integer  str  =  createInteger(0);  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	Integer  str  =  createInteger(0);	      Integer    str    =    createInteger(str);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
17	[BUG]  [BUGGY]  ||  str.startsWith( "-   "))  {  return  createBigInteger(str);  }  [CE]  illegal  start  of  expression  [FE]        NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  ||  str.startsWith( "-   "))  {  return  createBigInteger(str);  }  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	||  str.startsWith( "-   "))  {  return  createBigInteger(str);  }	      if(str.startsWith(   "-   ")||    str.startsWith(   "-   "))    {    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
18	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('e');  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('e');  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	int  decPos  =  str.indexOf('.')+  str.indexOf('e');	      int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
19	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;	      int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
20	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;	      int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
21	[BUG]  [BUGGY]  String  lastChar  =  str.charAt(str.length()  +  1);  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  String  lastChar  =  str.charAt(str.length()  +  1);  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	String  lastChar  =  str.charAt(str.length()  +  1);	  char    lastChar    =    str.charAt(str.length()    +    1);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
22	[BUG]  [BUGGY]  ||  str.startsWith( "-0x   "))  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [FE]            NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  ||  str.startsWith( "-0x   "))  {  return  createInteger(str);  }  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	||  str.startsWith( "-0x   "))  {  return  createInteger(str);  }	      if(str.startsWith(   "-   ")||    str.startsWith(   "-0x   "))    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
23	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-1))  {  return  createInteger(str);  }  [CE]  unclosed  string  literal  [FE]              NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-1))  {  return  createInteger(str);  }  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	if(str.startsWith( "- ")||  str.startsWith( "-1))  {  return  createInteger(str);  }	      if(str.startsWith(   "-   ")||    str.startsWith(   "-0x   "))    {    return    createInteger(str);    }    	non-compiled	[CE]  unclosed  string  literal	12	None	replace
24	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " ",  str);  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " ",  str);  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException( " ",  str);	      NumberFormatException    e    =    new    NumberFormatException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
25	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "Number  format  exception: ");  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "Number  format  exception: ");  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException( "Number  format  exception: ");	      NumberFormatException    e    =    new    NumberFormatException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
26	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " ",  str.length());  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " ",  str.length());  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException( " ",  str.length());	      NumberFormatException    e    =    new    NumberFormatException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
27	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length();  [CE]  [FE]            NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  String  str  =  str.substring(0,  str.length();  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	String  str  =  str.substring(0,  str.length();	      String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  	8	None	replace
28	[BUG]  [BUGGY]  String  mant  =  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  String  mant  =  str.substring(0,  str.length()  -  1);  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	String  mant  =  str.substring(0,  str.length()  -  1);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
29	[BUG]  [BUGGY]  Integer  str  =  createNumber(str.length());  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  Integer  str  =  createNumber(str.length());  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	Integer  str  =  createNumber(str.length());	      Integer    str    =    createInteger(str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
30	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('-')+  1;  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('-')+  1;  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	int  decPos  =  str.indexOf('.')+  str.indexOf('-')+  1;	      int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
31	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('-');  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('-');  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	int  decPos  =  str.indexOf('.')+  str.indexOf('-');	      int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
32	[BUG]  [BUGGY]  Char  lastChar  =  str.charAt(str.length());  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  Char  lastChar  =  str.charAt(str.length());  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	Char  lastChar  =  str.charAt(str.length());	  char    lastChar    =    str.charAt(str.length()    +    1);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
33	[BUG]  [BUGGY]  if(str.startsWith( ".- ")||  str.startsWith( ".- "))  {  return  createInteger(str);  }  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  if(str.startsWith( ".- ")||  str.startsWith( ".- "))  {  return  createInteger(str);  }  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	if(str.startsWith( ".- ")||  str.startsWith( ".- "))  {  return  createInteger(str);  }	      if(str.startsWith(   "-   ")||    str.startsWith(   "-   "))    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
34	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( ".- "))  {  return  createInteger(str);  }  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( ".- "))  {  return  createInteger(str);  }  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	if(str.startsWith( "- ")||  str.startsWith( ".- "))  {  return  createInteger(str);  }	      if(str.startsWith(   "-   ")||    str.startsWith(   "-   "))    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
35	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-1))  {  return  createBigInteger(str);  }  [CE]  unclosed  string  literal  [FE]        NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-1))  {  return  createBigInteger(str);  }  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	if(str.startsWith( "- ")||  str.startsWith( "-1))  {  return  createBigInteger(str);  }	      if(str.startsWith(   "-   ")||    str.startsWith(   "-0x   "))    {    return    createBigInteger(str);    }    	non-compiled	[CE]  unclosed  string  literal	10	None	replace
36	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "0x "))  {  return  createBigInteger(str);  }  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "0x "))  {  return  createBigInteger(str);  }  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	if(str.startsWith( "- ")||  str.startsWith( "0x "))  {  return  createBigInteger(str);  }	      if(str.startsWith(   "-   ")||    str.startsWith(   "-0x   "))    {    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
37	[BUG]  [BUGGY]  String  lastChar  =  str.charAt(str.length()  -  2);  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  String  lastChar  =  str.charAt(str.length()  -  2);  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	String  lastChar  =  str.charAt(str.length()  -  2);	  String    lastChar    =    str.charAt(str.length());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
38	[BUG]  [BUGGY]  char  lastChar  =  str.charAt(str.length())+  2;  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  char  lastChar  =  str.charAt(str.length())+  2;  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	char  lastChar  =  str.charAt(str.length())+  2;	  char    lastChar    =    str.charAt(str.length())+    1;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
39	[BUG]  [BUGGY]  if(str.startsWith( ".0 ")||  str.startsWith( ".0 "))  {  return  createBigInteger(str);  }  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  if(str.startsWith( ".0 ")||  str.startsWith( ".0 "))  {  return  createBigInteger(str);  }  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	if(str.startsWith( ".0 ")||  str.startsWith( ".0 "))  {  return  createBigInteger(str);  }	      if(str.startsWith(   "-   ")||    str.startsWith(   "-   "))    {    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
40	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-))  {  return  createBigInteger(str);  }  [CE]  unclosed  string  literal  [FE]          NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-))  {  return  createBigInteger(str);  }  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	if(str.startsWith( "- ")||  str.startsWith( "-))  {  return  createBigInteger(str);  }	      if(str.startsWith(   "-   ")||    str.startsWith(   "-   "))    {    return    createBigInteger(str);    }    	non-compiled	[CE]  unclosed  string  literal	14	None	replace
41	[BUG]  [BUGGY]  if(str.startsWith( "-0 ")||  str.startsWith( "-0x "))  {  return  createInteger(str);  }  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  if(str.startsWith( "-0 ")||  str.startsWith( "-0x "))  {  return  createInteger(str);  }  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	if(str.startsWith( "-0 ")||  str.startsWith( "-0x "))  {  return  createInteger(str);  }	      if(str.startsWith(   "-   ")||    str.startsWith(   "-0x   "))    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
42	[BUG]  [BUGGY]  nisip  =  str.charAt(str.length()  -  1);  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  nisip  =  str.charAt(str.length()  -  1);  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	nisip  =  str.charAt(str.length()  -  1);	      if(str.startsWith(   "-   ")||    str.startsWith(   "-0x   "))    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
43	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()));  [CE]  [FE]            NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  String  str  =  str.substring(0,  str.length()));  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	String  str  =  str.substring(0,  str.length()));	      String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  	8	None	replace
44	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "Number  format  exceptions: ");  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "Number  format  exceptions: ");  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException( "Number  format  exceptions: ");	      NumberFormatException    e    =    new    NumberFormatException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
45	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str);  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str);  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException(str);	      NumberFormatException    e    =    new    NumberFormatException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
46	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( ", ");  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( ", ");  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException( ", ");	      NumberFormatException    e    =    new    NumberFormatException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
47	[BUG]  [BUGGY]  char  str  =  str.substring(0,  str.length());  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  char  str  =  str.substring(0,  str.length());  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	char  str  =  str.substring(0,  str.length());	      String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
48	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.charAt(0));  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  Integer  str  =  createInteger(str.charAt(0));  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	Integer  str  =  createInteger(str.charAt(0));	      Integer    str    =    createInteger(str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
49	[BUG]  [BUGGY]  if(str.startsWith( ". ")||  str.startsWith( ". "))  {  return  createInteger(str);  }  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  if(str.startsWith( ". ")||  str.startsWith( ". "))  {  return  createInteger(str);  }  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	if(str.startsWith( ". ")||  str.startsWith( ". "))  {  return  createInteger(str);  }	      if(str.startsWith(   "-   ")||    str.startsWith(   "-   "))    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
50	[BUG]  [BUGGY]  if(str.startsWith( ".0 ")||  str.startsWith( ".0 "))  {  return  createInteger(str);  }  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  if(str.startsWith( ".0 ")||  str.startsWith( ".0 "))  {  return  createInteger(str);  }  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	if(str.startsWith( ".0 ")||  str.startsWith( ".0 "))  {  return  createInteger(str);  }	      if(str.startsWith(   "-   ")||    str.startsWith(   "-   "))    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
51	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " ",  nfe);  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " ",  nfe);  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException( " ",  nfe);	      NumberFormatException    e    =    new    NumberFormatException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
52	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()  -  1));  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()  -  1));  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()  -  1));	      NumberFormatException    e    =    new    NumberFormatException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
53	[BUG]  [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( "-1))  {  return  createBigInteger(str);  }  [CE]  unclosed  string  literal  [FE]        NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( "-1))  {  return  createBigInteger(str);  }  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	if(str.startsWith( "0x ")||  str.startsWith( "-1))  {  return  createBigInteger(str);  }	      if(str.startsWith(   "-   ")||    str.startsWith(   "-   "))    {    return    createBigInteger(str);    }    	non-compiled	[CE]  unclosed  string  literal	14	None	replace
54	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length())+  1;  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  String  str  =  str.substring(0,  str.length())+  1;  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	String  str  =  str.substring(0,  str.length())+  1;	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
55	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(1));  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {  return  createInteger(str);  }    [BUGGY]  Integer  str  =  createInteger(str.substring(1));  [BUGGY]    char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	Integer  str  =  createInteger(str.substring(1));	      Integer    str    =    createInteger(str);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
