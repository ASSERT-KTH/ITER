bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " ",  str.substring(0,  str.length()  -  1));  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " ",  str.substring(0,  str.length()  -  1));  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException( " ",  str.substring(0,  str.length()  -  1));	  NumberFormatException    e    =    new    NumberFormatException(   "   ",    str);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
2	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " ",  mant);  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " ",  mant);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException( " ",  mant);	  NumberFormatException    e    =    new    NumberFormatException(   "   ",    str);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
3	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " ",  str.substring(1));  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " ",  str.substring(1));  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException( " ",  str.substring(1));	  NumberFormatException    e    =    new    NumberFormatException(   "   ",    str);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
4	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.charAt(0),  str.length());  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  Integer  str  =  createInteger(str.charAt(0),  str.length());  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	Integer  str  =  createInteger(str.charAt(0),  str.length());	  Integer    str    =    createInteger(str.charAt(0));    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
5	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.charAt(0),  str.length()  -  1);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  Integer  str  =  createInteger(str.charAt(0),  str.length()  -  1);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	Integer  str  =  createInteger(str.charAt(0),  str.length()  -  1);	  Integer    str    =    createInteger(str.charAt(0));    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
6	[BUG]  [BUGGY]  nisip  =  str.charAt(str.length());  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  nisip  =  str.charAt(str.length());  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	nisip  =  str.charAt(str.length());	  nisip    =    str.charAt(str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
7	[BUG]  [BUGGY]  nisip  =  str.charAt(str.length()  +  1);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  nisip  =  str.charAt(str.length()  +  1);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	nisip  =  str.charAt(str.length()  +  1);	  nisip    =    str.charAt(str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
8	[BUG]  [BUGGY]  nisip  =  str.charAt(str.length())+  1;  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  nisip  =  str.charAt(str.length())+  1;  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	nisip  =  str.charAt(str.length())+  1;	  nisip    =    str.charAt(str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
9	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('-')+  2;  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('-')+  2;  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	int  decPos  =  str.indexOf('.')+  str.indexOf('-')+  2;	  int    decPos    =    str.indexOf('.')+    str.indexOf('-')+    1;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
10	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('-')+  0;  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('-')+  0;  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	int  decPos  =  str.indexOf('.')+  str.indexOf('-')+  0;	  int    decPos    =    str.indexOf('.')+    str.indexOf('-')+    1;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
11	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('-')+  3;  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('-')+  3;  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	int  decPos  =  str.indexOf('.')+  str.indexOf('-')+  3;	  int    decPos    =    str.indexOf('.')+    str.indexOf('-')+    1;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
12	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()));  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()));  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	Integer  str  =  createInteger(str.substring(0,  str.length()));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
13	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(1),  str.length());  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  Integer  str  =  createInteger(str.substring(1),  str.length());  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	Integer  str  =  createInteger(str.substring(1),  str.length());	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
14	[BUG]  [BUGGY]  String  lastChar  =  str.charAt(str.length()  -  1)+  1;  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  String  lastChar  =  str.charAt(str.length()  -  1)+  1;  [BUGGY]      String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	String  lastChar  =  str.charAt(str.length()  -  1)+  1;	  String    lastChar    =    str.charAt(str.length())+    1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
15	[BUG]  [BUGGY]  ||  str.startsWith( "-1))  {  return  createBigInteger(str);  }  [CE]  illegal  start  of  expression  [FE]            NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  ||  str.startsWith( "-1))  {  return  createBigInteger(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	||  str.startsWith( "-1))  {  return  createBigInteger(str);  }	  if(str.startsWith(   "0x   ")||    str.startsWith(   "-1))    {    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
16	[BUG]  [BUGGY]  if(str.startsWith( "0x   ")||  str.startsWith( "-1))  {  return  createInteger(str);  }  [CE]  unclosed  string  literal  [FE]              NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  if(str.startsWith( "0x   ")||  str.startsWith( "-1))  {  return  createInteger(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	if(str.startsWith( "0x   ")||  str.startsWith( "-1))  {  return  createInteger(str);  }	  if(str.startsWith(   "0x   ")||    str.startsWith(   "-1))    {    return    createBigInteger(str);    }    	non-compiled	[CE]  unclosed  string  literal	53	None	replace
17	[BUG]  [BUGGY]  ||  str.startsWith( "-0 "))  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [FE]            NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  ||  str.startsWith( "-0 "))  {  return  createInteger(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	||  str.startsWith( "-0 "))  {  return  createInteger(str);  }	  ||    str.startsWith(   "-0x       "))    {    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
18	[BUG]  [BUGGY]  ||  str.startsWith( "-0 "))  {  return  createBigInteger(str);  }  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  ||  str.startsWith( "-0 "))  {  return  createBigInteger(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	||  str.startsWith( "-0 "))  {  return  createBigInteger(str);  }	  ||    str.startsWith(   "-0x       "))    {    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
19	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  str.length());  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  Integer  str  =  createInteger(str,  str.length());  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	Integer  str  =  createInteger(str,  str.length());	  Integer    str    =    createInteger(str,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
20	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  str.length()  +  1);  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  Integer  str  =  createInteger(str,  str.length()  +  1);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	Integer  str  =  createInteger(str,  str.length()  +  1);	  Integer    str    =    createInteger(str,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
21	[BUG]  [BUGGY]  ||  str.startsWith( "- "))  {  return  createNumber(str);  }  [CE]  illegal  start  of  expression  [FE]            NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  ||  str.startsWith( "- "))  {  return  createNumber(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	||  str.startsWith( "- "))  {  return  createNumber(str);  }	  ||    str.startsWith(   "-       "))    {    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
22	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  mant);  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  Integer  str  =  createInteger(str,  mant);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	Integer  str  =  createInteger(str,  mant);	  Integer    str    =    createInteger(mant);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
23	[BUG]  [BUGGY]  ||  str.startsWith( "0x "))  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  ||  str.startsWith( "0x "))  {  return  createInteger(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	||  str.startsWith( "0x "))  {  return  createInteger(str);  }	  ||    str.startsWith(   "-0x       "))    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
24	[BUG]  [BUGGY]  ||  str.startsWith( ". "))  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  ||  str.startsWith( ". "))  {  return  createInteger(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	||  str.startsWith( ". "))  {  return  createInteger(str);  }	  if(str.startsWith(   ".   ")||    str.startsWith(   ".   "))    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
25	[BUG]  [BUGGY]  ||  str.startsWith( ".0 "))  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  ||  str.startsWith( ".0 "))  {  return  createInteger(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	||  str.startsWith( ".0 "))  {  return  createInteger(str);  }	  if(str.startsWith(   ".0   ")||    str.startsWith(   ".0   "))    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
26	[BUG]  [BUGGY]  if(str.startsWith( "0x   ")||  str.startsWith( "-0x   "))  {  return  createInteger(str);  }  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  if(str.startsWith( "0x   ")||  str.startsWith( "-0x   "))  {  return  createInteger(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	if(str.startsWith( "0x   ")||  str.startsWith( "-0x   "))  {  return  createInteger(str);  }	  if(str.startsWith(   ".0   ")||    str.startsWith(   ".0   "))    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
27	[BUG]  [BUGGY]  if(str.startsWith( "0x   ")||  str.startsWith( "0x   "))  {  return  createInteger(str);  }  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  if(str.startsWith( "0x   ")||  str.startsWith( "0x   "))  {  return  createInteger(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	if(str.startsWith( "0x   ")||  str.startsWith( "0x   "))  {  return  createInteger(str);  }	  if(str.startsWith(   ".0   ")||    str.startsWith(   ".0   "))    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
28	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.length();  [CE]  [FE]                    NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  Integer  str  =  createInteger(str.length();  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	Integer  str  =  createInteger(str.length();	  Integer    str    =    createInteger(str.length()    +    1);    	non-compiled	[CE]  	12	None	replace
29	[BUG]  [BUGGY]  Char  str  =  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  Char  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	Char  str  =  str.substring(0,  str.length()  -  1);	  char    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
30	[BUG]  [BUGGY]  ||  str.startsWith( ".- "))  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  ||  str.startsWith( ".- "))  {  return  createInteger(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	||  str.startsWith( ".- "))  {  return  createInteger(str);  }	  if(str.startsWith(   "-   ")||    str.startsWith(   ".-   "))    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
31	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  2;  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  2;  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  2;	  int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
32	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  3;  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  3;  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  3;	  int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
33	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()));  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()));  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()));	  NumberFormatException    e    =    new    NumberFormatException(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
34	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  str.length());  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  str.length());  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  str.length());	  NumberFormatException    e    =    new    NumberFormatException(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
35	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  str.length()  -  1);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  str.length()  -  1);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  str.length()  -  1);	  NumberFormatException    e    =    new    NumberFormatException(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
36	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  decPos);  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  decPos);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  decPos);	  NumberFormatException    e    =    new    NumberFormatException(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
37	[BUG]  [BUGGY]  ||  str.startsWith( ".0 "))  {  return  createBigInteger(str);  }  [CE]  illegal  start  of  expression  [FE]            NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  ||  str.startsWith( ".0 "))  {  return  createBigInteger(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	||  str.startsWith( ".0 "))  {  return  createBigInteger(str);  }	  if(str.startsWith(   ".0   ")||    str.startsWith(   ".0   "))    {    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
38	[BUG]  [BUGGY]  if(str.startsWith( "0x   ")||  str.startsWith( "-0x   "))  {  return  createBigInteger(str);  }  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  if(str.startsWith( "0x   ")||  str.startsWith( "-0x   "))  {  return  createBigInteger(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	if(str.startsWith( "0x   ")||  str.startsWith( "-0x   "))  {  return  createBigInteger(str);  }	  if(str.startsWith(   ".0   ")||    str.startsWith(   ".0   "))    {    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
39	[BUG]  [BUGGY]  Integer  str  =  createNumber(str.length()  -  1);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  Integer  str  =  createNumber(str.length()  -  1);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	Integer  str  =  createNumber(str.length()  -  1);	  Integer    str    =    createNumber(str.length());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
40	[BUG]  [BUGGY]  Integer  str  =  createNumber(str.substring(0,  str.length()  -  1));  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  Integer  str  =  createNumber(str.substring(0,  str.length()  -  1));  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	Integer  str  =  createNumber(str.substring(0,  str.length()  -  1));	  Integer    str    =    createNumber(str.length());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
41	[BUG]  [BUGGY]  Integer  str  =  createNumber(str.length()  +  1);  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  Integer  str  =  createNumber(str.length()  +  1);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	Integer  str  =  createNumber(str.length()  +  1);	  Integer    str    =    createNumber(str.length());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
42	[BUG]  [BUGGY]  ||  str.startsWith( "- "))  {  return  createNull(str);  }  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  ||  str.startsWith( "- "))  {  return  createNull(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	||  str.startsWith( "- "))  {  return  createNull(str);  }	  ||    str.startsWith(   "-       "))    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
43	[BUG]  [BUGGY]  ||  str.startsWith( "0x   "))  {  return  createBigInteger(str);  }  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  ||  str.startsWith( "0x   "))  {  return  createBigInteger(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	||  str.startsWith( "0x   "))  {  return  createBigInteger(str);  }	  if(str.startsWith(   "-   ")||    str.startsWith(   "0x   "))    {    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
44	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "0x "))  {  return  createInteger(str);  }  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "0x "))  {  return  createInteger(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	if(str.startsWith( "- ")||  str.startsWith( "0x "))  {  return  createInteger(str);  }	  if(str.startsWith(   "-   ")||    str.startsWith(   "0x   "))    {    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
45	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " ",  null);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " ",  null);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException( " ",  null);	  NumberFormatException    e    =    new    NumberFormatException(   ",   ");    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
46	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " ",  numeric);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " ",  numeric);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException( " ",  numeric);	  NumberFormatException    e    =    new    NumberFormatException(   ",   ");    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
47	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1));  [CE]  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1));  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	String  str  =  str.substring(0,  str.length()  -  1));	  String    str    =    str.substring(0,    str.length()));    	non-compiled	[CE]  	43	None	replace
48	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2));  [CE]  [FE]                  NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2));  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	String  str  =  str.substring(0,  str.length()  -  2));	  String    str    =    str.substring(0,    str.length()));    	non-compiled	[CE]  	43	None	replace
49	[BUG]  [BUGGY]  String  lastChar  =  str.charAt(str.length())+  2;  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  String  lastChar  =  str.charAt(str.length())+  2;  [BUGGY]      String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	String  lastChar  =  str.charAt(str.length())+  2;	  char    lastChar    =    str.charAt(str.length())+    2;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
50	[BUG]  [BUGGY]  char  lastChar  =  str.charAt(str.length()  -  1)+  2;  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  char  lastChar  =  str.charAt(str.length()  -  1)+  2;  [BUGGY]      String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	char  lastChar  =  str.charAt(str.length()  -  1)+  2;	  char    lastChar    =    str.charAt(str.length())+    2;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
51	[BUG]  [BUGGY]  Character  lastChar  =  str.charAt(str.length());  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  Character  lastChar  =  str.charAt(str.length());  [BUGGY]      String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	Character  lastChar  =  str.charAt(str.length());	  String    lastChar    =    str.charAt(str.length()    -    2);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
52	[BUG]  [BUGGY]  char  lastCHAR  =  str.charAt(str.length());  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  char  lastCHAR  =  str.charAt(str.length());  [BUGGY]      String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	char  lastCHAR  =  str.charAt(str.length());	  String    lastChar    =    str.charAt(str.length()    -    2);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
53	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "Number  format  exception: "  +  str);  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "Number  format  exception: "  +  str);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException( "Number  format  exception: "  +  str);	  NumberFormatException    e    =    new    NumberFormatException(   "Number    format    exception:   ");    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
54	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "Number  format  exception: "  +  str.length());  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "Number  format  exception: "  +  str.length());  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException( "Number  format  exception: "  +  str.length());	  NumberFormatException    e    =    new    NumberFormatException(   "Number    format    exception:   ");    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
55	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "Number  format  exception: "  +  str.substring(1));  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "Number  format  exception: "  +  str.substring(1));  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException( "Number  format  exception: "  +  str.substring(1));	  NumberFormatException    e    =    new    NumberFormatException(   "Number    format    exception:   ");    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
56	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " ",  str.length()  +  1);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " ",  str.length()  +  1);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException( " ",  str.length()  +  1);	  NumberFormatException    e    =    new    NumberFormatException(   "   ",    str.length());    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
57	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " ",  str.length()  -  1);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " ",  str.length()  -  1);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException( " ",  str.length()  -  1);	  NumberFormatException    e    =    new    NumberFormatException(   "   ",    str.length());    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
58	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "Unexpected  number  length: "  +  str.length());  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "Unexpected  number  length: "  +  str.length());  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException( "Unexpected  number  length: "  +  str.length());	  NumberFormatException    e    =    new    NumberFormatException(   "   ",    str.length());    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
59	[BUG]  [BUGGY]  ||  str.startsWith( "-))  {  return  createBigInteger(str);  }  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  ||  str.startsWith( "-))  {  return  createBigInteger(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	||  str.startsWith( "-))  {  return  createBigInteger(str);  }	  if(str.startsWith(   "-   ")||    str.startsWith(   "-))    {    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
60	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  1),  decPos);  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  1),  decPos);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	Integer  str  =  createInteger(str.substring(0,  str.length()  -  1),  decPos);	  Integer    str    =    createInteger(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
61	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  +  1));  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  +  1));  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	Integer  str  =  createInteger(str.substring(0,  str.length()  +  1));	  Integer    str    =    createInteger(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
62	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "Number  format  exceptions: "  +  str);  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "Number  format  exceptions: "  +  str);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException( "Number  format  exceptions: "  +  str);	  NumberFormatException    e    =    new    NumberFormatException(   "Number    format    exceptions:   ");    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
63	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "Number  format  exceptions: "  +  str.length());  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "Number  format  exceptions: "  +  str.length());  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException( "Number  format  exceptions: "  +  str.length());	  NumberFormatException    e    =    new    NumberFormatException(   "Number    format    exceptions:   ");    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
64	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "Number  format  exceptions: ",  str);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "Number  format  exceptions: ",  str);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException( "Number  format  exceptions: ",  str);	  NumberFormatException    e    =    new    NumberFormatException(   "Number    format    exceptions:   ");    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
65	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('E');  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('E');  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	int  decPos  =  str.indexOf('.')+  str.indexOf('E');	  int    decPos    =    str.indexOf('.')+    str.indexOf('e');    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
66	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('-',  0);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('-',  0);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	int  decPos  =  str.indexOf('.')+  str.indexOf('-',  0);	  int    decPos    =    str.indexOf('.')+    str.indexOf('-');    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
67	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('-'  +  1);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('-'  +  1);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	int  decPos  =  str.indexOf('.')+  str.indexOf('-'  +  1);	  int    decPos    =    str.indexOf('.')+    str.indexOf('-');    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
68	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1)+  1;  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1)+  1;  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	String  str  =  str.substring(0,  str.length()  -  1)+  1;	  String    str    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
69	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1)+  1;  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1)+  1;  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	String  str  =  str.substring(0,  str.length()  +  1)+  1;	  String    str    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
70	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " "  +  str,  nfe);  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " "  +  str,  nfe);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException( " "  +  str,  nfe);	  NumberFormatException    e    =    new    NumberFormatException(   "   ",    nfe);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
71	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " "  +  str.substring(0,  str.length()  -  1));  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " "  +  str.substring(0,  str.length()  -  1));  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException( " "  +  str.substring(0,  str.length()  -  1));	  NumberFormatException    e    =    new    NumberFormatException(   "   ",    nfe);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
72	[BUG]  [BUGGY]  String  lastChar  =  str.charAt(str.length()  +  1)+  1;  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  String  lastChar  =  str.charAt(str.length()  +  1)+  1;  [BUGGY]      String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	String  lastChar  =  str.charAt(str.length()  +  1)+  1;	  char    lastChar    =    str.charAt(str.length()    +    1)+    1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
73	[BUG]  [BUGGY]  char  lastChar  =  str.charAt(str.length()  /  1)+  1;  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  char  lastChar  =  str.charAt(str.length()  /  1)+  1;  [BUGGY]      String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	char  lastChar  =  str.charAt(str.length()  /  1)+  1;	  char    lastChar    =    str.charAt(str.length()    +    1)+    1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
74	[BUG]  [BUGGY]  ||  str.startsWith( "-1))  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  ||  str.startsWith( "-1))  {  return  createInteger(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	||  str.startsWith( "-1))  {  return  createInteger(str);  }	  if(str.startsWith(   "-   ")||    str.startsWith(   "-1))    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
75	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-1))  {  return  createNumber(str);  }  [CE]  unclosed  string  literal  [FE]                    NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-1))  {  return  createNumber(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	if(str.startsWith( "- ")||  str.startsWith( "-1))  {  return  createNumber(str);  }	  if(str.startsWith(   "-   ")||    str.startsWith(   "-1))    {    return    createInteger(str);    }    	non-compiled	[CE]  unclosed  string  literal	23	None	replace
76	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  2;  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  2;  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  2;	  int    decPos    =    str.indexOf('.')+    str.indexOf('e')+    1;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
77	[BUG]  [BUGGY]  char  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  char  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	char  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;	  int    decPos    =    str.indexOf('.')+    str.indexOf('e')+    1;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
78	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(mant);  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(mant);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException(mant);	  NumberFormatException    e    =    new    NumberFormatException(str);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
79	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.length());  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.length());  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException(str.length());	  NumberFormatException    e    =    new    NumberFormatException(str);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
80	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str,  dec);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str,  dec);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException(str,  dec);	  NumberFormatException    e    =    new    NumberFormatException(str);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
81	[BUG]  [BUGGY]  if(str.startsWith( "-0 ")||  str.startsWith( "-0x "))  {  return  createNumber(str);  }  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  if(str.startsWith( "-0 ")||  str.startsWith( "-0x "))  {  return  createNumber(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	if(str.startsWith( "-0 ")||  str.startsWith( "-0x "))  {  return  createNumber(str);  }	  if(str.startsWith(   "-0   ")||    str.startsWith(   "-0x   "))    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
82	[BUG]  [BUGGY]  String  mant  =  str.substring(0,  str.length());  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  String  mant  =  str.substring(0,  str.length());  [BUGGY]      String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	String  mant  =  str.substring(0,  str.length());	  String    mant    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
83	[BUG]  [BUGGY]  String  mant  =  str.substring(0,  str.length()  +  1);  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  String  mant  =  str.substring(0,  str.length()  +  1);  [BUGGY]      String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	String  mant  =  str.substring(0,  str.length()  +  1);	  String    mant    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
84	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  1));  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  1));  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	Integer  str  =  createInteger(str.substring(0,  1));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
85	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(2));  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  Integer  str  =  createInteger(str.substring(2));  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	Integer  str  =  createInteger(str.substring(2));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
86	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-))  {  return  createInteger(str);  }  [CE]  unclosed  string  literal  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-))  {  return  createInteger(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	if(str.startsWith( "- ")||  str.startsWith( "-))  {  return  createInteger(str);  }	  if(str.startsWith(   "-   ")||    str.startsWith(   "-   "))    {    return    createNumber(str);    }    	non-compiled	[CE]  unclosed  string  literal	3	None	replace
87	[BUG]  [BUGGY]  if(str.startsWith( ".0x ")||  str.startsWith( ".0x "))  {  return  createBigInteger(str);  }  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  if(str.startsWith( ".0x ")||  str.startsWith( ".0x "))  {  return  createBigInteger(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	if(str.startsWith( ".0x ")||  str.startsWith( ".0x "))  {  return  createBigInteger(str);  }	  if(str.startsWith(   "-   ")||    str.startsWith(   "0x   "))    {    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
88	[BUG]  [BUGGY]  if(str.startsWith( ".- ")||  str.startsWith( ".- "))  {  return  createBigInteger(str);  }  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  if(str.startsWith( ".- ")||  str.startsWith( ".- "))  {  return  createBigInteger(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	if(str.startsWith( ".- ")||  str.startsWith( ".- "))  {  return  createBigInteger(str);  }	  if(str.startsWith(   "-   ")||    str.startsWith(   "0x   "))    {    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
89	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  return  createInteger(str);  }  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  return  createInteger(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  return  createInteger(str);  }	  if(str.startsWith(   ".-   ")||    str.startsWith(   ".-   "))    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
90	[BUG]  [BUGGY]  if(str.startsWith( "0 ")||  str.startsWith( "-0 "))  {  return  createInteger(str);  }  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  if(str.startsWith( "0 ")||  str.startsWith( "-0 "))  {  return  createInteger(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	if(str.startsWith( "0 ")||  str.startsWith( "-0 "))  {  return  createInteger(str);  }	  if(str.startsWith(   ".0   ")||    str.startsWith(   ".0   "))    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
91	[BUG]  [BUGGY]  if(str.startsWith( "0 ")||  str.startsWith( "0 "))  {  return  createInteger(str);  }  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  if(str.startsWith( "0 ")||  str.startsWith( "0 "))  {  return  createInteger(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	if(str.startsWith( "0 ")||  str.startsWith( "0 "))  {  return  createInteger(str);  }	  if(str.startsWith(   ".0   ")||    str.startsWith(   ".0   "))    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
92	[BUG]  [BUGGY]  if(str.startsWith( ".- ")||  str.startsWith( ".-1))  {  return  createInteger(str);  }  [CE]  unclosed  string  literal  [FE]                  NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  if(str.startsWith( ".- ")||  str.startsWith( ".-1))  {  return  createInteger(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	if(str.startsWith( ".- ")||  str.startsWith( ".-1))  {  return  createInteger(str);  }	  if(str.startsWith(   "-   ")||    str.startsWith(   "-1))    {    return    createInteger(str);    }    	non-compiled	[CE]  unclosed  string  literal	23	None	replace
93	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1  +  1;  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1  +  1;  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1  +  1;	  int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
94	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str,  nfe);  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str,  nfe);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException(str,  nfe);	  NumberFormatException    e    =    new    NumberFormatException(str);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
95	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.getMessage());  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.getMessage());  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException(str.getMessage());	  NumberFormatException    e    =    new    NumberFormatException(str);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
96	[BUG]  [BUGGY]  String  mant  =  str.substring(0,  str.length())+  1;  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  String  mant  =  str.substring(0,  str.length())+  1;  [BUGGY]      String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	String  mant  =  str.substring(0,  str.length())+  1;	  String    mant    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
97	[BUG]  [BUGGY]  Integer  str  =  createNumber(mant);  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  Integer  str  =  createNumber(mant);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	Integer  str  =  createNumber(mant);	  Integer    str    =    createInteger(mant);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
98	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1));  [CE]  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1));  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	String  str  =  str.substring(0,  str.length()  +  1));	  String    str    =    str.substring(0,    str.length()));    	non-compiled	[CE]  	43	None	replace
99	[BUG]  [BUGGY]  if(str.startsWith( "-0 ")||  str.startsWith( "-1))  {  return  createBigInteger(str);  }  [CE]  unclosed  string  literal  [FE]            NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  if(str.startsWith( "-0 ")||  str.startsWith( "-1))  {  return  createBigInteger(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	if(str.startsWith( "-0 ")||  str.startsWith( "-1))  {  return  createBigInteger(str);  }	  if(str.startsWith(   "0x   ")||    str.startsWith(   "-1))    {    return    createBigInteger(str);    }    	non-compiled	[CE]  unclosed  string  literal	53	None	replace
100	[BUG]  [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( ".-1))  {  return  createBigInteger(str);  }  [CE]  unclosed  string  literal  [FE]              NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( ".-1))  {  return  createBigInteger(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	if(str.startsWith( "0x ")||  str.startsWith( ".-1))  {  return  createBigInteger(str);  }	  if(str.startsWith(   "0x   ")||    str.startsWith(   "-1))    {    return    createBigInteger(str);    }    	non-compiled	[CE]  unclosed  string  literal	53	None	replace
101	[BUG]  [BUGGY]  int  lastChar  =  str.charAt(str.length())+  1;  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  int  lastChar  =  str.charAt(str.length())+  1;  [BUGGY]      String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	int  lastChar  =  str.charAt(str.length())+  1;	  String    lastChar    =    str.charAt(str.length())+    1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
102	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str,  null);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str,  null);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException(str,  null);	  NumberFormatException    e    =    new    NumberFormatException(   ",   ");    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
103	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " ",  NUMBER_ZERO);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " ",  NUMBER_ZERO);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException( " ",  NUMBER_ZERO);	  NumberFormatException    e    =    new    NumberFormatException(   ",   ");    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
104	[BUG]  [BUGGY]  if(str.startsWith( "-0 ")||  str.startsWith( "-0 "))  {  return  createBigInteger(str);  }  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  if(str.startsWith( "-0 ")||  str.startsWith( "-0 "))  {  return  createBigInteger(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	if(str.startsWith( "-0 ")||  str.startsWith( "-0 "))  {  return  createBigInteger(str);  }	  if(str.startsWith(   ".0   ")||    str.startsWith(   ".0   "))    {    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
105	[BUG]  [BUGGY]  if(str.startsWith( "0 ")||  str.startsWith( "-0 "))  {  return  createBigInteger(str);  }  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  if(str.startsWith( "0 ")||  str.startsWith( "-0 "))  {  return  createBigInteger(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	if(str.startsWith( "0 ")||  str.startsWith( "-0 "))  {  return  createBigInteger(str);  }	  if(str.startsWith(   ".0   ")||    str.startsWith(   ".0   "))    {    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
106	[BUG]  [BUGGY]  if(str.startsWith( "0 ")||  str.startsWith( "0 "))  {  return  createBigInteger(str);  }  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  if(str.startsWith( "0 ")||  str.startsWith( "0 "))  {  return  createBigInteger(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	if(str.startsWith( "0 ")||  str.startsWith( "0 "))  {  return  createBigInteger(str);  }	  if(str.startsWith(   ".0   ")||    str.startsWith(   ".0   "))    {    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
107	[BUG]  [BUGGY]  char  lastChar  =  str.charAt(str.length()  -  2)+  2;  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  char  lastChar  =  str.charAt(str.length()  -  2)+  2;  [BUGGY]      String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	char  lastChar  =  str.charAt(str.length()  -  2)+  2;	  char    lastChar    =    str.charAt(str.length())+    2;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
108	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1  +  1;  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1  +  1;  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1  +  1;	  int    decPos    =    str.indexOf('.')+    str.indexOf('e')+    1;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
109	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('-')+  1  +  1;  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('-')+  1  +  1;  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	int  decPos  =  str.indexOf('.')+  str.indexOf('-')+  1  +  1;	  int    decPos    =    str.indexOf('.')+    str.indexOf('-')+    1;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
110	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( ", ",  str.length());  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( ", ",  str.length());  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException( ", ",  str.length());	  NumberFormatException    e    =    new    NumberFormatException(   "   ",    str.length());    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
111	[BUG]  [BUGGY]  char  lastChar  =  str.charAt(str.length()  -  1)+  3;  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  char  lastChar  =  str.charAt(str.length()  -  1)+  3;  [BUGGY]      String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	char  lastChar  =  str.charAt(str.length()  -  1)+  3;	  char    lastChar    =    str.charAt(str.length()    -    1)+    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
112	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  1),  0);  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  1),  0);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	Integer  str  =  createInteger(str.substring(0,  str.length()  -  1),  0);	  Integer    str    =    createInteger(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
113	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( ", ",  str);  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( ", ",  str);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException( ", ",  str);	  NumberFormatException    e    =    new    NumberFormatException(   "   ",    str);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
114	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  3);  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  3);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	String  str  =  str.substring(0,  str.length()  -  3);	  String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
115	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  4);  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  4);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	String  str  =  str.substring(0,  str.length()  -  4);	  String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
116	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( ", ",  null);  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( ", ",  null);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException( ", ",  null);	  NumberFormatException    e    =    new    NumberFormatException(   "   ",    nfe);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
117	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-0 "))  {  return  createInteger(str);  }  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-0 "))  {  return  createInteger(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	if(str.startsWith( "- ")||  str.startsWith( "-0 "))  {  return  createInteger(str);  }	  if(str.startsWith(   "-   ")||    str.startsWith(   ".-   "))    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
118	[BUG]  [BUGGY]  Integer  str  =  createInteger(mant,  str.length());  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  Integer  str  =  createInteger(mant,  str.length());  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	Integer  str  =  createInteger(mant,  str.length());	  Integer    str    =    createInteger(str,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
119	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('e'  +  1);  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('e'  +  1);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	int  decPos  =  str.indexOf('.')+  str.indexOf('e'  +  1);	  int    decPos    =    str.indexOf('.')+    str.indexOf('e');    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
120	[BUG]  [BUGGY]  ||  str.startsWith( "- "))  {  return  createBigDecimal(str);  }  [CE]  illegal  start  of  expression  [FE]            NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  ||  str.startsWith( "- "))  {  return  createBigDecimal(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	||  str.startsWith( "- "))  {  return  createBigDecimal(str);  }	  ||    str.startsWith(   "-       "))    {    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
121	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "Number  format  exception: ",  str);  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "Number  format  exception: ",  str);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException( "Number  format  exception: ",  str);	  NumberFormatException    e    =    new    NumberFormatException(   "Number    format    exception:   ");    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
122	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()  -  1)+  1);  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()  -  1)+  1);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()  -  1)+  1);	  NumberFormatException    e    =    new    NumberFormatException(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
123	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  1)+  1);  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  1)+  1);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	Integer  str  =  createInteger(str.substring(0,  str.length()  -  1)+  1);	  Integer    str    =    createInteger(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
124	[BUG]  [BUGGY]  if(str.startsWith( "-0x ")||  str.startsWith( "-1))  {  return  createBigInteger(str);  }  [CE]  unclosed  string  literal  [FE]            NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  if(str.startsWith( "-0x ")||  str.startsWith( "-1))  {  return  createBigInteger(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	if(str.startsWith( "-0x ")||  str.startsWith( "-1))  {  return  createBigInteger(str);  }	  if(str.startsWith(   "0x   ")||    str.startsWith(   "-1))    {    return    createBigInteger(str);    }    	non-compiled	[CE]  unclosed  string  literal	53	None	replace
125	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " ",  nfe,  str);  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " ",  nfe,  str);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException( " ",  nfe,  str);	  NumberFormatException    e    =    new    NumberFormatException(   "   ",    nfe);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
126	[BUG]  [BUGGY]  Integer  str  =  createBigInteger(str.length());  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  Integer  str  =  createBigInteger(str.length());  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	Integer  str  =  createBigInteger(str.length());	  Integer    str    =    createInteger(str.length());    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
127	[BUG]  [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( "0x "))  {  return  createBigInteger(str);  }  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( "0x "))  {  return  createBigInteger(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	if(str.startsWith( "0x ")||  str.startsWith( "0x "))  {  return  createBigInteger(str);  }	  if(str.startsWith(   ".0   ")||    str.startsWith(   ".0   "))    {    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
128	[BUG]  [BUGGY]  int  lastChar  =  str.charAt(str.length());  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  int  lastChar  =  str.charAt(str.length());  [BUGGY]      String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	int  lastChar  =  str.charAt(str.length());	  String    lastChar    =    str.charAt(str.length()    -    2);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
129	[BUG]  [BUGGY]  Integer  str  =  createBigInteger(str);  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  Integer  str  =  createBigInteger(str);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	Integer  str  =  createBigInteger(str);	  Integer    str    =    createInteger(mant);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
130	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('-')/  1;  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('-')/  1;  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	int  decPos  =  str.indexOf('.')+  str.indexOf('-')/  1;	  int    decPos    =    str.indexOf('.')+    str.indexOf('-')+    1;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
131	[BUG]  [BUGGY]  String  str  =  str.substring(1,  str.length()  -  1);  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  String  str  =  str.substring(1,  str.length()  -  1);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	String  str  =  str.substring(1,  str.length()  -  1);	  String    str    =    str.substring(0,    str.length();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
132	[BUG]  [BUGGY]  if(str.startsWith( ". ")||  str.startsWith( ".- "))  {  return  createInteger(str);  }  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  if(str.startsWith( ". ")||  str.startsWith( ".- "))  {  return  createInteger(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	if(str.startsWith( ". ")||  str.startsWith( ".- "))  {  return  createInteger(str);  }	  if(str.startsWith(   "-   ")||    str.startsWith(   ".-   "))    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
133	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  dec);  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  dec);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()  -  1),  dec);	  NumberFormatException    e    =    new    NumberFormatException(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
134	[BUG]  [BUGGY]  char  lastChar  =  str.charAt(str.length()  -  1)/  1;  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  char  lastChar  =  str.charAt(str.length()  -  1)/  1;  [BUGGY]      String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	char  lastChar  =  str.charAt(str.length()  -  1)/  1;	  char    lastChar    =    str.charAt(str.length()    -    1)+    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
135	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " "  +  str);  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " "  +  str);  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException( " "  +  str);	  NumberFormatException    e    =    new    NumberFormatException(   "   ",    str);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
136	[BUG]  [BUGGY]  ||  str.startsWith( ". "))  {  return  createBigInteger(str);  }  [CE]  illegal  start  of  expression  [FE]            NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  ||  str.startsWith( ". "))  {  return  createBigInteger(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	||  str.startsWith( ". "))  {  return  createBigInteger(str);  }	  ||    str.startsWith(   "-       "))    {    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
137	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('e')/  1;  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('e')/  1;  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	int  decPos  =  str.indexOf('.')+  str.indexOf('e')/  1;	  int    decPos    =    str.indexOf('.')+    str.indexOf('e')+    1;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
138	[BUG]  [BUGGY]  if(str.startsWith( ". ")||  str.startsWith( ". "))  {  return  createBigInteger(str);  }  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  if(str.startsWith( ". ")||  str.startsWith( ". "))  {  return  createBigInteger(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	if(str.startsWith( ". ")||  str.startsWith( ". "))  {  return  createBigInteger(str);  }	  if(str.startsWith(   "-   ")||    str.startsWith(   "-))    {    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
139	[BUG]  [BUGGY]  String  mant  =  str.substring(0,  str.length()));  [CE]  [FE]                    NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  String  mant  =  str.substring(0,  str.length()));  [BUGGY]      String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	String  mant  =  str.substring(0,  str.length()));	  String    mant    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	28	None	replace
140	[BUG]  [BUGGY]  if(str.startsWith( "-0 ")||  str.startsWith( "-0 "))  {  return  createInteger(str);  }  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  if(str.startsWith( "-0 ")||  str.startsWith( "-0 "))  {  return  createInteger(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	if(str.startsWith( "-0 ")||  str.startsWith( "-0 "))  {  return  createInteger(str);  }	  if(str.startsWith(   "-0   ")||    str.startsWith(   "-0x   "))    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
141	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('E')/  1;  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('E')/  1;  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	int  decPos  =  str.indexOf('.')+  str.indexOf('E')/  1;	  int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
142	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('E')-  1;  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  int  decPos  =  str.indexOf('.')+  str.indexOf('E')-  1;  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	int  decPos  =  str.indexOf('.')+  str.indexOf('E')-  1;	  int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
143	[BUG]  [BUGGY]  if(str.startsWith( ".0x ")||  str.startsWith( ".0x "))  {  return  createInteger(str);  }  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  if(str.startsWith( ".0x ")||  str.startsWith( ".0x "))  {  return  createInteger(str);  }  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	if(str.startsWith( ".0x ")||  str.startsWith( ".0x "))  {  return  createInteger(str);  }	  if(str.startsWith(   ".0   ")||    str.startsWith(   ".0   "))    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
144	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " "  +  str.length());  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " "  +  str.length());  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	NumberFormatException  e  =  new  NumberFormatException( " "  +  str.length());	  NumberFormatException    e    =    new    NumberFormatException(   "   ",    str.length());    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
145	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(2,  str.length()));  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  Integer  str  =  createInteger(str.substring(2,  str.length()));  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	Integer  str  =  createInteger(str.substring(2,  str.length()));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
146	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(2,  str.length()  -  1));  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  Integer  str  =  createInteger(str.substring(2,  str.length()  -  1));  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	Integer  str  =  createInteger(str.substring(2,  str.length()  -  1));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
147	[BUG]  [BUGGY]  char  str  =  str.substring(0,  str.length())+  1;  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }      [BUGGY]  char  str  =  str.substring(0,  str.length())+  1;  [BUGGY]      char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	461	461	1	replace	char  str  =  str.substring(0,  str.length())+  1;	  String    str    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
