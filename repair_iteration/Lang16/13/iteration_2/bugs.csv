bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos);  [CE]  not  a  statement  [FE]            NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(decPos  +  1,  expPos);	      String    str    =    str.substring(decPos    +    1);    	non-compiled	[CE]  not  a  statement	14	None	replace
2	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  2);  [CE]  not  a  statement  [FE]              NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  String  str  =  str.substring(decPos  +  2);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(decPos  +  2);	      String    str    =    str.substring(decPos    +    1);    	non-compiled	[CE]  not  a  statement	14	None	replace
3	[BUG]  [BUGGY]  String  str  =  str.substring(0,  decPos  +  1);  [CE]  not  a  statement  [FE]                NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  String  str  =  str.substring(0,  decPos  +  1);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(0,  decPos  +  1);	      String    str    =    str.substring(decPos    +    1);    	non-compiled	[CE]  not  a  statement	14	None	replace
4	[BUG]  [BUGGY]  throw  new  NumberFormatException(e,  dec  + "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  throw  new  NumberFormatException(e,  dec  + "  is  not  a  valid  number.   ");  [BUGGY]      }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(e,  dec  + "  is  not  a  valid  number.   ");	  throw    new    NumberFormatException(dec    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	11	None	replace
5	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.getNumberFormatException(e);  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  NumberFormatException  str  =  nfe.getNumberFormatException(e);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  nfe.getNumberFormatException(e);	      NumberFormatException    str    =    nfe.getNumberFormatException();    	non-compiled	[CE]  not  a  statement	10	None	replace
6	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.getNumberFormatException(str);  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  NumberFormatException  str  =  nfe.getNumberFormatException(str);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  nfe.getNumberFormatException(str);	      NumberFormatException    str    =    nfe.getNumberFormatException();    	non-compiled	[CE]  not  a  statement	10	None	replace
7	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.getNumberFormatException( " ");  [CE]  not  a  statement  [FE]            NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  NumberFormatException  str  =  nfe.getNumberFormatException( " ");  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  nfe.getNumberFormatException( " ");	      NumberFormatException    str    =    nfe.getNumberFormatException();    	non-compiled	[CE]  not  a  statement	10	None	replace
8	[BUG]  [BUGGY]  throw  new  NumberFormatException(e,  numeric  + "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]            NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  throw  new  NumberFormatException(e,  numeric  + "  is  not  a  valid  number.   ");  [BUGGY]      }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(e,  numeric  + "  is  not  a  valid  number.   ");	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	8	None	replace
9	[BUG]  [BUGGY]  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ",  nfe);  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ",  nfe);  [BUGGY]      }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ",  nfe);	  throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.   ",    e);    	non-compiled	[CE]  not  a  statement	7	None	replace
10	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.   ",  str);  [CE]  not  a  statement  [FE]            NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.   ",  str);  [BUGGY]      }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.   ",  str);	  throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.   ",    e);    	non-compiled	[CE]  not  a  statement	7	None	replace
11	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  +  str  + "  is  not  a  valid  number.n ");  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  throw  new  NumberFormatException( " "  +  str  + "  is  not  a  valid  number.n ");  [BUGGY]      }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException( " "  +  str  + "  is  not  a  valid  number.n ");	  throw    new    NumberFormatException(   "   "    +    str    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	6	None	replace
12	[BUG]  [BUGGY]  throw  new  NumberFormatException( " ",  nfe  +  str  + "  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  throw  new  NumberFormatException( " ",  nfe  +  str  + "  is  not  a  valid  number. ");  [BUGGY]      }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException( " ",  nfe  +  str  + "  is  not  a  valid  number. ");	  throw    new    NumberFormatException(   "   "    +    str    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	6	None	replace
13	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(numeric.getMessage());  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(numeric.getMessage());  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  new  NumberFormatException(numeric.getMessage());	      NumberFormatException    str    =    e.getMessage();    	non-compiled	[CE]  not  a  statement	2	None	replace
14	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(numeric,  e.getMessage());  [CE]  not  a  statement  [FE]            NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(numeric,  e.getMessage());  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  new  NumberFormatException(numeric,  e.getMessage());	      NumberFormatException    str    =    e.getMessage();    	non-compiled	[CE]  not  a  statement	2	None	replace
15	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException( " ",  nfe);  [CE]  not  a  statement  [FE]                NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  NumberFormatException  str  =  new  NumberFormatException( " ",  nfe);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  new  NumberFormatException( " ",  nfe);	      NumberFormatException    str    =    new    NumberFormatException(   "   ");    	non-compiled	[CE]  not  a  statement	5	None	replace
16	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException( ", ");  [CE]  not  a  statement  [FE]                  NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  NumberFormatException  str  =  new  NumberFormatException( ", ");  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  new  NumberFormatException( ", ");	      NumberFormatException    str    =    new    NumberFormatException(   "   ");    	non-compiled	[CE]  not  a  statement	5	None	replace
17	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException( " ",  e);  [CE]  not  a  statement  [FE]                    NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  NumberFormatException  str  =  new  NumberFormatException( " ",  e);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  new  NumberFormatException( " ",  e);	      NumberFormatException    str    =    new    NumberFormatException(   "   ");    	non-compiled	[CE]  not  a  statement	5	None	replace
18	[BUG]  [BUGGY]  String  str  =  nfe.toString();  [CE]  not  a  statement  [FE]              NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  String  str  =  nfe.toString();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  nfe.toString();	      String    str    =    nfe.getMessage();    	non-compiled	[CE]  not  a  statement	4	None	replace
19	[BUG]  [BUGGY]  String  str  =  nfe.getMessage()  + "  is  not  a  valid  number.   ";  [CE]  not  a  statement  [FE]                NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  String  str  =  nfe.getMessage()  + "  is  not  a  valid  number.   ";  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  nfe.getMessage()  + "  is  not  a  valid  number.   ";	      String    str    =    nfe.getMessage();    	non-compiled	[CE]  not  a  statement	4	None	replace
20	[BUG]  [BUGGY]  String  str  =  nfe.getMessage()  + "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]                  NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  String  str  =  nfe.getMessage()  + "  is  not  a  valid  number.   ");  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  nfe.getMessage()  + "  is  not  a  valid  number.   ");	      String    str    =    nfe.getMessage();    	non-compiled	[CE]  not  a  statement	4	None	replace
21	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length());  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  String  str  =  str.substring(0,  str.length());  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(0,  str.length());	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	12	None	replace
22	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1);  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(0,  str.length()  +  1);	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	12	None	replace
23	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2);  [CE]  not  a  statement  [FE]            NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(0,  str.length()  -  2);	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	12	None	replace
24	[BUG]  [BUGGY]  throw  new  NumberFormatException(e,  str  + "  is  not  a  valid  number. ",  nfe);  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  throw  new  NumberFormatException(e,  str  + "  is  not  a  valid  number. ",  nfe);  [BUGGY]      }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(e,  str  + "  is  not  a  valid  number. ",  nfe);	  throw    new    NumberFormatException(e,    str    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	9	None	replace
25	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  +  nfe  + "  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  throw  new  NumberFormatException( " "  +  nfe  + "  is  not  a  valid  number. ");  [BUGGY]      }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException( " "  +  nfe  + "  is  not  a  valid  number. ");	  throw    new    NumberFormatException(e,    str    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	9	None	replace
26	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.toString();  [CE]  not  a  statement  [FE]            NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  NumberFormatException  str  =  nfe.toString();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  nfe.toString();	      NumberFormatException    str    =    nfe.getMessage();    	non-compiled	[CE]  not  a  statement	3	None	replace
27	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.createMessage();  [CE]  not  a  statement  [FE]              NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  NumberFormatException  str  =  nfe.createMessage();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  nfe.createMessage();	      NumberFormatException    str    =    nfe.getMessage();    	non-compiled	[CE]  not  a  statement	3	None	replace
28	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  str.length()  -  1);  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  String  str  =  str.substring(decPos  +  1,  str.length()  -  1);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(decPos  +  1,  str.length()  -  1);	      String    str    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	13	None	replace
29	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  str.length());  [CE]  not  a  statement  [FE]            NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  str.length());  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(0,  str.length()  -  1,  str.length());	      String    str    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	13	None	replace
30	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  str.length()  -  2);  [CE]  not  a  statement  [FE]              NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  String  str  =  str.substring(decPos  +  1,  str.length()  -  2);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(decPos  +  1,  str.length()  -  2);	      String    str    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	13	None	replace
31	[BUG]  [BUGGY]  String  str  =  numeric.getMessage();  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  String  str  =  numeric.getMessage();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  numeric.getMessage();	      String    str    =    e.getMessage();    	non-compiled	[CE]  not  a  statement	1	None	replace
32	[BUG]  [BUGGY]  String  str  =  null.getMessage();  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  String  str  =  null.getMessage();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  null.getMessage();	      String    str    =    e.getMessage();    	non-compiled	[CE]  not  a  statement	1	None	replace
33	[BUG]  [BUGGY]  throw  new  NumberFormatException(null,  numeric  + "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]            NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  throw  new  NumberFormatException(null,  numeric  + "  is  not  a  valid  number.   ");  [BUGGY]      }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(null,  numeric  + "  is  not  a  valid  number.   ");	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	8	None	replace
34	[BUG]  [BUGGY]  throw  new  NumberFormatException(null  + "  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]              NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  throw  new  NumberFormatException(null  + "  is  not  a  valid  number. ");  [BUGGY]      }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(null  + "  is  not  a  valid  number. ");	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	8	None	replace
35	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1).trim();  [CE]  not  a  statement  [FE]            NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  String  str  =  str.substring(decPos  +  1).trim();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(decPos  +  1).trim();	      String    str    =    str.substring(decPos    +    1);    	non-compiled	[CE]  not  a  statement	14	None	replace
36	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.getNumberFormatException(lastChar);  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  NumberFormatException  str  =  nfe.getNumberFormatException(lastChar);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  nfe.getNumberFormatException(lastChar);	      NumberFormatException    str    =    nfe.getNumberFormatException();    	non-compiled	[CE]  not  a  statement	10	None	replace
37	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.getNumberFormatException( " ",  e);  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  NumberFormatException  str  =  nfe.getNumberFormatException( " ",  e);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  nfe.getNumberFormatException( " ",  e);	      NumberFormatException    str    =    nfe.getNumberFormatException();    	non-compiled	[CE]  not  a  statement	10	None	replace
38	[BUG]  [BUGGY]  throw  new  NumberFormatException(e,  null  + "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  throw  new  NumberFormatException(e,  null  + "  is  not  a  valid  number.   ");  [BUGGY]      }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(e,  null  + "  is  not  a  valid  number.   ");	  throw    new    NumberFormatException(e,    str    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	9	None	replace
39	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1  +  1);  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1  +  1);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(0,  str.length()  -  1  +  1);	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	12	None	replace
40	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  +  mant  + "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  throw  new  NumberFormatException( " "  +  mant  + "  is  not  a  valid  number.   ");  [BUGGY]      }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException( " "  +  mant  + "  is  not  a  valid  number.   ");	  throw    new    NumberFormatException(   "   "    +    str    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	6	None	replace
41	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  +  str  + "  is  not  a  valid  number.   ",  e);  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  throw  new  NumberFormatException( " "  +  str  + "  is  not  a  valid  number.   ",  e);  [BUGGY]      }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException( " "  +  str  + "  is  not  a  valid  number.   ",  e);	  throw    new    NumberFormatException(   "   "    +    str    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	6	None	replace
42	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos.length());  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos.length());  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(decPos  +  1,  expPos.length());	      String    str    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	13	None	replace
43	[BUG]  [BUGGY]  String  str  =  e.toString();  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  String  str  =  e.toString();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  e.toString();	      String    str    =    e.getMessage();    	non-compiled	[CE]  not  a  statement	1	None	replace
44	[BUG]  [BUGGY]  String  str  =  nfe.getMessage()  + "  is  not  a  valid  number.n ";  [CE]  not  a  statement  [FE]              NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  String  str  =  nfe.getMessage()  + "  is  not  a  valid  number.n ";  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  nfe.getMessage()  + "  is  not  a  valid  number.n ";	      String    str    =    nfe.getMessage();    	non-compiled	[CE]  not  a  statement	4	None	replace
45	[BUG]  [BUGGY]  NumberFormatException  str  =  this.nfe.getMessage();  [CE]  not  a  statement  [FE]            NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  NumberFormatException  str  =  this.nfe.getMessage();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  this.nfe.getMessage();	      NumberFormatException    str    =    nfe.getMessage();    	non-compiled	[CE]  not  a  statement	3	None	replace
46	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.createMessage( " ");  [CE]  not  a  statement  [FE]              NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  NumberFormatException  str  =  nfe.createMessage( " ");  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  nfe.createMessage( " ");	      NumberFormatException    str    =    nfe.getMessage();    	non-compiled	[CE]  not  a  statement	3	None	replace
47	[BUG]  [BUGGY]  String  str  =  lastChar.getMessage();  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  String  str  =  lastChar.getMessage();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  lastChar.getMessage();	      String    str    =    e.getMessage();    	non-compiled	[CE]  not  a  statement	1	None	replace
48	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length())+  1;  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  String  str  =  str.substring(0,  str.length())+  1;  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(0,  str.length())+  1;	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	12	None	replace
49	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number. ",  e);  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number. ",  e);  [BUGGY]      }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number. ",  e);	  throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.   ",    e);    	non-compiled	[CE]  not  a  statement	7	None	replace
50	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  +  dec  + "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  throw  new  NumberFormatException( " "  +  dec  + "  is  not  a  valid  number.   ");  [BUGGY]      }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException( " "  +  dec  + "  is  not  a  valid  number.   ");	  throw    new    NumberFormatException(   "   "    +    str    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	6	None	replace
51	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.getNumberFormatException(dec);  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  NumberFormatException  str  =  nfe.getNumberFormatException(dec);  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  nfe.getNumberFormatException(dec);	      NumberFormatException    str    =    nfe.getNumberFormatException();    	non-compiled	[CE]  not  a  statement	10	None	replace
52	[BUG]  [BUGGY]  throw  new  NumberFormatException(nfe,  str  + "  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  throw  new  NumberFormatException(nfe,  str  + "  is  not  a  valid  number. ");  [BUGGY]      }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(nfe,  str  + "  is  not  a  valid  number. ");	  throw    new    NumberFormatException(e,    str    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	9	None	replace
53	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");  [CE]  not  a  statement  [FE]            NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");  [BUGGY]      }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	8	None	replace
54	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(nfe.getMessage());  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(nfe.getMessage());  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  new  NumberFormatException(nfe.getMessage());	      NumberFormatException    str    =    e.getMessage();    	non-compiled	[CE]  not  a  statement	2	None	replace
55	[BUG]  [BUGGY]  String  str  =  this.nfe.getMessage();  [CE]  not  a  statement  [FE]              NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  String  str  =  this.nfe.getMessage();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  this.nfe.getMessage();	      String    str    =    nfe.getMessage();    	non-compiled	[CE]  not  a  statement	4	None	replace
56	[BUG]  [BUGGY]  String  str  =  nfe.createMessage();  [CE]  not  a  statement  [FE]                NumberFormatException    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :    [BUGGY]  String  str  =  nfe.createMessage();  [BUGGY]    throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  nfe.createMessage();	      String    str    =    nfe.getMessage();    	non-compiled	[CE]  not  a  statement	4	None	replace
