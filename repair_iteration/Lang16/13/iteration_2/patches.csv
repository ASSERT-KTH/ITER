bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  str  =  str.substring(expPos  +  1,  str.length());  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  str.substring(expPos  +  1,  str.length());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(expPos  +  1,  str.length());	  String    str    =    str.substring(decPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	28	None	replace
2	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.getNumberFormatException(str,  e);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.getNumberFormatException(str,  e);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  nfe.getNumberFormatException(str,  e);	  NumberFormatException    str    =    nfe.getNumberFormatException(str);    	non-compiled	[CE]  not  a  statement	6	None	replace
3	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.getNumberFormatException(mant);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.getNumberFormatException(mant);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  nfe.getNumberFormatException(mant);	  NumberFormatException    str    =    nfe.getNumberFormatException(str);    	non-compiled	[CE]  not  a  statement	6	None	replace
4	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.getNumberFormatException(numeric);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.getNumberFormatException(numeric);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  nfe.getNumberFormatException(numeric);	  NumberFormatException    str    =    nfe.getNumberFormatException(str);    	non-compiled	[CE]  not  a  statement	6	None	replace
5	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException( " ",  numeric);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException( " ",  numeric);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  new  NumberFormatException( " ",  numeric);	  NumberFormatException    str    =    new    NumberFormatException(   ",   ");    	non-compiled	[CE]  not  a  statement	16	None	replace
6	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException( " ",  null);  [CE]  not  a  statement  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException( " ",  null);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  new  NumberFormatException( " ",  null);	  NumberFormatException    str    =    new    NumberFormatException(   ",   ");    	non-compiled	[CE]  not  a  statement	16	None	replace
7	[BUG]  [BUGGY]  String  str  =  str.substring(descPos  +  1,  str.length());  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  str.substring(descPos  +  1,  str.length());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(descPos  +  1,  str.length());	  String    str    =    str.substring(decPos    +    1,    str.length()    -    2);    	non-compiled	[CE]  not  a  statement	30	None	replace
8	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  string.length());  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  str.substring(decPos  +  1,  string.length());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(decPos  +  1,  string.length());	  String    str    =    str.substring(decPos    +    1,    str.length()    -    2);    	non-compiled	[CE]  not  a  statement	30	None	replace
9	[BUG]  [BUGGY]  throw  new  NumberFormatException(e,  nfe  + "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException(e,  nfe  + "  is  not  a  valid  number.   ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(e,  nfe  + "  is  not  a  valid  number.   ");	  throw    new    NumberFormatException(e,    dec    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	4	None	replace
10	[BUG]  [BUGGY]  throw  new  NumberFormatException(e,  dec  + "  is  not  a  valid  number. ",  nfe);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException(e,  dec  + "  is  not  a  valid  number. ",  nfe);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(e,  dec  + "  is  not  a  valid  number. ",  nfe);	  throw    new    NumberFormatException(e,    dec    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	4	None	replace
11	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(nfe.getMessage(),  e);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(nfe.getMessage(),  e);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  new  NumberFormatException(nfe.getMessage(),  e);	  NumberFormatException    str    =    new    NumberFormatException(nfe.getMessage());    	non-compiled	[CE]  not  a  statement	54	None	replace
12	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(null,  nfe.getMessage());  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(null,  nfe.getMessage());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  new  NumberFormatException(null,  nfe.getMessage());	  NumberFormatException    str    =    new    NumberFormatException(nfe.getMessage());    	non-compiled	[CE]  not  a  statement	54	None	replace
13	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.getMessage());  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str.getMessage());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  new  NumberFormatException(str.getMessage());	  NumberFormatException    str    =    new    NumberFormatException(nfe.getMessage());    	non-compiled	[CE]  not  a  statement	54	None	replace
14	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  *  1  +  1);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  str.substring(0,  str.length()  *  1  +  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(0,  str.length()  *  1  +  1);	  String    str    =    str.substring(0,    str.length()    -    1    +    1);    	non-compiled	[CE]  not  a  statement	39	None	replace
15	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos  +  1);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos  +  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(decPos  +  1,  expPos  +  1);	  String    str    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  not  a  statement	1	None	replace
16	[BUG]  [BUGGY]  String  str  =  str.substring(expPos  +  1,  decPos);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  str.substring(expPos  +  1,  decPos);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(expPos  +  1,  decPos);	  String    str    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  not  a  statement	1	None	replace
17	[BUG]  [BUGGY]  String  str  =  str.substring(0,  expPos);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  str.substring(0,  expPos);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(0,  expPos);	  String    str    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  not  a  statement	1	None	replace
18	[BUG]  [BUGGY]  String  str  =  str.substring(0,  decPos  +  1,  expPos);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  str.substring(0,  decPos  +  1,  expPos);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(0,  decPos  +  1,  expPos);	  String    str    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  not  a  statement	1	None	replace
19	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.   ",  mant);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.   ",  mant);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.   ",  mant);	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.       ",    str);    	non-compiled	[CE]  not  a  statement	10	None	replace
20	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.   ",  dec);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.   ",  dec);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.   ",  dec);	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.       ",    str);    	non-compiled	[CE]  not  a  statement	10	None	replace
21	[BUG]  [BUGGY]  throw  new  NumberFormatException(mant  + "  is  not  a  valid  number.   ",  str);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException(mant  + "  is  not  a  valid  number.   ",  str);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(mant  + "  is  not  a  valid  number.   ",  str);	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.       ",    str);    	non-compiled	[CE]  not  a  statement	10	None	replace
22	[BUG]  [BUGGY]  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ",  null);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ",  null);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ",  null);	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.       ",    str);    	non-compiled	[CE]  not  a  statement	10	None	replace
23	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric,  str  + "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException(numeric,  str  + "  is  not  a  valid  number.   ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(numeric,  str  + "  is  not  a  valid  number.   ");	  throw    new    NumberFormatException(nfe,    str    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	52	None	replace
24	[BUG]  [BUGGY]  throw  new  NumberFormatException(null,  str  + "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException(null,  str  + "  is  not  a  valid  number.   ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(null,  str  + "  is  not  a  valid  number.   ");	  throw    new    NumberFormatException(nfe,    str    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	52	None	replace
25	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1)+  1;  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1)+  1;  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(0,  str.length()  -  1)+  1;	  String    str    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  not  a  statement	48	None	replace
26	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1)+  1;  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1)+  1;  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(0,  str.length()  +  1)+  1;	  String    str    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  not  a  statement	48	None	replace
27	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  +  str  + "  is  not  a  valid  number.   ",  nfe);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException( " "  +  str  + "  is  not  a  valid  number.   ",  nfe);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException( " "  +  str  + "  is  not  a  valid  number.   ",  nfe);	  throw    new    NumberFormatException(   "   "    +    str    +   "    is    not    a    valid    number.       ",    e);    	non-compiled	[CE]  not  a  statement	41	None	replace
28	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  +  nfe  + "  is  not  a  valid  number.   ",  str);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException( " "  +  nfe  + "  is  not  a  valid  number.   ",  str);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException( " "  +  nfe  + "  is  not  a  valid  number.   ",  str);	  throw    new    NumberFormatException(   "   "    +    str    +   "    is    not    a    valid    number.       ",    e);    	non-compiled	[CE]  not  a  statement	41	None	replace
29	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException( ", ",  nfe);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException( ", ",  nfe);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  new  NumberFormatException( ", ",  nfe);	  NumberFormatException    str    =    new    NumberFormatException(   "   ",    nfe);    	non-compiled	[CE]  not  a  statement	15	None	replace
30	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException( " ",  nfe.getMessage());  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException( " ",  nfe.getMessage());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  new  NumberFormatException( " ",  nfe.getMessage());	  NumberFormatException    str    =    new    NumberFormatException(   "   ",    nfe);    	non-compiled	[CE]  not  a  statement	15	None	replace
31	[BUG]  [BUGGY]  NumberFormatException  str  =  dec.getNumberFormatException(nfe);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  dec.getNumberFormatException(nfe);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  dec.getNumberFormatException(nfe);	  NumberFormatException    str    =    nfe.getNumberFormatException(dec);    	non-compiled	[CE]  not  a  statement	51	None	replace
32	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  +  nfe  +  str  + "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException( " "  +  nfe  +  str  + "  is  not  a  valid  number.   ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException( " "  +  nfe  +  str  + "  is  not  a  valid  number.   ");	  throw    new    NumberFormatException(   "   ",    nfe    +    str    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	12	None	replace
33	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(numeric.getMessage(),  e);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(numeric.getMessage(),  e);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  new  NumberFormatException(numeric.getMessage(),  e);	  NumberFormatException    str    =    new    NumberFormatException(numeric.getMessage());    	non-compiled	[CE]  not  a  statement	13	None	replace
34	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(mant.getMessage());  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(mant.getMessage());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  new  NumberFormatException(mant.getMessage());	  NumberFormatException    str    =    new    NumberFormatException(numeric.getMessage());    	non-compiled	[CE]  not  a  statement	13	None	replace
35	[BUG]  [BUGGY]  String  str  =  null.toString();  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  null.toString();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  null.toString();	  String    str    =    nfe.toString();    	non-compiled	[CE]  not  a  statement	18	None	replace
36	[BUG]  [BUGGY]  String  str  =  nfe.toString()  + "  is  not  a  valid  number.   ";  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  nfe.toString()  + "  is  not  a  valid  number.   ";  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  nfe.toString()  + "  is  not  a  valid  number.   ";	  String    str    =    nfe.toString();    	non-compiled	[CE]  not  a  statement	18	None	replace
37	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.getNumberFormatException( ", ");  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.getNumberFormatException( ", ");  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  nfe.getNumberFormatException( ", ");	  NumberFormatException    str    =    nfe.getNumberFormatException(   "   ");    	non-compiled	[CE]  not  a  statement	7	None	replace
38	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.getNumberFormatException( "The  number  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.getNumberFormatException( "The  number  is  not  a  valid  number.   ");  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  nfe.getNumberFormatException( "The  number  is  not  a  valid  number.   ");	  NumberFormatException    str    =    nfe.getNumberFormatException(   "   ");    	non-compiled	[CE]  not  a  statement	7	None	replace
39	[BUG]  [BUGGY]  String  str  =  nfe.getMessage()  + ",  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  nfe.getMessage()  + ",  is  not  a  valid  number.   ");  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  nfe.getMessage()  + ",  is  not  a  valid  number.   ");	  String    str    =    nfe.getMessage()    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	20	None	replace
40	[BUG]  [BUGGY]  String  str  =  nfe.getMessage()  + "  is  not  a  valid  number.. ");  [CE]  not  a  statement  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  nfe.getMessage()  + "  is  not  a  valid  number.. ");  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  nfe.getMessage()  + "  is  not  a  valid  number.. ");	  String    str    =    nfe.getMessage()    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	20	None	replace
41	[BUG]  [BUGGY]  String  str  =  str.toString();  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  str.toString();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.toString();	  String    str    =    e.toString();    	non-compiled	[CE]  not  a  statement	43	None	replace
42	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.getNumberFormatException(lastChar,  e);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.getNumberFormatException(lastChar,  e);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  nfe.getNumberFormatException(lastChar,  e);	  NumberFormatException    str    =    nfe.getNumberFormatException(lastChar);    	non-compiled	[CE]  not  a  statement	36	None	replace
43	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.getNumberFormatException(String.valueOf(numeric));  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.getNumberFormatException(String.valueOf(numeric));  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  nfe.getNumberFormatException(String.valueOf(numeric));	  NumberFormatException    str    =    nfe.getNumberFormatException(lastChar);    	non-compiled	[CE]  not  a  statement	36	None	replace
44	[BUG]  [BUGGY]  String  str  =  str.substring(0,  expPos  +  1);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  str.substring(0,  expPos  +  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(0,  expPos  +  1);	  String    str    =    str.substring(0,    decPos    +    1);    	non-compiled	[CE]  not  a  statement	3	None	replace
45	[BUG]  [BUGGY]  String  str  =  str.substring(0,  decPos  +  2);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  str.substring(0,  decPos  +  2);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(0,  decPos  +  2);	  String    str    =    str.substring(0,    decPos    +    1);    	non-compiled	[CE]  not  a  statement	3	None	replace
46	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric,  numeric  + "  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException(numeric,  numeric  + "  is  not  a  valid  number. ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(numeric,  numeric  + "  is  not  a  valid  number. ");	  throw    new    NumberFormatException(null,    numeric    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	33	None	replace
47	[BUG]  [BUGGY]  throw  new  NumberFormatException(e,  numeric  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException(e,  numeric  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(e,  numeric  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.    Please    check    that    the    dec    does    not    exist.   ");    	non-compiled	[CE]  not  a  statement	53	None	replace
48	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  + ",  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException(numeric  + ",  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(numeric  + ",  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.    Please    check    that    the    dec    does    not    exist.   ");    	non-compiled	[CE]  not  a  statement	53	None	replace
49	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  + "  does  not  exist.  Please  check  that  the  dec  does  not  exist. ");  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException(numeric  + "  does  not  exist.  Please  check  that  the  dec  does  not  exist. ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(numeric  + "  does  not  exist.  Please  check  that  the  dec  does  not  exist. ");	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.    Please    check    that    the    dec    does    not    exist.   ");    	non-compiled	[CE]  not  a  statement	53	None	replace
50	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.getNumberFormatException(String.valueOf(str));  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.getNumberFormatException(String.valueOf(str));  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  nfe.getNumberFormatException(String.valueOf(str));	  NumberFormatException    str    =    nfe.getNumberFormatException(e);    	non-compiled	[CE]  not  a  statement	5	None	replace
51	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.getNumberFormatException( ", ",  e);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.getNumberFormatException( ", ",  e);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  nfe.getNumberFormatException( ", ",  e);	  NumberFormatException    str    =    nfe.getNumberFormatException(   "   ",    e);    	non-compiled	[CE]  not  a  statement	37	None	replace
52	[BUG]  [BUGGY]  NumberFormatException  str  =  null.toString();  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  null.toString();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  null.toString();	  NumberFormatException    str    =    nfe.toString();    	non-compiled	[CE]  not  a  statement	26	None	replace
53	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.toString()  + "  is  not  a  valid  number.   ";  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.toString()  + "  is  not  a  valid  number.   ";  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  nfe.toString()  + "  is  not  a  valid  number.   ";	  NumberFormatException    str    =    nfe.toString();    	non-compiled	[CE]  not  a  statement	26	None	replace
54	[BUG]  [BUGGY]  throw  new  NumberFormatException(e,  str  + "  is  not  a  valid  number.   ",  mant);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException(e,  str  + "  is  not  a  valid  number.   ",  mant);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(e,  str  + "  is  not  a  valid  number.   ",  mant);	  throw    new    NumberFormatException(e,    str    +   "    is    not    a    valid    number.   ",    nfe);    	non-compiled	[CE]  not  a  statement	24	None	replace
55	[BUG]  [BUGGY]  throw  new  NumberFormatException(e,  str  + "  is  not  a  valid  number.   ",  dec);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException(e,  str  + "  is  not  a  valid  number.   ",  dec);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(e,  str  + "  is  not  a  valid  number.   ",  dec);	  throw    new    NumberFormatException(e,    str    +   "    is    not    a    valid    number.   ",    nfe);    	non-compiled	[CE]  not  a  statement	24	None	replace
56	[BUG]  [BUGGY]  throw  new  NumberFormatException(e,  nfe  + "  is  not  a  valid  number.   ",  str);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException(e,  nfe  + "  is  not  a  valid  number.   ",  str);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(e,  nfe  + "  is  not  a  valid  number.   ",  str);	  throw    new    NumberFormatException(e,    str    +   "    is    not    a    valid    number.   ",    nfe);    	non-compiled	[CE]  not  a  statement	24	None	replace
57	[BUG]  [BUGGY]  throw  new  NumberFormatException(e,  str  + "  is  not  a  valid  number. ",  lastChar);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException(e,  str  + "  is  not  a  valid  number. ",  lastChar);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(e,  str  + "  is  not  a  valid  number. ",  lastChar);	  throw    new    NumberFormatException(e,    str    +   "    is    not    a    valid    number.   ",    nfe);    	non-compiled	[CE]  not  a  statement	24	None	replace
58	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.createMessage( " ",  e);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.createMessage( " ",  e);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  nfe.createMessage( " ",  e);	  NumberFormatException    str    =    nfe.createMessage(   "   ");    	non-compiled	[CE]  not  a  statement	46	None	replace
59	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.createMessage( "More  than  a  valid  number.   ");  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.createMessage( "More  than  a  valid  number.   ");  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  nfe.createMessage( "More  than  a  valid  number.   ");	  NumberFormatException    str    =    nfe.createMessage(   "   ");    	non-compiled	[CE]  not  a  statement	46	None	replace
60	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.createMessage( "More  than  one  number. ");  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.createMessage( "More  than  one  number. ");  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  nfe.createMessage( "More  than  one  number. ");	  NumberFormatException    str    =    nfe.createMessage(   "   ");    	non-compiled	[CE]  not  a  statement	46	None	replace
61	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException( " "  +  nfe);  [CE]  not  a  statement  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException( " "  +  nfe);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  new  NumberFormatException( " "  +  nfe);	  NumberFormatException    str    =    new    NumberFormatException(   "   ",    e);    	non-compiled	[CE]  not  a  statement	17	None	replace
62	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos).trim();  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos).trim();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(decPos  +  1,  expPos).trim();	  String    str    =    str.substring(decPos    +    1).trim();    	non-compiled	[CE]  not  a  statement	35	None	replace
63	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  +  nfe  + "  is  not  a  valid  number. ",  e);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException( " "  +  nfe  + "  is  not  a  valid  number. ",  e);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException( " "  +  nfe  + "  is  not  a  valid  number. ",  e);	  throw    new    NumberFormatException(   "   "    +    nfe    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	25	None	replace
64	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  +  lastChar  + "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException( " "  +  lastChar  + "  is  not  a  valid  number.   ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException( " "  +  lastChar  + "  is  not  a  valid  number.   ");	  throw    new    NumberFormatException(   "   "    +    nfe    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	25	None	replace
65	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length();  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  str.substring(0,  str.length();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(0,  str.length();	  String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  not  a  statement	23	None	replace
66	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  expPos.length());  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  expPos.length());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(0,  str.length()  -  1,  expPos.length());	  String    str    =    str.substring(decPos    +    1,    expPos.length());    	non-compiled	[CE]  not  a  statement	42	None	replace
67	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(numeric,  str.getMessage());  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(numeric,  str.getMessage());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  new  NumberFormatException(numeric,  str.getMessage());	  NumberFormatException    str    =    new    NumberFormatException(numeric,    e.getMessage());    	non-compiled	[CE]  not  a  statement	14	None	replace
68	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str,  e.getMessage());  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str,  e.getMessage());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  new  NumberFormatException(str,  e.getMessage());	  NumberFormatException    str    =    new    NumberFormatException(numeric,    e.getMessage());    	non-compiled	[CE]  not  a  statement	14	None	replace
69	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(numeric,  str.toString());  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(numeric,  str.toString());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  new  NumberFormatException(numeric,  str.toString());	  NumberFormatException    str    =    new    NumberFormatException(numeric,    e.getMessage());    	non-compiled	[CE]  not  a  statement	14	None	replace
70	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(mant,  e.getMessage());  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(mant,  e.getMessage());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  new  NumberFormatException(mant,  e.getMessage());	  NumberFormatException    str    =    new    NumberFormatException(numeric,    e.getMessage());    	non-compiled	[CE]  not  a  statement	14	None	replace
71	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()));  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  str.substring(0,  str.length()));  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(0,  str.length()));	  String    str    =    str.substring(0,    str.length()    +    1);    	non-compiled	[CE]  not  a  statement	22	None	replace
72	[BUG]  [BUGGY]  String  str  =  nfe.createString();  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  nfe.createString();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  nfe.createString();	  String    str    =    nfe.createMessage();    	non-compiled	[CE]  not  a  statement	56	None	replace
73	[BUG]  [BUGGY]  String  str  =  nfe.createMessage(lastChar);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  nfe.createMessage(lastChar);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  nfe.createMessage(lastChar);	  String    str    =    nfe.createMessage();    	non-compiled	[CE]  not  a  statement	56	None	replace
74	[BUG]  [BUGGY]  String  str  =  numeric.toString();  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  numeric.toString();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  numeric.toString();	  String    str    =    numeric.getMessage();    	non-compiled	[CE]  not  a  statement	31	None	replace
75	[BUG]  [BUGGY]  String  str  =  mant.getMessage();  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  mant.getMessage();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  mant.getMessage();	  String    str    =    numeric.getMessage();    	non-compiled	[CE]  not  a  statement	31	None	replace
76	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  decPos);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  str.substring(decPos  +  1,  decPos);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(decPos  +  1,  decPos);	  String    str    =    str.substring(decPos    +    2);    	non-compiled	[CE]  not  a  statement	2	None	replace
77	[BUG]  [BUGGY]  NumberFormatException  str  =  this.nfe.getMessage(),  e);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  this.nfe.getMessage(),  e);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  this.nfe.getMessage(),  e);	  NumberFormatException    str    =    this.nfe.getMessage();    	non-compiled	[CE]  not  a  statement	45	None	replace
78	[BUG]  [BUGGY]  String  str  =  nfe.getMessage()  + ",  is  not  a  valid  number.   ";  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  nfe.getMessage()  + ",  is  not  a  valid  number.   ";  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  nfe.getMessage()  + ",  is  not  a  valid  number.   ";	  String    str    =    nfe.getMessage()    +   "    is    not    a    valid    number.       ";    	non-compiled	[CE]  not  a  statement	19	None	replace
79	[BUG]  [BUGGY]  String  str  =  nfe.getMessage()  + "  is  not  a  valid  number.. ";  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  nfe.getMessage()  + "  is  not  a  valid  number.. ";  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  nfe.getMessage()  + "  is  not  a  valid  number.. ";	  String    str    =    nfe.getMessage()    +   "    is    not    a    valid    number.       ";    	non-compiled	[CE]  not  a  statement	19	None	replace
80	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.createMessage(str);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.createMessage(str);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  nfe.createMessage(str);	  NumberFormatException    str    =    nfe.createMessage();    	non-compiled	[CE]  not  a  statement	27	None	replace
81	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.createMessage(e);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.createMessage(e);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  nfe.createMessage(e);	  NumberFormatException    str    =    nfe.createMessage();    	non-compiled	[CE]  not  a  statement	27	None	replace
82	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  str.length()  -  1);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  str.length()  -  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(0,  str.length()  -  1,  str.length()  -  1);	  String    str    =    str.substring(0,    str.length()    -    1,    str.length());    	non-compiled	[CE]  not  a  statement	29	None	replace
83	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1,  str.length());  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1,  str.length());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(0,  str.length()  +  1,  str.length());	  String    str    =    str.substring(0,    str.length()    -    1,    str.length());    	non-compiled	[CE]  not  a  statement	29	None	replace
84	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  str.length()  +  1);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  str.length()  +  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(0,  str.length()  -  1,  str.length()  +  1);	  String    str    =    str.substring(0,    str.length()    -    1,    str.length());    	non-compiled	[CE]  not  a  statement	29	None	replace
85	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric,  null  + "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException(numeric,  null  + "  is  not  a  valid  number.   ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(numeric,  null  + "  is  not  a  valid  number.   ");	  throw    new    NumberFormatException(e,    null    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	38	None	replace
86	[BUG]  [BUGGY]  String  str  =  this.numeric.getMessage();  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  this.numeric.getMessage();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  this.numeric.getMessage();	  String    str    =    null.getMessage();    	non-compiled	[CE]  not  a  statement	32	None	replace
87	[BUG]  [BUGGY]  String  str  =  str.getMessage();  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  str.getMessage();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.getMessage();	  String    str    =    null.getMessage();    	non-compiled	[CE]  not  a  statement	32	None	replace
88	[BUG]  [BUGGY]  String  str  =  this.nfe.getMessage(),  e);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  this.nfe.getMessage(),  e);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  this.nfe.getMessage(),  e);	  String    str    =    this.nfe.getMessage();    	non-compiled	[CE]  not  a  statement	55	None	replace
89	[BUG]  [BUGGY]  String  str  =  this.nfe.getMessage()  + "  is  not  a  valid  number.   ";  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  this.nfe.getMessage()  + "  is  not  a  valid  number.   ";  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  this.nfe.getMessage()  + "  is  not  a  valid  number.   ";	  String    str    =    this.nfe.getMessage();    	non-compiled	[CE]  not  a  statement	55	None	replace
90	[BUG]  [BUGGY]  String  str  =  this.lastChar.getMessage();  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  this.lastChar.getMessage();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  this.lastChar.getMessage();	  String    str    =    lastChar.getMessage();    	non-compiled	[CE]  not  a  statement	47	None	replace
91	[BUG]  [BUGGY]  throw  new  NumberFormatException(nfe,  dec  + "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException(nfe,  dec  + "  is  not  a  valid  number.   ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(nfe,  dec  + "  is  not  a  valid  number.   ");	  throw    new    NumberFormatException(nfe,    str    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	52	None	replace
92	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(numeric,  e);  [CE]  not  a  statement  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(numeric,  e);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  new  NumberFormatException(numeric,  e);	  NumberFormatException    str    =    new    NumberFormatException(   "   ",    e);    	non-compiled	[CE]  not  a  statement	17	None	replace
93	[BUG]  [BUGGY]  String  str  =  numeric.substring(0,  numeric.length()  -  1);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  numeric.substring(0,  numeric.length()  -  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  numeric.substring(0,  numeric.length()  -  1);	  String    str    =    numeric.getMessage();    	non-compiled	[CE]  not  a  statement	31	None	replace
94	[BUG]  [BUGGY]  String  str  =  nfe.getText();  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  nfe.getText();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  nfe.getText();	  String    str    =    nfe.toString();    	non-compiled	[CE]  not  a  statement	18	None	replace
95	[BUG]  [BUGGY]  String  str  =  nfe.toString(str);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  nfe.toString(str);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  nfe.toString(str);	  String    str    =    nfe.toString();    	non-compiled	[CE]  not  a  statement	18	None	replace
96	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(numeric.toString());  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(numeric.toString());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  new  NumberFormatException(numeric.toString());	  NumberFormatException    str    =    new    NumberFormatException(numeric.getMessage());    	non-compiled	[CE]  not  a  statement	13	None	replace
97	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.createNumber(numeric);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.createNumber(numeric);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  nfe.createNumber(numeric);	  NumberFormatException    str    =    nfe.getNumberFormatException(e);    	non-compiled	[CE]  not  a  statement	5	None	replace
98	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.createMessage(numeric);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.createMessage(numeric);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  nfe.createMessage(numeric);	  NumberFormatException    str    =    nfe.createMessage();    	non-compiled	[CE]  not  a  statement	27	None	replace
99	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.createMessage(lastChar);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.createMessage(lastChar);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  nfe.createMessage(lastChar);	  NumberFormatException    str    =    nfe.createMessage();    	non-compiled	[CE]  not  a  statement	27	None	replace
100	[BUG]  [BUGGY]  throw  new  NumberFormatException(nfe  + "  is  not  a  valid  number.   ",  str);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException(nfe  + "  is  not  a  valid  number.   ",  str);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(nfe  + "  is  not  a  valid  number.   ",  str);	  throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.       ",    nfe);    	non-compiled	[CE]  not  a  statement	9	None	replace
101	[BUG]  [BUGGY]  throw  new  NumberFormatException(null,  numeric  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException(null,  numeric  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(null,  numeric  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.    Please    check    that    the    dec    does    not    exist.   ");    	non-compiled	[CE]  not  a  statement	53	None	replace
102	[BUG]  [BUGGY]  throw  new  NumberFormatException(dec  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException(dec  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(dec  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.    Please    check    that    the    dec    does    not    exist.   ");    	non-compiled	[CE]  not  a  statement	53	None	replace
103	[BUG]  [BUGGY]  throw  new  NumberFormatException(null  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException(null  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(null  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.    Please    check    that    the    dec    does    not    exist.   ");    	non-compiled	[CE]  not  a  statement	53	None	replace
104	[BUG]  [BUGGY]  String  str  =  str.substring(Decimal.MIN_VALUE,  decPos  +  1,  str.length());  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  str.substring(Decimal.MIN_VALUE,  decPos  +  1,  str.length());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(Decimal.MIN_VALUE,  decPos  +  1,  str.length());	  String    str    =    str.substring(decPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	28	None	replace
105	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  +  mant  + "  is  not  a  valid  number.n ");  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException( " "  +  mant  + "  is  not  a  valid  number.n ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException( " "  +  mant  + "  is  not  a  valid  number.n ");	  throw    new    NumberFormatException(   "   "    +    str    +   "    is    not    a    valid    number.n   ");    	non-compiled	[CE]  not  a  statement	11	None	replace
106	[BUG]  [BUGGY]  String  str  =  null;  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  null;  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  null;	  String    str    =    e.toString();    	non-compiled	[CE]  not  a  statement	43	None	replace
107	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.getNumberFormatException( " "  +  lastChar,  e);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.getNumberFormatException( " "  +  lastChar,  e);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  nfe.getNumberFormatException( " "  +  lastChar,  e);	  NumberFormatException    str    =    nfe.getNumberFormatException(   "   ",    e);    	non-compiled	[CE]  not  a  statement	37	None	replace
108	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.createMessage( "Mutator  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.createMessage( "Mutator  not  a  valid  number.   ");  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  nfe.createMessage( "Mutator  not  a  valid  number.   ");	  NumberFormatException    str    =    nfe.createMessage(   "   ");    	non-compiled	[CE]  not  a  statement	46	None	replace
109	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.createMessage( "Mutable  number.   ");  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.createMessage( "Mutable  number.   ");  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  nfe.createMessage( "Mutable  number.   ");	  NumberFormatException    str    =    nfe.createMessage(   "   ");    	non-compiled	[CE]  not  a  statement	46	None	replace
110	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(numeric,  nfe.getMessage());  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(numeric,  nfe.getMessage());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  new  NumberFormatException(numeric,  nfe.getMessage());	  NumberFormatException    str    =    new    NumberFormatException(numeric,    e.getMessage());    	non-compiled	[CE]  not  a  statement	14	None	replace
111	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(numeric,  mant.getMessage());  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(numeric,  mant.getMessage());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  new  NumberFormatException(numeric,  mant.getMessage());	  NumberFormatException    str    =    new    NumberFormatException(numeric,    e.getMessage());    	non-compiled	[CE]  not  a  statement	14	None	replace
112	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  +  mant  + "  is  not  a  valid  number.   ",  e);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException( " "  +  mant  + "  is  not  a  valid  number.   ",  e);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException( " "  +  mant  + "  is  not  a  valid  number.   ",  e);	  throw    new    NumberFormatException(   "   "    +    str    +   "    is    not    a    valid    number.       ",    e);    	non-compiled	[CE]  not  a  statement	41	None	replace
113	[BUG]  [BUGGY]  throw  new  NumberFormatException( " ",  nfe  + "  is  not  a  valid  number.   ",  str);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException( " ",  nfe  + "  is  not  a  valid  number.   ",  str);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException( " ",  nfe  + "  is  not  a  valid  number.   ",  str);	  throw    new    NumberFormatException(   "   "    +    str    +   "    is    not    a    valid    number.       ",    e);    	non-compiled	[CE]  not  a  statement	41	None	replace
114	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos.length()  -  1);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos.length()  -  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(decPos  +  1,  expPos.length()  -  1);	  String    str    =    str.substring(decPos    +    1,    expPos.length());    	non-compiled	[CE]  not  a  statement	42	None	replace
115	[BUG]  [BUGGY]  String  str  =  str.substring(0,  expPos.length()  -  1);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  str.substring(0,  expPos.length()  -  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(0,  expPos.length()  -  1);	  String    str    =    str.substring(decPos    +    1,    expPos.length());    	non-compiled	[CE]  not  a  statement	42	None	replace
116	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos.length()  -  2);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos.length()  -  2);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(decPos  +  1,  expPos.length()  -  2);	  String    str    =    str.substring(decPos    +    1,    expPos.length());    	non-compiled	[CE]  not  a  statement	42	None	replace
117	[BUG]  [BUGGY]  throw  new  NumberFormatException(e,  null  + "  is  not  a  valid  number.   ",  nfe);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException(e,  null  + "  is  not  a  valid  number.   ",  nfe);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(e,  null  + "  is  not  a  valid  number.   ",  nfe);	  throw    new    NumberFormatException(e,    str    +   "    is    not    a    valid    number.   ",    nfe);    	non-compiled	[CE]  not  a  statement	24	None	replace
118	[BUG]  [BUGGY]  throw  new  NumberFormatException(e,  mant  + "  is  not  a  valid  number.   ",  nfe);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException(e,  mant  + "  is  not  a  valid  number.   ",  nfe);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(e,  mant  + "  is  not  a  valid  number.   ",  nfe);	  throw    new    NumberFormatException(e,    str    +   "    is    not    a    valid    number.   ",    nfe);    	non-compiled	[CE]  not  a  statement	24	None	replace
119	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos  -  1);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos  -  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(decPos  +  1,  expPos  -  1);	  String    str    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  not  a  statement	1	None	replace
120	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos  +  2);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos  +  2);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(decPos  +  1,  expPos  +  2);	  String    str    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  not  a  statement	1	None	replace
121	[BUG]  [BUGGY]  String  str  =  nfe.createMessage(numeric);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  nfe.createMessage(numeric);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  nfe.createMessage(numeric);	  String    str    =    nfe.createMessage();    	non-compiled	[CE]  not  a  statement	56	None	replace
122	[BUG]  [BUGGY]  throw  new  NumberFormatException(null,  null  + "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException(null,  null  + "  is  not  a  valid  number.   ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(null,  null  + "  is  not  a  valid  number.   ");	  throw    new    NumberFormatException(e,    null    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	38	None	replace
123	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  + "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException( " "  + "  is  not  a  valid  number.   ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException( " "  + "  is  not  a  valid  number.   ");	  throw    new    NumberFormatException(null    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	34	None	replace
124	[BUG]  [BUGGY]  String  str  =  str.substring(0,  prefixPos  +  1);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  str.substring(0,  prefixPos  +  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(0,  prefixPos  +  1);	  String    str    =    str.substring(0,    decPos    +    1);    	non-compiled	[CE]  not  a  statement	3	None	replace
125	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException( " ",  nfe,  dec);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException( " ",  nfe,  dec);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  new  NumberFormatException( " ",  nfe,  dec);	  NumberFormatException    str    =    new    NumberFormatException(   "   ",    nfe);    	non-compiled	[CE]  not  a  statement	15	None	replace
126	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.createNumberFormatException( " ");  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.createNumberFormatException( " ");  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  nfe.createNumberFormatException( " ");	  NumberFormatException    str    =    nfe.getNumberFormatException(   "   ");    	non-compiled	[CE]  not  a  statement	7	None	replace
127	[BUG]  [BUGGY]  NumberFormatException  str  =  getNumberFormatException(nfe);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  getNumberFormatException(nfe);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  getNumberFormatException(nfe);	  NumberFormatException    str    =    this.nfe.getMessage();    	non-compiled	[CE]  not  a  statement	45	None	replace
128	[BUG]  [BUGGY]  NumberFormatException  str  =  null;  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  null;  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  null;	  NumberFormatException    str    =    this.nfe.getMessage();    	non-compiled	[CE]  not  a  statement	45	None	replace
129	[BUG]  [BUGGY]  String  str  =  this.nfe.toString();  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  this.nfe.toString();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  this.nfe.toString();	  String    str    =    this.nfe.getMessage();    	non-compiled	[CE]  not  a  statement	55	None	replace
130	[BUG]  [BUGGY]  String  str  =  this.nfe.getString();  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  this.nfe.getString();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  this.nfe.getString();	  String    str    =    this.nfe.getMessage();    	non-compiled	[CE]  not  a  statement	55	None	replace
131	[BUG]  [BUGGY]  throw  new  NumberFormatException(null,  numeric  + "  is  not  a  valid  number.   ",  e);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException(null,  numeric  + "  is  not  a  valid  number.   ",  e);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(null,  numeric  + "  is  not  a  valid  number.   ",  e);	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.   ",    e);    	non-compiled	[CE]  not  a  statement	49	None	replace
132	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  3);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  3);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(0,  str.length()  -  3);	  String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  not  a  statement	21	None	replace
133	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  str.length()  -  2);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  str.length()  -  2);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(0,  str.length()  -  1,  str.length()  -  2);	  String    str    =    str.substring(0,    str.length()    -    1,    str.length());    	non-compiled	[CE]  not  a  statement	29	None	replace
134	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric,  dec  + "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException(numeric,  dec  + "  is  not  a  valid  number.   ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(numeric,  dec  + "  is  not  a  valid  number.   ");	  throw    new    NumberFormatException(null,    numeric    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	33	None	replace
135	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.getNumberFormatException(str,  dec);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.getNumberFormatException(str,  dec);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  nfe.getNumberFormatException(str,  dec);	  NumberFormatException    str    =    nfe.getNumberFormatException(str);    	non-compiled	[CE]  not  a  statement	6	None	replace
136	[BUG]  [BUGGY]  String  str  =  nfe.toString(dec);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  nfe.toString(dec);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  nfe.toString(dec);	  String    str    =    nfe.toString();    	non-compiled	[CE]  not  a  statement	18	None	replace
137	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.createNumberFormatException(str);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.createNumberFormatException(str);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  nfe.createNumberFormatException(str);	  NumberFormatException    str    =    nfe.getNumberFormatException(e);    	non-compiled	[CE]  not  a  statement	5	None	replace
138	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.createMessage( "Can  not  create  numeric  value. ");  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.createMessage( "Can  not  create  numeric  value. ");  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  nfe.createMessage( "Can  not  create  numeric  value. ");	  NumberFormatException    str    =    nfe.createMessage(   "   ");    	non-compiled	[CE]  not  a  statement	46	None	replace
139	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.createMessage( "Error: ");  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.createMessage( "Error: ");  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  nfe.createMessage( "Error: ");	  NumberFormatException    str    =    nfe.createMessage(   "   ");    	non-compiled	[CE]  not  a  statement	46	None	replace
140	[BUG]  [BUGGY]  throw  new  NumberFormatException(e,  DEC  + "  is  not  a  valid  number.   ",  nfe);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException(e,  DEC  + "  is  not  a  valid  number.   ",  nfe);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(e,  DEC  + "  is  not  a  valid  number.   ",  nfe);	  throw    new    NumberFormatException(e,    str    +   "    is    not    a    valid    number.   ",    nfe);    	non-compiled	[CE]  not  a  statement	24	None	replace
141	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.toString(dec);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.toString(dec);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  nfe.toString(dec);	  NumberFormatException    str    =    nfe.toString();    	non-compiled	[CE]  not  a  statement	26	None	replace
142	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.createMessage(dec);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.createMessage(dec);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  nfe.createMessage(dec);	  NumberFormatException    str    =    nfe.createMessage();    	non-compiled	[CE]  not  a  statement	27	None	replace
143	[BUG]  [BUGGY]  throw  new  NumberFormatException( "Unknown  number: "  +  str  + "  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException( "Unknown  number: "  +  str  + "  is  not  a  valid  number. ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException( "Unknown  number: "  +  str  + "  is  not  a  valid  number. ");	  throw    new    NumberFormatException(   "   "    +    mant    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	40	None	replace
144	[BUG]  [BUGGY]  throw  new  NumberFormatException( "Unknown  number: "  +  dec  + "  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException( "Unknown  number: "  +  dec  + "  is  not  a  valid  number. ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException( "Unknown  number: "  +  dec  + "  is  not  a  valid  number. ");	  throw    new    NumberFormatException(   "   "    +    mant    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	40	None	replace
145	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(nfe.getMessage(),  dec);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(nfe.getMessage(),  dec);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  new  NumberFormatException(nfe.getMessage(),  dec);	  NumberFormatException    str    =    new    NumberFormatException(nfe.getMessage());    	non-compiled	[CE]  not  a  statement	54	None	replace
146	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number. ",  e,  dec);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number. ",  e,  dec);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number. ",  e,  dec);	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.   ",    e);    	non-compiled	[CE]  not  a  statement	49	None	replace
147	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos,  expPos.length());  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos,  expPos.length());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(decPos  +  1,  expPos,  expPos.length());	  String    str    =    str.substring(decPos    +    1,    expPos.length());    	non-compiled	[CE]  not  a  statement	42	None	replace
148	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(numeric,  dec.getMessage());  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(numeric,  dec.getMessage());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  new  NumberFormatException(numeric,  dec.getMessage());	  NumberFormatException    str    =    new    NumberFormatException(numeric,    e.getMessage());    	non-compiled	[CE]  not  a  statement	14	None	replace
149	[BUG]  [BUGGY]  String  str  =  str.substring(Decimal.MIN_VALUE  +  1,  str.length());  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  str.substring(Decimal.MIN_VALUE  +  1,  str.length());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(Decimal.MIN_VALUE  +  1,  str.length());	  String    str    =    str.substring(decPos    +    1,    str.length()    -    2);    	non-compiled	[CE]  not  a  statement	30	None	replace
150	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  str.length();  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  str.substring(decPos  +  1,  str.length();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  str.substring(decPos  +  1,  str.length();	  String    str    =    str.substring(decPos    +    1,    str.length()    -    2);    	non-compiled	[CE]  not  a  statement	30	None	replace
151	[BUG]  [BUGGY]  String  str  =  nfe.createMessage(dec);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  String  str  =  nfe.createMessage(dec);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	String  str  =  nfe.createMessage(dec);	  String    str    =    nfe.createMessage();    	non-compiled	[CE]  not  a  statement	56	None	replace
152	[BUG]  [BUGGY]  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ",  dec);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ",  dec);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ",  dec);	  throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.       ",    nfe);    	non-compiled	[CE]  not  a  statement	9	None	replace
153	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  +  dec  + "  is  not  a  valid  number.   ",  e);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException( " "  +  dec  + "  is  not  a  valid  number.   ",  e);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException( " "  +  dec  + "  is  not  a  valid  number.   ",  e);	  throw    new    NumberFormatException(   "   "    +    str    +   "    is    not    a    valid    number.       ",    e);    	non-compiled	[CE]  not  a  statement	41	None	replace
154	[BUG]  [BUGGY]  throw  new  NumberFormatException(nfe,  null  + "  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException(nfe,  null  + "  is  not  a  valid  number. ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(nfe,  null  + "  is  not  a  valid  number. ");	  throw    new    NumberFormatException(e,    null    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	38	None	replace
155	[BUG]  [BUGGY]  throw  new  NumberFormatException( ", "  +  nfe  +  str  + "  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException( ", "  +  nfe  +  str  + "  is  not  a  valid  number. ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException( ", "  +  nfe  +  str  + "  is  not  a  valid  number. ");	  throw    new    NumberFormatException(   "   ",    nfe    +    str    +   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	12	None	replace
156	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(numeric.getMessage(),  dec);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(numeric.getMessage(),  dec);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	NumberFormatException  str  =  new  NumberFormatException(numeric.getMessage(),  dec);	  NumberFormatException    str    =    new    NumberFormatException(numeric.getMessage());    	non-compiled	[CE]  not  a  statement	13	None	replace
157	[BUG]  [BUGGY]  throw  new  NumberFormatException(dec  + "  is  not  a  valid  number.   ",  str);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException(dec  + "  is  not  a  valid  number.   ",  str);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(dec  + "  is  not  a  valid  number.   ",  str);	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.       ",    str);    	non-compiled	[CE]  not  a  statement	10	None	replace
158	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ",  str);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :      [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ",  str);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	545	545	1	replace	throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ",  str);	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.       ",    str);    	non-compiled	[CE]  not  a  statement	10	None	replace
