bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0D  &&!allZeros)))  {  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0D  &&!allZeros)))  {  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0D  &&!allZeros)))  {	  if(!(f.isInfinite()    ||    f.floatValue()    ==    0.0F    &&!allZeros)))    {    	non-compiled	[CE]  not  a  statement	7	None	replace
2	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  1.0  &&!allZeros)))  {  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  1.0  &&!allZeros)))  {  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  ==  1.0  &&!allZeros)))  {	  if(!(f.isInfinite()    ||    f.floatValue()    ==    0.0F    &&!allZeros)))    {    	non-compiled	[CE]  not  a  statement	7	None	replace
3	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()!=  0.0F  &&!allZeros)))  {  [CE]  not  a  statement  [FE]            NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()!=  0.0F  &&!allZeros)))  {  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()!=  0.0F  &&!allZeros)))  {	  if(!(f.isInfinite()    ||    f.floatValue()    ==    0.0F    &&!allZeros)))    {    	non-compiled	[CE]  not  a  statement	7	None	replace
4	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.floatValue());  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.floatValue());  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Float  f  =  NumberUtils.createFloat(numeric.floatValue());	      Float    f    =    NumberUtils.createFloat(numeric);    	non-compiled	[CE]  not  a  statement	1	None	replace
5	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str);  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str);  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  str);	      Float    f    =    NumberUtils.createFloat(numeric);    	non-compiled	[CE]  not  a  statement	1	None	replace
6	[BUG]  [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  0.0D  &&!allZeros))  {  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  0.0D  &&!allZeros))  {  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  0.0D  &&!allZeros))  {	  if(!(f.isNaN()    ||    f.isInfinite()    ||    f.floatValue()    ==    0.0F    &&!allZeros))    {    	non-compiled	[CE]  not  a  statement	13	None	replace
7	[BUG]  [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  1.0  &&!allZeros))  {  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  1.0  &&!allZeros))  {  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  1.0  &&!allZeros))  {	  if(!(f.isNaN()    ||    f.isInfinite()    ||    f.floatValue()    ==    0.0F    &&!allZeros))    {    	non-compiled	[CE]  not  a  statement	13	None	replace
8	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createFloat(str);  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  Number  f  =  NumberUtils.createFloat(str);  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Number  f  =  NumberUtils.createFloat(str);	      Number    f    =    NumberUtils.createFloat(numeric);    	non-compiled	[CE]  not  a  statement	10	None	replace
9	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createInteger(numeric);  [CE]  not  a  statement  [FE]            NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  Number  f  =  NumberUtils.createInteger(numeric);  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Number  f  =  NumberUtils.createInteger(numeric);	      Number    f    =    NumberUtils.createFloat(numeric);    	non-compiled	[CE]  not  a  statement	10	None	replace
10	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(str);  [CE]  not  a  statement  [FE]              NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  Number  f  =  NumberUtils.createNumber(str);  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Number  f  =  NumberUtils.createNumber(str);	      Number    f    =    NumberUtils.createFloat(numeric);    	non-compiled	[CE]  not  a  statement	10	None	replace
11	[BUG]  [BUGGY]  float  f  =  NumberUtils.createFloat(str);  [CE]  not  a  statement  [FE]              NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  float  f  =  NumberUtils.createFloat(str);  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	float  f  =  NumberUtils.createFloat(str);	      float    f    =    NumberUtils.createFloat(numeric);    	non-compiled	[CE]  not  a  statement	4	None	replace
12	[BUG]  [BUGGY]  float  f  =  NumberUtils.createLong(str);  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  float  f  =  NumberUtils.createLong(str);  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	float  f  =  NumberUtils.createLong(str);	      float    f    =    NumberUtils.createLong(numeric);    	non-compiled	[CE]  not  a  statement	12	None	replace
13	[BUG]  [BUGGY]  float  f  =  NumberUtils.createInteger(numeric);  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  float  f  =  NumberUtils.createInteger(numeric);  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	float  f  =  NumberUtils.createInteger(numeric);	      int    f    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  not  a  statement	9	None	replace
14	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createInteger(numeric);  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  Float  f  =  NumberUtils.createInteger(numeric);  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Float  f  =  NumberUtils.createInteger(numeric);	      int    f    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  not  a  statement	9	None	replace
15	[BUG]  [BUGGY]  int  f  =  NumberUtils.createInteger(str);  [CE]  not  a  statement  [FE]            NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  int  f  =  NumberUtils.createInteger(str);  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	int  f  =  NumberUtils.createInteger(str);	      int    f    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  not  a  statement	9	None	replace
16	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(str);  [CE]  not  a  statement  [FE]            NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  Integer  f  =  NumberUtils.createInteger(str);  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Integer  f  =  NumberUtils.createInteger(str);	      Integer    f    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  not  a  statement	3	None	replace
17	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(0);  [CE]  not  a  statement  [FE]              NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  Integer  f  =  NumberUtils.createInteger(0);  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Integer  f  =  NumberUtils.createInteger(0);	      Integer    f    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  not  a  statement	3	None	replace
18	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createLong(str);  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  Float  f  =  NumberUtils.createLong(str);  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Float  f  =  NumberUtils.createLong(str);	      Float    f    =    NumberUtils.createLong(numeric);    	non-compiled	[CE]  not  a  statement	2	None	replace
19	[BUG]  [BUGGY]  Integer  f  =  createInteger(str);  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  Integer  f  =  createInteger(str);  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Integer  f  =  createInteger(str);	      Integer    f    =    createInteger(numeric);    	non-compiled	[CE]  not  a  statement	11	None	replace
20	[BUG]  [BUGGY]  Integer  f  =  createInteger(numeric.intValue());  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  Integer  f  =  createInteger(numeric.intValue());  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Integer  f  =  createInteger(numeric.intValue());	      Integer    f    =    createInteger(numeric);    	non-compiled	[CE]  not  a  statement	11	None	replace
21	[BUG]  [BUGGY]  Integer  f  =  createInteger(numeric.doubleValue());  [CE]  not  a  statement  [FE]            NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  Integer  f  =  createInteger(numeric.doubleValue());  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Integer  f  =  createInteger(numeric.doubleValue());	      Integer    f    =    createInteger(numeric);    	non-compiled	[CE]  not  a  statement	11	None	replace
22	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F)&&!allZeros)  {  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F)&&!allZeros)  {  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F)&&!allZeros)  {	  if(!(f.isInfinite()    ||    f.floatValue()    ==    0.0F    ||!allZeros))    {    	non-compiled	[CE]  not  a  statement	14	None	replace
23	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F)||!allZeros)  {  [CE]  not  a  statement  [FE]            NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F)||!allZeros)  {  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F)||!allZeros)  {	  if(!(f.isInfinite()    ||    f.floatValue()    ==    0.0F    ||!allZeros))    {    	non-compiled	[CE]  not  a  statement	14	None	replace
24	[BUG]  [BUGGY]  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {	  if(!f.isInfinite()    &&(f.floatValue()    ==    0.0F    &&!allZeros)))    {    	non-compiled	[CE]  not  a  statement	8	None	replace
25	[BUG]  [BUGGY]  if(!f.isInfinite()  &&(f.floatValue()  ==  0.0F  ||!allZeros)))  {  [CE]  not  a  statement  [FE]            NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  if(!f.isInfinite()  &&(f.floatValue()  ==  0.0F  ||!allZeros)))  {  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!f.isInfinite()  &&(f.floatValue()  ==  0.0F  ||!allZeros)))  {	  if(!f.isInfinite()    &&(f.floatValue()    ==    0.0F    &&!allZeros)))    {    	non-compiled	[CE]  not  a  statement	8	None	replace
26	[BUG]  [BUGGY]  if(!f.isInfinite()  &&(f.floatValue()  ==  0.0f  ||!allZeros)))  {  [CE]  not  a  statement  [FE]              NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  if(!f.isInfinite()  &&(f.floatValue()  ==  0.0f  ||!allZeros)))  {  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!f.isInfinite()  &&(f.floatValue()  ==  0.0f  ||!allZeros)))  {	  if(!f.isInfinite()    &&(f.floatValue()    ==    0.0F    &&!allZeros)))    {    	non-compiled	[CE]  not  a  statement	8	None	replace
27	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0D  &&!allZeros))  {  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0D  &&!allZeros))  {  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0D  &&!allZeros))  {	  if(!(f.isInfinite()    ||    f.floatValue()    ==    0.0F    &&!allZeros))    {    	non-compiled	[CE]  not  a  statement	6	None	replace
28	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()!=  0.0F  &&!allZeros))  {  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()!=  0.0F  &&!allZeros))  {  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()!=  0.0F  &&!allZeros))  {	  if(!(f.isInfinite()    ||    f.floatValue()    ==    0.0F    &&!allZeros))    {    	non-compiled	[CE]  not  a  statement	6	None	replace
29	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  1.0  &&!allZeros))  {  [CE]  not  a  statement  [FE]            NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  1.0  &&!allZeros))  {  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  ==  1.0  &&!allZeros))  {	  if(!(f.isInfinite()    ||    f.floatValue()    ==    0.0F    &&!allZeros))    {    	non-compiled	[CE]  not  a  statement	6	None	replace
30	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric).floatValue();  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric).floatValue();  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Float  f  =  NumberUtils.createFloat(numeric).floatValue();	      Float    f    =    NumberUtils.createLong(numeric);    	non-compiled	[CE]  not  a  statement	2	None	replace
31	[BUG]  [BUGGY]  if(!f.isInfinite()  &&(FLOAT_ZERO.floatValue()  ==  0.0F  &&!allZeros)))  {  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  if(!f.isInfinite()  &&(FLOAT_ZERO.floatValue()  ==  0.0F  &&!allZeros)))  {  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!f.isInfinite()  &&(FLOAT_ZERO.floatValue()  ==  0.0F  &&!allZeros)))  {	  if(!f.isInfinite()    &&(f.floatValue()    ==    0.0F    &&!allZeros)))    {    	non-compiled	[CE]  not  a  statement	8	None	replace
32	[BUG]  [BUGGY]  Integer  f  =  createInteger(numeric,  4);  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  Integer  f  =  createInteger(numeric,  4);  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Integer  f  =  createInteger(numeric,  4);	      Integer    f    =    createInteger(numeric);    	non-compiled	[CE]  not  a  statement	11	None	replace
33	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F)&&!allZeros))  {  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F)&&!allZeros))  {  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F)&&!allZeros))  {	  if(!(f.isInfinite()    ||    f.floatValue()    ==    0.0F    &&!allZeros)))    {    	non-compiled	[CE]  not  a  statement	7	None	replace
34	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createFloat(numeric,  str);  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  Number  f  =  NumberUtils.createFloat(numeric,  str);  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Number  f  =  NumberUtils.createFloat(numeric,  str);	      Number    f    =    NumberUtils.createFloat(numeric);    	non-compiled	[CE]  not  a  statement	10	None	replace
35	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric);  [CE]  not  a  statement  [FE]            NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric);  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Number  f  =  NumberUtils.createNumber(numeric);	      Number    f    =    NumberUtils.createFloat(numeric);    	non-compiled	[CE]  not  a  statement	10	None	replace
36	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  16);  [CE]  not  a  statement  [FE]            NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  16);  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Integer  f  =  NumberUtils.createInteger(numeric,  16);	      Integer    f    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  not  a  statement	3	None	replace
37	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  4);  [CE]  not  a  statement  [FE]              NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  4);  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Integer  f  =  NumberUtils.createInteger(numeric,  4);	      Integer    f    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  not  a  statement	3	None	replace
38	[BUG]  [BUGGY]  float  f  =  NumberUtils.createFloat(numeric,  str);  [CE]  not  a  statement  [FE]              NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  float  f  =  NumberUtils.createFloat(numeric,  str);  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	float  f  =  NumberUtils.createFloat(numeric,  str);	      float    f    =    NumberUtils.createFloat(numeric);    	non-compiled	[CE]  not  a  statement	4	None	replace
39	[BUG]  [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  0.0F))  {  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  0.0F))  {  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  0.0F))  {	  if(!(f.isNaN()    ||    f.isInfinite()    ||    f.floatValue()    ==    0.0F    &&!allZeros))    {    	non-compiled	[CE]  not  a  statement	13	None	replace
40	[BUG]  [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  0.0F)&&!allZeros)  {  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  0.0F)&&!allZeros)  {  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  0.0F)&&!allZeros)  {	  if(!(f.isNaN()    ||    f.isInfinite()    ||    f.floatValue()    ==    0.0F    &&!allZeros))    {    	non-compiled	[CE]  not  a  statement	13	None	replace
41	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  <  0.0F  ||!allZeros))  {  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  <  0.0F  ||!allZeros))  {  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  <  0.0F  ||!allZeros))  {	  if(!(f.isInfinite()    ||    f.floatValue()    ==    0.0F    ||!allZeros))    {    	non-compiled	[CE]  not  a  statement	14	None	replace
42	[BUG]  [BUGGY]  if(!f.isInfinite()  &&(numeric.floatValue()  ==  0.0F  &&!allZeros)))  {  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  if(!f.isInfinite()  &&(numeric.floatValue()  ==  0.0F  &&!allZeros)))  {  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!f.isInfinite()  &&(numeric.floatValue()  ==  0.0F  &&!allZeros)))  {	  if(!f.isInfinite()    &&(f.floatValue()    ==    0.0F    &&!allZeros)))    {    	non-compiled	[CE]  not  a  statement	8	None	replace
43	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createFloat(numeric.doubleValue());  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  Number  f  =  NumberUtils.createFloat(numeric.doubleValue());  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Number  f  =  NumberUtils.createFloat(numeric.doubleValue());	      Number    f    =    NumberUtils.createFloat(numeric);    	non-compiled	[CE]  not  a  statement	10	None	replace
44	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  ||!allZeros)))  {  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  ||!allZeros)))  {  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  ||!allZeros)))  {	  if(!(f.isInfinite()    ||    f.floatValue()    ==    0.0F    &&!allZeros)))    {    	non-compiled	[CE]  not  a  statement	7	None	replace
45	[BUG]  [BUGGY]  if(!(f.isNaN()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  if(!(f.isNaN()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isNaN()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {	  if(!(f.isInfinite()    ||    f.floatValue()    ==    0.0F    &&!allZeros)))    {    	non-compiled	[CE]  not  a  statement	7	None	replace
46	[BUG]  [BUGGY]  if(!(f.isNaN()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  if(!(f.isNaN()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isNaN()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {	  if(!(f.isInfinite()    ||    f.floatValue()    ==    0.0F    &&!allZeros))    {    	non-compiled	[CE]  not  a  statement	6	None	replace
47	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric).intValue();  [CE]  not  a  statement  [FE]            NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric).intValue();  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Integer  f  =  NumberUtils.createInteger(numeric).intValue();	      Integer    f    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  not  a  statement	3	None	replace
48	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(mant);  [CE]  not  a  statement  [FE]                NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  Float  f  =  NumberUtils.createFloat(mant);  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Float  f  =  NumberUtils.createFloat(mant);	      Float    f    =    NumberUtils.createFloat(str);    	non-compiled	[CE]  not  a  statement	5	None	replace
49	[BUG]  [BUGGY]  float  f  =  NumberUtils.createFloat(numeric).floatValue();  [CE]  not  a  statement  [FE]              NumberFormatException    [CONTEXT]      }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);    [BUGGY]  float  f  =  NumberUtils.createFloat(numeric).floatValue();  [BUGGY]    if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	float  f  =  NumberUtils.createFloat(numeric).floatValue();	      float    f    =    NumberUtils.createFloat(numeric);    	non-compiled	[CE]  not  a  statement	4	None	replace
