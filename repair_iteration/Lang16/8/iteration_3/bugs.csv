bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0)&&!allZeros)  {  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0)&&!allZeros)  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0)&&!allZeros)  {	  if(!(f.isInfinite()    ||    f.floatValue()    ==    0.0F)||!allZeros)    {    	non-compiled	[CE]  not  a  statement	23	None	replace
2	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()!=  0.0F)&&!allZeros)  {  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()!=  0.0F)&&!allZeros)  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()!=  0.0F)&&!allZeros)  {	  if(!(f.isInfinite()    ||    f.floatValue()    ==    0.0F)||!allZeros)    {    	non-compiled	[CE]  not  a  statement	23	None	replace
3	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createDouble(numeric);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Number  f  =  NumberUtils.createDouble(numeric);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Number  f  =  NumberUtils.createDouble(numeric);	  Number    f    =    NumberUtils.createFloat(str);    	non-compiled	[CE]  not  a  statement	8	None	replace
4	[BUG]  [BUGGY]  float  f  =  NumberUtils.createInteger(str);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  float  f  =  NumberUtils.createInteger(str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	float  f  =  NumberUtils.createInteger(str);	  int    f    =    NumberUtils.createInteger(str);    	non-compiled	[CE]  not  a  statement	15	None	replace
5	[BUG]  [BUGGY]  if(!(f.isNaN()  ||  f.floatValue()  ==  0.0D  &&!allZeros)))  {  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isNaN()  ||  f.floatValue()  ==  0.0D  &&!allZeros)))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isNaN()  ||  f.floatValue()  ==  0.0D  &&!allZeros)))  {	  if(!(f.isNaN()    ||    f.floatValue()    ==    0.0F    &&!allZeros)))    {    	non-compiled	[CE]  not  a  statement	45	None	replace
6	[BUG]  [BUGGY]  if(!(f.isNaN()  ||  f.floatValue()!=  0.0F  &&!allZeros)))  {  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isNaN()  ||  f.floatValue()!=  0.0F  &&!allZeros)))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isNaN()  ||  f.floatValue()!=  0.0F  &&!allZeros)))  {	  if(!(f.isNaN()    ||    f.floatValue()    ==    0.0F    &&!allZeros)))    {    	non-compiled	[CE]  not  a  statement	45	None	replace
7	[BUG]  [BUGGY]  if(!(f.isNaN()  ||  f.floatValue()  ==  1.0  &&!allZeros)))  {  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isNaN()  ||  f.floatValue()  ==  1.0  &&!allZeros)))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isNaN()  ||  f.floatValue()  ==  1.0  &&!allZeros)))  {	  if(!(f.isNaN()    ||    f.floatValue()    ==    0.0F    &&!allZeros)))    {    	non-compiled	[CE]  not  a  statement	45	None	replace
8	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric,  str);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric,  str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Number  f  =  NumberUtils.createNumber(numeric,  str);	  Number    f    =    NumberUtils.createNumber(numeric);    	non-compiled	[CE]  not  a  statement	35	None	replace
9	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric.doubleValue());  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric.doubleValue());  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Number  f  =  NumberUtils.createNumber(numeric.doubleValue());	  Number    f    =    NumberUtils.createNumber(numeric);    	non-compiled	[CE]  not  a  statement	35	None	replace
10	[BUG]  [BUGGY]  Integer  f  =  createBigInteger(numeric);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Integer  f  =  createBigInteger(numeric);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Integer  f  =  createBigInteger(numeric);	  Integer    f    =    createInteger(str);    	non-compiled	[CE]  not  a  statement	19	None	replace
11	[BUG]  [BUGGY]  Integer  f  =  createInteger(0);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Integer  f  =  createInteger(0);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Integer  f  =  createInteger(0);	  Integer    f    =    createInteger(str);    	non-compiled	[CE]  not  a  statement	19	None	replace
12	[BUG]  [BUGGY]  Integer  f  =  createLong(numeric);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Integer  f  =  createLong(numeric);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Integer  f  =  createLong(numeric);	  Integer    f    =    createInteger(str);    	non-compiled	[CE]  not  a  statement	19	None	replace
13	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0  &&!allZeros)))  {  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0  &&!allZeros)))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0  &&!allZeros)))  {	  if(!(f.isInfinite()    ||    f.floatValue()    ==    1.0    &&!allZeros)))    {    	non-compiled	[CE]  not  a  statement	2	None	replace
14	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createInteger(str);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Number  f  =  NumberUtils.createInteger(str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Number  f  =  NumberUtils.createInteger(str);	  Number    f    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  not  a  statement	9	None	replace
15	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createInteger(0);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Number  f  =  NumberUtils.createInteger(0);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Number  f  =  NumberUtils.createInteger(0);	  Number    f    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  not  a  statement	9	None	replace
16	[BUG]  [BUGGY]  if(!(f.isNaN()  ||  f.floatValue()  ==  0.0D  &&!allZeros))  {  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isNaN()  ||  f.floatValue()  ==  0.0D  &&!allZeros))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isNaN()  ||  f.floatValue()  ==  0.0D  &&!allZeros))  {	  if(!(f.isNaN()    ||    f.floatValue()    ==    0.0F    &&!allZeros))    {    	non-compiled	[CE]  not  a  statement	46	None	replace
17	[BUG]  [BUGGY]  if(!(f.isNaN()  ||  f.floatValue()  ==  0.0L  &&!allZeros))  {  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isNaN()  ||  f.floatValue()  ==  0.0L  &&!allZeros))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isNaN()  ||  f.floatValue()  ==  0.0L  &&!allZeros))  {	  if(!(f.isNaN()    ||    f.floatValue()    ==    0.0F    &&!allZeros))    {    	non-compiled	[CE]  not  a  statement	46	None	replace
18	[BUG]  [BUGGY]  if(!(f.isNaN()  ||  f.floatValue()!=  0.0F  &&!allZeros))  {  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isNaN()  ||  f.floatValue()!=  0.0F  &&!allZeros))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isNaN()  ||  f.floatValue()!=  0.0F  &&!allZeros))  {	  if(!(f.isNaN()    ||    f.floatValue()    ==    0.0F    &&!allZeros))    {    	non-compiled	[CE]  not  a  statement	46	None	replace
19	[BUG]  [BUGGY]  if(!f.isInfinite()  ||(FLOAT_ZERO.floatValue()  ==  0.0F  &&!allZeros)))  {  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!f.isInfinite()  ||(FLOAT_ZERO.floatValue()  ==  0.0F  &&!allZeros)))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!f.isInfinite()  ||(FLOAT_ZERO.floatValue()  ==  0.0F  &&!allZeros)))  {	  if(!f.isInfinite()    &&(FLOAT_ZERO.floatValue()    ==    0.0F    &&!allZeros)))    {    	non-compiled	[CE]  not  a  statement	31	None	replace
20	[BUG]  [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  0.0)&&!allZeros)  {  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  0.0)&&!allZeros)  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  0.0)&&!allZeros)  {	  if(!(f.isNaN()    ||    f.isInfinite()    ||    f.floatValue()    ==    0.0F)&&!allZeros)    {    	non-compiled	[CE]  not  a  statement	40	None	replace
21	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0  &&!allZeros))  {  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0  &&!allZeros))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0  &&!allZeros))  {	  if(!(f.isInfinite()    ||    f.floatValue()    ==    0.0D    &&!allZeros))    {    	non-compiled	[CE]  not  a  statement	27	None	replace
22	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0d  &&!allZeros))  {  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0d  &&!allZeros))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0d  &&!allZeros))  {	  if(!(f.isInfinite()    ||    f.floatValue()    ==    0.0D    &&!allZeros))    {    	non-compiled	[CE]  not  a  statement	27	None	replace
23	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(str.floatValue());  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Float  f  =  NumberUtils.createFloat(str.floatValue());  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Float  f  =  NumberUtils.createFloat(str.floatValue());	  Float    f    =    NumberUtils.createFloat(numeric.floatValue());    	non-compiled	[CE]  not  a  statement	4	None	replace
24	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.floatValue(),  str);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.floatValue(),  str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Float  f  =  NumberUtils.createFloat(numeric.floatValue(),  str);	  Float    f    =    NumberUtils.createFloat(numeric.floatValue());    	non-compiled	[CE]  not  a  statement	4	None	replace
25	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.floatValue()  +  1);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.floatValue()  +  1);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Float  f  =  NumberUtils.createFloat(numeric.floatValue()  +  1);	  Float    f    =    NumberUtils.createFloat(numeric.floatValue());    	non-compiled	[CE]  not  a  statement	4	None	replace
26	[BUG]  [BUGGY]  if(!f.isInfinite()  ||(numeric.floatValue()  ==  0.0F  &&!allZeros)))  {  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!f.isInfinite()  ||(numeric.floatValue()  ==  0.0F  &&!allZeros)))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!f.isInfinite()  ||(numeric.floatValue()  ==  0.0F  &&!allZeros)))  {	  if(!f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    	non-compiled	[CE]  not  a  statement	24	None	replace
27	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(str,  16);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Integer  f  =  NumberUtils.createInteger(str,  16);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Integer  f  =  NumberUtils.createInteger(str,  16);	  Integer    f    =    NumberUtils.createInteger(numeric,    16);    	non-compiled	[CE]  not  a  statement	36	None	replace
28	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  12);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  12);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Integer  f  =  NumberUtils.createInteger(numeric,  12);	  Integer    f    =    NumberUtils.createInteger(numeric,    16);    	non-compiled	[CE]  not  a  statement	36	None	replace
29	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  10);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  10);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Integer  f  =  NumberUtils.createInteger(numeric,  10);	  Integer    f    =    NumberUtils.createInteger(numeric,    16);    	non-compiled	[CE]  not  a  statement	36	None	replace
30	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  <  0.0F  ||  Float.isInfinite(numeric)))  {  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  <  0.0F  ||  Float.isInfinite(numeric)))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  <  0.0F  ||  Float.isInfinite(numeric)))  {	  if(!(f.isInfinite()    ||    f.floatValue()    <    0.0F    ||!allZeros))    {    	non-compiled	[CE]  not  a  statement	41	None	replace
31	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  >=  0.0F  ||!allZeros))  {  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  >=  0.0F  ||!allZeros))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  >=  0.0F  ||!allZeros))  {	  if(!(f.isInfinite()    ||    f.floatValue()    <    0.0F    ||!allZeros))    {    	non-compiled	[CE]  not  a  statement	41	None	replace
32	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  <  0.0F  ||  0  <  =  allZeros))  {  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  <  0.0F  ||  0  <  =  allZeros))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  <  0.0F  ||  0  <  =  allZeros))  {	  if(!(f.isInfinite()    ||    f.floatValue()    <    0.0F    ||!allZeros))    {    	non-compiled	[CE]  not  a  statement	41	None	replace
33	[BUG]  [BUGGY]  float  f  =  NumberUtils.createDouble(numeric);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  float  f  =  NumberUtils.createDouble(numeric);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	float  f  =  NumberUtils.createDouble(numeric);	  float    f    =    NumberUtils.createLong(str);    	non-compiled	[CE]  not  a  statement	12	None	replace
34	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0L  ||!allZeros)))  {  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0L  ||!allZeros)))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0L  ||!allZeros)))  {	  if(!(f.isInfinite()    ||    f.floatValue()    ==    0.0F    ||!allZeros)))    {    	non-compiled	[CE]  not  a  statement	44	None	replace
35	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0D  ||!allZeros)))  {  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0D  ||!allZeros)))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0D  ||!allZeros)))  {	  if(!(f.isInfinite()    ||    f.floatValue()    ==    0.0F    ||!allZeros)))    {    	non-compiled	[CE]  not  a  statement	44	None	replace
36	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0)&&!allZeros))  {  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0)&&!allZeros))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0)&&!allZeros))  {	  if(!(f.isInfinite()    ||    f.floatValue()    ==    0.0F)&&!allZeros))    {    	non-compiled	[CE]  not  a  statement	33	None	replace
37	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  >=  0.0F  &&!allZeros))  {  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  >=  0.0F  &&!allZeros))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  >=  0.0F  &&!allZeros))  {	  if(!(f.isInfinite()    ||    f.floatValue()!=    0.0F    &&!allZeros))    {    	non-compiled	[CE]  not  a  statement	28	None	replace
38	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createFloat(str,  null);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Number  f  =  NumberUtils.createFloat(str,  null);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Number  f  =  NumberUtils.createFloat(str,  null);	  Number    f    =    NumberUtils.createFloat(numeric,    str);    	non-compiled	[CE]  not  a  statement	34	None	replace
39	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createFloat(mant,  str);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Number  f  =  NumberUtils.createFloat(mant,  str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Number  f  =  NumberUtils.createFloat(mant,  str);	  Number    f    =    NumberUtils.createFloat(numeric,    str);    	non-compiled	[CE]  not  a  statement	34	None	replace
40	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createFloat(numeric,  mant);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Number  f  =  NumberUtils.createFloat(numeric,  mant);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Number  f  =  NumberUtils.createFloat(numeric,  mant);	  Number    f    =    NumberUtils.createFloat(numeric,    str);    	non-compiled	[CE]  not  a  statement	34	None	replace
41	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(str,  null);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Number  f  =  NumberUtils.createNumber(str,  null);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Number  f  =  NumberUtils.createNumber(str,  null);	  Number    f    =    NumberUtils.createFloat(numeric,    str);    	non-compiled	[CE]  not  a  statement	34	None	replace
42	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  2);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  2);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Integer  f  =  NumberUtils.createInteger(numeric,  2);	  Integer    f    =    NumberUtils.createInteger(numeric,    4);    	non-compiled	[CE]  not  a  statement	37	None	replace
43	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  1);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  1);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Integer  f  =  NumberUtils.createInteger(numeric,  1);	  Integer    f    =    NumberUtils.createInteger(numeric,    4);    	non-compiled	[CE]  not  a  statement	37	None	replace
44	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  3);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  3);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Integer  f  =  NumberUtils.createInteger(numeric,  3);	  Integer    f    =    NumberUtils.createInteger(numeric,    4);    	non-compiled	[CE]  not  a  statement	37	None	replace
45	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0d  &&!allZeros)))  {  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0d  &&!allZeros)))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0d  &&!allZeros)))  {	  if(!(f.isInfinite()    ||    f.floatValue()    ==    0.0D    &&!allZeros)))    {    	non-compiled	[CE]  not  a  statement	1	None	replace
46	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  null);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  null);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Float  f  =  NumberUtils.createFloat(str,  null);	  Float    f    =    NumberUtils.createFloat(numeric,    str);    	non-compiled	[CE]  not  a  statement	5	None	replace
47	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  numeric);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  numeric);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Float  f  =  NumberUtils.createFloat(str,  numeric);	  Float    f    =    NumberUtils.createFloat(numeric,    str);    	non-compiled	[CE]  not  a  statement	5	None	replace
48	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(mant,  str);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Float  f  =  NumberUtils.createFloat(mant,  str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Float  f  =  NumberUtils.createFloat(mant,  str);	  Float    f    =    NumberUtils.createFloat(numeric,    str);    	non-compiled	[CE]  not  a  statement	5	None	replace
49	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  mant);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  mant);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  mant);	  Float    f    =    NumberUtils.createFloat(numeric,    str);    	non-compiled	[CE]  not  a  statement	5	None	replace
50	[BUG]  [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  0.0))  {  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  0.0))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  0.0))  {	  if(!(f.isNaN()    ||    f.isInfinite()    ||    f.floatValue()    ==    0.0F))    {    	non-compiled	[CE]  not  a  statement	39	None	replace
51	[BUG]  [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  1.0))  {  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  1.0))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  1.0))  {	  if(!(f.isNaN()    ||    f.isInfinite()    ||    f.floatValue()    ==    0.0F))    {    	non-compiled	[CE]  not  a  statement	39	None	replace
52	[BUG]  [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.intValue()  ==  0.0F))  {  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.intValue()  ==  0.0F))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isNaN()  ||  f.isInfinite()  ||  f.intValue()  ==  0.0F))  {	  if(!(f.isNaN()    ||    f.isInfinite()    ||    f.floatValue()    ==    0.0F))    {    	non-compiled	[CE]  not  a  statement	39	None	replace
53	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createInteger(str);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Float  f  =  NumberUtils.createInteger(str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Float  f  =  NumberUtils.createInteger(str);	  Float    f    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  not  a  statement	14	None	replace
54	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createInteger(0);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Float  f  =  NumberUtils.createInteger(0);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Float  f  =  NumberUtils.createInteger(0);	  Float    f    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  not  a  statement	14	None	replace
55	[BUG]  [BUGGY]  if(!f.isInfinite()  &&(numeric.floatValue()  ==  0.0F  ||!allZeros)))  {  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!f.isInfinite()  &&(numeric.floatValue()  ==  0.0F  ||!allZeros)))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!f.isInfinite()  &&(numeric.floatValue()  ==  0.0F  ||!allZeros)))  {	  if(!f.isInfinite()    &&(numeric.floatValue()    ==    0.0F    &&!allZeros)))    {    	non-compiled	[CE]  not  a  statement	42	None	replace
56	[BUG]  [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  0.0  &&!allZeros))  {  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  0.0  &&!allZeros))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  0.0  &&!allZeros))  {	  if(!(f.isNaN()    ||    f.isInfinite()    ||    f.floatValue()    ==    0.0D    &&!allZeros))    {    	non-compiled	[CE]  not  a  statement	6	None	replace
57	[BUG]  [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  0.0d  &&!allZeros))  {  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  0.0d  &&!allZeros))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  0.0d  &&!allZeros))  {	  if(!(f.isNaN()    ||    f.isInfinite()    ||    f.floatValue()    ==    0.0D    &&!allZeros))    {    	non-compiled	[CE]  not  a  statement	6	None	replace
58	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(str).floatValue();  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Float  f  =  NumberUtils.createFloat(str).floatValue();  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Float  f  =  NumberUtils.createFloat(str).floatValue();	  Float    f    =    NumberUtils.createFloat(numeric).floatValue();    	non-compiled	[CE]  not  a  statement	30	None	replace
59	[BUG]  [BUGGY]  Integer  f  =  createInteger(numeric,  2);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Integer  f  =  createInteger(numeric,  2);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Integer  f  =  createInteger(numeric,  2);	  Integer    f    =    createInteger(numeric,    4);    	non-compiled	[CE]  not  a  statement	32	None	replace
60	[BUG]  [BUGGY]  Integer  f  =  createInteger(numeric,  1);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Integer  f  =  createInteger(numeric,  1);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Integer  f  =  createInteger(numeric,  1);	  Integer    f    =    createInteger(numeric,    4);    	non-compiled	[CE]  not  a  statement	32	None	replace
61	[BUG]  [BUGGY]  Integer  f  =  createInteger(numeric,  3);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Integer  f  =  createInteger(numeric,  3);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Integer  f  =  createInteger(numeric,  3);	  Integer    f    =    createInteger(numeric,    4);    	non-compiled	[CE]  not  a  statement	32	None	replace
62	[BUG]  [BUGGY]  float  f  =  NumberUtils.createFloat(str,  numeric);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  float  f  =  NumberUtils.createFloat(str,  numeric);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	float  f  =  NumberUtils.createFloat(str,  numeric);	  float    f    =    NumberUtils.createFloat(numeric,    str);    	non-compiled	[CE]  not  a  statement	38	None	replace
63	[BUG]  [BUGGY]  float  f  =  NumberUtils.createFloat(str,  null);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  float  f  =  NumberUtils.createFloat(str,  null);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	float  f  =  NumberUtils.createFloat(str,  null);	  float    f    =    NumberUtils.createFloat(numeric,    str);    	non-compiled	[CE]  not  a  statement	38	None	replace
64	[BUG]  [BUGGY]  float  f  =  NumberUtils.createFloat(mant,  str);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  float  f  =  NumberUtils.createFloat(mant,  str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	float  f  =  NumberUtils.createFloat(mant,  str);	  float    f    =    NumberUtils.createFloat(numeric,    str);    	non-compiled	[CE]  not  a  statement	38	None	replace
65	[BUG]  [BUGGY]  float  f  =  NumberUtils.createFloat(numeric,  mant);  [CE]  not  a  statement  [FE]                        NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  float  f  =  NumberUtils.createFloat(numeric,  mant);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	float  f  =  NumberUtils.createFloat(numeric,  mant);	  float    f    =    NumberUtils.createFloat(numeric,    str);    	non-compiled	[CE]  not  a  statement	38	None	replace
66	[BUG]  [BUGGY]  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0f  ||!allZeros)))  {  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0f  ||!allZeros)))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!f.isInfinite()  ||(f.floatValue()  ==  0.0f  ||!allZeros)))  {	  if(!f.isInfinite()    &&(f.floatValue()    ==    0.0f    ||!allZeros)))    {    	non-compiled	[CE]  not  a  statement	26	None	replace
67	[BUG]  [BUGGY]  if(!f.isInfinite()  &&(f.floatValue()  ==  1.0f  ||!allZeros)))  {  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!f.isInfinite()  &&(f.floatValue()  ==  1.0f  ||!allZeros)))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!f.isInfinite()  &&(f.floatValue()  ==  1.0f  ||!allZeros)))  {	  if(!f.isInfinite()    &&(f.floatValue()    ==    0.0f    ||!allZeros)))    {    	non-compiled	[CE]  not  a  statement	26	None	replace
68	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(str).intValue();  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Integer  f  =  NumberUtils.createInteger(str).intValue();  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Integer  f  =  NumberUtils.createInteger(str).intValue();	  Integer    f    =    NumberUtils.createInteger(numeric).intValue();    	non-compiled	[CE]  not  a  statement	47	None	replace
69	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric).floatValue();  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric).floatValue();  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Integer  f  =  NumberUtils.createInteger(numeric).floatValue();	  Integer    f    =    NumberUtils.createInteger(numeric).intValue();    	non-compiled	[CE]  not  a  statement	47	None	replace
70	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createInteger(numeric).floatValue();  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Float  f  =  NumberUtils.createInteger(numeric).floatValue();  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Float  f  =  NumberUtils.createInteger(numeric).floatValue();	  Integer    f    =    NumberUtils.createInteger(numeric).intValue();    	non-compiled	[CE]  not  a  statement	47	None	replace
71	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  >=  0.0F  &&!allZeros)))  {  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  >=  0.0F  &&!allZeros)))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  >=  0.0F  &&!allZeros)))  {	  if(!(f.isInfinite()    ||    f.floatValue()!=    0.0F    &&!allZeros)))    {    	non-compiled	[CE]  not  a  statement	3	None	replace
72	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()!=  0.0D  &&!allZeros)))  {  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()!=  0.0D  &&!allZeros)))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()!=  0.0D  &&!allZeros)))  {	  if(!(f.isInfinite()    ||    f.floatValue()!=    0.0F    &&!allZeros)))    {    	non-compiled	[CE]  not  a  statement	3	None	replace
73	[BUG]  [BUGGY]  Integer  f  =  createInteger(numeric.intValue()  +  1);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Integer  f  =  createInteger(numeric.intValue()  +  1);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Integer  f  =  createInteger(numeric.intValue()  +  1);	  Integer    f    =    createInteger(numeric.intValue());    	non-compiled	[CE]  not  a  statement	20	None	replace
74	[BUG]  [BUGGY]  Integer  f  =  createInteger(numeric.intValue(),  1);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Integer  f  =  createInteger(numeric.intValue(),  1);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Integer  f  =  createInteger(numeric.intValue(),  1);	  Integer    f    =    createInteger(numeric.intValue());    	non-compiled	[CE]  not  a  statement	20	None	replace
75	[BUG]  [BUGGY]  float  f  =  NumberUtils.createFloat(str).floatValue();  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  float  f  =  NumberUtils.createFloat(str).floatValue();  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	float  f  =  NumberUtils.createFloat(str).floatValue();	  float    f    =    NumberUtils.createFloat(numeric).floatValue();    	non-compiled	[CE]  not  a  statement	49	None	replace
76	[BUG]  [BUGGY]  float  f  =  NumberUtils.createLong(numeric).floatValue();  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  float  f  =  NumberUtils.createLong(numeric).floatValue();  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	float  f  =  NumberUtils.createLong(numeric).floatValue();	  float    f    =    NumberUtils.createFloat(numeric).floatValue();    	non-compiled	[CE]  not  a  statement	49	None	replace
77	[BUG]  [BUGGY]  float  f  =  NumberUtils.createInteger(numeric).floatValue();  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  float  f  =  NumberUtils.createInteger(numeric).floatValue();  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	float  f  =  NumberUtils.createInteger(numeric).floatValue();	  float    f    =    NumberUtils.createFloat(numeric).floatValue();    	non-compiled	[CE]  not  a  statement	49	None	replace
78	[BUG]  [BUGGY]  Integer  f  =  createInteger(numeric.doubleValue()  +  1);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Integer  f  =  createInteger(numeric.doubleValue()  +  1);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Integer  f  =  createInteger(numeric.doubleValue()  +  1);	  Integer    f    =    createInteger(numeric.doubleValue());    	non-compiled	[CE]  not  a  statement	21	None	replace
79	[BUG]  [BUGGY]  Integer  f  =  createInteger(numeric.doubleValue(),  1);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Integer  f  =  createInteger(numeric.doubleValue(),  1);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Integer  f  =  createInteger(numeric.doubleValue(),  1);	  Integer    f    =    createInteger(numeric.doubleValue());    	non-compiled	[CE]  not  a  statement	21	None	replace
80	[BUG]  [BUGGY]  Integer  f  =  createInteger(numeric.doubleValue(),  str);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Integer  f  =  createInteger(numeric.doubleValue(),  str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Integer  f  =  createInteger(numeric.doubleValue(),  str);	  Integer    f    =    createInteger(numeric.doubleValue());    	non-compiled	[CE]  not  a  statement	21	None	replace
81	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createFloat(numeric.doubleValue(),  str);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Number  f  =  NumberUtils.createFloat(numeric.doubleValue(),  str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Number  f  =  NumberUtils.createFloat(numeric.doubleValue(),  str);	  Number    f    =    NumberUtils.createFloat(numeric.doubleValue());    	non-compiled	[CE]  not  a  statement	43	None	replace
82	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createFloat(str.doubleValue());  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Number  f  =  NumberUtils.createFloat(str.doubleValue());  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Number  f  =  NumberUtils.createFloat(str.doubleValue());	  Number    f    =    NumberUtils.createFloat(numeric.doubleValue());    	non-compiled	[CE]  not  a  statement	43	None	replace
83	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createFloat(numeric.floatValue());  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Number  f  =  NumberUtils.createFloat(numeric.floatValue());  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Number  f  =  NumberUtils.createFloat(numeric.floatValue());	  Number    f    =    NumberUtils.createFloat(numeric.doubleValue());    	non-compiled	[CE]  not  a  statement	43	None	replace
84	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(mant);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Number  f  =  NumberUtils.createNumber(mant);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Number  f  =  NumberUtils.createNumber(mant);	  Number    f    =    NumberUtils.createNumber(str);    	non-compiled	[CE]  not  a  statement	10	None	replace
85	[BUG]  [BUGGY]  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  ||!allZeros)))  {  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  ||!allZeros)))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  ||!allZeros)))  {	  if(!f.isInfinite()    &&(f.floatValue()    ==    0.0F    ||!allZeros)))    {    	non-compiled	[CE]  not  a  statement	25	None	replace
86	[BUG]  [BUGGY]  if(!f.isInfinite()  &&(f.floatValue()  ==  0.0D  ||!allZeros)))  {  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!f.isInfinite()  &&(f.floatValue()  ==  0.0D  ||!allZeros)))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!f.isInfinite()  &&(f.floatValue()  ==  0.0D  ||!allZeros)))  {	  if(!f.isInfinite()    &&(f.floatValue()    ==    0.0F    ||!allZeros)))    {    	non-compiled	[CE]  not  a  statement	25	None	replace
87	[BUG]  [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.value()  ==  1.0  &&!allZeros))  {  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.value()  ==  1.0  &&!allZeros))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isNaN()  ||  f.isInfinite()  ||  f.value()  ==  1.0  &&!allZeros))  {	  if(!(f.isNaN()    ||    f.isInfinite()    ||    f.floatValue()    ==    1.0    &&!allZeros))    {    	non-compiled	[CE]  not  a  statement	7	None	replace
88	[BUG]  [BUGGY]  if(!f.isInfinite()  &&(FLOAT_ZERO.floatValue()  ==  0.0F  ||!allZeros)))  {  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!f.isInfinite()  &&(FLOAT_ZERO.floatValue()  ==  0.0F  ||!allZeros)))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!f.isInfinite()  &&(FLOAT_ZERO.floatValue()  ==  0.0F  ||!allZeros)))  {	  if(!f.isInfinite()    &&(f.floatValue()    ==    0.0F    ||!allZeros)))    {    	non-compiled	[CE]  not  a  statement	25	None	replace
89	[BUG]  [BUGGY]  Integer  f  =  createInteger(numeric.doubleValue()  -  1);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Integer  f  =  createInteger(numeric.doubleValue()  -  1);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Integer  f  =  createInteger(numeric.doubleValue()  -  1);	  Integer    f    =    createInteger(numeric.doubleValue());    	non-compiled	[CE]  not  a  statement	21	None	replace
90	[BUG]  [BUGGY]  Integer  f  =  createInteger(numeric.floatValue());  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Integer  f  =  createInteger(numeric.floatValue());  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Integer  f  =  createInteger(numeric.floatValue());	  Integer    f    =    createInteger(numeric.doubleValue());    	non-compiled	[CE]  not  a  statement	21	None	replace
91	[BUG]  [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  0.0f  &&!allZeros))  {  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  0.0f  &&!allZeros))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  0.0f  &&!allZeros))  {	  if(!(f.isNaN()    ||    f.isInfinite()    ||    f.floatValue()    ==    0.0D    &&!allZeros))    {    	non-compiled	[CE]  not  a  statement	6	None	replace
92	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F)||!allZeros))  {  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F)||!allZeros))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F)||!allZeros))  {	  if(!(f.isInfinite()    ||    f.floatValue()    ==    0.0F    ||!allZeros)))    {    	non-compiled	[CE]  not  a  statement	44	None	replace
93	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  ||  Float.isInfinite(numeric)))  {  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  ||  Float.isInfinite(numeric)))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  ||  Float.isInfinite(numeric)))  {	  if(!(f.isInfinite()    ||    f.floatValue()    ==    0.0F    ||!allZeros)))    {    	non-compiled	[CE]  not  a  statement	44	None	replace
94	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(1);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Integer  f  =  NumberUtils.createInteger(1);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Integer  f  =  NumberUtils.createInteger(1);	  Integer    f    =    NumberUtils.createInteger(0);    	non-compiled	[CE]  not  a  statement	17	None	replace
95	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createFloat(numeric.doubleValue()  +  1);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Number  f  =  NumberUtils.createFloat(numeric.doubleValue()  +  1);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Number  f  =  NumberUtils.createFloat(numeric.doubleValue()  +  1);	  Number    f    =    NumberUtils.createFloat(numeric.doubleValue());    	non-compiled	[CE]  not  a  statement	43	None	replace
96	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.floatValue()  -  1);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.floatValue()  -  1);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Float  f  =  NumberUtils.createFloat(numeric.floatValue()  -  1);	  Float    f    =    NumberUtils.createFloat(numeric.floatValue());    	non-compiled	[CE]  not  a  statement	4	None	replace
97	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0f  &&!allZeros))  {  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0f  &&!allZeros))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0f  &&!allZeros))  {	  if(!(f.isInfinite()    ||    f.floatValue()    ==    0.0D    &&!allZeros))    {    	non-compiled	[CE]  not  a  statement	27	None	replace
98	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.5  &&!allZeros)))  {  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.5  &&!allZeros)))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  ==  0.5  &&!allZeros)))  {	  if(!(f.isInfinite()    ||    f.floatValue()    ==    1.0    &&!allZeros)))    {    	non-compiled	[CE]  not  a  statement	2	None	replace
99	[BUG]  [BUGGY]  if(!(f.isLong()  ||  f.floatValue()  ==  1.0  &&!allZeros)))  {  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isLong()  ||  f.floatValue()  ==  1.0  &&!allZeros)))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isLong()  ||  f.floatValue()  ==  1.0  &&!allZeros)))  {	  if(!(f.isInfinite()    ||    f.floatValue()    ==    1.0    &&!allZeros)))    {    	non-compiled	[CE]  not  a  statement	2	None	replace
100	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()!=  1.0  &&!allZeros)))  {  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()!=  1.0  &&!allZeros)))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()!=  1.0  &&!allZeros)))  {	  if(!(f.isInfinite()    ||    f.floatValue()!=    0.0F    &&!allZeros)))    {    	non-compiled	[CE]  not  a  statement	3	None	replace
101	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()!=  0.0  &&!allZeros))  {  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()!=  0.0  &&!allZeros))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()!=  0.0  &&!allZeros))  {	  if(!(f.isInfinite()    ||    f.floatValue()    ==    1.0    &&!allZeros))    {    	non-compiled	[CE]  not  a  statement	29	None	replace
102	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0f  &&!allZeros)))  {  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0f  &&!allZeros)))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0f  &&!allZeros)))  {	  if(!(f.isInfinite()    ||    f.floatValue()    ==    0.0D    &&!allZeros)))    {    	non-compiled	[CE]  not  a  statement	1	None	replace
103	[BUG]  [BUGGY]  Float  f  =  createFloat(numeric);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Float  f  =  createFloat(numeric);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Float  f  =  createFloat(numeric);	  Integer    f    =    createInteger(str);    	non-compiled	[CE]  not  a  statement	19	None	replace
104	[BUG]  [BUGGY]  float  f  =  NumberUtils.createFloat(numeric,  str  +  1);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  float  f  =  NumberUtils.createFloat(numeric,  str  +  1);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	float  f  =  NumberUtils.createFloat(numeric,  str  +  1);	  float    f    =    NumberUtils.createFloat(numeric,    str);    	non-compiled	[CE]  not  a  statement	38	None	replace
105	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  f);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  f);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Integer  f  =  NumberUtils.createInteger(numeric,  f);	  Integer    f    =    NumberUtils.createInteger(str);    	non-compiled	[CE]  not  a  statement	16	None	replace
106	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str  +  1);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str  +  1);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  str  +  1);	  Float    f    =    NumberUtils.createFloat(numeric,    str);    	non-compiled	[CE]  not  a  statement	5	None	replace
107	[BUG]  [BUGGY]  if(!(f.isNaN()  ||  f.floatValue()  ==  0.0F)&&!allZeros))  {  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isNaN()  ||  f.floatValue()  ==  0.0F)&&!allZeros))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isNaN()  ||  f.floatValue()  ==  0.0F)&&!allZeros))  {	  if(!(f.isNaN()    ||    f.floatValue()    ==    0.0F    &&!allZeros)))    {    	non-compiled	[CE]  not  a  statement	45	None	replace
108	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric,  string);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric,  string);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Number  f  =  NumberUtils.createNumber(numeric,  string);	  Number    f    =    NumberUtils.createNumber(numeric);    	non-compiled	[CE]  not  a  statement	35	None	replace
109	[BUG]  [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()!=  0.0  &&!allZeros))  {  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()!=  0.0  &&!allZeros))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()!=  0.0  &&!allZeros))  {	  if(!(f.isNaN()    ||    f.isInfinite()    ||    f.floatValue()    ==    1.0    &&!allZeros))    {    	non-compiled	[CE]  not  a  statement	7	None	replace
110	[BUG]  [BUGGY]  if(!f.isInfinite()  ||(f.floatValue()!=  0.0F  &&!allZeros)))  {  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!f.isInfinite()  ||(f.floatValue()!=  0.0F  &&!allZeros)))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!f.isInfinite()  ||(f.floatValue()!=  0.0F  &&!allZeros)))  {	  if(!f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    	non-compiled	[CE]  not  a  statement	24	None	replace
111	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createInteger(numeric,  4);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Number  f  =  NumberUtils.createInteger(numeric,  4);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Number  f  =  NumberUtils.createInteger(numeric,  4);	  Number    f    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  not  a  statement	9	None	replace
112	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createInteger(numeric,  1);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Number  f  =  NumberUtils.createInteger(numeric,  1);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Number  f  =  NumberUtils.createInteger(numeric,  1);	  Number    f    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  not  a  statement	9	None	replace
113	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createInteger(numeric,  str);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Number  f  =  NumberUtils.createInteger(numeric,  str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Number  f  =  NumberUtils.createInteger(numeric,  str);	  Number    f    =    NumberUtils.createFloat(numeric,    str);    	non-compiled	[CE]  not  a  statement	34	None	replace
114	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createFloat(numeric,  str  +  1);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Number  f  =  NumberUtils.createFloat(numeric,  str  +  1);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Number  f  =  NumberUtils.createFloat(numeric,  str  +  1);	  Number    f    =    NumberUtils.createFloat(numeric,    str);    	non-compiled	[CE]  not  a  statement	34	None	replace
115	[BUG]  [BUGGY]  if(!f.isInfinite()  &&(FLOAT_ZERO.floatValue()  ==  0.0f  ||!allZeros)))  {  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!f.isInfinite()  &&(FLOAT_ZERO.floatValue()  ==  0.0f  ||!allZeros)))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!f.isInfinite()  &&(FLOAT_ZERO.floatValue()  ==  0.0f  ||!allZeros)))  {	  if(!f.isInfinite()    &&(f.floatValue()    ==    0.0f    ||!allZeros)))    {    	non-compiled	[CE]  not  a  statement	26	None	replace
116	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric).doubleValue();  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric).doubleValue();  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Integer  f  =  NumberUtils.createInteger(numeric).doubleValue();	  Integer    f    =    NumberUtils.createInteger(numeric).intValue();    	non-compiled	[CE]  not  a  statement	47	None	replace
117	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()!=  1.0  &&!allZeros))  {  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()!=  1.0  &&!allZeros))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()!=  1.0  &&!allZeros))  {	  if(!(f.isInfinite()    ||    f.floatValue()!=    0.0F    &&!allZeros))    {    	non-compiled	[CE]  not  a  statement	28	None	replace
118	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()!=  0.0F))  {  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()!=  0.0F))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()!=  0.0F))  {	  if(!(f.isInfinite()    ||    f.floatValue()!=    0.0F    &&!allZeros))    {    	non-compiled	[CE]  not  a  statement	28	None	replace
119	[BUG]  [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.charAt(0)  ==  0.0F))  {  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.charAt(0)  ==  0.0F))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isNaN()  ||  f.isInfinite()  ||  f.charAt(0)  ==  0.0F))  {	  if(!(f.isNaN()    ||    f.isInfinite()    ||    f.floatValue()    ==    0.0F))    {    	non-compiled	[CE]  not  a  statement	39	None	replace
120	[BUG]  [BUGGY]  if(!(f.isNaN()  ||  f.floatValue()  ==  0.0F)&&!allZeros)  {  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isNaN()  ||  f.floatValue()  ==  0.0F)&&!allZeros)  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isNaN()  ||  f.floatValue()  ==  0.0F)&&!allZeros)  {	  if(!(f.isNaN()    ||    f.floatValue()    ==    0.0F    &&!allZeros))    {    	non-compiled	[CE]  not  a  statement	46	None	replace
121	[BUG]  [BUGGY]  if(!(f.isNaN()  ||  f.floatValue()  ==  1.0  &&!allZeros))  {  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isNaN()  ||  f.floatValue()  ==  1.0  &&!allZeros))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isNaN()  ||  f.floatValue()  ==  1.0  &&!allZeros))  {	  if(!(f.isNaN()    ||    f.floatValue()    ==    0.0F    &&!allZeros))    {    	non-compiled	[CE]  not  a  statement	46	None	replace
122	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric).doubleValue();  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric).doubleValue();  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Float  f  =  NumberUtils.createFloat(numeric).doubleValue();	  Float    f    =    NumberUtils.createFloat(numeric).floatValue();    	non-compiled	[CE]  not  a  statement	30	None	replace
123	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()!=  0.0F)&&!allZeros))  {  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()!=  0.0F)&&!allZeros))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()!=  0.0F)&&!allZeros))  {	  if(!(f.isInfinite()    ||    f.floatValue()    ==    0.0F)&&!allZeros))    {    	non-compiled	[CE]  not  a  statement	33	None	replace
124	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F)&&!AllZeros))  {  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F)&&!AllZeros))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F)&&!AllZeros))  {	  if(!(f.isInfinite()    ||    f.floatValue()    ==    0.0F)&&!allZeros))    {    	non-compiled	[CE]  not  a  statement	33	None	replace
125	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  18);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  18);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Integer  f  =  NumberUtils.createInteger(numeric,  18);	  Integer    f    =    NumberUtils.createInteger(numeric,    16);    	non-compiled	[CE]  not  a  statement	36	None	replace
126	[BUG]  [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()!=  0.0F)&&!allZeros)  {  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()!=  0.0F)&&!allZeros)  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()!=  0.0F)&&!allZeros)  {	  if(!(f.isNaN()    ||    f.isInfinite()    ||    f.floatValue()    ==    0.0F)&&!allZeros)    {    	non-compiled	[CE]  not  a  statement	40	None	replace
127	[BUG]  [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  1.0)&&!allZeros)  {  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  1.0)&&!allZeros)  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  1.0)&&!allZeros)  {	  if(!(f.isNaN()    ||    f.isInfinite()    ||    f.floatValue()    ==    0.0F)&&!allZeros)    {    	non-compiled	[CE]  not  a  statement	40	None	replace
128	[BUG]  [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.value()  ==  0.0F)&&!allZeros)  {  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.value()  ==  0.0F)&&!allZeros)  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isNaN()  ||  f.isInfinite()  ||  f.value()  ==  0.0F)&&!allZeros)  {	  if(!(f.isNaN()    ||    f.isInfinite()    ||    f.floatValue()    ==    0.0F)&&!allZeros)    {    	non-compiled	[CE]  not  a  statement	40	None	replace
129	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createLong(numeric);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Number  f  =  NumberUtils.createLong(numeric);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Number  f  =  NumberUtils.createLong(numeric);	  Number    f    =    NumberUtils.createFloat(str);    	non-compiled	[CE]  not  a  statement	8	None	replace
130	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createInteger(numeric.doubleValue());  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Number  f  =  NumberUtils.createInteger(numeric.doubleValue());  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Number  f  =  NumberUtils.createInteger(numeric.doubleValue());	  Number    f    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  not  a  statement	9	None	replace
131	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  <  0.0F  ||!allZeros)))  {  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  <  0.0F  ||!allZeros)))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  <  0.0F  ||!allZeros)))  {	  if(!(f.isInfinite()    ||    f.floatValue()    ==    0.0F    ||!allZeros)))    {    	non-compiled	[CE]  not  a  statement	44	None	replace
132	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()!=  0.0F  ||!allZeros)))  {  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()!=  0.0F  ||!allZeros)))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()!=  0.0F  ||!allZeros)))  {	  if(!(f.isInfinite()    ||    f.floatValue()    ==    0.0F    ||!allZeros)))    {    	non-compiled	[CE]  not  a  statement	44	None	replace
133	[BUG]  [BUGGY]  Integer  f  =  createInteger(numeric.longValue());  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Integer  f  =  createInteger(numeric.longValue());  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Integer  f  =  createInteger(numeric.longValue());	  Integer    f    =    createInteger(numeric.intValue());    	non-compiled	[CE]  not  a  statement	20	None	replace
134	[BUG]  [BUGGY]  if(!(f.isNaN()  ||  f.floatValue()  ==  0.0F  ||!allZeros)))  {  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isNaN()  ||  f.floatValue()  ==  0.0F  ||!allZeros)))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isNaN()  ||  f.floatValue()  ==  0.0F  ||!allZeros)))  {	  if(!(f.isNaN()    ||    f.floatValue()    ==    0.0F    &&!allZeros)))    {    	non-compiled	[CE]  not  a  statement	45	None	replace
135	[BUG]  [BUGGY]  if(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {	  if(!f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    	non-compiled	[CE]  not  a  statement	24	None	replace
136	[BUG]  [BUGGY]  if(!f.isInfinite()  &&(f.floatValue()  <  0.0f  ||!allZeros)))  {  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!f.isInfinite()  &&(f.floatValue()  <  0.0f  ||!allZeros)))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!f.isInfinite()  &&(f.floatValue()  <  0.0f  ||!allZeros)))  {	  if(!f.isInfinite()    &&(f.floatValue()    ==    0.0f    ||!allZeros)))    {    	non-compiled	[CE]  not  a  statement	26	None	replace
137	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  <  =  0.0F  ||!allZeros))  {  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  <  =  0.0F  ||!allZeros))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  <  =  0.0F  ||!allZeros))  {	  if(!(f.isInfinite()    ||    f.floatValue()    <    0.0F    ||!allZeros))    {    	non-compiled	[CE]  not  a  statement	41	None	replace
138	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  <  0.0F  ||  0  <  =  Float.POSITIVE_INFINITY))  {  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  <  0.0F  ||  0  <  =  Float.POSITIVE_INFINITY))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  <  0.0F  ||  0  <  =  Float.POSITIVE_INFINITY))  {	  if(!(f.isInfinite()    ||    f.floatValue()    <    0.0F    ||!allZeros))    {    	non-compiled	[CE]  not  a  statement	41	None	replace
139	[BUG]  [BUGGY]  if(!(f.isNaN()  ||  f.floatValue()  <  0.0F  ||!allZeros))  {  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isNaN()  ||  f.floatValue()  <  0.0F  ||!allZeros))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isNaN()  ||  f.floatValue()  <  0.0F  ||!allZeros))  {	  if(!(f.isInfinite()    ||    f.floatValue()    <    0.0F    ||!allZeros))    {    	non-compiled	[CE]  not  a  statement	41	None	replace
140	[BUG]  [BUGGY]  if(!(f.isNaN()  ||  f.floatValue()  ==  0.0F  ||!allZeros))  {  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isNaN()  ||  f.floatValue()  ==  0.0F  ||!allZeros))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isNaN()  ||  f.floatValue()  ==  0.0F  ||!allZeros))  {	  if(!(f.isNaN()    ||    f.floatValue()    ==    0.0F    &&!allZeros))    {    	non-compiled	[CE]  not  a  statement	46	None	replace
141	[BUG]  [BUGGY]  if(!(f.isNaN()  ||  f.doubleValue()  ==  0.0F  &&!allZeros))  {  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isNaN()  ||  f.doubleValue()  ==  0.0F  &&!allZeros))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isNaN()  ||  f.doubleValue()  ==  0.0F  &&!allZeros))  {	  if(!(f.isNaN()    ||    f.floatValue()    ==    0.0F    &&!allZeros))    {    	non-compiled	[CE]  not  a  statement	46	None	replace
142	[BUG]  [BUGGY]  if(!f.isInfinite()  &&(f.floatValue()  <  0.0F  ||!allZeros)))  {  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!f.isInfinite()  &&(f.floatValue()  <  0.0F  ||!allZeros)))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!f.isInfinite()  &&(f.floatValue()  <  0.0F  ||!allZeros)))  {	  if(!f.isInfinite()    &&(f.floatValue()    ==    0.0F    ||!allZeros)))    {    	non-compiled	[CE]  not  a  statement	25	None	replace
143	[BUG]  [BUGGY]  if(!isInfinite()  &&(f.floatValue()  ==  0.0F  ||!allZeros)))  {  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!isInfinite()  &&(f.floatValue()  ==  0.0F  ||!allZeros)))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!isInfinite()  &&(f.floatValue()  ==  0.0F  ||!allZeros)))  {	  if(!f.isInfinite()    &&(f.floatValue()    ==    0.0F    ||!allZeros)))    {    	non-compiled	[CE]  not  a  statement	25	None	replace
144	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(mant);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Integer  f  =  NumberUtils.createInteger(mant);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Integer  f  =  NumberUtils.createInteger(mant);	  Integer    f    =    NumberUtils.createInteger(str);    	non-compiled	[CE]  not  a  statement	16	None	replace
145	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  <  0.0F)&&!allZeros)  {  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  <  0.0F)&&!allZeros)  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  <  0.0F)&&!allZeros)  {	  if(!(f.isInfinite()    ||    f.floatValue()    ==    0.0F)&&!allZeros)    {    	non-compiled	[CE]  not  a  statement	22	None	replace
146	[BUG]  [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  0.0F)&&  Character.isDigit(numeric.charAt(0)))  {  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  0.0F)&&  Character.isDigit(numeric.charAt(0)))  {  [BUGGY]        return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  0.0F)&&  Character.isDigit(numeric.charAt(0)))  {	  if(!(f.isNaN()    ||    f.isInfinite()    ||    f.floatValue()    ==    0.0F))    {    	non-compiled	[CE]  not  a  statement	39	None	replace
147	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.doubleValue());  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.doubleValue());  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	518	518	1	replace	Float  f  =  NumberUtils.createFloat(numeric.doubleValue());	  Float    f    =    NumberUtils.createFloat(numeric.floatValue());    	non-compiled	[CE]  not  a  statement	4	None	replace
