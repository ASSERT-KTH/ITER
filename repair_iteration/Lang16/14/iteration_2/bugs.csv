bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  decPos);  [CE]  not  a  statement  [FE]                NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  int  expPos  =  str.indexOf('.',  decPos);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.indexOf('.',  decPos);	      int    expPos    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	7	None	replace
2	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  dec);  [CE]  not  a  statement  [FE]                  NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  int  expPos  =  str.indexOf('.',  dec);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.indexOf('.',  dec);	      int    expPos    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	7	None	replace
3	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  1);  [CE]  not  a  statement  [FE]                    NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  int  expPos  =  str.indexOf('.',  1);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.indexOf('.',  1);	      int    expPos    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	7	None	replace
4	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str.length());  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  Integer  expPos  =  createInteger(str.length());  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  createInteger(str.length());	      Integer    expPos    =    createInteger(str);    	non-compiled	[CE]  not  a  statement	8	None	replace
5	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(0);  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  Integer  expPos  =  createInteger(0);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  createInteger(0);	      Integer    expPos    =    createInteger(str);    	non-compiled	[CE]  not  a  statement	8	None	replace
6	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str.substring(0,  str.length()  -  1));  [CE]  not  a  statement  [FE]            NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  Integer  expPos  =  createInteger(str.substring(0,  str.length()  -  1));  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  createInteger(str.substring(0,  str.length()  -  1));	      Integer    expPos    =    createInteger(str);    	non-compiled	[CE]  not  a  statement	8	None	replace
7	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str,  dec);  [CE]  not  a  statement  [FE]              NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  Integer  expPos  =  createInteger(str,  dec);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  createInteger(str,  dec);	      Integer    expPos    =    createInteger(str);    	non-compiled	[CE]  not  a  statement	8	None	replace
8	[BUG]  [BUGGY]  int  expPos  =  str.length()  -  1;  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  int  expPos  =  str.length()  -  1;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.length()  -  1;	      int    expPos    =    str.length();    	non-compiled	[CE]  not  a  statement	4	None	replace
9	[BUG]  [BUGGY]  int  expPos  =  str.length()  +  1;  [CE]  not  a  statement  [FE]            NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  int  expPos  =  str.length()  +  1;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.length()  +  1;	      int    expPos    =    str.length();    	non-compiled	[CE]  not  a  statement	4	None	replace
10	[BUG]  [BUGGY]  if(expPos  >  0  &&  expPos  <  str.length())  {  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  if(expPos  >  0  &&  expPos  <  str.length())  {  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	if(expPos  >  0  &&  expPos  <  str.length())  {	  if(expPos    >    0    &&    expPos    <    str.length()    -    1)    {    	non-compiled	[CE]  not  a  statement	9	None	replace
11	[BUG]  [BUGGY]  if(expPos  >  0  ||  expPos  <  str.length()  -  1)  {  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  if(expPos  >  0  ||  expPos  <  str.length()  -  1)  {  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	if(expPos  >  0  ||  expPos  <  str.length()  -  1)  {	  if(expPos    >    0    &&    expPos    <    str.length()    -    1)    {    	non-compiled	[CE]  not  a  statement	9	None	replace
12	[BUG]  [BUGGY]  if(decPos  >  0  &&  expPos  <  str.length())  {  [CE]  not  a  statement  [FE]            NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  if(decPos  >  0  &&  expPos  <  str.length())  {  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	if(decPos  >  0  &&  expPos  <  str.length())  {	  if(expPos    >    0    &&    expPos    <    str.length()    -    1)    {    	non-compiled	[CE]  not  a  statement	9	None	replace
13	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1);  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	String  str  =  str.substring(0,  str.length()  -  1);	      	non-compiled	[CE]  not  a  statement	2	None	replace
14	[BUG]  [BUGGY]  Integer  expPos  =  str.substring(0,  str.length());  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  Integer  expPos  =  str.substring(0,  str.length());  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  str.substring(0,  str.length());	      Integer    expPos    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	3	None	replace
15	[BUG]  [BUGGY]  Integer  expPos  =  str.substring(0,  str.length()  +  1);  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  Integer  expPos  =  str.substring(0,  str.length()  +  1);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  str.substring(0,  str.length()  +  1);	      Integer    expPos    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	3	None	replace
16	[BUG]  [BUGGY]  Integer  expPos  =  str.substring(0,  str.length())+  1;  [CE]  not  a  statement  [FE]            NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  Integer  expPos  =  str.substring(0,  str.length())+  1;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  str.substring(0,  str.length())+  1;	      Integer    expPos    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	3	None	replace
17	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  decPos);  [CE]  not  a  statement  [FE]              NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  Integer  expPos  =  str.indexOf('.',  decPos);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  str.indexOf('.',  decPos);	      Integer    expPos    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	6	None	replace
18	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  dec);  [CE]  not  a  statement  [FE]                NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  Integer  expPos  =  str.indexOf('.',  dec);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  str.indexOf('.',  dec);	      Integer    expPos    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	6	None	replace
19	[BUG]  [BUGGY]  Integer  expPos  =  str.lastIndexOf('.');  [CE]  not  a  statement  [FE]                  NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  Integer  expPos  =  str.lastIndexOf('.');  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  str.lastIndexOf('.');	      Integer    expPos    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	6	None	replace
20	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  1);  [CE]  not  a  statement  [FE]                    NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  Integer  expPos  =  str.indexOf('.',  1);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  str.indexOf('.',  1);	      Integer    expPos    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	6	None	replace
21	[BUG]  [BUGGY]  if(expPos  >  -1  ||  expPos  <  str.length())  {  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  if(expPos  >  -1  ||  expPos  <  str.length())  {  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	if(expPos  >  -1  ||  expPos  <  str.length())  {	  if(expPos    >    -1    &&    expPos    <    str.length())    {    	non-compiled	[CE]  not  a  statement	1	None	replace
22	[BUG]  [BUGGY]  if(decPos  >  -1  &&  expPos  <  str.length())  {  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  if(decPos  >  -1  &&  expPos  <  str.length())  {  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	if(decPos  >  -1  &&  expPos  <  str.length())  {	  if(expPos    >    -1    &&    expPos    <    str.length())    {    	non-compiled	[CE]  not  a  statement	1	None	replace
23	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  dec);  [CE]  not  a  statement  [FE]            NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  dec);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.lastIndexOf('.',  dec);	      int    expPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	5	None	replace
24	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos);  [CE]  not  a  statement  [FE]              NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.lastIndexOf('.',  decPos);	      int    expPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	5	None	replace
25	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  1);  [CE]  not  a  statement  [FE]                NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  1);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.lastIndexOf('.',  1);	      int    expPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	5	None	replace
26	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  1;  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  1;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.lastIndexOf('.')+  1;	      int    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	10	None	replace
27	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')+  2;  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  int  expPos  =  str.indexOf('.')+  2;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.indexOf('.')+  2;	      int    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	10	None	replace
28	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')+  0;  [CE]  not  a  statement  [FE]            NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  int  expPos  =  str.indexOf('.')+  0;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.indexOf('.')+  0;	      int    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	10	None	replace
29	[BUG]  [BUGGY]  Integer  expPos  =  str.substring(0,  str.length()  -  1  +  1);  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  Integer  expPos  =  str.substring(0,  str.length()  -  1  +  1);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  str.substring(0,  str.length()  -  1  +  1);	      Integer    expPos    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	3	None	replace
30	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  DEC);  [CE]  not  a  statement  [FE]              NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  Integer  expPos  =  str.indexOf('.',  DEC);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  str.indexOf('.',  DEC);	      Integer    expPos    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	6	None	replace
31	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.')+  1;  [CE]  not  a  statement  [FE]                NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  Integer  expPos  =  str.indexOf('.')+  1;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  str.indexOf('.')+  1;	      Integer    expPos    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	6	None	replace
32	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(mant);  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  Integer  expPos  =  createInteger(mant);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  createInteger(mant);	      Integer    expPos    =    createInteger(str);    	non-compiled	[CE]  not  a  statement	8	None	replace
33	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(dec);  [CE]  not  a  statement  [FE]          NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  Integer  expPos  =  createInteger(dec);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  createInteger(dec);	      Integer    expPos    =    createInteger(str);    	non-compiled	[CE]  not  a  statement	8	None	replace
34	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  >=  str.length())  {  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  if(expPos  >  -1  &&  expPos  >=  str.length())  {  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	if(expPos  >  -1  &&  expPos  >=  str.length())  {	  if(expPos    >    -1    &&    expPos    <    str.length())    {    	non-compiled	[CE]  not  a  statement	1	None	replace
35	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC);  [CE]  not  a  statement  [FE]            NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.lastIndexOf('.',  DEC);	      int    expPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	5	None	replace
36	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC_POP);  [CE]  not  a  statement  [FE]              NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC_POP);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.lastIndexOf('.',  DEC_POP);	      int    expPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	5	None	replace
37	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  DEC);  [CE]  not  a  statement  [FE]                NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  int  expPos  =  str.indexOf('.',  DEC);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.indexOf('.',  DEC);	      int    expPos    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	7	None	replace
38	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  DEC_POP);  [CE]  not  a  statement  [FE]                  NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  int  expPos  =  str.indexOf('.',  DEC_POP);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.indexOf('.',  DEC_POP);	      int    expPos    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	7	None	replace
39	[BUG]  [BUGGY]  if(expPos  >  0  ||  expPos  <  str.length())  {  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  if(expPos  >  0  ||  expPos  <  str.length())  {  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	if(expPos  >  0  ||  expPos  <  str.length())  {	  if(expPos    >    0    &&    expPos    <    str.length()    -    1)    {    	non-compiled	[CE]  not  a  statement	9	None	replace
40	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str.substring(decPos));  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  Integer  expPos  =  createInteger(str.substring(decPos));  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  createInteger(str.substring(decPos));	      Integer    expPos    =    createInteger(str);    	non-compiled	[CE]  not  a  statement	8	None	replace
41	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')/  1;  [CE]  not  a  statement  [FE]        NumberFormatException    [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {      [BUGGY]  int  expPos  =  str.indexOf('.')/  1;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.indexOf('.')/  1;	      int    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	10	None	replace
