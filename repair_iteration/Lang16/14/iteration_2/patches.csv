bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  DEC_POP  +  1);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.',  DEC_POP  +  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.indexOf('.',  DEC_POP  +  1);	  int    expPos    =    str.indexOf('.',    DEC_POP);    	non-compiled	[CE]  not  a  statement	38	None	replace
2	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(1);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  createInteger(1);	  Integer    expPos    =    createInteger(0);    	non-compiled	[CE]  not  a  statement	5	None	replace
3	[BUG]  [BUGGY]  short  expPos  =  str.length()  -  1;  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  short  expPos  =  str.length()  -  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	short  expPos  =  str.length()  -  1;	  int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  not  a  statement	8	None	replace
4	[BUG]  [BUGGY]  char  expPos  =  str.length();  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  char  expPos  =  str.length();  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	char  expPos  =  str.length();	  int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  not  a  statement	8	None	replace
5	[BUG]  [BUGGY]  Integer  expPos  =  str.substring(0,  str.length()  -  2);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.substring(0,  str.length()  -  2);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  str.substring(0,  str.length()  -  2);	  Integer    expPos    =    str.substring(0,    str.length());    	non-compiled	[CE]  not  a  statement	14	None	replace
6	[BUG]  [BUGGY]  Integer  expPos  =  str.substring(0,  str.length()  -  4);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.substring(0,  str.length()  -  4);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  str.substring(0,  str.length()  -  4);	  Integer    expPos    =    str.substring(0,    str.length());    	non-compiled	[CE]  not  a  statement	14	None	replace
7	[BUG]  [BUGGY]  Integer  expPos  =  str.substring(0,  str.length()  -  1)+  1;  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.substring(0,  str.length()  -  1)+  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  str.substring(0,  str.length()  -  1)+  1;	  Integer    expPos    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  not  a  statement	16	None	replace
8	[BUG]  [BUGGY]  Integer  expPos  =  str.substring(0,  str.length()  +  1)+  1;  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.substring(0,  str.length()  +  1)+  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  str.substring(0,  str.length()  +  1)+  1;	  Integer    expPos    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  not  a  statement	16	None	replace
9	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  0);  [CE]  not  a  statement  [FE]                        NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.indexOf('.',  0);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  str.indexOf('.',  0);	  Integer    expPos    =    str.indexOf('.',    1);    	non-compiled	[CE]  not  a  statement	20	None	replace
10	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  4);  [CE]  not  a  statement  [FE]                          NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.indexOf('.',  4);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  str.indexOf('.',  4);	  Integer    expPos    =    str.indexOf('.',    1);    	non-compiled	[CE]  not  a  statement	20	None	replace
11	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  2);  [CE]  not  a  statement  [FE]                            NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.indexOf('.',  2);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  str.indexOf('.',  2);	  Integer    expPos    =    str.indexOf('.',    1);    	non-compiled	[CE]  not  a  statement	20	None	replace
12	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC_POP  +  1);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC_POP  +  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.lastIndexOf('.',  DEC_POP  +  1);	  int    expPos    =    str.lastIndexOf('.',    DEC_POP);    	non-compiled	[CE]  not  a  statement	36	None	replace
13	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  decPos  +  1);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.indexOf('.',  decPos  +  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  str.indexOf('.',  decPos  +  1);	  Integer    expPos    =    str.indexOf('.',    decPos);    	non-compiled	[CE]  not  a  statement	17	None	replace
14	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  DEC_POP);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.indexOf('.',  DEC_POP);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  str.indexOf('.',  DEC_POP);	  Integer    expPos    =    str.indexOf('.',    decPos);    	non-compiled	[CE]  not  a  statement	17	None	replace
15	[BUG]  [BUGGY]  Integer  expPos  =  str.lastIndexOf('.',  decPos);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.lastIndexOf('.',  decPos);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  str.lastIndexOf('.',  decPos);	  Integer    expPos    =    str.indexOf('.',    decPos);    	non-compiled	[CE]  not  a  statement	17	None	replace
16	[BUG]  [BUGGY]  if(expPos  >  0  &&  str.charAt(decPos  -  1)  <  str.length())  {  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  if(expPos  >  0  &&  str.charAt(decPos  -  1)  <  str.length())  {  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	if(expPos  >  0  &&  str.charAt(decPos  -  1)  <  str.length())  {	  if(decPos    >    0    &&    expPos    <    str.length())    {    	non-compiled	[CE]  not  a  statement	12	None	replace
17	[BUG]  [BUGGY]  if(expPos  >  0  &&  str.length()  <  decPos.length())  {  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  if(expPos  >  0  &&  str.length()  <  decPos.length())  {  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	if(expPos  >  0  &&  str.length()  <  decPos.length())  {	  if(decPos    >    0    &&    expPos    <    str.length())    {    	non-compiled	[CE]  not  a  statement	12	None	replace
18	[BUG]  [BUGGY]  if(expPos  <  0  ||  expPos  <  str.length())  {  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  if(expPos  <  0  ||  expPos  <  str.length())  {  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	if(expPos  <  0  ||  expPos  <  str.length())  {	  if(expPos    >    0    ||    expPos    <    str.length())    {    	non-compiled	[CE]  not  a  statement	39	None	replace
19	[BUG]  [BUGGY]  if(decPos  >  0  ||  expPos  <  str.length())  {  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  if(decPos  >  0  ||  expPos  <  str.length())  {  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	if(decPos  >  0  ||  expPos  <  str.length())  {	  if(expPos    >    0    ||    expPos    <    str.length())    {    	non-compiled	[CE]  not  a  statement	39	None	replace
20	[BUG]  [BUGGY]  if(decPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  if(decPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	if(decPos  >  -1  &&  expPos  <  str.length()  -  1)  {	  if(decPos    >    -1    &&    expPos    <    str.length())    {    	non-compiled	[CE]  not  a  statement	22	None	replace
21	[BUG]  [BUGGY]  if(expPos  >  -1  &&  decPos  <  str.length())  {  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  if(expPos  >  -1  &&  decPos  <  str.length())  {  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	if(expPos  >  -1  &&  decPos  <  str.length())  {	  if(decPos    >    -1    &&    expPos    <    str.length())    {    	non-compiled	[CE]  not  a  statement	22	None	replace
22	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  str.length());  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.',  str.length());  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.indexOf('.',  str.length());	  int    expPos    =    str.indexOf('.',    dec);    	non-compiled	[CE]  not  a  statement	2	None	replace
23	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  str.length()  -  1);  [CE]  not  a  statement  [FE]                        NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.',  str.length()  -  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.indexOf('.',  str.length()  -  1);	  int    expPos    =    str.indexOf('.',    dec);    	non-compiled	[CE]  not  a  statement	2	None	replace
24	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  2);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.lastIndexOf('.',  2);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.lastIndexOf('.',  2);	  int    expPos    =    str.lastIndexOf('.',    1);    	non-compiled	[CE]  not  a  statement	25	None	replace
25	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  0);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.lastIndexOf('.',  0);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.lastIndexOf('.',  0);	  int    expPos    =    str.lastIndexOf('.',    1);    	non-compiled	[CE]  not  a  statement	25	None	replace
26	[BUG]  [BUGGY]  Integer  expPos  =  str.length();  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.length();  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  str.length();	  int    expPos    =    str.length()    +    1;    	non-compiled	[CE]  not  a  statement	9	None	replace
27	[BUG]  [BUGGY]  Integer  expPos  =  str.lastIndexOf('.',  dec);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.lastIndexOf('.',  dec);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  str.lastIndexOf('.',  dec);	  Integer    expPos    =    str.indexOf('.',    dec);    	non-compiled	[CE]  not  a  statement	18	None	replace
28	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length());  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  String  str  =  str.substring(0,  str.length());  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	String  str  =  str.substring(0,  str.length());	  String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	13	None	replace
29	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	String  str  =  str.substring(0,  str.length()  +  1);	  String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	13	None	replace
30	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()));  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  String  str  =  str.substring(0,  str.length()));  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	String  str  =  str.substring(0,  str.length()));	  String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	13	None	replace
31	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  DEC  -  1);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.',  DEC  -  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.indexOf('.',  DEC  -  1);	  int    expPos    =    str.indexOf('.',    DEC);    	non-compiled	[CE]  not  a  statement	37	None	replace
32	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  2;  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  2;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.lastIndexOf('.')+  2;	  int    expPos    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	26	None	replace
33	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')/  1;  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.lastIndexOf('.')/  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.lastIndexOf('.')/  1;	  int    expPos    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	26	None	replace
34	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str.substring(0,  decPos));  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(str.substring(0,  decPos));  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  createInteger(str.substring(0,  decPos));	  Integer    expPos    =    createInteger(str.substring(decPos));    	non-compiled	[CE]  not  a  statement	40	None	replace
35	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str.substring(0,  str.length()));  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(str.substring(0,  str.length()));  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  createInteger(str.substring(0,  str.length()));	  Integer    expPos    =    createInteger(str.substring(decPos));    	non-compiled	[CE]  not  a  statement	40	None	replace
36	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str.substring(decPos  +  1));  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(str.substring(decPos  +  1));  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  createInteger(str.substring(decPos  +  1));	  Integer    expPos    =    createInteger(str.substring(decPos));    	non-compiled	[CE]  not  a  statement	40	None	replace
37	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str.length()  -  1);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(str.length()  -  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  createInteger(str.length()  -  1);	  Integer    expPos    =    createInteger(str.length());    	non-compiled	[CE]  not  a  statement	4	None	replace
38	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str.length()  +  1);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(str.length()  +  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  createInteger(str.length()  +  1);	  Integer    expPos    =    createInteger(str.length());    	non-compiled	[CE]  not  a  statement	4	None	replace
39	[BUG]  [BUGGY]  Integer  expPos  =  str.substring(0,  str.length()  *  1  +  1);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.substring(0,  str.length()  *  1  +  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  str.substring(0,  str.length()  *  1  +  1);	  Integer    expPos    =    str.substring(0,    str.length()    -    1    +    1);    	non-compiled	[CE]  not  a  statement	29	None	replace
40	[BUG]  [BUGGY]  int  expPos  =  str.substring(0,  str.length()  +  1);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.substring(0,  str.length()  +  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.substring(0,  str.length()  +  1);	  Integer    expPos    =    str.substring(0,    str.length()    -    1    +    1);    	non-compiled	[CE]  not  a  statement	29	None	replace
41	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')/  2;  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.')/  2;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.indexOf('.')/  2;	  int    expPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  not  a  statement	41	None	replace
42	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')/  4;  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.')/  4;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.indexOf('.')/  4;	  int    expPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  not  a  statement	41	None	replace
43	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  16)/  1;  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.',  16)/  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.indexOf('.',  16)/  1;	  int    expPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  not  a  statement	41	None	replace
44	[BUG]  [BUGGY]  if(expPos  >  -1  ||  expPos  >=  str.length())  {  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  if(expPos  >  -1  ||  expPos  >=  str.length())  {  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	if(expPos  >  -1  ||  expPos  >=  str.length())  {	  if(expPos    >    -1    &&    expPos    >=    str.length())    {    	non-compiled	[CE]  not  a  statement	34	None	replace
45	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos  +  1);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos  +  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.lastIndexOf('.',  decPos  +  1);	  int    expPos    =    str.lastIndexOf('.',    decPos);    	non-compiled	[CE]  not  a  statement	24	None	replace
46	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  str.length());  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.lastIndexOf('.',  str.length());  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.lastIndexOf('.',  str.length());	  int    expPos    =    str.lastIndexOf('.',    decPos);    	non-compiled	[CE]  not  a  statement	24	None	replace
47	[BUG]  [BUGGY]  Integer  expPos  =  str.lastIndexOf('.',  1);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.lastIndexOf('.',  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  str.lastIndexOf('.',  1);	  Integer    expPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	19	None	replace
48	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str.substring(0,  str.length()  -  1),  dec);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(str.substring(0,  str.length()  -  1),  dec);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  createInteger(str.substring(0,  str.length()  -  1),  dec);	  Integer    expPos    =    createInteger(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  not  a  statement	6	None	replace
49	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str.substring(0,  str.length()  +  1));  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(str.substring(0,  str.length()  +  1));  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  createInteger(str.substring(0,  str.length()  +  1));	  Integer    expPos    =    createInteger(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  not  a  statement	6	None	replace
50	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  DEC  -  1);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.indexOf('.',  DEC  -  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  str.indexOf('.',  DEC  -  1);	  Integer    expPos    =    str.indexOf('.',    DEC);    	non-compiled	[CE]  not  a  statement	30	None	replace
51	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  decPos  +  1);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.',  decPos  +  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.indexOf('.',  decPos  +  1);	  int    expPos    =    str.indexOf('.',    decPos);    	non-compiled	[CE]  not  a  statement	1	None	replace
52	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  0;  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  0;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.lastIndexOf('.')+  0;	  int    expPos    =    str.indexOf('.')+    0;    	non-compiled	[CE]  not  a  statement	28	None	replace
53	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')/  0;  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.')/  0;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.indexOf('.')/  0;	  int    expPos    =    str.indexOf('.')+    0;    	non-compiled	[CE]  not  a  statement	28	None	replace
54	[BUG]  [BUGGY]  if(decPos  >  -1  ||  expPos  <  str.length())  {  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  if(decPos  >  -1  ||  expPos  <  str.length())  {  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	if(decPos  >  -1  ||  expPos  <  str.length())  {	  if(expPos    >    -1    ||    expPos    <    str.length())    {    	non-compiled	[CE]  not  a  statement	21	None	replace
55	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC  -  1);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC  -  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.lastIndexOf('.',  DEC  -  1);	  int    expPos    =    str.lastIndexOf('.',    DEC);    	non-compiled	[CE]  not  a  statement	35	None	replace
56	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.')+  2;  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.indexOf('.')+  2;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  str.indexOf('.')+  2;	  Integer    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	31	None	replace
57	[BUG]  [BUGGY]  Integer  expPos  =  str.lastIndexOf('.')+  1;  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.lastIndexOf('.')+  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  str.lastIndexOf('.')+  1;	  Integer    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	31	None	replace
58	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.')+  3;  [CE]  not  a  statement  [FE]                        NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.indexOf('.')+  3;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  str.indexOf('.')+  3;	  Integer    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	31	None	replace
59	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str,  DEC);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(str,  DEC);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  createInteger(str,  DEC);	  Integer    expPos    =    createInteger(str,    dec);    	non-compiled	[CE]  not  a  statement	7	None	replace
60	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str,  1);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(str,  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  createInteger(str,  1);	  Integer    expPos    =    createInteger(str,    dec);    	non-compiled	[CE]  not  a  statement	7	None	replace
61	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(dec,  str);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(dec,  str);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  createInteger(dec,  str);	  Integer    expPos    =    createInteger(str,    dec);    	non-compiled	[CE]  not  a  statement	7	None	replace
62	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  0);  [CE]  not  a  statement  [FE]                        NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.',  0);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.indexOf('.',  0);	  int    expPos    =    str.indexOf('.',    1);    	non-compiled	[CE]  not  a  statement	3	None	replace
63	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  2);  [CE]  not  a  statement  [FE]                          NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.',  2);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.indexOf('.',  2);	  int    expPos    =    str.indexOf('.',    1);    	non-compiled	[CE]  not  a  statement	3	None	replace
64	[BUG]  [BUGGY]  if(expPos  >  -1  ||  expPos  >  str.length())  {  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  if(expPos  >  -1  ||  expPos  >  str.length())  {  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	if(expPos  >  -1  ||  expPos  >  str.length())  {	  if(expPos    >    -1    ||    expPos    <    str.length())    {    	non-compiled	[CE]  not  a  statement	21	None	replace
65	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  -1);  [CE]  not  a  statement  [FE]                        NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.',  -1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.indexOf('.',  -1);	  int    expPos    =    str.indexOf('.',    1);    	non-compiled	[CE]  not  a  statement	3	None	replace
66	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  DEC)+  1;  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.',  DEC)+  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.indexOf('.',  DEC)+  1;	  int    expPos    =    str.indexOf('.',    DEC);    	non-compiled	[CE]  not  a  statement	37	None	replace
67	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  DEC  +  1);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.',  DEC  +  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.indexOf('.',  DEC  +  1);	  int    expPos    =    str.indexOf('.',    DEC);    	non-compiled	[CE]  not  a  statement	37	None	replace
68	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  len)/  1;  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.',  len)/  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.indexOf('.',  len)/  1;	  int    expPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  not  a  statement	41	None	replace
69	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  lastChar)/  1;  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.',  lastChar)/  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.indexOf('.',  lastChar)/  1;	  int    expPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  not  a  statement	41	None	replace
70	[BUG]  [BUGGY]  if(expPos  >  0  &&  expPos  >=  str.length())  {  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  if(expPos  >  0  &&  expPos  >=  str.length())  {  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	if(expPos  >  0  &&  expPos  >=  str.length())  {	  if(expPos    >    0    &&    expPos    <    str.length())    {    	non-compiled	[CE]  not  a  statement	10	None	replace
71	[BUG]  [BUGGY]  Integer  expPos  =  str.substring(0,  str.length()  -  3);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.substring(0,  str.length()  -  3);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  str.substring(0,  str.length()  -  3);	  Integer    expPos    =    str.substring(0,    str.length());    	non-compiled	[CE]  not  a  statement	14	None	replace
72	[BUG]  [BUGGY]  if(expPos  >  0  ||  expPos  >  str.length())  {  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  if(expPos  >  0  ||  expPos  >  str.length())  {  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	if(expPos  >  0  ||  expPos  >  str.length())  {	  if(expPos    >    0    ||    expPos    <    str.length()    -    1)    {    	non-compiled	[CE]  not  a  statement	11	None	replace
73	[BUG]  [BUGGY]  if(expPos  >  0  &&  decPos  <  str.length())  {  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  if(expPos  >  0  &&  decPos  <  str.length())  {  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	if(expPos  >  0  &&  decPos  <  str.length())  {	  if(decPos    >    0    &&    expPos    <    str.length())    {    	non-compiled	[CE]  not  a  statement	12	None	replace
74	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC)+  1;  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC)+  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.lastIndexOf('.',  DEC)+  1;	  int    expPos    =    str.lastIndexOf('.',    DEC);    	non-compiled	[CE]  not  a  statement	35	None	replace
75	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str.substring(0,  str.length()  -  1)+  1);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(str.substring(0,  str.length()  -  1)+  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  createInteger(str.substring(0,  str.length()  -  1)+  1);	  Integer    expPos    =    createInteger(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  not  a  statement	6	None	replace
76	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  DEC_POP  -  1);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.',  DEC_POP  -  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.indexOf('.',  DEC_POP  -  1);	  int    expPos    =    str.indexOf('.',    DEC_POP);    	non-compiled	[CE]  not  a  statement	38	None	replace
77	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  DEC_POINT);  [CE]  not  a  statement  [FE]                        NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.',  DEC_POINT);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.indexOf('.',  DEC_POINT);	  int    expPos    =    str.indexOf('.',    DEC_POP);    	non-compiled	[CE]  not  a  statement	38	None	replace
78	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  DEC)+  1;  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.indexOf('.',  DEC)+  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  str.indexOf('.',  DEC)+  1;	  Integer    expPos    =    str.indexOf('.',    DEC);    	non-compiled	[CE]  not  a  statement	30	None	replace
79	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  DEC  +  1);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.indexOf('.',  DEC  +  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  str.indexOf('.',  DEC  +  1);	  Integer    expPos    =    str.indexOf('.',    DEC);    	non-compiled	[CE]  not  a  statement	30	None	replace
80	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  dec  +  1);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.indexOf('.',  dec  +  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  str.indexOf('.',  dec  +  1);	  Integer    expPos    =    str.indexOf('.',    dec);    	non-compiled	[CE]  not  a  statement	18	None	replace
81	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str.substring(0,  DEC_POP));  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(str.substring(0,  DEC_POP));  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  createInteger(str.substring(0,  DEC_POP));	  Integer    expPos    =    createInteger(str.substring(decPos));    	non-compiled	[CE]  not  a  statement	40	None	replace
82	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str.substring(1,  decPos));  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(str.substring(1,  decPos));  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  createInteger(str.substring(1,  decPos));	  Integer    expPos    =    createInteger(str.substring(decPos));    	non-compiled	[CE]  not  a  statement	40	None	replace
83	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str.charAt(0));  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(str.charAt(0));  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  createInteger(str.charAt(0));	  Integer    expPos    =    createInteger(str.length());    	non-compiled	[CE]  not  a  statement	4	None	replace
84	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str,  0);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(str,  0);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  createInteger(str,  0);	  Integer    expPos    =    createInteger(str,    dec);    	non-compiled	[CE]  not  a  statement	7	None	replace
85	[BUG]  [BUGGY]  if(expPos  >  -1  &&  str.length()  <  decPos)  {  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  if(expPos  >  -1  &&  str.length()  <  decPos)  {  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	if(expPos  >  -1  &&  str.length()  <  decPos)  {	  if(decPos    >    -1    &&    expPos    <    str.length())    {    	non-compiled	[CE]  not  a  statement	22	None	replace
86	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.')+  0;  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.indexOf('.')+  0;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  str.indexOf('.')+  0;	  Integer    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	31	None	replace
87	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  -1);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.lastIndexOf('.',  -1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.lastIndexOf('.',  -1);	  int    expPos    =    str.lastIndexOf('.',    1);    	non-compiled	[CE]  not  a  statement	25	None	replace
88	[BUG]  [BUGGY]  if(expPos  >  -1  ||  expPos  <  str.length()  -  1)  {  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  if(expPos  >  -1  ||  expPos  <  str.length()  -  1)  {  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	if(expPos  >  -1  ||  expPos  <  str.length()  -  1)  {	  if(expPos    >    -1    ||    expPos    <    str.length())    {    	non-compiled	[CE]  not  a  statement	21	None	replace
89	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.')/  1;  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.indexOf('.')/  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  str.indexOf('.')/  1;	  Integer    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	31	None	replace
90	[BUG]  [BUGGY]  Integer  expPos  =  createBigInteger(str);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createBigInteger(str);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  createBigInteger(str);	  Integer    expPos    =    createInteger(dec);    	non-compiled	[CE]  not  a  statement	33	None	replace
91	[BUG]  [BUGGY]  int  expPos  =  createInteger(str);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  createInteger(str);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  createInteger(str);	  Integer    expPos    =    createInteger(dec);    	non-compiled	[CE]  not  a  statement	33	None	replace
92	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str.substring(0,  str.length()  1));  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(str.substring(0,  str.length()  1));  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  createInteger(str.substring(0,  str.length()  1));	  Integer    expPos    =    createInteger(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  not  a  statement	6	None	replace
93	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')-  1;  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.lastIndexOf('.')-  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.lastIndexOf('.')-  1;	  int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  not  a  statement	8	None	replace
94	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')-  1;  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.')-  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.indexOf('.')-  1;	  int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  not  a  statement	8	None	replace
95	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str.substring(decPos,  expPos));  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(str.substring(decPos,  expPos));  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  createInteger(str.substring(decPos,  expPos));	  Integer    expPos    =    createInteger(str.substring(decPos));    	non-compiled	[CE]  not  a  statement	40	None	replace
96	[BUG]  [BUGGY]  Integer  expPos  =  str.substring(0,  str.length()  -  1,  str.length());  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.substring(0,  str.length()  -  1,  str.length());  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  str.substring(0,  str.length()  -  1,  str.length());	  Integer    expPos    =    str.substring(0,    str.length());    	non-compiled	[CE]  not  a  statement	14	None	replace
97	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  decPos)+  0;  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.',  decPos)+  0;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.indexOf('.',  decPos)+  0;	  int    expPos    =    str.indexOf('.')+    0;    	non-compiled	[CE]  not  a  statement	28	None	replace
98	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()).trim();  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  String  str  =  str.substring(0,  str.length()).trim();  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	String  str  =  str.substring(0,  str.length()).trim();	  String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	13	None	replace
99	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  -1);  [CE]  not  a  statement  [FE]                        NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.indexOf('.',  -1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  str.indexOf('.',  -1);	  Integer    expPos    =    str.indexOf('.',    1);    	non-compiled	[CE]  not  a  statement	20	None	replace
100	[BUG]  [BUGGY]  Integer  expPos  =  str.lastIndexOf('.',  DEC_POP);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.lastIndexOf('.',  DEC_POP);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  str.lastIndexOf('.',  DEC_POP);	  Integer    expPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	19	None	replace
101	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  decPos)/  1;  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.',  decPos)/  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.indexOf('.',  decPos)/  1;	  int    expPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  not  a  statement	41	None	replace
102	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  dec)/  1;  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.',  dec)/  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	int  expPos  =  str.indexOf('.',  dec)/  1;	  int    expPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  not  a  statement	41	None	replace
103	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  >=  str.length()  -  1)  {  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  if(expPos  >  -1  &&  expPos  >=  str.length()  -  1)  {  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	if(expPos  >  -1  &&  expPos  >=  str.length()  -  1)  {	  if(expPos    >    -1    &&    expPos    >=    str.length())    {    	non-compiled	[CE]  not  a  statement	34	None	replace
104	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str,  2);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(str,  2);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	551	551	1	replace	Integer  expPos  =  createInteger(str,  2);	  Integer    expPos    =    createInteger(str,    dec);    	non-compiled	[CE]  not  a  statement	7	None	replace
