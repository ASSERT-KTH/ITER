bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  expPos  =  str.lastIndexOf('.')+  2;  [CE]  unclosed  character  literal  [FE]                        NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  Integer  expPos  =  str.lastIndexOf('.')+  2;  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	Integer  expPos  =  str.lastIndexOf('.')+  2;	  Integer    expPos    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  unclosed  character  literal	35	None	replace
2	[BUG]  [BUGGY]  Integer  expPos  =  str.lastIndexOf('.',  expPos)+  1;  [CE]  unclosed  character  literal  [FE]                          NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  Integer  expPos  =  str.lastIndexOf('.',  expPos)+  1;  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	Integer  expPos  =  str.lastIndexOf('.',  expPos)+  1;	  Integer    expPos    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  unclosed  character  literal	35	None	replace
3	[BUG]  [BUGGY]  Integer  expPos  =  str.lastIndexOf('.')+  0;  [CE]  unclosed  character  literal  [FE]                    NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  Integer  expPos  =  str.lastIndexOf('.')+  0;  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	Integer  expPos  =  str.lastIndexOf('.')+  0;	  Integer    expPos    =    str.indexOf('.')+    0;    	non-compiled	[CE]  unclosed  character  literal	45	None	replace
4	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  expPos)+  0;  [CE]  unclosed  character  literal  [FE]                      NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  Integer  expPos  =  str.indexOf('.',  expPos)+  0;  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	Integer  expPos  =  str.indexOf('.',  expPos)+  0;	  Integer    expPos    =    str.indexOf('.')+    0;    	non-compiled	[CE]  unclosed  character  literal	45	None	replace
5	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.')/  0;  [CE]  unclosed  character  literal  [FE]                        NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  Integer  expPos  =  str.indexOf('.')/  0;  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	Integer  expPos  =  str.indexOf('.')/  0;	  Integer    expPos    =    str.indexOf('.')+    0;    	non-compiled	[CE]  unclosed  character  literal	45	None	replace
6	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  +  1).trim();  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  mant  =  str.substring(0,  expPos  +  1).trim();  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	mant  =  str.substring(0,  expPos  +  1).trim();	  mant    =    str.substring(0,    expPos    +    2);    	non-compiled	[CE]  unclosed  character  literal	14	None	replace
7	[BUG]  [BUGGY]  if(decPos  >  expPos  ||  expPos  >  str.length())  {  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(decPos  >  expPos  ||  expPos  >  str.length())  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(decPos  >  expPos  ||  expPos  >  str.length())  {	  if(expPos    >    decPos    ||    expPos    >    str.length())    {    	non-compiled	[CE]  unclosed  character  literal	23	None	replace
8	[BUG]  [BUGGY]  if(expPos  >  -1  ||  expPos  >  str.length())  {  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(expPos  >  -1  ||  expPos  >  str.length())  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(expPos  >  -1  ||  expPos  >  str.length())  {	  if(expPos    >    decPos    ||    expPos    >    str.length())    {    	non-compiled	[CE]  unclosed  character  literal	23	None	replace
9	[BUG]  [BUGGY]  if(expPos  >  0  ||  expPos  >  str.length())  {  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(expPos  >  0  ||  expPos  >  str.length())  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(expPos  >  0  ||  expPos  >  str.length())  {	  if(expPos    >    decPos    ||    expPos    >    str.length())    {    	non-compiled	[CE]  unclosed  character  literal	23	None	replace
10	[BUG]  [BUGGY]  if(expPos  >  decPos  ||  expPos  <  str.length())  {  [CE]  unclosed  character  literal  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(expPos  >  decPos  ||  expPos  <  str.length())  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(expPos  >  decPos  ||  expPos  <  str.length())  {	  if(expPos    >    decPos    ||    expPos    >    str.length())    {    	non-compiled	[CE]  unclosed  character  literal	23	None	replace
11	[BUG]  [BUGGY]  if(expPos  >  str.length()  ||  expPos  <  str.length())  {  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(expPos  >  str.length()  ||  expPos  <  str.length())  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(expPos  >  str.length()  ||  expPos  <  str.length())  {	  if(expPos    >    str.length()    ||    expPos    >    str.length())    {    	non-compiled	[CE]  unclosed  character  literal	5	None	replace
12	[BUG]  [BUGGY]  if(decPos  >  str.length()  ||  expPos  >  str.length())  {  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(decPos  >  str.length()  ||  expPos  >  str.length())  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(decPos  >  str.length()  ||  expPos  >  str.length())  {	  if(expPos    >    str.length()    ||    expPos    >    str.length())    {    	non-compiled	[CE]  unclosed  character  literal	5	None	replace
13	[BUG]  [BUGGY]  String  str  =  str.substring(0,  expPos  +  1).toLowerCase();  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  String  str  =  str.substring(0,  expPos  +  1).toLowerCase();  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	String  str  =  str.substring(0,  expPos  +  1).toLowerCase();	  String    str    =    str.substring(0,    expPos    +    1);    	non-compiled	[CE]  unclosed  character  literal	1	None	replace
14	[BUG]  [BUGGY]  Mant  =  str.substring(1,  expPos  +  1);  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  Mant  =  str.substring(1,  expPos  +  1);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	Mant  =  str.substring(1,  expPos  +  1);	  Mant    =    str.substring(1,    expPos);    	non-compiled	[CE]  unclosed  character  literal	20	None	replace
15	[BUG]  [BUGGY]  mant  =  str.substring(1,  expPos  +  1);  [CE]  unclosed  character  literal  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  mant  =  str.substring(1,  expPos  +  1);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	mant  =  str.substring(1,  expPos  +  1);	  Mant    =    str.substring(1,    expPos);    	non-compiled	[CE]  unclosed  character  literal	20	None	replace
16	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  decPos)+  1;  [CE]  unclosed  character  literal  [FE]                      NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  Integer  expPos  =  str.indexOf('.',  decPos)+  1;  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	Integer  expPos  =  str.indexOf('.',  decPos)+  1;	  Integer    expPos    =    str.indexOf('.',    expPos)+    1;    	non-compiled	[CE]  unclosed  character  literal	34	None	replace
17	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  expPos  +  1)+  1;  [CE]  unclosed  character  literal  [FE]                        NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  Integer  expPos  =  str.indexOf('.',  expPos  +  1)+  1;  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	Integer  expPos  =  str.indexOf('.',  expPos  +  1)+  1;	  Integer    expPos    =    str.indexOf('.',    expPos)+    1;    	non-compiled	[CE]  unclosed  character  literal	34	None	replace
18	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  expPos)+  2;  [CE]  unclosed  character  literal  [FE]                          NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  Integer  expPos  =  str.indexOf('.',  expPos)+  2;  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	Integer  expPos  =  str.indexOf('.',  expPos)+  2;	  Integer    expPos    =    str.indexOf('.',    expPos)+    1;    	non-compiled	[CE]  unclosed  character  literal	34	None	replace
19	[BUG]  [BUGGY]  dec  =  str.substring(0,  expPos  -  1  +  1);  [CE]  unclosed  character  literal  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  dec  =  str.substring(0,  expPos  -  1  +  1);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	dec  =  str.substring(0,  expPos  -  1  +  1);	  dec    =    str.substring(0,    expPos    -    1);    	non-compiled	[CE]  unclosed  character  literal	7	None	replace
20	[BUG]  [BUGGY]  dec  =  str.substring(0,  expPos  -  2);  [CE]  unclosed  character  literal  [FE]                    NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  dec  =  str.substring(0,  expPos  -  2);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	dec  =  str.substring(0,  expPos  -  2);	  dec    =    str.substring(0,    expPos    -    1);    	non-compiled	[CE]  unclosed  character  literal	7	None	replace
21	[BUG]  [BUGGY]  if(decPos  <  expPos  ||  expPos  >  -1)  {  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(decPos  <  expPos  ||  expPos  >  -1)  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(decPos  <  expPos  ||  expPos  >  -1)  {	  if(expPos    <    decPos    ||    expPos    >    -1)    {    	non-compiled	[CE]  unclosed  character  literal	9	None	replace
22	[BUG]  [BUGGY]  if(expPos  <  decPos  ||  expPos  >  -1  ||  expPos  <  str.length())  {  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(expPos  <  decPos  ||  expPos  >  -1  ||  expPos  <  str.length())  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(expPos  <  decPos  ||  expPos  >  -1  ||  expPos  <  str.length())  {	  if(expPos    <    decPos    ||    expPos    >    -1)    {    	non-compiled	[CE]  unclosed  character  literal	9	None	replace
23	[BUG]  [BUGGY]  if(expPos  <  decPos  ||  expPos  >  0)  {  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(expPos  <  decPos  ||  expPos  >  0)  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(expPos  <  decPos  ||  expPos  >  0)  {	  if(expPos    <    decPos    ||    expPos    >    -1)    {    	non-compiled	[CE]  unclosed  character  literal	9	None	replace
24	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')/  2;  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  int  expPos  =  str.indexOf('.')/  2;  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	int  expPos  =  str.indexOf('.')/  2;	  int    expPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  unclosed  character  literal	54	None	replace
25	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos)/  1;  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  int  expPos  =  str.indexOf('.',  expPos)/  1;  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	int  expPos  =  str.indexOf('.',  expPos)/  1;	  int    expPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  unclosed  character  literal	54	None	replace
26	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')/  1;  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.')/  1;  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	int  expPos  =  str.lastIndexOf('.')/  1;	  int    expPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  unclosed  character  literal	54	None	replace
27	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos)/  2;  [CE]  unclosed  character  literal  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  int  expPos  =  str.indexOf('.',  expPos)/  2;  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	int  expPos  =  str.indexOf('.',  expPos)/  2;	  int    expPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  unclosed  character  literal	54	None	replace
28	[BUG]  [BUGGY]  if(decPos  >  expPos.length()  -  1)  {  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(decPos  >  expPos.length()  -  1)  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(decPos  >  expPos.length()  -  1)  {	  if(decPos    >    expPos.length())    {    	non-compiled	[CE]  unclosed  character  literal	50	None	replace
29	[BUG]  [BUGGY]  if(decPos  >  expPos)  {  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(decPos  >  expPos)  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(decPos  >  expPos)  {	  if(expPos    >    decPos)    {    	non-compiled	[CE]  unclosed  character  literal	59	None	replace
30	[BUG]  [BUGGY]  if(decPos  <  expPos  +  1  ||  expPos  >  str.length())  {  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(decPos  <  expPos  +  1  ||  expPos  >  str.length())  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(decPos  <  expPos  +  1  ||  expPos  >  str.length())  {	  if(expPos    <    decPos    +    1    ||    expPos    >    str.length())    {    	non-compiled	[CE]  unclosed  character  literal	40	None	replace
31	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  -  1  +  1);  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  mant  =  str.substring(0,  expPos  -  1  +  1);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	mant  =  str.substring(0,  expPos  -  1  +  1);	  mant    =    str.substring(0,    expPos    -    1);    	non-compiled	[CE]  unclosed  character  literal	13	None	replace
32	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  -  1,  expPos);  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  mant  =  str.substring(0,  expPos  -  1,  expPos);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	mant  =  str.substring(0,  expPos  -  1,  expPos);	  mant    =    str.substring(0,    expPos    -    1);    	non-compiled	[CE]  unclosed  character  literal	13	None	replace
33	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  2;  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  2;  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	int  expPos  =  str.lastIndexOf('.')+  2;	  int    expPos    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  unclosed  character  literal	30	None	replace
34	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos)+  1;  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos)+  1;  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	int  expPos  =  str.lastIndexOf('.',  expPos)+  1;	  int    expPos    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  unclosed  character  literal	30	None	replace
35	[BUG]  [BUGGY]  if(expPos  <  expPos  ||  expPos  >  str.length())  {  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(expPos  <  expPos  ||  expPos  >  str.length())  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(expPos  <  expPos  ||  expPos  >  str.length())  {	  if(decPos    <    expPos    ||    expPos    >    str.length())    {    	non-compiled	[CE]  unclosed  character  literal	21	None	replace
36	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.')/  2;  [CE]  unclosed  character  literal  [FE]                    NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  Integer  expPos  =  str.indexOf('.')/  2;  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	Integer  expPos  =  str.indexOf('.')/  2;	  Integer    expPos    =    str.indexOf('.')+    2;    	non-compiled	[CE]  unclosed  character  literal	33	None	replace
37	[BUG]  [BUGGY]  if(dec  ==  null  ||  expPos  <  str.length())  {  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(dec  ==  null  ||  expPos  <  str.length())  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(dec  ==  null  ||  expPos  <  str.length())  {	  if(dec    ==    null)    {    	non-compiled	[CE]  unclosed  character  literal	48	None	replace
38	[BUG]  [BUGGY]  if(dec  ==  null  ||  expPos  <  decPos)  {  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(dec  ==  null  ||  expPos  <  decPos)  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(dec  ==  null  ||  expPos  <  decPos)  {	  if(dec    ==    null)    {    	non-compiled	[CE]  unclosed  character  literal	48	None	replace
39	[BUG]  [BUGGY]  if(dec  ==  null  ||  expPos  >  -1)  {  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(dec  ==  null  ||  expPos  >  -1)  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(dec  ==  null  ||  expPos  >  -1)  {	  if(dec    ==    null)    {    	non-compiled	[CE]  unclosed  character  literal	48	None	replace
40	[BUG]  [BUGGY]  if(decPos  <  expPos)  {  [CE]  unclosed  character  literal  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(decPos  <  expPos)  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(decPos  <  expPos)  {	  if(expPos    <    decPos)    {    	non-compiled	[CE]  unclosed  character  literal	43	None	replace
41	[BUG]  [BUGGY]  Integer  expPos  =  str.length();  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  Integer  expPos  =  str.length();  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	Integer  expPos  =  str.length();	  int    expPos    =    str.length()    +    1;    	non-compiled	[CE]  unclosed  character  literal	37	None	replace
42	[BUG]  [BUGGY]  int  expPos  =  decPos  +  1;  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  int  expPos  =  decPos  +  1;  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	int  expPos  =  decPos  +  1;	  int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  unclosed  character  literal	36	None	replace
43	[BUG]  [BUGGY]  char  expPos  =  mant.length();  [CE]  unclosed  character  literal  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  char  expPos  =  mant.length();  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	char  expPos  =  mant.length();	  int    expPos    =    mant.length();    	non-compiled	[CE]  unclosed  character  literal	38	None	replace
44	[BUG]  [BUGGY]  int  expPos  =  decPos  +  str.length();  [CE]  unclosed  character  literal  [FE]                    NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  int  expPos  =  decPos  +  str.length();  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	int  expPos  =  decPos  +  str.length();	  int    expPos    =    mant.length();    	non-compiled	[CE]  unclosed  character  literal	38	None	replace
45	[BUG]  [BUGGY]  int  expPos  =  decPos  +.length();  [CE]  unclosed  character  literal  [FE]                      NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  int  expPos  =  decPos  +.length();  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	int  expPos  =  decPos  +.length();	  int    expPos    =    mant.length();    	non-compiled	[CE]  unclosed  character  literal	38	None	replace
46	[BUG]  [BUGGY]  String  str  =  str.substring(0,  expPos  +  1,  expPos  +  1);  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  String  str  =  str.substring(0,  expPos  +  1,  expPos  +  1);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	String  str  =  str.substring(0,  expPos  +  1,  expPos  +  1);	  String    str    =    str.substring(0,    expPos    +    1,    expPos);    	non-compiled	[CE]  unclosed  character  literal	49	None	replace
47	[BUG]  [BUGGY]  String  str  =  str.substring(0,  expPos  +  1,  decPos);  [CE]  unclosed  character  literal  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  String  str  =  str.substring(0,  expPos  +  1,  decPos);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	String  str  =  str.substring(0,  expPos  +  1,  decPos);	  String    str    =    str.substring(0,    expPos    +    1,    expPos);    	non-compiled	[CE]  unclosed  character  literal	49	None	replace
48	[BUG]  [BUGGY]  String  str  =  str.substring(0,  expPos  +  1,  expPos  -  1);  [CE]  unclosed  character  literal  [FE]                    NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  String  str  =  str.substring(0,  expPos  +  1,  expPos  -  1);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	String  str  =  str.substring(0,  expPos  +  1,  expPos  -  1);	  String    str    =    str.substring(0,    expPos    +    1,    expPos);    	non-compiled	[CE]  unclosed  character  literal	49	None	replace
49	[BUG]  [BUGGY]  mant  =  str.substring(1,  expPos  -  1);  [CE]  unclosed  character  literal  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  mant  =  str.substring(1,  expPos  -  1);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	mant  =  str.substring(1,  expPos  -  1);	  mant    =    str.substring(1,    expPos);    	non-compiled	[CE]  unclosed  character  literal	15	None	replace
50	[BUG]  [BUGGY]  mant  =  str.substring(1,  expPos  +  2);  [CE]  unclosed  character  literal  [FE]                    NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  mant  =  str.substring(1,  expPos  +  2);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	mant  =  str.substring(1,  expPos  +  2);	  mant    =    str.substring(1,    expPos);    	non-compiled	[CE]  unclosed  character  literal	15	None	replace
51	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  ||  expPos  >  str.length())  {  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  ||  expPos  >  str.length())  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(expPos  >  -1  &&  expPos  <  str.length()  ||  expPos  >  str.length())  {	  if(expPos    >    -1    &&    expPos    <    decPos    ||    expPos    >    str.length())    {    	non-compiled	[CE]  unclosed  character  literal	55	None	replace
52	[BUG]  [BUGGY]  if(decPos  >  -1  &&  expPos  <  decPos  ||  expPos  >  str.length())  {  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(decPos  >  -1  &&  expPos  <  decPos  ||  expPos  >  str.length())  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(decPos  >  -1  &&  expPos  <  decPos  ||  expPos  >  str.length())  {	  if(expPos    >    -1    &&    expPos    <    decPos    ||    expPos    >    str.length())    {    	non-compiled	[CE]  unclosed  character  literal	55	None	replace
53	[BUG]  [BUGGY]  if(decPos  >  -1  &&  expPos  <  str.length()  ||  expPos  >  str.length())  {  [CE]  unclosed  character  literal  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(decPos  >  -1  &&  expPos  <  str.length()  ||  expPos  >  str.length())  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(decPos  >  -1  &&  expPos  <  str.length()  ||  expPos  >  str.length())  {	  if(expPos    >    -1    &&    expPos    <    decPos    ||    expPos    >    str.length())    {    	non-compiled	[CE]  unclosed  character  literal	55	None	replace
54	[BUG]  [BUGGY]  String  str  =  str.substring(0,  expPos  +  1).trim();  [CE]  unclosed  character  literal  [FE]                      NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  String  str  =  str.substring(0,  expPos  +  1).trim();  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	String  str  =  str.substring(0,  expPos  +  1).trim();	  String    str    =    str.substring(0,    expPos    +    2);    	non-compiled	[CE]  unclosed  character  literal	4	None	replace
55	[BUG]  [BUGGY]  mant  =  str.substring(0,  DECPos);  [CE]  unclosed  character  literal  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  mant  =  str.substring(0,  DECPos);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	mant  =  str.substring(0,  DECPos);	  mant    =    str.substring(1,    decPos);    	non-compiled	[CE]  unclosed  character  literal	53	None	replace
56	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos);  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  int  expPos  =  str.indexOf('.',  expPos);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	int  expPos  =  str.indexOf('.',  expPos);	  int    expPos    =    str.indexOf('.');    	non-compiled	[CE]  unclosed  character  literal	41	None	replace
57	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  decPos);  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  int  expPos  =  str.indexOf('.',  decPos);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	int  expPos  =  str.indexOf('.',  decPos);	  int    expPos    =    str.indexOf('.');    	non-compiled	[CE]  unclosed  character  literal	41	None	replace
58	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  dec);  [CE]  unclosed  character  literal  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  int  expPos  =  str.indexOf('.',  dec);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	int  expPos  =  str.indexOf('.',  dec);	  int    expPos    =    str.indexOf('.');    	non-compiled	[CE]  unclosed  character  literal	41	None	replace
59	[BUG]  [BUGGY]  String  str  =  str.substring(1,  expPos  +  1);  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  String  str  =  str.substring(1,  expPos  +  1);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	String  str  =  str.substring(1,  expPos  +  1);	  String    str    =    str.substring(1,    expPos);    	non-compiled	[CE]  unclosed  character  literal	47	None	replace
60	[BUG]  [BUGGY]  String  str  =  str.substring(1,  expPos  -  1);  [CE]  unclosed  character  literal  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  String  str  =  str.substring(1,  expPos  -  1);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	String  str  =  str.substring(1,  expPos  -  1);	  String    str    =    str.substring(1,    expPos);    	non-compiled	[CE]  unclosed  character  literal	47	None	replace
61	[BUG]  [BUGGY]  String  str  =  str.substring(1,  expPos  +  2);  [CE]  unclosed  character  literal  [FE]                    NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  String  str  =  str.substring(1,  expPos  +  2);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	String  str  =  str.substring(1,  expPos  +  2);	  String    str    =    str.substring(1,    expPos);    	non-compiled	[CE]  unclosed  character  literal	47	None	replace
62	[BUG]  [BUGGY]  Mant  =  str.substring(0,  expPos  +  1,  expPos);  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  Mant  =  str.substring(0,  expPos  +  1,  expPos);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	Mant  =  str.substring(0,  expPos  +  1,  expPos);	  Mant    =    str.substring(0,    expPos    +    1);    	non-compiled	[CE]  unclosed  character  literal	18	None	replace
63	[BUG]  [BUGGY]  Mant  =  str.substring(0,  expPos  +  2);  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  Mant  =  str.substring(0,  expPos  +  2);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	Mant  =  str.substring(0,  expPos  +  2);	  Mant    =    str.substring(0,    expPos    +    1);    	non-compiled	[CE]  unclosed  character  literal	18	None	replace
64	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  1);  [CE]  unclosed  character  literal  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  1);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	int  expPos  =  str.lastIndexOf('.',  1);	  int    expPos    =    str.lastIndexOf('.',    expPos);    	non-compiled	[CE]  unclosed  character  literal	26	None	replace
65	[BUG]  [BUGGY]  Mant  =  str.substring(0,  expPos  -  1  +  1);  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  Mant  =  str.substring(0,  expPos  -  1  +  1);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	Mant  =  str.substring(0,  expPos  -  1  +  1);	  Mant    =    str.substring(0,    expPos    -    1);    	non-compiled	[CE]  unclosed  character  literal	19	None	replace
66	[BUG]  [BUGGY]  String  str  =  str.substring(0,  expPos  -  1  +  1);  [CE]  unclosed  character  literal  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  String  str  =  str.substring(0,  expPos  -  1  +  1);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	String  str  =  str.substring(0,  expPos  -  1  +  1);	  String    str    =    str.substring(0,    expPos    -    1);    	non-compiled	[CE]  unclosed  character  literal	2	None	replace
67	[BUG]  [BUGGY]  String  str  =  str.substring(0,  expPos  -  2);  [CE]  unclosed  character  literal  [FE]                    NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  String  str  =  str.substring(0,  expPos  -  2);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	String  str  =  str.substring(0,  expPos  -  2);	  String    str    =    str.substring(0,    expPos    -    1);    	non-compiled	[CE]  unclosed  character  literal	2	None	replace
68	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  decPos)+  1;  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  int  expPos  =  str.indexOf('.',  decPos)+  1;  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	int  expPos  =  str.indexOf('.',  decPos)+  1;	  int    expPos    =    str.indexOf('.',    expPos)+    1;    	non-compiled	[CE]  unclosed  character  literal	32	None	replace
69	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  +  1)+  1;  [CE]  unclosed  character  literal  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  +  1)+  1;  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	int  expPos  =  str.indexOf('.',  expPos  +  1)+  1;	  int    expPos    =    str.indexOf('.',    expPos)+    1;    	non-compiled	[CE]  unclosed  character  literal	32	None	replace
70	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  dec  +  1);  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  dec  +  1);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	int  expPos  =  str.lastIndexOf('.',  dec  +  1);	  int    expPos    =    str.lastIndexOf('.',    dec);    	non-compiled	[CE]  unclosed  character  literal	25	None	replace
71	[BUG]  [BUGGY]  if(decPos  >  -1  ||  expPos  <  str.length())  {  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(decPos  >  -1  ||  expPos  <  str.length())  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(decPos  >  -1  ||  expPos  <  str.length())  {	  if(expPos    >    -1    ||    expPos    <    str.length())    {    	non-compiled	[CE]  unclosed  character  literal	11	None	replace
72	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  [CE]  unclosed  character  literal  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(expPos  >  -1  &&  expPos  <  str.length())  {	  if(expPos    >    -1    ||    expPos    <    str.length())    {    	non-compiled	[CE]  unclosed  character  literal	11	None	replace
73	[BUG]  [BUGGY]  if(expPos  >  -1  ||  expPos  >=  str.length())  {  [CE]  unclosed  character  literal  [FE]                    NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(expPos  >  -1  ||  expPos  >=  str.length())  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(expPos  >  -1  ||  expPos  >=  str.length())  {	  if(expPos    >    -1    ||    expPos    <    str.length())    {    	non-compiled	[CE]  unclosed  character  literal	11	None	replace
74	[BUG]  [BUGGY]  dec  =  str.substring(1,  expPos  +  1);  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  dec  =  str.substring(1,  expPos  +  1);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	dec  =  str.substring(1,  expPos  +  1);	  dec    =    str.substring(1,    expPos);    	non-compiled	[CE]  unclosed  character  literal	46	None	replace
75	[BUG]  [BUGGY]  dec  =  str.substring(1,  expPos  +  2);  [CE]  unclosed  character  literal  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  dec  =  str.substring(1,  expPos  +  2);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	dec  =  str.substring(1,  expPos  +  2);	  dec    =    str.substring(1,    expPos);    	non-compiled	[CE]  unclosed  character  literal	46	None	replace
76	[BUG]  [BUGGY]  dec  =  str.substring(1,  expPos  -  1);  [CE]  unclosed  character  literal  [FE]                    NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  dec  =  str.substring(1,  expPos  -  1);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	dec  =  str.substring(1,  expPos  -  1);	  dec    =    str.substring(1,    expPos);    	non-compiled	[CE]  unclosed  character  literal	46	None	replace
77	[BUG]  [BUGGY]  dec  =  str.substring(0,  expPos  +  1).trim();  [CE]  unclosed  character  literal  [FE]                    NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  dec  =  str.substring(0,  expPos  +  1).trim();  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	dec  =  str.substring(0,  expPos  +  1).trim();	  dec    =    str.substring(0,    expPos    +    2);    	non-compiled	[CE]  unclosed  character  literal	8	None	replace
78	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  expPos)/  1;  [CE]  unclosed  character  literal  [FE]                    NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  Integer  expPos  =  str.indexOf('.',  expPos)/  1;  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	Integer  expPos  =  str.indexOf('.',  expPos)/  1;	  Integer    expPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  unclosed  character  literal	52	None	replace
79	[BUG]  [BUGGY]  Integer  expPos  =  str.lastIndexOf('.')/  1;  [CE]  unclosed  character  literal  [FE]                      NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  Integer  expPos  =  str.lastIndexOf('.')/  1;  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	Integer  expPos  =  str.lastIndexOf('.')/  1;	  Integer    expPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  unclosed  character  literal	52	None	replace
80	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  expPos  -  1)/  1;  [CE]  unclosed  character  literal  [FE]                        NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  Integer  expPos  =  str.indexOf('.',  expPos  -  1)/  1;  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	Integer  expPos  =  str.indexOf('.',  expPos  -  1)/  1;	  Integer    expPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  unclosed  character  literal	52	None	replace
81	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  expPos  +  1);  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  expPos  +  1);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	mant  =  str.substring(0,  expPos  +  1,  expPos  +  1);	  mant    =    str.substring(0,    expPos    +    1,    expPos);    	non-compiled	[CE]  unclosed  character  literal	58	None	replace
82	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  expPos  -  1);  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  expPos  -  1);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	mant  =  str.substring(0,  expPos  +  1,  expPos  -  1);	  mant    =    str.substring(0,    expPos    +    1,    expPos);    	non-compiled	[CE]  unclosed  character  literal	58	None	replace
83	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  expPos  +  2);  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  expPos  +  2);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	mant  =  str.substring(0,  expPos  +  1,  expPos  +  2);	  mant    =    str.substring(0,    expPos    +    1,    expPos);    	non-compiled	[CE]  unclosed  character  literal	58	None	replace
84	[BUG]  [BUGGY]  dec  =  str.substring(0,  expPos  +  1,  expPos  +  1);  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  dec  =  str.substring(0,  expPos  +  1,  expPos  +  1);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	dec  =  str.substring(0,  expPos  +  1,  expPos  +  1);	  dec    =    str.substring(0,    expPos    +    1,    expPos);    	non-compiled	[CE]  unclosed  character  literal	57	None	replace
85	[BUG]  [BUGGY]  dec  =  str.substring(0,  expPos  +  1,  expPos  -  1);  [CE]  unclosed  character  literal  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  dec  =  str.substring(0,  expPos  +  1,  expPos  -  1);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	dec  =  str.substring(0,  expPos  +  1,  expPos  -  1);	  dec    =    str.substring(0,    expPos    +    1,    expPos);    	non-compiled	[CE]  unclosed  character  literal	57	None	replace
86	[BUG]  [BUGGY]  dec  =  str.substring(0,  expPos  +  1,  expPos  +  2);  [CE]  unclosed  character  literal  [FE]                    NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  dec  =  str.substring(0,  expPos  +  1,  expPos  +  2);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	dec  =  str.substring(0,  expPos  +  1,  expPos  +  2);	  dec    =    str.substring(0,    expPos    +    1,    expPos);    	non-compiled	[CE]  unclosed  character  literal	57	None	replace
87	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos  +  1);  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos  +  1);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	int  expPos  =  str.lastIndexOf('.',  decPos  +  1);	  int    expPos    =    str.lastIndexOf('.',    decPos);    	non-compiled	[CE]  unclosed  character  literal	24	None	replace
88	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos  -  1);  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos  -  1);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	int  expPos  =  str.lastIndexOf('.',  decPos  -  1);	  int    expPos    =    str.lastIndexOf('.',    decPos);    	non-compiled	[CE]  unclosed  character  literal	24	None	replace
89	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC_POP  +  1);  [CE]  unclosed  character  literal  [FE]                    NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC_POP  +  1);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	int  expPos  =  str.lastIndexOf('.',  DEC_POP  +  1);	  int    expPos    =    str.lastIndexOf('.',    DEC_POP);    	non-compiled	[CE]  unclosed  character  literal	27	None	replace
90	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  DEC_POP);  [CE]  unclosed  character  literal  [FE]                      NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  int  expPos  =  str.indexOf('.',  DEC_POP);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	int  expPos  =  str.indexOf('.',  DEC_POP);	  int    expPos    =    str.lastIndexOf('.',    DEC_POP);    	non-compiled	[CE]  unclosed  character  literal	27	None	replace
91	[BUG]  [BUGGY]  if(decPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(decPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(decPos  >  -1  &&  expPos  <  str.length()  -  1)  {	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    	non-compiled	[CE]  unclosed  character  literal	42	None	replace
92	[BUG]  [BUGGY]  if(expPos  >  -1  ||  expPos  <  str.length()  -  1)  {  [CE]  unclosed  character  literal  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(expPos  >  -1  ||  expPos  <  str.length()  -  1)  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(expPos  >  -1  ||  expPos  <  str.length()  -  1)  {	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    	non-compiled	[CE]  unclosed  character  literal	42	None	replace
93	[BUG]  [BUGGY]  if(expPos  <  decPos  +  1  ||  expPos  <  str.length())  {  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(expPos  <  decPos  +  1  ||  expPos  <  str.length())  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(expPos  <  decPos  +  1  ||  expPos  <  str.length())  {	  if(expPos    <    decPos    ||    expPos    <    str.length())    {    	non-compiled	[CE]  unclosed  character  literal	16	None	replace
94	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  +  2  -  1);  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  mant  =  str.substring(0,  expPos  +  2  -  1);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	mant  =  str.substring(0,  expPos  +  2  -  1);	  mant    =    str.substring(0,    expPos    +    2);    	non-compiled	[CE]  unclosed  character  literal	14	None	replace
95	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  -  1  +  2);  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  mant  =  str.substring(0,  expPos  -  1  +  2);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	mant  =  str.substring(0,  expPos  -  1  +  2);	  mant    =    str.substring(0,    expPos    -    1);    	non-compiled	[CE]  unclosed  character  literal	13	None	replace
96	[BUG]  [BUGGY]  dec  =  str.substring(0,  expPos  +  2  -  1);  [CE]  unclosed  character  literal  [FE]                    NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  dec  =  str.substring(0,  expPos  +  2  -  1);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	dec  =  str.substring(0,  expPos  +  2  -  1);	  dec    =    str.substring(0,    expPos    +    2);    	non-compiled	[CE]  unclosed  character  literal	8	None	replace
97	[BUG]  [BUGGY]  dec  =  str.substring(0,  expPos  +  1  -  decPos);  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  dec  =  str.substring(0,  expPos  +  1  -  decPos);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	dec  =  str.substring(0,  expPos  +  1  -  decPos);	  dec    =    str.substring(0,    expPos    +    1);    	non-compiled	[CE]  unclosed  character  literal	6	None	replace
98	[BUG]  [BUGGY]  if(expPos  >  decPos  +  1)  {  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(expPos  >  decPos  +  1)  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(expPos  >  decPos  +  1)  {	  if(decPos    <    decPos    +    1    ||    expPos    >    str.length())    {    	non-compiled	[CE]  unclosed  character  literal	44	None	replace
99	[BUG]  [BUGGY]  Mant  =  str.substring(0,  expPos  +  1  -  decPos);  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  Mant  =  str.substring(0,  expPos  +  1  -  decPos);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	Mant  =  str.substring(0,  expPos  +  1  -  decPos);	  Mant    =    str.substring(0,    expPos    +    1);    	non-compiled	[CE]  unclosed  character  literal	18	None	replace
100	[BUG]  [BUGGY]  if(expPos  <  decPos  +  1  ||  expPos  >  -1)  {  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(expPos  <  decPos  +  1  ||  expPos  >  -1)  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(expPos  <  decPos  +  1  ||  expPos  >  -1)  {	  if(decPos    <    decPos    ||    expPos    >    -1)    {    	non-compiled	[CE]  unclosed  character  literal	51	None	replace
101	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  decPos)  {  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(expPos  >  -1  &&  expPos  <  decPos)  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(expPos  >  -1  &&  expPos  <  decPos)  {	  if(decPos    <    decPos    ||    expPos    >    -1)    {    	non-compiled	[CE]  unclosed  character  literal	51	None	replace
102	[BUG]  [BUGGY]  String  str  =  str.substring(2,  expPos);  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  String  str  =  str.substring(2,  expPos);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	String  str  =  str.substring(2,  expPos);	  String    str    =    str.substring(1,    expPos);    	non-compiled	[CE]  unclosed  character  literal	47	None	replace
103	[BUG]  [BUGGY]  dec  =  str.substring(0,  expPos  -  1  +  2);  [CE]  unclosed  character  literal  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  dec  =  str.substring(0,  expPos  -  1  +  2);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	dec  =  str.substring(0,  expPos  -  1  +  2);	  dec    =    str.substring(0,    expPos    -    1);    	non-compiled	[CE]  unclosed  character  literal	7	None	replace
104	[BUG]  [BUGGY]  if(expPos  <  -1)  {  [CE]  unclosed  character  literal  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(expPos  <  -1)  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(expPos  <  -1)  {	  if(expPos    <    decPos)    {    	non-compiled	[CE]  unclosed  character  literal	43	None	replace
105	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  +  1  -  decPos);  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  mant  =  str.substring(0,  expPos  +  1  -  decPos);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	mant  =  str.substring(0,  expPos  +  1  -  decPos);	  mant    =    str.substring(0,    expPos    +    1);    	non-compiled	[CE]  unclosed  character  literal	12	None	replace
106	[BUG]  [BUGGY]  if(expPos  <  decPos  +  str.length())  {  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(expPos  <  decPos  +  str.length())  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(expPos  <  decPos  +  str.length())  {	  if(decPos    <    str.length())    {    	non-compiled	[CE]  unclosed  character  literal	29	None	replace
107	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  -  1)/  1;  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  -  1)/  1;  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	int  expPos  =  str.indexOf('.',  expPos  -  1)/  1;	  int    expPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  unclosed  character  literal	54	None	replace
108	[BUG]  [BUGGY]  if(expPos  >  decPos.length()  ||  expPos  >  str.length())  {  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(expPos  >  decPos.length()  ||  expPos  >  str.length())  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(expPos  >  decPos.length()  ||  expPos  >  str.length())  {	  if(decPos    >    expPos.length())    {    	non-compiled	[CE]  unclosed  character  literal	50	None	replace
109	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos);  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	dec  =  str.substring(decPos  +  1,  expPos);	  dec    =    str.substring(1,    expPos);    	non-compiled	[CE]  unclosed  character  literal	46	None	replace
110	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1);  [CE]  unclosed  character  literal  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  dec  =  str.substring(decPos  +  1);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	dec  =  str.substring(decPos  +  1);	  dec    =    str.substring(1,    expPos);    	non-compiled	[CE]  unclosed  character  literal	46	None	replace
111	[BUG]  [BUGGY]  if(decPos  >  -1  &&  expPos  <  str.length())  {  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(decPos  >  -1  &&  expPos  <  str.length())  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(decPos  >  -1  &&  expPos  <  str.length())  {	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    	non-compiled	[CE]  unclosed  character  literal	42	None	replace
112	[BUG]  [BUGGY]  if(expPos  >  decPos  +  1  ||  expPos  >  str.length())  {  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(expPos  >  decPos  +  1  ||  expPos  >  str.length())  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(expPos  >  decPos  +  1  ||  expPos  >  str.length())  {	  if(expPos    >    str.length()    ||    expPos    >    str.length())    {    	non-compiled	[CE]  unclosed  character  literal	5	None	replace
113	[BUG]  [BUGGY]  char  expPos  =  str.length();  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  char  expPos  =  str.length();  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	char  expPos  =  str.length();	  int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  unclosed  character  literal	36	None	replace
114	[BUG]  [BUGGY]  if(decPos  >  0  ||  expPos  >  str.length())  {  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(decPos  >  0  ||  expPos  >  str.length())  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(decPos  >  0  ||  expPos  >  str.length())  {	  if(expPos    >    decPos    ||    expPos    >    str.length())    {    	non-compiled	[CE]  unclosed  character  literal	23	None	replace
115	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  >  str.length())  {  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(expPos  >  -1  &&  expPos  >  str.length())  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(expPos  >  -1  &&  expPos  >  str.length())  {	  if(expPos    >    decPos    ||    expPos    >    str.length())    {    	non-compiled	[CE]  unclosed  character  literal	23	None	replace
116	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  +  1);  [CE]  unclosed  character  literal  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  +  1);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	int  expPos  =  str.lastIndexOf('.',  expPos  +  1);	  int    expPos    =    str.lastIndexOf('.',    expPos);    	non-compiled	[CE]  unclosed  character  literal	26	None	replace
117	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  +  1);  [CE]  unclosed  character  literal  [FE]                    NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  +  1);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	int  expPos  =  str.indexOf('.',  expPos  +  1);	  int    expPos    =    str.lastIndexOf('.',    expPos);    	non-compiled	[CE]  unclosed  character  literal	26	None	replace
118	[BUG]  [BUGGY]  String  str  =  str.substring(0,  expPos  -  1).trim();  [CE]  unclosed  character  literal  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  String  str  =  str.substring(0,  expPos  -  1).trim();  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	String  str  =  str.substring(0,  expPos  -  1).trim();	  String    str    =    str.substring(0,    expPos    -    1);    	non-compiled	[CE]  unclosed  character  literal	2	None	replace
119	[BUG]  [BUGGY]  String  str  =  str.substring(0,  expPos  +  1  -  decPos);  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  String  str  =  str.substring(0,  expPos  +  1  -  decPos);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	String  str  =  str.substring(0,  expPos  +  1  -  decPos);	  String    str    =    str.substring(0,    expPos    +    1);    	non-compiled	[CE]  unclosed  character  literal	1	None	replace
120	[BUG]  [BUGGY]  if(decPos  >  -1  &&  expPos  >  str.length())  {  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(decPos  >  -1  &&  expPos  >  str.length())  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(decPos  >  -1  &&  expPos  >  str.length())  {	  if(decPos    >    -1    ||    expPos    >    str.length())    {    	non-compiled	[CE]  unclosed  character  literal	10	None	replace
121	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  decPos);  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  decPos);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	mant  =  str.substring(0,  expPos  +  1,  decPos);	  mant    =    str.substring(0,    expPos    +    1,    expPos);    	non-compiled	[CE]  unclosed  character  literal	58	None	replace
122	[BUG]  [BUGGY]  mant  =  str.substring(2,  decPos);  [CE]  unclosed  character  literal  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  mant  =  str.substring(2,  decPos);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	mant  =  str.substring(2,  decPos);	  mant    =    str.substring(1,    decPos);    	non-compiled	[CE]  unclosed  character  literal	53	None	replace
123	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos)+  2;  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  int  expPos  =  str.indexOf('.',  expPos)+  2;  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	int  expPos  =  str.indexOf('.',  expPos)+  2;	  int    expPos    =    str.indexOf('.')+    2;    	non-compiled	[CE]  unclosed  character  literal	31	None	replace
124	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos)+  0;  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  int  expPos  =  str.indexOf('.',  expPos)+  0;  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	int  expPos  =  str.indexOf('.',  expPos)+  0;	  int    expPos    =    str.indexOf('.',    expPos)+    1;    	non-compiled	[CE]  unclosed  character  literal	32	None	replace
125	[BUG]  [BUGGY]  if(decPos  >  decPos  ||  expPos  >  str.length())  {  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(decPos  >  decPos  ||  expPos  >  str.length())  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(decPos  >  decPos  ||  expPos  >  str.length())  {	  if(decPos    <    decPos    ||    expPos    >    str.length()    -    1)    {    	non-compiled	[CE]  unclosed  character  literal	56	None	replace
126	[BUG]  [BUGGY]  dec  =  str.substring(0,  expPos  -  1,  expPos);  [CE]  unclosed  character  literal  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  dec  =  str.substring(0,  expPos  -  1,  expPos);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	dec  =  str.substring(0,  expPos  -  1,  expPos);	  dec    =    str.substring(0,    expPos    -    1);    	non-compiled	[CE]  unclosed  character  literal	7	None	replace
127	[BUG]  [BUGGY]  if(dec  ==  null  ||  expPos  >  -1  ||  expPos  >  str.length())  {  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(dec  ==  null  ||  expPos  >  -1  ||  expPos  >  str.length())  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(dec  ==  null  ||  expPos  >  -1  ||  expPos  >  str.length())  {	  if(dec    ==    null)    {    	non-compiled	[CE]  unclosed  character  literal	48	None	replace
128	[BUG]  [BUGGY]  if(dec  ==  null  ||  expPos  >  -1  ||  expPos  <  decPos)  {  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(dec  ==  null  ||  expPos  >  -1  ||  expPos  <  decPos)  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(dec  ==  null  ||  expPos  >  -1  ||  expPos  <  decPos)  {	  if(dec    ==    null)    {    	non-compiled	[CE]  unclosed  character  literal	48	None	replace
129	[BUG]  [BUGGY]  Mant  =  str.substring(0,  expPos  -  1,  expPos);  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  Mant  =  str.substring(0,  expPos  -  1,  expPos);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	Mant  =  str.substring(0,  expPos  -  1,  expPos);	  Mant    =    str.substring(0,    expPos    -    1);    	non-compiled	[CE]  unclosed  character  literal	19	None	replace
130	[BUG]  [BUGGY]  if(expPos  <  decPos  &&  expPos  >  -1)  {  [CE]  unclosed  character  literal  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(expPos  <  decPos  &&  expPos  >  -1)  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(expPos  <  decPos  &&  expPos  >  -1)  {	  if(expPos    <    decPos)    {    	non-compiled	[CE]  unclosed  character  literal	43	None	replace
131	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')-  1;  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.')-  1;  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	int  expPos  =  str.lastIndexOf('.')-  1;	  int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  unclosed  character  literal	36	None	replace
132	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos)-  1;  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos)-  1;  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	int  expPos  =  str.lastIndexOf('.',  decPos)-  1;	  int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  unclosed  character  literal	36	None	replace
133	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')-  1;  [CE]  unclosed  character  literal  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  int  expPos  =  str.indexOf('.')-  1;  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	int  expPos  =  str.indexOf('.')-  1;	  int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  unclosed  character  literal	36	None	replace
134	[BUG]  [BUGGY]  String  str  =  str.substring(0,  decPos  +  1,  expPos);  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  String  str  =  str.substring(0,  decPos  +  1,  expPos);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	String  str  =  str.substring(0,  decPos  +  1,  expPos);	  String    str    =    str.substring(0,    expPos    +    1,    expPos);    	non-compiled	[CE]  unclosed  character  literal	49	None	replace
135	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  -  2);  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  mant  =  str.substring(0,  expPos  -  2);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	mant  =  str.substring(0,  expPos  -  2);	  mant    =    str.substring(0,    expPos    +    2);    	non-compiled	[CE]  unclosed  character  literal	14	None	replace
136	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  decPos  ||  expPos  >  str.length()  -  1)  {  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(expPos  >  -1  &&  expPos  <  decPos  ||  expPos  >  str.length()  -  1)  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(expPos  >  -1  &&  expPos  <  decPos  ||  expPos  >  str.length()  -  1)  {	  if(decPos    <    decPos    ||    expPos    >    str.length()    -    1)    {    	non-compiled	[CE]  unclosed  character  literal	56	None	replace
137	[BUG]  [BUGGY]  dec  =  str.substring(2,  expPos);  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  dec  =  str.substring(2,  expPos);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	dec  =  str.substring(2,  expPos);	  dec    =    str.substring(1,    expPos);    	non-compiled	[CE]  unclosed  character  literal	46	None	replace
138	[BUG]  [BUGGY]  if(expPos  >  0  ||  expPos  <  str.length())  {  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(expPos  >  0  ||  expPos  <  str.length())  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(expPos  >  0  ||  expPos  <  str.length())  {	  if(expPos    >    -1    ||    expPos    <    str.length())    {    	non-compiled	[CE]  unclosed  character  literal	11	None	replace
139	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  decPos  ||  expPos  >  -1)  {  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  if(expPos  >  -1  &&  expPos  <  decPos  ||  expPos  >  -1)  {  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	if(expPos  >  -1  &&  expPos  <  decPos  ||  expPos  >  -1)  {	  if(expPos    <    decPos    ||    expPos    >    -1)    {    	non-compiled	[CE]  unclosed  character  literal	9	None	replace
140	[BUG]  [BUGGY]  String  str  =  str.substring(0,  expPos  -  1,  expPos);  [CE]  unclosed  character  literal  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  String  str  =  str.substring(0,  expPos  -  1,  expPos);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	String  str  =  str.substring(0,  expPos  -  1,  expPos);	  String    str    =    str.substring(0,    expPos    -    1);    	non-compiled	[CE]  unclosed  character  literal	2	None	replace
141	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  expPos)/  2;  [CE]  unclosed  character  literal  [FE]                    NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  Integer  expPos  =  str.indexOf('.',  expPos)/  2;  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	Integer  expPos  =  str.indexOf('.',  expPos)/  2;	  Integer    expPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  unclosed  character  literal	52	None	replace
142	[BUG]  [BUGGY]  Mant  =  str.substring(1,  expPos  -  1);  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {      [BUGGY]  Mant  =  str.substring(1,  expPos  -  1);  [BUGGY]      if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	481	481	1	replace	Mant  =  str.substring(1,  expPos  -  1);	  Mant    =    str.substring(1,    expPos);    	non-compiled	[CE]  unclosed  character  literal	20	None	replace
