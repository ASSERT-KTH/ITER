projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117this.means=MathArrays.copyOf(means);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117this.means=Math.ceil(means);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117this.means=Math.ceil(mean);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117double[][]covariances=rng.getMatrixEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117intcol=Math.min(covariances.length,col);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117double[][]covariances=rng.getRowMatEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117double[][]covariances=rng.getEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117double[][]covariances=dim.getDouble();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117double[][]covariances=dim.getDoubles();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117intcol=Math.min(covariances.length,covariances.length);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117double[][]covariances=factor.getEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117intcol=Math.min(covariances.length,dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117this.means=MathArrays.copyOf(dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117this.means=MathArrays.copyOf(covariances);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117this.means=MathArrays.copyOf(covariances,dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117this.means=MathArrays.copyOf(rng,dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117this.means=Math.ceil(dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117this.means=Math.ceil(dim,covariances);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117double[][]covariances=rng.getDoubles();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117double[][]covariances=covariances.getDoubles();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117intcol=Math.min(dim,covariances.length);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117double[][]covariances=rng.getColumnMatEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117double[][]covariances=covMatEigenvectors.get(dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117double[][]covariances=covariances.getDouble();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117double[][]covariances=rng.getMatrixEigenvalues(dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117this.means=Math.ceil(dim,means);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117this.means=Math.ceil(dim,methods);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117this.means=MathArrays.copyOf(dim,covariances);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117this.means=MathArrays.copyOf(rng,covariances);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117doublecol=Math.min(covariances.length,covariances.length);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117double[][]covariances=rng.getRangeEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117this.means=Math.ceil(covariances);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117double[][]covariances=dim.getEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117double[][]covariances=dim.getMatrixEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117double[][]covariances=factor.getDeterminants();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117double[][]covariances=this.dim.getDoubles();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117double[][]covariances=dim.getRowMatEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117this.mean=Math.ceil(dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java117this.means=MathArrays.copyOf(dim,rng);
