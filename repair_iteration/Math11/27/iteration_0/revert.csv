projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java133
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java133if(covMatEigenvalues[i]<0){thrownewNonPositiveDefiniteMatrixException(covMatEigenvalues[i],i,0);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java133double[][]covariances=covMatEigenvalues[i].toArray();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java133if(covMatEigenvalues[i]<0){thrownewNonPositiveDefiniteMatrixException(covMatEigenvalues[i],i);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java133if(covMatEigenvalues[i]<0){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java133if(covMatEigenvalues[i]<=0){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java133if(covMatEigenvalues[i]==0){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java133double[][]covariances=covMatEigenvalues[i].getRealEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java133if(covMatEigenvalues[i]<0){thrownewNonPositiveDefiniteMatrixException(covMatEigenvalues[i],0,0);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java133if(covMatEigenvalues[i]!=0){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java133if(covMatEigenvalues[i]<0){thrownewNonPositiveDefiniteMatrixException(covMatEigenvalues[i],0);}
