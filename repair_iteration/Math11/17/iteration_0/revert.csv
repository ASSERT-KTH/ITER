projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java107
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java107double[][]covariances=rng.getMatEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java107double[][]covariances=evec.getMatEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java107double[][]covariances=rng.getVariances();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java107if(covariances.length!=dim){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java107if(dim!=covariances.length){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java107double[][]covariances=rng.getMatteredEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java107double[][]covariances=rng.getValues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java107double[][]covariances=covMatEigenvectors.get(dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java107double[][]covariances=covMatEigenvectors.toArray(dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java107double[][]covariances=covMatEigenvectors.values();
