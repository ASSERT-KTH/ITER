bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
5	[BUG] [BUGGY] return FastMath.pow(2 * FastMath.PI, -dim / 2) * FastMath.pow(covarianceMatrixDeterminant, -0.5) *  getExponentTerm(vals); [FE] AssertionError [CONTEXT] public double density(final double[] vals) throws DimensionMismatchException { final int dim = getDimension(); if (vals.length != dim) { throw new DimensionMismatchException(vals.length, dim); } [BUGGY] return FastMath.pow(2 * FastMath.PI, -dim / 2) *   FastMath.pow(covarianceMatrixDeterminant, -0.5) *      getExponentTerm(vals); [BUGGY] FastMath.pow(covarianceMatrixDeterminant, -0.5) * getExponentTerm(vals); } [CLASS] MultivariateNormalDistribution [METHOD] density [RETURN_TYPE] double  final double[] vals [VARIABLES] boolean double[] covMatEigenvalues evec means vals RealMatrix covarianceMatrix covarianceMatrixInverse samplingMatrix tmpMatrix double covarianceMatrixDeterminant factor int dim  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.7071067811865475	183	185	1	replace	
6	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public double density(final double[] vals) throws DimensionMismatchException { final int dim = getDimension(); if (vals.length != dim) { throw new DimensionMismatchException(vals.length, dim); } [BUGGY] [BUGGY] return FastMath.pow(2 * FastMath.PI, -dim / 2) *   FastMath.pow(covarianceMatrixDeterminant, -0.5) *      getExponentTerm(vals); FastMath.pow(covarianceMatrixDeterminant, -0.5) * getExponentTerm(vals); } [CLASS] MultivariateNormalDistribution [METHOD] density [RETURN_TYPE] double  final double[] vals [VARIABLES] boolean double[] covMatEigenvalues evec means vals RealMatrix covarianceMatrix covarianceMatrixInverse samplingMatrix tmpMatrix double covarianceMatrixDeterminant factor int dim  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.7071067811865475	183	185	1	add	
