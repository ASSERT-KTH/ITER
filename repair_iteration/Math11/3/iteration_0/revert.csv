projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java183returnFastMath.pow(2*FastMath.PI,-dim/2)*FastMath.pow(covarianceMatrixDeterminant,-0.5)*getExponentTerm(vals);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java183returnFastMath.pow(2*FastMath.PI,-dim/2)*FastMath.pow(vals,-0.5)*getExponentTerm(vals);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java183returnFastMath.pow(2*FastMath.PI,dim/2)*FastMath.pow(vals,-0.5)*getExponentTerm(vals);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java183
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java183double[]vals=getDimension();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java183double[]dim=getDimension();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java183double[]covarianceMatrixDeterminant=getDimension();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java183returnFastMath.pow(1*FastMath.PI,-dim/2)*FastMath.pow(covarianceMatrixDeterminant,-0.5)*getExponentTerm(vals);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java183doubledim=getDimension();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java183doubledest=getDimension();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java183double[]covarianceMatrixValues=getDimension();
