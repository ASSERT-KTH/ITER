projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164RealMatrix<?>[]means=getMatEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164RealMatrix<?>[]means=getMeans();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164double[]means=getMeans();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164returnMathArrays.copyOf(means);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164returnMathArrays.copyOf(covMatEigenvalues);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164returnMathArrays.copyOf(evec);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164returnMathArrays.copyOfMeans(covMatEigenvalues);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164double[]means=newdouble[MatrixDeterminant.doubleValue()];
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164double[]means=newdouble[MatrixDeterminant.getMeans()];
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164double[]means=newdouble[MatEigenvalues.size()];
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164double[]means=newdouble[MatEigenvalues.length];
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164returnMathArrays.copyOfMeans(this.mean);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164returnMathArrays.copyOf(covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164returnMathArrays.copyOfMeans(this.covMatEigenvalues);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164RealMatrix<?>[]means=getMean();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164returnMathArrays.copyOfMeans(covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164returnMathArrays.copyOfMeans(commMatEigenvalues);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164double[]means=getMean();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164double[]means=newdouble[Meanvalues.size()];
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164double[]means=newdouble[MeanDeterminant.getMeans()];
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164double[]means=newdouble[MatrixDeterminant.doubleValue()+1];
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164ReturnMathArrays.copyOf(covMatEigenvalues);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164double[]means=newdouble[Meanvalues.length];
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164double[]means=getMeans();double[]means=getMeans();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164double[]means=getMeans();Double[]means=getMeans();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164double[]means=getMeans();double[]mean=getMeans();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164double[]means=getEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164double[]means=newdouble[MatrixDeterminant.getMeans()+1];
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164RealMatrix<?>[]means=getMeanEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164returnMathArrays.copyOfMeans(this.meanvalues);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164RealMatrix<?>[]mean=getMatEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164double[]means=getMeanEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164returnMathArrays.copyOfMeans(this.mean,this.covMatEigenvalues);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164returnMathArrays.copyOf(mean);
