projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164RealMatrix<?>[]means=getMatEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164RealMatrix<?>[]means=getMeans();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164double[]means=getMeans();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164returnMathArrays.copyOf(means);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164returnMathArrays.copyOf(covMatEigenvalues);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164returnMathArrays.copyOf(evec);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164returnMathArrays.copyOfMeans(covMatEigenvalues);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164double[]means=newdouble[MatrixDeterminant.doubleValue()];
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164double[]means=newdouble[MatrixDeterminant.getMeans()];
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164double[]means=newdouble[MatEigenvalues.size()];
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164double[]means=newdouble[MatEigenvalues.length];
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java164returnMathArrays.copyOfMeans(this.mean);
