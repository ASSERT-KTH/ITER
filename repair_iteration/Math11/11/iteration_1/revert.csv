projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238returnFastMath.exp(-0.5*sum);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238returnFastMath.exp(-0.5*sum,sum);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238if(sum>0.0){for(inti=0;i<values.length;i++){sum+=values[i]-getMeans()[i];}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238if(sum>0.0){for(inti=0;i<values.length;i++){sum+=values[i]*values[i];}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238if(sum>0.0){for(inti=0;i<values.length;i++){sum+=preMultiplied[i]*values[i];}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238if(sum>0){for(inti=0;i<values.length;i++){sum+=values[i]-getMeans()[i];}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238if(sum>0){for(inti=0;i<values.length;i++){sum+=preMultiplied[i]*centered[i];}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238if(sum>0){for(inti=0;i<values.length;i++){sum+=values[i]*centered[i];}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238returnFastMath.exp(-0.5*sum+centered.length);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238returnFastMath.exp(-0.5*sum+1);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238returnFastMath.exp(-0.5*sum,centered.length);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238if(sum>0.0){for(inti=0;i<preMultiplied.length;i++){sum+=preMultiplied[i]*centered[i];}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238if(sum>0.0){for(inti=0;i<values.length;i++){sum+=values[i]*getMeans()[i];}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238returnFastMath.exp(-0.5*sum+centered.length);centered[i]=Math.max(-0.5*sum+centered.length);returnFastMath.exp(-0.5*sum+centered.length);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238returnFastMath.exp(-0.5*sum+centered.length);centered[i]=Math.max(-0.5*sum+centered.length);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238returnFastMath.exp(-0.5*sum+centered.length);centered[i]=Math.max(-0.5*sum+centered.length,sum);returnFastMath.exp(-0.5*sum+centered.length);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238if(sum>0){sum+=values[i]*centered[i];}else{sum+=values[i]-getMeans()[i];}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238if(sum>0.0){sum+=values[i]*centered[i];}else{sum+=values[i]*centered[i];}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238for(inti=0;i<values.length;i++){sum+=preMultiplied[i]*centered[i];}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238while(values.length>0){for(inti=0;i<values.length;i++){sum+=preMultiplied[i]*centered[i];}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238for(inti=0;i<preMultiplied.length;i++){sum+=preMultiplied[i]*centered[i];}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238returnFastMath.exp(-0.5*sum+1);finalFastMath.exp(-0.5*sum+1);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238returnFastMath.exp(-0.5*sum+1);double[]std=getStd();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238returnFastMath.exp(-0.5*sum+preMultiplied.length);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238for(inti=0;i<preMultiplied.length;i++){sum+=values[i]*centered[i];}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238while(values.length>0){for(inti=0;i<preMultiplied.length;i++){sum+=values[i]*centered[i];}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238for(inti=0;i<values.length;i++){sum+=values[i]-getMeans()[i];}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238for(inti=0;i<preMultiplied.length;i++){sum+=values[i]-getMeans()[i];}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238for(inti=0;i<preMultiplied.length;i++){sum+=values[i]*values[i];}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238for(inti=0;i<values.length;i++){sum+=preMultiplied[i]*values[i];}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238for(inti=0;i<values.length;i++){sum+=values[i]*getMeans()[i];}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238for(inti=0;i<preMultiplied.length;i++){sum+=values[i]*getMeans()[i];}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238for(inti=0;i<preMultiplied.length;i++){sum+=preMultiplied[i]*values[i];}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238returnFastMath.exp(-0.5*sum,preMultiplied[i]);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238returnFastMath.exp(-0.5*sum,preMultiplied[i],sum);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238returnFastMath.exp(-0.5*sum,preMultiplied.length);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238returnFastMath.exp(-0.5*sum,sum,preMultiplied.length);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238returnFastMath.exp(-1.0*sum+1);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238while(values.length>0){for(inti=0;i<values.length;i++){sum+=values[i]-getMeans()[i];}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238while(values.length>0.0){for(inti=0;i<values.length;i++){sum+=values[i]-getMeans()[i];}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238returnFastMath.exp(-0.5*sum/centered.length);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238if(values.length>0.0){for(inti=0;i<values.length;i++){sum+=values[i]*values[i];}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238For(inti=0;i<values.length;i++){sum+=preMultiplied[i]*centered[i];}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238returnFastMath.exp(-0.5*sum+centered.length);doublecentered=getMeans().length;
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238returnFastMath.exp(-0.5*sum+centered.length);doublecentered=getMeans();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238if(sum>0.0){for(inti=0;i<values.length;i++){sum+=preMultiplied[i]*centered[i];}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238for(inti=0;i<values.length;i++){sum+=preMultiplied[i]-getMeans()[i];}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238returnFastMath.exp(-0.5*sum,centered.length,preMultiplied.length);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238if(values.length>0.0){for(inti=0;i<values.length;i++){sum+=preMultiplied[i]*values[i];}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238returnFastMath.exp(-0.5*sum,preMultiplied);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238returnFastMath.exp(-0.5*sum,centered);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238returnFastMath.exp(-0.5*sum+1);if(sum>0){for(finaldouble[]std:values){sum+=std.length;}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238returnFastMath.exp(-0.5*sum+1);if(sum>0.0){for(finaldouble[]std:values){sum+=std.length;}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238returnFastMath.exp(-0.5*sum+1);if(sum>0){for(finaldouble[]std:values){sum+=std;}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238for(inti=0;i<values.length;i++){sum+=preMultiplied[i]*getMeans()[i];}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238while(values.length>0.0){for(inti=0;i<values.length;i++){sum+=values[i]*getMeans()[i];}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238returnFastMath.exp(-0.5*preMultiplied+1);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238returnFastMath.exp(-0.5*sum,centered.length,values.length);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238while(values.length>0){for(inti=0;i<values.length;i++){sum+=values[i]*centered[i];}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238returnFastMath.exp(-0.5*sum+1);double[]std=values.toArray(newdouble[values.length]);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238returnFastMath.exp(-0.5*sum+1);double[]std=getMeans();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238returnFastMath.exp(-0.5*sum+1);double[]std=getMeans().toArray(sum);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238inti=0;i<preMultiplied.length;i++){sum+=preMultiplied[i]*centered[i];}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238returnFastMath.exp(-0.5*sum+centered.length);doublev=FastMath.exp(-0.5*sum+centered.length);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238returnFastMath.exp(-0.5*sum+centered.length);doubleevec=getMeans().length;returnFastMath.exp(-0.5*sum+centered.length);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java238returnFastMath.exp(-0.5*sum+centered.length);doubleevec=getMeans().length;
