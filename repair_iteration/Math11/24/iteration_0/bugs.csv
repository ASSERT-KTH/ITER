bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
47	[BUG] [BUGGY] covarianceMatrixDeterminant = covMatDec.getDeterminant(); [FE] AssertionError [CONTEXT] this.means = MathArrays.copyOf(means); covarianceMatrix = new Array2DRowRealMatrix(covariances);  final EigenDecomposition covMatDec = new EigenDecomposition(covarianceMatrix);  covarianceMatrixInverse = covMatDec.getSolver().getInverse();  [BUGGY] covarianceMatrixDeterminant = covMatDec.getDeterminant(); [BUGGY]   final double[] covMatEigenvalues = covMatDec.getRealEigenvalues(); for (int i = 0; i < covMatEigenvalues.length; i++) { if (covMatEigenvalues[i] < 0) { throw new NonPositiveDefiniteMatrixException(covMatEigenvalues[i], i, 0); } }  [CLASS] MultivariateNormalDistribution [METHOD] <init> [RETURN_TYPE] RandomGenerator,double[],double[][])  RandomGenerator rng final double[] means final double[][] covariances [VARIABLES] EigenDecomposition covMatDec boolean double[] covMatEigenvalues evec means RealMatrix covarianceMatrix covarianceMatrixInverse samplingMatrix tmpMatrix Array2DRowRealMatrix covMatEigenvectors double covarianceMatrixDeterminant factor double[][] covariances RandomGenerator rng int col dim i row v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	127	127	1	replace	
48	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] this.means = MathArrays.copyOf(means); covarianceMatrix = new Array2DRowRealMatrix(covariances);  final EigenDecomposition covMatDec = new EigenDecomposition(covarianceMatrix);  covarianceMatrixInverse = covMatDec.getSolver().getInverse();  [BUGGY] [BUGGY] covarianceMatrixDeterminant = covMatDec.getDeterminant();  final double[] covMatEigenvalues = covMatDec.getRealEigenvalues(); for (int i = 0; i < covMatEigenvalues.length; i++) { if (covMatEigenvalues[i] < 0) { throw new NonPositiveDefiniteMatrixException(covMatEigenvalues[i], i, 0); } }  [CLASS] MultivariateNormalDistribution [METHOD] <init> [RETURN_TYPE] RandomGenerator,double[],double[][])  RandomGenerator rng final double[] means final double[][] covariances [VARIABLES] EigenDecomposition covMatDec boolean double[] covMatEigenvalues evec means RealMatrix covarianceMatrix covarianceMatrixInverse samplingMatrix tmpMatrix Array2DRowRealMatrix covMatEigenvectors double covarianceMatrixDeterminant factor double[][] covariances RandomGenerator rng int col dim i row v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	127	127	1	add	
