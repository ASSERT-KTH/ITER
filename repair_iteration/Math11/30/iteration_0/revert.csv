projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java141
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java141finaldouble[][]covariances=covMatEigenvectors.toArray();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java141double[][]covariances=covMatEigenvectors.toArray();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java141finaldouble[][]covariances=covMatEigenvectors.getColumns();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java141finaldouble[]evec=covMatDec.getEigenvector(v).toArray();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java141finaldouble[]evec=covMatEigenvectors.getEigenvector(v).toArray();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java141finaldouble[][]covariances=FastMath.sqrt(covMatEigenvalues[v]);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java141double[][]covariances=FastMath.sqrt(covMatEigenvalues[v]);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java141finaldouble[][]covariances=FastMath.sqrt(covMatEigenvalues[v].toArray());
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java141double[][]covariances=FastMath.sqrt(covMatEigenvalues[v].toArray());
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java141v=FastMath.sqrt(covMatEigenvalues[v].toArray());
