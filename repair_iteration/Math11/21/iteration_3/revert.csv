projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119double[][]covariances=rng.getMatEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119double[][]covariances=rng.getRowMatEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119intcol=this.samples.length;
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119covarianceMatrix=newArray2DRowRealMatrix(covariances);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119covarianceMatrix=newArray2DRowRealMatrix(dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119covarianceMatrix=newArray2DRowRealMatrix(covariances,this.mean);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119double[][]covariances=rng.getEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119double[][]covariances=rng.getVariances();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119if(dim!=covariances[i].length){for(inti=0;i<dim;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119if(dim!=covariances[i].length){for(inti=0;i<dim;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,dim);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119if(dim!=covariances[i].length){for(inti=0;i<dim;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,col);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119double[][]covariances=rng.getColumnMatEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119double[][]covariances=this.rng.getEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119covarianceMatrix=newArray2DRowRealMatrix(covariances,dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119double[][]covariances=this.rng.getMatEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(inti=0;i<dim;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,dim);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(intdim=0;dim<covariances.length;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,dim);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119double[][]covariances=this.rng.getVariances();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119covarianceMatrix=newArray2DRowRealMatrix(dim,this.mean);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119covarianceMatrix=newArray2DRowRealMatrix(this.mean,covariances);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(inti=0;i<dim;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(intdim=0;dim<covariances.length;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119intcol=this.samples.length-1;
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(inti=0;i<dim;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,col);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(intdim=0;dim<covariances.length;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,col);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119if(covariances!=null){if(dim!=covariances[i].length){for(intdim=0;i<dim;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119double[][]covariances=rng.getVariants();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119covarianceMatrix=newArray2DRowRealMatrix(covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(intdim=0;dim<covariances.length;i++){if(dim>=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,col);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(intdim=0;dim<covariances.length;i++){if(dim>=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,dim);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119double[][]covariances=dim.getMatEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119double[][]covariances=dim.getEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119double[][]covariances=dim.getVariances();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119if(covariances!=null){for(intdim=0;i<dim;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119if(covariances!=null){for(intdim=0;i<dim;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(intdim=0;dim<this.means.size();i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,dim);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(inti=0;i<covariances.length;i++){if(dim>=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,col);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(inti=0;i<covariances.length;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,col);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119double[][]covariances=this.dim.getEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119covarianceMatrix=newArray2DRowRealMatrix(this.mean,dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119covarianceMatrix=newArray2DRowRealMatrix(covarianceMatrix,this.mean);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(inti=0;i<covariances.length;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(inti=0;i<covariances.length;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(intdim=0;dim<this.means.length;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119intcol=this.samples.length-2;
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(inti=0;i<this.samples.length;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(inti=0;i<this.means.length;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(inti=0;i<this.means.size();i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,dim);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119covarianceMatrix=newArray2DRowRealMatrix(dim,covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(intdim=0;dim<this.covariances.length;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,col);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(inti=0;i<covariances.length;i++){if(dim>=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,dim);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(inti=0;i<covariances.length;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,dim);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(intdim=0;dim<this.covariances.length;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,dim);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(intdim=0;dim<covariances.length;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(intdim=0;dim<this.means.length;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119double[][]covariances=this.rng.getVariants();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119covarianceMatrix=newArray2DRowRealMatrix(dim,covariances);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119covarianceMatrix=newArray2DRowRealMatrix(covariances,this.dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(inti=0;i<this.means.length;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,dim);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(inti=0;i<this.samples.length;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,dim);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119double[][]covariances=this.rng.getColumnMatEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119double[][]covariances=this.dim.getVariances();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119double[][]covariances=this.dim.getMatEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(inti=0;i<this.row;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,col);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(inti=0;i<this.samples.length;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,col);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119Array2DRowRealMatrix=newArray2DRowRealMatrix(covariances);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119Array2DRowRealMatrix(covariances);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119if(covariances==null){if(dim!=covariances[i].length){for(intdim=0;i<dim;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(intdim=0;dim<this.covariances.length;i++){if(dim>=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,dim);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(intdim=0;dim<this.covariances.length;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119CovarianceMatrixcovarianceMatrix=newArray2DRowRealMatrix(dim,covariances);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(inti=0;i<this.row;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(inti=0;i<this.column;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(intdim=0;dim<this.covariances.length;i++){if(dim>=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,col);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(intdim=0;dim<this.meanvalues.size();i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,dim);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119covarianceMatrix=newArray2DRowRealMatrix(covarianceMatrix,factor);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119covarianceMatrix=newArray2DRowRealMatrix(covarianceMatrixInverse);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119Array2DRowRealMatrix<RealMatrix>covarianceMatrix=newArray2DRowRealMatrix(covariances);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119Array2DRowRealMatrix<double[]>covariances=newArray2DRowRealMatrix(covariances);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(inti=0;i<this.row;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,dim);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(inti=0;i<this.column;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,dim);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119covarianceMatrix=newArray2DRowRealMatrix(this.mean,covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119covarianceMatrix=newArray2DRowRealMatrix(this.mean,this.covariances);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(inti=0;dim<this.means.size();i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,dim);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(inti=0;dim<covariances.length;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,dim);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(inti=0;dim<covariances.length;i++){if(dim>=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,dim);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(intdim=0;i<dim;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(intdim=0;i<dim;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,dim);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119if(covarianceMatrix!=null){if(dim!=covariances[i].length){for(intdim=0;i<dim;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119if(covarianceMatrix!=null){if(dim!=covariances[i].length){for(intdim=0;i<dim;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(co
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(inti=0;i<this.col;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,dim);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119covarianceMatrix=newArray2DRowRealMatrix(covariances,dim,factor);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(inti=0;dim<covariances.length;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,col);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(inti=0;i<this.col;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java119for(inti=0;dim<covariances.length;i++){if(dim>=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,col);}
