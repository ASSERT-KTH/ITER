bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this(null,  means,  covariances,  null,  covariances);  [CE]  no  suitable  constructor  found  for  MultivariateNormalDistribution(<null>,double[],double[][],<null>,double[][])  [FE]              AssertionError      [CONTEXT]      public  MultivariateNormalDistribution(final  double[]  means,  final  double[][]  covariances)  throws  SingularMatrixException,  DimensionMismatchException,  NonPositiveDefiniteMatrixException  {      [BUGGY]  this(null,  means,  covariances,  null,  covariances);  [BUGGY]      this(new  Well19937c(),  means,  covariances);  }  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  MultivariateNormalDistribution(double[],double[][])  final  double[]  means  final  double[][]  covariances  [VARIABLES]  double[][]  covariances  boolean  double[]  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  double  covarianceMatrixDeterminant  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	76	76	1	replace	this(null,  means,  covariances,  null,  covariances);	  this(null,    means,    covariances,    null);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultivariateNormalDistribution(<null>,double[],double[][],<null>,double[][])	3	None	replace
2	[BUG]  [BUGGY]  this(null,  means,  null,  covariances,  null);  [CE]  no  suitable  constructor  found  for  MultivariateNormalDistribution(<null>,double[],<null>,double[][],<null>)  [FE]                AssertionError      [CONTEXT]      public  MultivariateNormalDistribution(final  double[]  means,  final  double[][]  covariances)  throws  SingularMatrixException,  DimensionMismatchException,  NonPositiveDefiniteMatrixException  {      [BUGGY]  this(null,  means,  null,  covariances,  null);  [BUGGY]      this(new  Well19937c(),  means,  covariances);  }  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  MultivariateNormalDistribution(double[],double[][])  final  double[]  means  final  double[][]  covariances  [VARIABLES]  double[][]  covariances  boolean  double[]  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  double  covarianceMatrixDeterminant  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	76	76	1	replace	this(null,  means,  null,  covariances,  null);	  this(null,    means,    null,    covariances);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultivariateNormalDistribution(<null>,double[],<null>,double[][],<null>)	12	None	replace
3	[BUG]  [BUGGY]  this(null,  null,  means,  covariances,  null);  [CE]  no  suitable  constructor  found  for  MultivariateNormalDistribution(<null>,<null>,double[],double[][],<null>)  [FE]                  AssertionError      [CONTEXT]      public  MultivariateNormalDistribution(final  double[]  means,  final  double[][]  covariances)  throws  SingularMatrixException,  DimensionMismatchException,  NonPositiveDefiniteMatrixException  {      [BUGGY]  this(null,  null,  means,  covariances,  null);  [BUGGY]      this(new  Well19937c(),  means,  covariances);  }  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  MultivariateNormalDistribution(double[],double[][])  final  double[]  means  final  double[][]  covariances  [VARIABLES]  double[][]  covariances  boolean  double[]  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  double  covarianceMatrixDeterminant  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	76	76	1	replace	this(null,  null,  means,  covariances,  null);	  this(null,    null,    means,    covariances);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultivariateNormalDistribution(<null>,<null>,double[],double[][],<null>)	2	None	replace
4	[BUG]  [BUGGY]  this(mean,  null,  means,  covariances);  [CE]  cannot  find  symbol  mean  [FE]                    AssertionError      [CONTEXT]      public  MultivariateNormalDistribution(final  double[]  means,  final  double[][]  covariances)  throws  SingularMatrixException,  DimensionMismatchException,  NonPositiveDefiniteMatrixException  {      [BUGGY]  this(mean,  null,  means,  covariances);  [BUGGY]      this(new  Well19937c(),  means,  covariances);  }  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  MultivariateNormalDistribution(double[],double[][])  final  double[]  means  final  double[][]  covariances  [VARIABLES]  double[][]  covariances  boolean  double[]  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  double  covarianceMatrixDeterminant  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	76	76	1	replace	this(mean,  null,  means,  covariances);	  this(null,    null,    means,    covariances);    	non-compiled	[CE]  cannot  find  symbol  mean	2	None	replace
5	[BUG]  [BUGGY]  this(new  Well19937c(),  means,  covariances,  null,  covariances,  0,  covariances.length);  [CE]  no  suitable  constructor  found  for  MultivariateNormalDistribution(Well19937c,double[],double[][],<null>,double[][],int,int)  [FE]              AssertionError      [CONTEXT]      public  MultivariateNormalDistribution(final  double[]  means,  final  double[][]  covariances)  throws  SingularMatrixException,  DimensionMismatchException,  NonPositiveDefiniteMatrixException  {      [BUGGY]  this(new  Well19937c(),  means,  covariances,  null,  covariances,  0,  covariances.length);  [BUGGY]      }  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  MultivariateNormalDistribution(double[],double[][])  final  double[]  means  final  double[][]  covariances  [VARIABLES]  double[][]  covariances  boolean  double[]  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  double  covarianceMatrixDeterminant  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	76	76	1	replace	this(new  Well19937c(),  means,  covariances,  null,  covariances,  0,  covariances.length);	  this(new    Well19937c(),    means,    covariances,    null,    covariances.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultivariateNormalDistribution(Well19937c,double[],double[][],<null>,double[][],int,int)	7	None	replace
6	[BUG]  [BUGGY]  this(new  Well19937c(),  means,  covariances,  null,  covariances,  null);  [CE]  no  suitable  constructor  found  for  MultivariateNormalDistribution(Well19937c,double[],double[][],<null>,double[][],<null>)  [FE]                AssertionError      [CONTEXT]      public  MultivariateNormalDistribution(final  double[]  means,  final  double[][]  covariances)  throws  SingularMatrixException,  DimensionMismatchException,  NonPositiveDefiniteMatrixException  {      [BUGGY]  this(new  Well19937c(),  means,  covariances,  null,  covariances,  null);  [BUGGY]      }  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  MultivariateNormalDistribution(double[],double[][])  final  double[]  means  final  double[][]  covariances  [VARIABLES]  double[][]  covariances  boolean  double[]  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  double  covarianceMatrixDeterminant  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	76	76	1	replace	this(new  Well19937c(),  means,  covariances,  null,  covariances,  null);	  this(new    Well19937c(),    means,    covariances,    null,    covariances.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultivariateNormalDistribution(Well19937c,double[],double[][],<null>,double[][],<null>)	7	None	replace
7	[BUG]  [BUGGY]  this(new  Well19937c(),  means,  covariances,  true);  [CE]  no  suitable  constructor  found  for  MultivariateNormalDistribution(Well19937c,double[],double[][],boolean)  [FE]            AssertionError      [CONTEXT]      public  MultivariateNormalDistribution(final  double[]  means,  final  double[][]  covariances)  throws  SingularMatrixException,  DimensionMismatchException,  NonPositiveDefiniteMatrixException  {      [BUGGY]  this(new  Well19937c(),  means,  covariances,  true);  [BUGGY]      this(new  Well19937c(),  means,  covariances);  }  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  MultivariateNormalDistribution(double[],double[][])  final  double[]  means  final  double[][]  covariances  [VARIABLES]  double[][]  covariances  boolean  double[]  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  double  covarianceMatrixDeterminant  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	76	76	1	replace	this(new  Well19937c(),  means,  covariances,  true);	  this(new    Well19937c(),    means,    covariances,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultivariateNormalDistribution(Well19937c,double[],double[][],boolean)	5	None	replace
8	[BUG]  [BUGGY]  this(new  Well19937c(),  means,  covariances,  false,  covarianceMatrixDeterminant);  [CE]  cannot  reference  covarianceMatrixDeterminant  before  supertype  constructor  has  been  called  [FE]              AssertionError      [CONTEXT]      public  MultivariateNormalDistribution(final  double[]  means,  final  double[][]  covariances)  throws  SingularMatrixException,  DimensionMismatchException,  NonPositiveDefiniteMatrixException  {      [BUGGY]  this(new  Well19937c(),  means,  covariances,  false,  covarianceMatrixDeterminant);  [BUGGY]      this(new  Well19937c(),  means,  covariances);  }  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  MultivariateNormalDistribution(double[],double[][])  final  double[]  means  final  double[][]  covariances  [VARIABLES]  double[][]  covariances  boolean  double[]  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  double  covarianceMatrixDeterminant  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	76	76	1	replace	this(new  Well19937c(),  means,  covariances,  false,  covarianceMatrixDeterminant);	  this(new    Well19937c(),    means,    covariances,    false);    	non-compiled	[CE]  cannot  reference  covarianceMatrixDeterminant  before  supertype  constructor  has  been  called	5	None	replace
9	[BUG]  [BUGGY]  this(new  Well2001c(),  means,  covariances,  covarianceMatrixInverse);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  MultivariateNormalDistribution(final  double[]  means,  final  double[][]  covariances)  throws  SingularMatrixException,  DimensionMismatchException,  NonPositiveDefiniteMatrixException  {      [BUGGY]  this(new  Well2001c(),  means,  covariances,  covarianceMatrixInverse);  [BUGGY]      }  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  MultivariateNormalDistribution(double[],double[][])  final  double[]  means  final  double[][]  covariances  [VARIABLES]  double[][]  covariances  boolean  double[]  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  double  covarianceMatrixDeterminant  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	76	76	1	replace	this(new  Well2001c(),  means,  covariances,  covarianceMatrixInverse);	  this(new    Well2001c(),    means,    covariances,    covarianceMatrix);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
10	[BUG]  [BUGGY]  this(new  Well2001c(),  means,  covariances,  samplingMatrix);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  MultivariateNormalDistribution(final  double[]  means,  final  double[][]  covariances)  throws  SingularMatrixException,  DimensionMismatchException,  NonPositiveDefiniteMatrixException  {      [BUGGY]  this(new  Well2001c(),  means,  covariances,  samplingMatrix);  [BUGGY]      }  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  MultivariateNormalDistribution(double[],double[][])  final  double[]  means  final  double[][]  covariances  [VARIABLES]  double[][]  covariances  boolean  double[]  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  double  covarianceMatrixDeterminant  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	76	76	1	replace	this(new  Well2001c(),  means,  covariances,  samplingMatrix);	  this(new    Well2001c(),    means,    covariances,    covarianceMatrix);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
11	[BUG]  [BUGGY]  this(null,  means,  covariances,  true);  [CE]  no  suitable  constructor  found  for  MultivariateNormalDistribution(<null>,double[],double[][],boolean)  [FE]              AssertionError      [CONTEXT]      public  MultivariateNormalDistribution(final  double[]  means,  final  double[][]  covariances)  throws  SingularMatrixException,  DimensionMismatchException,  NonPositiveDefiniteMatrixException  {      [BUGGY]  this(null,  means,  covariances,  true);  [BUGGY]      this(new  Well19937c(),  means,  covariances);  }  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  MultivariateNormalDistribution(double[],double[][])  final  double[]  means  final  double[][]  covariances  [VARIABLES]  double[][]  covariances  boolean  double[]  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  double  covarianceMatrixDeterminant  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	76	76	1	replace	this(null,  means,  covariances,  true);	  this(null,    means,    covariances,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultivariateNormalDistribution(<null>,double[],double[][],boolean)	13	None	replace
12	[BUG]  [BUGGY]  this(null,  means,  covariances,  null,  false);  [CE]  no  suitable  constructor  found  for  MultivariateNormalDistribution(<null>,double[],double[][],<null>,boolean)  [FE]                AssertionError      [CONTEXT]      public  MultivariateNormalDistribution(final  double[]  means,  final  double[][]  covariances)  throws  SingularMatrixException,  DimensionMismatchException,  NonPositiveDefiniteMatrixException  {      [BUGGY]  this(null,  means,  covariances,  null,  false);  [BUGGY]      this(new  Well19937c(),  means,  covariances);  }  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  MultivariateNormalDistribution(double[],double[][])  final  double[]  means  final  double[][]  covariances  [VARIABLES]  double[][]  covariances  boolean  double[]  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  double  covarianceMatrixDeterminant  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	76	76	1	replace	this(null,  means,  covariances,  null,  false);	  this(null,    means,    covariances,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultivariateNormalDistribution(<null>,double[],double[][],<null>,boolean)	13	None	replace
13	[BUG]  [BUGGY]  this(new  Well19937c(),  means,  covariances,  determinant);  [CE]  cannot  find  symbol  determinant  [FE]            AssertionError      [CONTEXT]      public  MultivariateNormalDistribution(final  double[]  means,  final  double[][]  covariances)  throws  SingularMatrixException,  DimensionMismatchException,  NonPositiveDefiniteMatrixException  {      [BUGGY]  this(new  Well19937c(),  means,  covariances,  determinant);  [BUGGY]      this(new  Well19937c(),  means,  covariances);  }  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  MultivariateNormalDistribution(double[],double[][])  final  double[]  means  final  double[][]  covariances  [VARIABLES]  double[][]  covariances  boolean  double[]  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  double  covarianceMatrixDeterminant  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	76	76	1	replace	this(new  Well19937c(),  means,  covariances,  determinant);	  this(new    Well19937c(),    means,    covariances,    samplingMatrix);    	non-compiled	[CE]  cannot  find  symbol  determinant	14	None	replace
14	[BUG]  [BUGGY]  this(new  Well2001c(),  means,  covariances,  null,  covariances);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  MultivariateNormalDistribution(final  double[]  means,  final  double[][]  covariances)  throws  SingularMatrixException,  DimensionMismatchException,  NonPositiveDefiniteMatrixException  {      [BUGGY]  this(new  Well2001c(),  means,  covariances,  null,  covariances);  [BUGGY]      }  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  MultivariateNormalDistribution(double[],double[][])  final  double[]  means  final  double[][]  covariances  [VARIABLES]  double[][]  covariances  boolean  double[]  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  double  covarianceMatrixDeterminant  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	76	76	1	replace	this(new  Well2001c(),  means,  covariances,  null,  covariances);	  this(new    Well2001c(),    means,    covariances,    null);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
15	[BUG]  [BUGGY]  this(new  Well2001c(),  means,  covariances,  null,  covariances.length);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  MultivariateNormalDistribution(final  double[]  means,  final  double[][]  covariances)  throws  SingularMatrixException,  DimensionMismatchException,  NonPositiveDefiniteMatrixException  {      [BUGGY]  this(new  Well2001c(),  means,  covariances,  null,  covariances.length);  [BUGGY]      }  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  MultivariateNormalDistribution(double[],double[][])  final  double[]  means  final  double[][]  covariances  [VARIABLES]  double[][]  covariances  boolean  double[]  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  double  covarianceMatrixDeterminant  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	76	76	1	replace	this(new  Well2001c(),  means,  covariances,  null,  covariances.length);	  this(new    Well2001c(),    means,    covariances,    null);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
16	[BUG]  [BUGGY]  this(new  Well19937c(),  means,  covariances,  null,  covarianceMatrixInverse);  [CE]  cannot  reference  covarianceMatrixInverse  before  supertype  constructor  has  been  called  [FE]            AssertionError      [CONTEXT]      public  MultivariateNormalDistribution(final  double[]  means,  final  double[][]  covariances)  throws  SingularMatrixException,  DimensionMismatchException,  NonPositiveDefiniteMatrixException  {      [BUGGY]  this(new  Well19937c(),  means,  covariances,  null,  covarianceMatrixInverse);  [BUGGY]      }  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  MultivariateNormalDistribution(double[],double[][])  final  double[]  means  final  double[][]  covariances  [VARIABLES]  double[][]  covariances  boolean  double[]  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  double  covarianceMatrixDeterminant  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	76	76	1	replace	this(new  Well19937c(),  means,  covariances,  null,  covarianceMatrixInverse);	  this(new    Well19937c(),    means,    covariances,    null,    covarianceMatrixDeterminant);    	non-compiled	[CE]  cannot  reference  covarianceMatrixInverse  before  supertype  constructor  has  been  called	10	None	replace
17	[BUG]  [BUGGY]  this(new  Well2001c(),  means,  covariances,  true);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  MultivariateNormalDistribution(final  double[]  means,  final  double[][]  covariances)  throws  SingularMatrixException,  DimensionMismatchException,  NonPositiveDefiniteMatrixException  {      [BUGGY]  this(new  Well2001c(),  means,  covariances,  true);  [BUGGY]      }  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  MultivariateNormalDistribution(double[],double[][])  final  double[]  means  final  double[][]  covariances  [VARIABLES]  double[][]  covariances  boolean  double[]  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  double  covarianceMatrixDeterminant  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	76	76	1	replace	this(new  Well2001c(),  means,  covariances,  true);	  this(new    Well2001c(),    means,    covariances,    false);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
18	[BUG]  [BUGGY]  this(new  Well2001c(),  means,  covariances,  false,  covarianceMatrixInverse);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  MultivariateNormalDistribution(final  double[]  means,  final  double[][]  covariances)  throws  SingularMatrixException,  DimensionMismatchException,  NonPositiveDefiniteMatrixException  {      [BUGGY]  this(new  Well2001c(),  means,  covariances,  false,  covarianceMatrixInverse);  [BUGGY]      }  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  MultivariateNormalDistribution(double[],double[][])  final  double[]  means  final  double[][]  covariances  [VARIABLES]  double[][]  covariances  boolean  double[]  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  double  covarianceMatrixDeterminant  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	76	76	1	replace	this(new  Well2001c(),  means,  covariances,  false,  covarianceMatrixInverse);	  this(new    Well2001c(),    means,    covariances,    false);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
19	[BUG]  [BUGGY]  this(new  Well19937c(),  means,  covariances,  null,  covariances,  false);  [CE]  no  suitable  constructor  found  for  MultivariateNormalDistribution(Well19937c,double[],double[][],<null>,double[][],boolean)  [FE]            AssertionError      [CONTEXT]      public  MultivariateNormalDistribution(final  double[]  means,  final  double[][]  covariances)  throws  SingularMatrixException,  DimensionMismatchException,  NonPositiveDefiniteMatrixException  {      [BUGGY]  this(new  Well19937c(),  means,  covariances,  null,  covariances,  false);  [BUGGY]      }  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  MultivariateNormalDistribution(double[],double[][])  final  double[]  means  final  double[][]  covariances  [VARIABLES]  double[][]  covariances  boolean  double[]  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  double  covarianceMatrixDeterminant  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	76	76	1	replace	this(new  Well19937c(),  means,  covariances,  null,  covariances,  false);	  this(new    Well19937c(),    means,    covariances,    null,    covariances);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultivariateNormalDistribution(Well19937c,double[],double[][],<null>,double[][],boolean)	6	None	replace
20	[BUG]  [BUGGY]  this(new  Well2001c(),  means,  covariances,  null,  covarianceMatrixDeterminant);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  MultivariateNormalDistribution(final  double[]  means,  final  double[][]  covariances)  throws  SingularMatrixException,  DimensionMismatchException,  NonPositiveDefiniteMatrixException  {      [BUGGY]  this(new  Well2001c(),  means,  covariances,  null,  covarianceMatrixDeterminant);  [BUGGY]      }  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  MultivariateNormalDistribution(double[],double[][])  final  double[]  means  final  double[][]  covariances  [VARIABLES]  double[][]  covariances  boolean  double[]  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  double  covarianceMatrixDeterminant  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	76	76	1	replace	this(new  Well2001c(),  means,  covariances,  null,  covarianceMatrixDeterminant);	  this(new    Well2001c(),    means,    covariances,    null);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
21	[BUG]  [BUGGY]  this(null,  means,  covariances,  null,  covarianceMatrixDeterminant);  [CE]  cannot  reference  covarianceMatrixDeterminant  before  supertype  constructor  has  been  called  [FE]              AssertionError      [CONTEXT]      public  MultivariateNormalDistribution(final  double[]  means,  final  double[][]  covariances)  throws  SingularMatrixException,  DimensionMismatchException,  NonPositiveDefiniteMatrixException  {      [BUGGY]  this(null,  means,  covariances,  null,  covarianceMatrixDeterminant);  [BUGGY]      this(new  Well19937c(),  means,  covariances);  }  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  MultivariateNormalDistribution(double[],double[][])  final  double[]  means  final  double[][]  covariances  [VARIABLES]  double[][]  covariances  boolean  double[]  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  double  covarianceMatrixDeterminant  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	76	76	1	replace	this(null,  means,  covariances,  null,  covarianceMatrixDeterminant);	  this(null,    means,    covariances,    null);    	non-compiled	[CE]  cannot  reference  covarianceMatrixDeterminant  before  supertype  constructor  has  been  called	3	None	replace
22	[BUG]  [BUGGY]  this(new  Well19937c(),  means,  covariances,  null,  covariances.length,  covarianceMatrix);  [CE]  cannot  reference  covarianceMatrix  before  supertype  constructor  has  been  called  [FE]              AssertionError      [CONTEXT]      public  MultivariateNormalDistribution(final  double[]  means,  final  double[][]  covariances)  throws  SingularMatrixException,  DimensionMismatchException,  NonPositiveDefiniteMatrixException  {      [BUGGY]  this(new  Well19937c(),  means,  covariances,  null,  covariances.length,  covarianceMatrix);  [BUGGY]      }  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  MultivariateNormalDistribution(double[],double[][])  final  double[]  means  final  double[][]  covariances  [VARIABLES]  double[][]  covariances  boolean  double[]  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  double  covarianceMatrixDeterminant  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	76	76	1	replace	this(new  Well19937c(),  means,  covariances,  null,  covariances.length,  covarianceMatrix);	  this(new    Well19937c(),    means,    covariances,    null,    covariances.length);    	non-compiled	[CE]  cannot  reference  covarianceMatrix  before  supertype  constructor  has  been  called	7	None	replace
23	[BUG]  [BUGGY]  this(new  Well2001c(),  means,  covariances,  0,  covarianceMatrix);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  MultivariateNormalDistribution(final  double[]  means,  final  double[][]  covariances)  throws  SingularMatrixException,  DimensionMismatchException,  NonPositiveDefiniteMatrixException  {      [BUGGY]  this(new  Well2001c(),  means,  covariances,  0,  covarianceMatrix);  [BUGGY]      }  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  MultivariateNormalDistribution(double[],double[][])  final  double[]  means  final  double[][]  covariances  [VARIABLES]  double[][]  covariances  boolean  double[]  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  double  covarianceMatrixDeterminant  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	76	76	1	replace	this(new  Well2001c(),  means,  covariances,  0,  covarianceMatrix);	  this(new    Well2001c(),    means,    covariances,    covarianceMatrix);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
24	[BUG]  [BUGGY]  this(new  Well2001c(),  means,  covariances,  false,  covarianceMatrixDeterminant);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  MultivariateNormalDistribution(final  double[]  means,  final  double[][]  covariances)  throws  SingularMatrixException,  DimensionMismatchException,  NonPositiveDefiniteMatrixException  {      [BUGGY]  this(new  Well2001c(),  means,  covariances,  false,  covarianceMatrixDeterminant);  [BUGGY]      }  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  MultivariateNormalDistribution(double[],double[][])  final  double[]  means  final  double[][]  covariances  [VARIABLES]  double[][]  covariances  boolean  double[]  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  double  covarianceMatrixDeterminant  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	76	76	1	replace	this(new  Well2001c(),  means,  covariances,  false,  covarianceMatrixDeterminant);	  this(new    Well2001c(),    means,    covariances,    false);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
25	[BUG]  [BUGGY]  this(null,  means,  covariances,  false,  covarianceMatrixDeterminant);  [CE]  cannot  reference  covarianceMatrixDeterminant  before  supertype  constructor  has  been  called  [FE]              AssertionError      [CONTEXT]      public  MultivariateNormalDistribution(final  double[]  means,  final  double[][]  covariances)  throws  SingularMatrixException,  DimensionMismatchException,  NonPositiveDefiniteMatrixException  {      [BUGGY]  this(null,  means,  covariances,  false,  covarianceMatrixDeterminant);  [BUGGY]      this(new  Well19937c(),  means,  covariances);  }  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  MultivariateNormalDistribution(double[],double[][])  final  double[]  means  final  double[][]  covariances  [VARIABLES]  double[][]  covariances  boolean  double[]  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  double  covarianceMatrixDeterminant  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	76	76	1	replace	this(null,  means,  covariances,  false,  covarianceMatrixDeterminant);	  this(null,    means,    covariances,    false);    	non-compiled	[CE]  cannot  reference  covarianceMatrixDeterminant  before  supertype  constructor  has  been  called	13	None	replace
26	[BUG]  [BUGGY]  this(null,  means,  covariances,  null,  covariances.length);  [CE]  no  suitable  constructor  found  for  MultivariateNormalDistribution(<null>,double[],double[][],<null>,int)  [FE]              AssertionError      [CONTEXT]      public  MultivariateNormalDistribution(final  double[]  means,  final  double[][]  covariances)  throws  SingularMatrixException,  DimensionMismatchException,  NonPositiveDefiniteMatrixException  {      [BUGGY]  this(null,  means,  covariances,  null,  covariances.length);  [BUGGY]      this(new  Well19937c(),  means,  covariances);  }  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  MultivariateNormalDistribution(double[],double[][])  final  double[]  means  final  double[][]  covariances  [VARIABLES]  double[][]  covariances  boolean  double[]  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  double  covarianceMatrixDeterminant  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	76	76	1	replace	this(null,  means,  covariances,  null,  covariances.length);	  this(null,    means,    covariances,    null);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultivariateNormalDistribution(<null>,double[],double[][],<null>,int)	3	None	replace
27	[BUG]  [BUGGY]  this(new  Well2001c(),  means,  covariances,  covarianceMatrixDeterminant);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  MultivariateNormalDistribution(final  double[]  means,  final  double[][]  covariances)  throws  SingularMatrixException,  DimensionMismatchException,  NonPositiveDefiniteMatrixException  {      [BUGGY]  this(new  Well2001c(),  means,  covariances,  covarianceMatrixDeterminant);  [BUGGY]      }  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  MultivariateNormalDistribution(double[],double[][])  final  double[]  means  final  double[][]  covariances  [VARIABLES]  double[][]  covariances  boolean  double[]  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  double  covarianceMatrixDeterminant  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	76	76	1	replace	this(new  Well2001c(),  means,  covariances,  covarianceMatrixDeterminant);	  this(new    Well2001c(),    means,    covariances,    covarianceMatrix);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
28	[BUG]  [BUGGY]  this(new  Well19937c(),  means,  covariances,  null,  covariances,  samplingMatrix);  [CE]  cannot  reference  samplingMatrix  before  supertype  constructor  has  been  called  [FE]            AssertionError      [CONTEXT]      public  MultivariateNormalDistribution(final  double[]  means,  final  double[][]  covariances)  throws  SingularMatrixException,  DimensionMismatchException,  NonPositiveDefiniteMatrixException  {      [BUGGY]  this(new  Well19937c(),  means,  covariances,  null,  covariances,  samplingMatrix);  [BUGGY]      }  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  MultivariateNormalDistribution(double[],double[][])  final  double[]  means  final  double[][]  covariances  [VARIABLES]  double[][]  covariances  boolean  double[]  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  double  covarianceMatrixDeterminant  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	76	76	1	replace	this(new  Well19937c(),  means,  covariances,  null,  covariances,  samplingMatrix);	  this(new    Well19937c(),    means,    covariances,    null,    covariances);    	non-compiled	[CE]  cannot  reference  samplingMatrix  before  supertype  constructor  has  been  called	6	None	replace
29	[BUG]  [BUGGY]  this(new  Well19937c(),  means,  covariances,  null,  covariances.length,  covariances.length);  [CE]  no  suitable  constructor  found  for  MultivariateNormalDistribution(Well19937c,double[],double[][],<null>,int,int)  [FE]              AssertionError      [CONTEXT]      public  MultivariateNormalDistribution(final  double[]  means,  final  double[][]  covariances)  throws  SingularMatrixException,  DimensionMismatchException,  NonPositiveDefiniteMatrixException  {      [BUGGY]  this(new  Well19937c(),  means,  covariances,  null,  covariances.length,  covariances.length);  [BUGGY]      }  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  MultivariateNormalDistribution(double[],double[][])  final  double[]  means  final  double[][]  covariances  [VARIABLES]  double[][]  covariances  boolean  double[]  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  double  covarianceMatrixDeterminant  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	76	76	1	replace	this(new  Well19937c(),  means,  covariances,  null,  covariances.length,  covariances.length);	  this(new    Well19937c(),    means,    covariances,    null,    covariances.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultivariateNormalDistribution(Well19937c,double[],double[][],<null>,int,int)	7	None	replace
