projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java150
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java150double[][]covariances=FastMath.sqrt(covMatEigenvalues[row]);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java150double[][]covariances=FastMath.sqrt(covariances[row]);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java150tmpMatrix.multiplyEntry(row,col,factor);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java150for(intcol=0;col<dim;col++){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java150for(intcol=0;col<factor;col++){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java150doublefactor=FastMath.sqrt(covarianceMatrix[row]);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java150for(intcol=0;col<factor.length;col++){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java150Array2DRowRealMatrixtmpMatrix=FastMath.sqrt(covMatEigenvalues[row]);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java150Array2DRowRealMatrixtmpMatrix=FastMath.sqrt(covarianceMatrix[row]);
