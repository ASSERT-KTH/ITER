projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java148for(introw=0;row<dim;row++){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java148
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java148double[][]covariances=covMatEigenvectors.getColumns();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java148double[][]covariances=covMatEigenvectors.toArray();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java148double[][]covariances=tmpMatrix.multiplyEntry(dim,v,covariances);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java148double[][]covariances=covMatEigenvectors.multiplyEntry(dim,rng);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java148double[][]covariances=covMatEigenvectors.multiplyEntry(dim,v);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java148double[][]covariances=tmpMatrix.toArray();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java148double[][]covariances=tmpMatrix.multiplyEntry(dim,v);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java148double[][]covariances=tmpMatrix.getEigenvectors();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java148double[][]covariances=tmpMatrix.getVariants();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java148double[][]covariances=tmpMatrix.multiplyEntry(dim,means,v);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java148double[][]covariances=tmpMatrix.multiplyEntry(dim,v,means);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java148double[][]covariances=tmpMatrix.multiplyEntry();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java148double[][]covariances=tmpMatrix.getColumns();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java148double[][]covariances=covMatEigenvectors.getRows();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java148finaldouble[][]covariances=covMatEigenvectors.getColumns();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java148finaldouble[][]covariances=tmpMatrix.toArray();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java148double[][]covariances=covMatEigenvectors.multiplyEntry(dim,tmpMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java148double[][]covariances=tmpMatrix.multiplyEntry(dim,mean);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java148double[][]covariances=tmpMatrix.multiplyEntry(dim,means);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java148double[][]covariances=covMatEigenvectors.multiplyEntry(dim,means);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java148double[][]covariances=covMatEigenvectors.multiplyEntry(dim,mean);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java148double[][]covariances=tmpMatrix.multiplyEntry(dim,covMatEigenvalues);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java148double[][]covariances=tmpMatrix.multiplyEntry(row,col);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java148finaldouble[][]covariances=tmpMatrix.multiplyEntry(row,col);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java148double[][]covariances=tmpMatrix.multiplyEntry(dim,v,mean);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java148double[][]covariances=tmpMatrix.getVariances();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java148double[][]covariances=covMatEigenvectors.multiplyEntry(dim,v,tmpMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java148double[][]covariances=tmpMatrix.multiplyEntry(dim,covMatEigenvectors);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java148double[][]covariances=tmpMatrix.multiplyEntry(dim,tmpMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java148double[][]covariances=tmpMatEigenvectors.getColumns();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java148double[][]covariances=tmpMatEigenvectors.toArray();
