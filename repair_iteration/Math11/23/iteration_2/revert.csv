projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covarianceMatrixInverse=covMatDec.getSolver().getInverse();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covarianceMatrixInverse=covMatDec.getSolver().inverse();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.getSolver().getInverse();covarianceMatrixInverse=covMatDec.getSolver().getInverse();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.getSolver().getInverse();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.setSolver(sample);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.getSolver().setInverse(covMatDec.getSolver().getInverse());
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.getSolver().setInverse(covMatDec.getSolver());
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125double[][]covariances=covMatDec.getSolver().getRealMatrix();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125double[][]covariances=covMatDec.getSolver().getInverse();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.setStripMatEigenvectors(true);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.reset();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covarianceMatrixInverse=covarianceMatDec.getSolver().inverse();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.setSolver(covarianceMatDec);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125double[][]covariances=covMatDec.getSolver().getVariances();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.getSolver().setInverse(true);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.getSolver().setInverse(false);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.getSolver().getInverse();covMatDec.getSolver().getInverse();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.getSolver().getInverse();((RealMattrix)covMatDec).getSolver().getInverse();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.getSolver().getInverse();covarianceMatDec.getSolver().getInverse();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covarianceMatrixInverse=covMatDec.getSolver();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.getSolver().getInverse();(covMatDec.getSolver().getInverse());
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.getSolver().getInverse();(covMatDec.getSolver().getInverse();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.getSolver().setInverse(covMatDec.getSolver(),covMatDec.getInverse());
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125if(covMatDec.getSolver()!=null){covMatDec.getSolver().getInverse();covarianceMatrixInverse=covMatDec.getSolver().getInverse();}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.getDeterminant();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.setDeterminant(factor);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.setSolver(covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.getSolver().getInverse();((RealMatrix)covMatDec).getSolver().getInverse();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125((RealMatrix)covMatDec).getDeterminant();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.setSamplesInverse(samplesInverse);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covarianceMatrixInverse=this.covMatDec.getSolver().inverse();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.setStripMatEigenvectors(false);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125if(covMatDec.getSolver()!=null){covMatDec.getSolver().getInverse();covMatDec.getSolver().getInverse();}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.getSolver().setInverse(true);covMatDec.getSolver().getInverse();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covarianceMatrixInverse=this.covMatDec.getSolver();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125double[][]covariances=covMatDec.getSolver().getVariantes();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.setDeterminant(covarianceMatEigenvectors);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.setDeterminant(covarianceMatDec);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.setSamplesInverse(samples);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125((RealMatrix)covMatDec).getDeterminant(),factor;
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125if(covMatDec!=null){covMatDec.getSolver().getInverse();(covMatDec.getSolver().getInverse();}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125if(covMatDec.getSolver()!=null){covMatDec.getSolver().getInverse();(covMatDec.getSolver().getInverse();}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125((RealMattrix)covMatDec).getSolver().getInverse();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125((RealMatrix)covMatDec).getSolver().getInverse();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125(covMatDec.getSolver().getInverse());
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.setSolver(covMatDec);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.getSolver().getInverse();covMatDec.getSolver().getInverse();covMatDec.getSolver().getInverse();covMatDec.getSolver().getInverse();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.getSolver().getInverse();covMatDec.getSolver().getInverse();(covMatDec.getSolver().getInverse();covMatDec.getSolver().getInverse();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covarianceMatDec=covMatDec.getSolver().inverse();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.setSolver(covarianceMatrixInverse);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125((RealMattrix)covMatDec).getDeterminant();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.getSolver().getInverse();covMatDec.getSolver().getInverse();covarianceMatDec.getSolver().getInverse();covMatDec.getSolver().getInverse();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125if(covMatDec!=null){covMatDec.getSolver().getInverse();covMatDec.getSolver().getInverse();}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125if(covMatDec!=null){covMatDec.getSolver().getInverse();covMatDec.getSolver().getInverse();}else{covMatDec.getSolver().getInverse()
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.setDeterminant(covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.setDeterminant(covarianceMatrixDeterminant);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125if(covMatDec.getSolver()!=null){covMatDec.getSolver().getInverse();(covMatDec.getSolver().getInverse()}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.setDeterminant(tmpMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.setDeterminant(sampleMatEigenvectors);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.getSolver().getInverse();covMatDec.getSolver().getInverse();((RealMatrix)covMatDec).getSolver().getInverse();covMatDec.getSolver().getInverse();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covarianceMatrixInverse=covMatDec.getInverse();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.setSolver(tmpMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.set();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125if(covMatDec.getSolver()!=null){covMatDec.getSolver().getInverse();(covMatDec.getSolver().getInverse());}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.setSamplesInverse(variances);
