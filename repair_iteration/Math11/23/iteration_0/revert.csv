projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covarianceMatrixInverse=covMatDec.getSolver().getInverse();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covarianceMatrixInverse=covMatDec.getSolver().inverse();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.getSolver().getInverse();covarianceMatrixInverse=covMatDec.getSolver().getInverse();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.getSolver().getInverse();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.setSolver(sample);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.getSolver().setInverse(covMatDec.getSolver().getInverse());
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125covMatDec.getSolver().setInverse(covMatDec.getSolver());
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125double[][]covariances=covMatDec.getSolver().getRealMatrix();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java125double[][]covariances=covMatDec.getSolver().getInverse();
