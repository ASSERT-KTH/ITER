projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java132
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java132finaldouble[][]covariances=covMatDec.getRealEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java132double[][]covariances=covMatDec.getRealEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java132finaldouble[][]covariances=covMatEigenvalues.toArray();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java132for(inti=0;i<covMatEigenvalues.length;i++){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java132for(inti=0;i<covarianceMatEigenvalues.length;i++){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java132double[][]factor=covMatEigenvalues.toArray();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java132if(covMatEigenvalues!=null){for(inti=0;i<covMatEigenvalues.length;i++){if(covMatEigenvalues[i]<0){thrownewNonPositiveDefiniteM
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java132if(covMatEigenvalues!=null){for(inti=0;i<covMatEigenvalues.length;i++){if(covMatEigenvalues[i]<0){thrownewNonPositiveDefiniteMatrixException(covMatEigenvalues[i],
