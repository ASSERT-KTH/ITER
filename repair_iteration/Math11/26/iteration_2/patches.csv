bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double[][]  covariances  =  covarianceMatDec.getSolver();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  EigenDecomposition  covMatDec  =  new  EigenDecomposition(covarianceMatrix);  covarianceMatrixInverse  =  covMatDec.getSolver().getInverse();  covarianceMatrixDeterminant  =  covMatDec.getDeterminant();  final  double[]  covMatEigenvalues  =  covMatDec.getRealEigenvalues();      [BUGGY]  final  double[][]  covariances  =  covarianceMatDec.getSolver();  [BUGGY]      for  (int  i  =  0;  i  <  covMatEigenvalues.length;  i++)  {  if  (covMatEigenvalues[i]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(covMatEigenvalues[i],  i,  0);  }  }  final  Array2DRowRealMatrix  covMatEigenvectors  =  new  Array2DRowRealMatrix(dim,  dim);  for  (int  v  =  0;  v  <  dim;  v++)  {  final  double[]  evec  =  covMatDec.getEigenvector(v).toArray();  covMatEigenvectors.setColumn(v,  evec);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	132	132	1	replace	final  double[][]  covariances  =  covarianceMatDec.getSolver();	  final    double[][]    covariances    =    covMatDec.getSolver();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
2	[BUG]  [BUGGY]  final  double[][]  covariances  =  covMatEigenvalues.toArray(new  double[1]);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  EigenDecomposition  covMatDec  =  new  EigenDecomposition(covarianceMatrix);  covarianceMatrixInverse  =  covMatDec.getSolver().getInverse();  covarianceMatrixDeterminant  =  covMatDec.getDeterminant();  final  double[]  covMatEigenvalues  =  covMatDec.getRealEigenvalues();      [BUGGY]  final  double[][]  covariances  =  covMatEigenvalues.toArray(new  double[1]);  [BUGGY]      for  (int  i  =  0;  i  <  covMatEigenvalues.length;  i++)  {  if  (covMatEigenvalues[i]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(covMatEigenvalues[i],  i,  0);  }  }  final  Array2DRowRealMatrix  covMatEigenvectors  =  new  Array2DRowRealMatrix(dim,  dim);  for  (int  v  =  0;  v  <  dim;  v++)  {  final  double[]  evec  =  covMatDec.getEigenvector(v).toArray();  covMatEigenvectors.setColumn(v,  evec);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	132	132	1	replace	final  double[][]  covariances  =  covMatEigenvalues.toArray(new  double[1]);	  final    double[][]    covariances    =    covMatEigenvalues.toArray(new    double[0]);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  covMatEigenvalues.length;  i++)  {  if(covMatEigenvalues[i]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(covMatEigenvalues[i],  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  EigenDecomposition  covMatDec  =  new  EigenDecomposition(covarianceMatrix);  covarianceMatrixInverse  =  covMatDec.getSolver().getInverse();  covarianceMatrixDeterminant  =  covMatDec.getDeterminant();  final  double[]  covMatEigenvalues  =  covMatDec.getRealEigenvalues();      [BUGGY]  for(int  i  =  0;  i  <  covMatEigenvalues.length;  i++)  {  if(covMatEigenvalues[i]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(covMatEigenvalues[i],  }  [BUGGY]      for  (int  i  =  0;  i  <  covMatEigenvalues.length;  i++)  {  if  (covMatEigenvalues[i]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(covMatEigenvalues[i],  i,  0);  }  }  final  Array2DRowRealMatrix  covMatEigenvectors  =  new  Array2DRowRealMatrix(dim,  dim);  for  (int  v  =  0;  v  <  dim;  v++)  {  final  double[]  evec  =  covMatDec.getEigenvector(v).toArray();  covMatEigenvectors.setColumn(v,  evec);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	132	132	1	replace	for(int  i  =  0;  i  <  covMatEigenvalues.length;  i++)  {  if(covMatEigenvalues[i]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(covMatEigenvalues[i],  }	  for(int    i    =    0;    i    <    covMatEigenvalues.length;    i++)    {    if(covMatEigenvalues[i]    <    0)    {    throw    new    NonPositiveDefiniteMatrixException(covMatEigenvalues[i],    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
4	[BUG]  [BUGGY]  final  double[][]  covariances  =  covMatDec.getSolver().getInverse();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  EigenDecomposition  covMatDec  =  new  EigenDecomposition(covarianceMatrix);  covarianceMatrixInverse  =  covMatDec.getSolver().getInverse();  covarianceMatrixDeterminant  =  covMatDec.getDeterminant();  final  double[]  covMatEigenvalues  =  covMatDec.getRealEigenvalues();      [BUGGY]  final  double[][]  covariances  =  covMatDec.getSolver().getInverse();  [BUGGY]      for  (int  i  =  0;  i  <  covMatEigenvalues.length;  i++)  {  if  (covMatEigenvalues[i]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(covMatEigenvalues[i],  i,  0);  }  }  final  Array2DRowRealMatrix  covMatEigenvectors  =  new  Array2DRowRealMatrix(dim,  dim);  for  (int  v  =  0;  v  <  dim;  v++)  {  final  double[]  evec  =  covMatDec.getEigenvector(v).toArray();  covMatEigenvectors.setColumn(v,  evec);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	132	132	1	replace	final  double[][]  covariances  =  covMatDec.getSolver().getInverse();	  final    double[][]    covariances    =    covMatDec.getSolver().getRealEigenvalues();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
5	[BUG]  [BUGGY]  if(covMatEigenvalues!=  null)  {  for(int  i  =  0;  i  <  covMatEigenvalues.length;  i++)  {  if(covMatEigenvalues[i]  <  0)  {  throw  new  NonPositive  [CE]  '('  or  '['  expected  [FE]            AssertionError      [CONTEXT]      final  EigenDecomposition  covMatDec  =  new  EigenDecomposition(covarianceMatrix);  covarianceMatrixInverse  =  covMatDec.getSolver().getInverse();  covarianceMatrixDeterminant  =  covMatDec.getDeterminant();  final  double[]  covMatEigenvalues  =  covMatDec.getRealEigenvalues();      [BUGGY]  if(covMatEigenvalues!=  null)  {  for(int  i  =  0;  i  <  covMatEigenvalues.length;  i++)  {  if(covMatEigenvalues[i]  <  0)  {  throw  new  NonPositive  [BUGGY]      for  (int  i  =  0;  i  <  covMatEigenvalues.length;  i++)  {  if  (covMatEigenvalues[i]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(covMatEigenvalues[i],  i,  0);  }  }  final  Array2DRowRealMatrix  covMatEigenvectors  =  new  Array2DRowRealMatrix(dim,  dim);  for  (int  v  =  0;  v  <  dim;  v++)  {  final  double[]  evec  =  covMatDec.getEigenvector(v).toArray();  covMatEigenvectors.setColumn(v,  evec);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	132	132	1	replace	if(covMatEigenvalues!=  null)  {  for(int  i  =  0;  i  <  covMatEigenvalues.length;  i++)  {  if(covMatEigenvalues[i]  <  0)  {  throw  new  NonPositive	  if(covMatEigenvalues!=    null)    {    for(int    i    =    0;    i    <    covMatEigenvalues.length;    i++)    {    if(covMatEigenvalues[i]    <    0)    {    throw    new    NonPositiveDef    	non-compiled	[CE]  '('  or  '['  expected	4	None	replace
6	[BUG]  [BUGGY]  double[][]  covariances  =  covMatDec.getCovariances();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  EigenDecomposition  covMatDec  =  new  EigenDecomposition(covarianceMatrix);  covarianceMatrixInverse  =  covMatDec.getSolver().getInverse();  covarianceMatrixDeterminant  =  covMatDec.getDeterminant();  final  double[]  covMatEigenvalues  =  covMatDec.getRealEigenvalues();      [BUGGY]  double[][]  covariances  =  covMatDec.getCovariances();  [BUGGY]      for  (int  i  =  0;  i  <  covMatEigenvalues.length;  i++)  {  if  (covMatEigenvalues[i]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(covMatEigenvalues[i],  i,  0);  }  }  final  Array2DRowRealMatrix  covMatEigenvectors  =  new  Array2DRowRealMatrix(dim,  dim);  for  (int  v  =  0;  v  <  dim;  v++)  {  final  double[]  evec  =  covMatDec.getEigenvector(v).toArray();  covMatEigenvectors.setColumn(v,  evec);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	132	132	1	replace	double[][]  covariances  =  covMatDec.getCovariances();	  double[][]    covariances    =    covMatDec.getSolver();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
7	[BUG]  [BUGGY]  final  double[][]  covariances  =  covMatDec.getCovariances();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  EigenDecomposition  covMatDec  =  new  EigenDecomposition(covarianceMatrix);  covarianceMatrixInverse  =  covMatDec.getSolver().getInverse();  covarianceMatrixDeterminant  =  covMatDec.getDeterminant();  final  double[]  covMatEigenvalues  =  covMatDec.getRealEigenvalues();      [BUGGY]  final  double[][]  covariances  =  covMatDec.getCovariances();  [BUGGY]      for  (int  i  =  0;  i  <  covMatEigenvalues.length;  i++)  {  if  (covMatEigenvalues[i]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(covMatEigenvalues[i],  i,  0);  }  }  final  Array2DRowRealMatrix  covMatEigenvectors  =  new  Array2DRowRealMatrix(dim,  dim);  for  (int  v  =  0;  v  <  dim;  v++)  {  final  double[]  evec  =  covMatDec.getEigenvector(v).toArray();  covMatEigenvectors.setColumn(v,  evec);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	132	132	1	replace	final  double[][]  covariances  =  covMatDec.getCovariances();	  final    double[][]    covariances    =    covMatDec.getSolver();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
8	[BUG]  [BUGGY]  double[][]  covariances  =  covMatDec.getSolver().getVariantEigenvalues();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  EigenDecomposition  covMatDec  =  new  EigenDecomposition(covarianceMatrix);  covarianceMatrixInverse  =  covMatDec.getSolver().getInverse();  covarianceMatrixDeterminant  =  covMatDec.getDeterminant();  final  double[]  covMatEigenvalues  =  covMatDec.getRealEigenvalues();      [BUGGY]  double[][]  covariances  =  covMatDec.getSolver().getVariantEigenvalues();  [BUGGY]      for  (int  i  =  0;  i  <  covMatEigenvalues.length;  i++)  {  if  (covMatEigenvalues[i]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(covMatEigenvalues[i],  i,  0);  }  }  final  Array2DRowRealMatrix  covMatEigenvectors  =  new  Array2DRowRealMatrix(dim,  dim);  for  (int  v  =  0;  v  <  dim;  v++)  {  final  double[]  evec  =  covMatDec.getEigenvector(v).toArray();  covMatEigenvectors.setColumn(v,  evec);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	132	132	1	replace	double[][]  covariances  =  covMatDec.getSolver().getVariantEigenvalues();	  double[][]    covariances    =    covMatDec.getSolver().getRealEigenvalues();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
9	[BUG]  [BUGGY]  final  double[][]  covariances  =  covMatDec.getSolver().getVariantEigenvalues();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  EigenDecomposition  covMatDec  =  new  EigenDecomposition(covarianceMatrix);  covarianceMatrixInverse  =  covMatDec.getSolver().getInverse();  covarianceMatrixDeterminant  =  covMatDec.getDeterminant();  final  double[]  covMatEigenvalues  =  covMatDec.getRealEigenvalues();      [BUGGY]  final  double[][]  covariances  =  covMatDec.getSolver().getVariantEigenvalues();  [BUGGY]      for  (int  i  =  0;  i  <  covMatEigenvalues.length;  i++)  {  if  (covMatEigenvalues[i]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(covMatEigenvalues[i],  i,  0);  }  }  final  Array2DRowRealMatrix  covMatEigenvectors  =  new  Array2DRowRealMatrix(dim,  dim);  for  (int  v  =  0;  v  <  dim;  v++)  {  final  double[]  evec  =  covMatDec.getEigenvector(v).toArray();  covMatEigenvectors.setColumn(v,  evec);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	132	132	1	replace	final  double[][]  covariances  =  covMatDec.getSolver().getVariantEigenvalues();	  final    double[][]    covariances    =    covMatDec.getSolver().getRealEigenvalues();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
10	[BUG]  [BUGGY]  final  double[][]  covariances  =  covarianceMatDec.getNormalEigenvalues();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  EigenDecomposition  covMatDec  =  new  EigenDecomposition(covarianceMatrix);  covarianceMatrixInverse  =  covMatDec.getSolver().getInverse();  covarianceMatrixDeterminant  =  covMatDec.getDeterminant();  final  double[]  covMatEigenvalues  =  covMatDec.getRealEigenvalues();      [BUGGY]  final  double[][]  covariances  =  covarianceMatDec.getNormalEigenvalues();  [BUGGY]      for  (int  i  =  0;  i  <  covMatEigenvalues.length;  i++)  {  if  (covMatEigenvalues[i]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(covMatEigenvalues[i],  i,  0);  }  }  final  Array2DRowRealMatrix  covMatEigenvectors  =  new  Array2DRowRealMatrix(dim,  dim);  for  (int  v  =  0;  v  <  dim;  v++)  {  final  double[]  evec  =  covMatDec.getEigenvector(v).toArray();  covMatEigenvectors.setColumn(v,  evec);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	132	132	1	replace	final  double[][]  covariances  =  covarianceMatDec.getNormalEigenvalues();	  final    double[][]    covariances    =    covMatDec.getNormalEigenvalues();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
11	[BUG]  [BUGGY]  final  double[][]  covariances  =  covMatDec.getRealSolver();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  EigenDecomposition  covMatDec  =  new  EigenDecomposition(covarianceMatrix);  covarianceMatrixInverse  =  covMatDec.getSolver().getInverse();  covarianceMatrixDeterminant  =  covMatDec.getDeterminant();  final  double[]  covMatEigenvalues  =  covMatDec.getRealEigenvalues();      [BUGGY]  final  double[][]  covariances  =  covMatDec.getRealSolver();  [BUGGY]      for  (int  i  =  0;  i  <  covMatEigenvalues.length;  i++)  {  if  (covMatEigenvalues[i]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(covMatEigenvalues[i],  i,  0);  }  }  final  Array2DRowRealMatrix  covMatEigenvectors  =  new  Array2DRowRealMatrix(dim,  dim);  for  (int  v  =  0;  v  <  dim;  v++)  {  final  double[]  evec  =  covMatDec.getEigenvector(v).toArray();  covMatEigenvectors.setColumn(v,  evec);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	132	132	1	replace	final  double[][]  covariances  =  covMatDec.getRealSolver();	  final    double[][]    covariances    =    covMatDec.getSolver();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
12	[BUG]  [BUGGY]  double[][]  covariances  =  covarianceMatDec.getSolver();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  EigenDecomposition  covMatDec  =  new  EigenDecomposition(covarianceMatrix);  covarianceMatrixInverse  =  covMatDec.getSolver().getInverse();  covarianceMatrixDeterminant  =  covMatDec.getDeterminant();  final  double[]  covMatEigenvalues  =  covMatDec.getRealEigenvalues();      [BUGGY]  double[][]  covariances  =  covarianceMatDec.getSolver();  [BUGGY]      for  (int  i  =  0;  i  <  covMatEigenvalues.length;  i++)  {  if  (covMatEigenvalues[i]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(covMatEigenvalues[i],  i,  0);  }  }  final  Array2DRowRealMatrix  covMatEigenvectors  =  new  Array2DRowRealMatrix(dim,  dim);  for  (int  v  =  0;  v  <  dim;  v++)  {  final  double[]  evec  =  covMatDec.getEigenvector(v).toArray();  covMatEigenvectors.setColumn(v,  evec);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	132	132	1	replace	double[][]  covariances  =  covarianceMatDec.getSolver();	  double[][]    covariances    =    covMatDec.getSolver();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
13	[BUG]  [BUGGY]  final  double[][]  covariances  =  covarianceMatEigenvalues.toArray(new  double[0]);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  EigenDecomposition  covMatDec  =  new  EigenDecomposition(covarianceMatrix);  covarianceMatrixInverse  =  covMatDec.getSolver().getInverse();  covarianceMatrixDeterminant  =  covMatDec.getDeterminant();  final  double[]  covMatEigenvalues  =  covMatDec.getRealEigenvalues();      [BUGGY]  final  double[][]  covariances  =  covarianceMatEigenvalues.toArray(new  double[0]);  [BUGGY]      for  (int  i  =  0;  i  <  covMatEigenvalues.length;  i++)  {  if  (covMatEigenvalues[i]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(covMatEigenvalues[i],  i,  0);  }  }  final  Array2DRowRealMatrix  covMatEigenvectors  =  new  Array2DRowRealMatrix(dim,  dim);  for  (int  v  =  0;  v  <  dim;  v++)  {  final  double[]  evec  =  covMatDec.getEigenvector(v).toArray();  covMatEigenvectors.setColumn(v,  evec);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	132	132	1	replace	final  double[][]  covariances  =  covarianceMatEigenvalues.toArray(new  double[0]);	  final    double[][]    covariances    =    covMatEigenvalues.toArray(new    double[0]);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
14	[BUG]  [BUGGY]  double[][]  covariances  =  covMatDec.getSolver().getRealEigenvalues(covarianceMatrixInverse);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  EigenDecomposition  covMatDec  =  new  EigenDecomposition(covarianceMatrix);  covarianceMatrixInverse  =  covMatDec.getSolver().getInverse();  covarianceMatrixDeterminant  =  covMatDec.getDeterminant();  final  double[]  covMatEigenvalues  =  covMatDec.getRealEigenvalues();      [BUGGY]  double[][]  covariances  =  covMatDec.getSolver().getRealEigenvalues(covarianceMatrixInverse);  [BUGGY]      for  (int  i  =  0;  i  <  covMatEigenvalues.length;  i++)  {  if  (covMatEigenvalues[i]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(covMatEigenvalues[i],  i,  0);  }  }  final  Array2DRowRealMatrix  covMatEigenvectors  =  new  Array2DRowRealMatrix(dim,  dim);  for  (int  v  =  0;  v  <  dim;  v++)  {  final  double[]  evec  =  covMatDec.getEigenvector(v).toArray();  covMatEigenvectors.setColumn(v,  evec);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	132	132	1	replace	double[][]  covariances  =  covMatDec.getSolver().getRealEigenvalues(covarianceMatrixInverse);	  double[][]    covariances    =    covMatDec.getSolver().getRealEigenvalues();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
