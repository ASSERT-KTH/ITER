projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java105
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java105rng=rng.getRawMatEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java105rng=rng.getRandomMatDecimal();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java105rng=rng.getRandomMatrix();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java105finalintdim=means.length;
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java105finaldoubledim=means.length;
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java105finalintdim=covariances.length;
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java105if(covMatEigenvectors==null){for(inti=0;i<means.length;i++){if(covMatEigenvectors[i][i]!=factor){thrownewDimensionMismatchException(covMatEigenvectors[i].
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java105if(covMatEigenvectors==null){for(inti=0;i<means.length;i++){if(covMatEigenvectors[i][i]!=factor){thrownewDimensionMismatchException(covMatEigenvectors[i],
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java105if(covMatEigenvectors==null){for(inti=0;i<means.length;i++){if(covMatEigenvectors[i][i]!=factor){thrownewDimensionMismatchException(covMatEigenvectors[i
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java105if(covMatEigenvectors!=null){for(inti=0;i<means.length;i++){covariances[i]=rng.getValue();}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java105if(covMatEigenvectors!=null){for(inti=0;i<means.length;i++){covariances[i]=rng.getDecomposition();}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java105if(covMatEigenvectors!=null){for(inti=0;i<means.length;i++){covariances[i]=rng.evaluate(null,col);}
