projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111double[][]covariances=rng.getMatEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111double[][]covariances=rng.getRowMatEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111double[][]covariances=rng.getMatteredEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111for(inti=0;i<dim;i++){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111double[][]covariances=rng.getMatches();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111double[][]covariances=rng.getDouble();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111for(inti=0;i<covariances.length;i++){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111double[][]covariances=covMatEigenvectors.get(dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111double[][]covariances=covMatEigenvectors.toArray(dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111for(inti=0;i<dim.length;i++){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111double[][]covariances=covMatEigenvectors.toArray(covariances);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111double[][]covariances=rng.getMatteredEigenvalues(dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111double[][]covariances=rng.getColumnMatEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111double[][]covariances=covMatEigenvectors.get(covariance);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111double[][]covariances=rng.getVariances();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111double[][]covariances=rng.getMatEigenvalues(dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111for(inti=0;i<covariances.length;i++){for(inti=0;i<covariances.length;i++){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111for(inti=0;i<covariances.length;i++){for(inti=0;i<covariances[i].length;i++){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111for(inti=0;i<covariances.length;i++){For(inti=0;i<covariances.length;i++){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111double[][]covariances=rng.getRow();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111double[][]covariances=covMatEigenvectors.toArray(covariance);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111double[][]covariances=rng.getVarianceMatEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111for(inti=0;i<covariances.length;i++){if(dim!=covariances[i].length){thrownewDimensionMismatchException(covariances[i].length,dim);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111for(inti=0;i<covariances.length;i++){intdim=0;i<covariances.length;i++){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111double[][]covariances=rng.getDoubleValue();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111double[][]covariances=dim.getDouble();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111double[][]covariances=dim.getMatEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111double[][]covariances=rng.getMatches(dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111double[][]covariances=covMatEigenvectors.get(dim,factor);
