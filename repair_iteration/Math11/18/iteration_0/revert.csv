projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111double[][]covariances=rng.getMatEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111double[][]covariances=rng.getRowMatEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111double[][]covariances=rng.getMatteredEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111for(inti=0;i<dim;i++){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111double[][]covariances=rng.getMatches();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111double[][]covariances=rng.getDouble();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111for(inti=0;i<covariances.length;i++){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111double[][]covariances=covMatEigenvectors.get(dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java111double[][]covariances=covMatEigenvectors.toArray(dim);
