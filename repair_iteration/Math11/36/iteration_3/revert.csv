projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(row,col,covariances[col]);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix=FastMath.sqrt(covMatEigenvalues[row]);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(row,col,covariances);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(row,col,factor);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(row,col,covarianceMatrixDeterminant);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(row,col,covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covarianceMatrix,col,factor);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151Array2DRowRealMatrixtmpMatrix=FastMath.sqrt(covMatEigenvalues[row]);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151Array2DRowRealMatrixtmpMatrix=FastMath.sqrt(covMatEigenvalues[col]);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151double[][]covariances=FastMath.sqrt(covMatEigenvalues[row]);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(varianceMatrix,col,factor);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151double[][]covariances=FastMath.sqrt(covMatEigenvalues[row],col);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covarianceMatrix,col,row);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covMatEigenvectors,row,col,covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix=FastMath.sqrt(covMatEigenvalues[row],col);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(variance,col,covarianceMatrixDeterminant);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covMatEigenvalues[row],col,covariances[col]);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covariances,col,row);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(row,col,covarianceMatrixDeterminant);tmpMatrix.multiplyEntry(row,col,covarianceMatrixDeterminant);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(row,col,covarianceMatrixDeterminant);tmpMatrix.multiplyEntry(row,col,covariANCEMatrixDeterminant);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covarianceMatrix,factor,col);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(factor,col,covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covMatEigenvalues,row,col,covariances);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covMatEigenvectors,col,factor);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151Array2DRowRealMatrixtmpMatrix=FastMath.sqrt(covMatEigenvalues[row],col);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(row,col,covarianceMatrixDeterminant);finalRealMatrixtmpMatrix=FastMath.sqrt(covarianceMatrixDeterminant);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151Array2DRowRealMatrixtmpMatrix=FastMath.sqrt(covMatEigenvalues[col],covarianceMatrixDeterminant);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covarianceMatrix,factor,covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covarianceMatrix,col,covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covMatEigenvalues,row,col,covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covarianceMatrix,col,covarianceMatrixDeterminant);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151double[][]covariances=FastMath.sqrt(covMatEigenvalues[col]);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(rng,row,col,covariances);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covMatEigenvalues[row,col],covariances[col]);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix=FastMath.sqrt(covMatEigenvalues[col]);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covarianceMatrix,row,col,factor);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covarianceMatrixDeterminant,col,factor);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covariances[row],col,row);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covarianceMatrixDeterminant,factor,col);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covMatEigenvalues[row],col,covariances);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covMatEigenvalues,row,col,mean,covariances);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covMatEigenvalues,factor,col,covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covMatEigenvalues,factor,row,col,covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(rng,row,col,mean,covariances);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(rng,row,col,means,covariances);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covarianceMatrix,factor,row);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covMatEigenvalues[row],col,factor,covariances[col]);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covMatEigenvalues[row],col,mean,covariances[col]);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151Array2DRowRealMatrixtmpMatrix=FastMath.sqrt(covMatEigenvalues[col],col);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151Array2DRowRealMatrixtmpMatrix=FastMath.sqrt(covMatEigenvalues[col],covarianceMatrixInverse);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(row,col,covarianceMatrixDeterminant);tmpMatrix.multiplyEntry(row,col,covarianceMatrixDeterminant);tmpMatrix.multiplyEntry(row,col,covarianceMatrixDeterminant);tmpMatrix.multiplyEntry(row,col,covarianceMatrixDeterminant);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(row,col,covarianceMatrixDeterminant);tmpMatrix.multiplyEntry(row,col,covarianceMatrixDeterminant);tmpMatrix.multiplyEntry(row,col,covariANCEMatrixDeterminant);tmpMatrix.multiplyEntry(row,col,covarianceMatrixDeterminant);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covMatEigenvectors,factor,col,covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covMatEigenvectors,factor,row,col,covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(factor,col,samplingMatrix,covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covMatEigenvectors,row,col,factor);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covMatEigenvectors,factor,col);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151Array2DRowRealMatrixtmpMatrix=FastMath.sqrt(covMatEigenvalues[row],col,mean);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covariances,col,dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covarianceMatrix,factor,covarianceMatrixDeterminant);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151double[][]covariances=FastMath.sqrt(covMatEigenvalues[row],col,mean);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covariance,col,factor);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix=FastMath.sqrt(covMatEigenvalues[row],col,mean);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix=FastMath.sqrt(covarianceMatrixDeterminant);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151finalRealMatrixtmpMatrix=FastMath.sqrt(covarianceMatrixDeterminant);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covariances[row],col,samplingMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(factor,covarianceMatrix,col);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covarianceMatrix,factor,row,col);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covMatEigenvalues[row,col],means[col]);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covMatEigenvalues[row,col],mean);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covarianceMatrix,factor,rng,covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(factor,row,col,covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covariances[row],col,factor);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covMatEigenvalues,row,col,factor);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix=FastMath.sqrt(covMatEigenvalues[row],col+1);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covarianceMatrixDeterminant,col,covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(row,col,samplingMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(rng,mean,row,col,covariances);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covMatEigenvectors,col,covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covariances,row,col);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151Array2DRowRealMatrixtmpMatrix=FastMath.sqrt(covMatEigenvalues[row],col,covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covarianceMatrix,factor,col,mean);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(row,col,covarianceMatrixDeterminant);tmpMatrix.multiplyEntry(row,col,covarianceMatrixDeterminant);tmpMatrix.multiplyEntry(row,col,covarianceMatrixDeterminant);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covMatEigenvalues[row],col,factor);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covariances,col,factor);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(rng,col,row,col);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covarianceMatrix,row,col);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covMatEigenvalues[row,col],factor);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151Array2DRowRealMatrixtmpMatrix=FastMath.sqrt(covMatEigenvalues[col],factor);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151Array2DRowRealMatrixtmpMatrix=FastMath.sqrt(covMatEigenvalues[row],covarianceMatrixDeterminant);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covarianceMatrix,row,col,covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151if(covarianceMatrix!=null){tmpMatrix.multiplyEntry(row,col,factor);tmpMatrix.multiplyEntry(row,col,covarianceMatrixDeterminant);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(factor,row,covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covarianceMatrixDeterminant,factor,row);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(covarianceMatrix,row,factor,col);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java151tmpMatrix.multiplyEntry(factor,row,col);
