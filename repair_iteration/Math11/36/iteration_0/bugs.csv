bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
71	[BUG] [BUGGY] tmpMatrix.multiplyEntry(row, col, factor); [FE] AssertionError [CONTEXT] final double[] evec = covMatDec.getEigenvector(v).toArray(); covMatEigenvectors.setColumn(v, evec); } final RealMatrix tmpMatrix = covMatEigenvectors.transpose();  for (int row = 0; row < dim; row++) { final double factor = FastMath.sqrt(covMatEigenvalues[row]); for (int col = 0; col < dim; col++) { [BUGGY] tmpMatrix.multiplyEntry(row, col, factor); [BUGGY] } } samplingMatrix = covMatEigenvectors.multiply(tmpMatrix); } [CLASS] MultivariateNormalDistribution [METHOD] <init> [RETURN_TYPE] RandomGenerator,double[],double[][])  RandomGenerator rng final double[] means final double[][] covariances [VARIABLES] EigenDecomposition covMatDec boolean double[] covMatEigenvalues evec means RealMatrix covarianceMatrix covarianceMatrixInverse samplingMatrix tmpMatrix Array2DRowRealMatrix covMatEigenvectors double covarianceMatrixDeterminant factor double[][] covariances RandomGenerator rng int col dim i row v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	151	151	1	replace	
72	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] final double[] evec = covMatDec.getEigenvector(v).toArray(); covMatEigenvectors.setColumn(v, evec); } final RealMatrix tmpMatrix = covMatEigenvectors.transpose();  for (int row = 0; row < dim; row++) { final double factor = FastMath.sqrt(covMatEigenvalues[row]); for (int col = 0; col < dim; col++) { [BUGGY] [BUGGY] tmpMatrix.multiplyEntry(row, col, factor); } } samplingMatrix = covMatEigenvectors.multiply(tmpMatrix); } [CLASS] MultivariateNormalDistribution [METHOD] <init> [RETURN_TYPE] RandomGenerator,double[],double[][])  RandomGenerator rng final double[] means final double[][] covariances [VARIABLES] EigenDecomposition covMatDec boolean double[] covMatEigenvalues evec means RealMatrix covarianceMatrix covarianceMatrixInverse samplingMatrix tmpMatrix Array2DRowRealMatrix covMatEigenvectors double covarianceMatrixDeterminant factor double[][] covariances RandomGenerator rng int col dim i row v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	151	151	1	add	
