projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[][]covariances=covMatDec.getRealMatEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[][]covariances=covMatDec.getSolver().getInverse();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[][]covariances=covMatDec.getSamples();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[]covMatEigenvalues=covMatDec.getRealEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[]covMatEigenvalues=covarianceMatDec.getRealEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[]covMatEigenvalues=covarianceMatInverse.getRealEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[][]covariances=covMatDec.getSolver().getInverseRealMatrix();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[][]covariances=covMatDec.getRealMattrix();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[]covMatEigenvalues=covarianceMatrix.getRealEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[]covMatEigenvalues=covMatDec.getSolver().getRealEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130double[][]covariances=factor.getRealMatEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130doublefactor=factor.computeValue(covarianceMatrixInverse);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130doublefactor=factor.computeValue(covMatDec);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[]covariances=covarianceMatrixInverse.getRealEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[]covMatEigenvalues=covarianceMatrixInverse.getRealEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130doublefactor=covarianceMatDec.computeValue(factor);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130doublefactor=covMatDec.computeValue(factor);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[][]covariances=covMatDec.getSolver().getRealMatrix();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130double[][]covariances=covMatDec.getRealMatEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[]covariances=covMatEigenvalues.getRealEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[]covariances=covarianceMatInverse.getRealEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[][]covariances=covMatDec.getSolver().getRealMatEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130doublefactor=covarianceMatrixInverse.computeValue(factor);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130doublefactor=covarianceMatrix.computeValue(factor);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[][]covariances=covarianceMatDec.getRealMatEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[][]covariances=covarianceMatDec.getSamples();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[]covariances=covMatDec.getRealEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[]covMatEigenvalues=covarianceMatDec.getSolver().getRealEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[][]covariances=covarianceMatDec.getRealMattrix();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[][]covariances=covMatDec.getSolver().getRealVariances();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130double[][]covariances=factor.getRealEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[]covarianceMatEigenvalues=covarianceMatrixInverse.getRealEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[]covMatEigenvalues=covarianceMatrix.getSolver().getRealEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[][]covariances=covMatDec.getRealEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130doublefactor=covarianceMatrixInverse.computeValue(factory);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[][]covariances=covarianceMatrixInverse.getRealMattrix();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[][]covariances=covarianceMatrix.getSolver().getInverseRealMatrix();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[][]covariances=covarianceMatrixInverse.getSolver().getInverse();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[][]covariances=covarianceMatDec.getRealEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[]covariances=covarianceMatrixInverse.getSolver().getRealEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[]covariances=covarianceMatrix.getSolver().getRealEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130doublefactor=covarianceMatrixInverse.computeValue(covMatDec);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130doublefactor=factory.computeValue(covarianceMatrixInverse);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[][]covariances=covMatDec.getSolver().getVariances();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[]covariances=covMatDec.getSolver().getRealEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[]covarianceMatEigenvalues=covMatEigenvalues.getRealEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130doublefactor=factor.computeValue(covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130double[][]covariances=covMatDec.getRealEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[]covariances=covarianceMatDec.getSolver().getRealEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130doublefactor=covarianceMatDec.computeValue(covariance);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130doublefactor=covarianceInverse.computeValue(factor);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[]covariances=covarianceMatEigenvalues.getRealEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[][]covariances=covarianceMatrixInverse.getSolver().getInverseRealMatrix();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[]covMatEigenvalues=covarianceMatrixInverse.getSolver().getRealEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[]covarianceMatEigenvalues=factor.getRealEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[][]covariances=covMatDec.getSolver().getRealEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[]covariances=rng.getRealEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[][]covariances=covMatDec.getCovariances();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130doublefactor=covarianceMatrixInverse.computeValue(rng);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[]covariances=factor.getRealEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130double[][]covariances=rng.getRealEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[][]covariances=covMatDec.getSolver().getRealVarianties();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130double[][]covariances=factor.getRalEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130doublefactor=covarianceMatrixInverse.computeValue(covariance);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130doublefactor=covarianceMatrixInverse.computeValue(covarianceMatrixDeterminant);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130double[][]covariances=covarianceMatDec.getRealMatEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130doublefactor=factor.computeValue(covarianceMatDec);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[]covMatEigenvalues=sociovarianceMatrixInverse.getRealEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[][]covariances=covarianceMatrixInverse.getSolver().getInverseDigits();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[][]covariances=covarianceMatrixInverse.getRalMattrix();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[][]covariances=covMatDec.getSolver().getRealMatrixInverse();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java130finaldouble[]covariances=covMatEigenvalues.getReal();
