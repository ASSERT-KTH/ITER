projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112if(dim!=covariances[i].length){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112double[][]covariances=rng.getRowMatEigenvalues(i);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112double[][]covariances=rng.getMatteredEigenvalues(i);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112double[][]covariances=rng.getMatEigenvalues(i);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112double[][]covariances=rng.getEigenvalues(i);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112double[][]covariances=rng.getEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112double[][]covariances=rng.getEigenvalues(i,col);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112if(dim>covariances[i].length){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112double[][]covariances=v.doubleValue();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112if(dim==covariances[i].length){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112double[][]covariances=rng.getMatEigenvalues(i,dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112if(dim>covariances[i].length){if(dim>covariances[i].length){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112if(dim>covariances[i].length){If(dim>covariances[i].length){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112if(dim==covariances[i].length){if(dim==covariances[i].length){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112if(dim==covariances[i].length){if(dim!=covariances[i].length){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112if(dim==covariances[i].length){if(dim>=covariances[i].length){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112double[][]covariances=rng.getEigenvalues(i,dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112double[][]covariances=col.getEigenvalues(i,rng);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112double[][]covariances=rng.getRowMatEigenvalues(i,dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112double[][]covariances=rng.getMatteredEigenvalues(i,dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112double[][]covariances=rng.doubleValue();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112double[][]covariances=rng.getColumnMatEigenvalues(i);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112if(dim>covariances[i].length||(covariances[i].length<=col)){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112double[][]covariances=rng.getEigenvalues(dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112if(dim>covariances[i].length||dim<covariances[i].length){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112double[][]covariances=newdouble[dim.doubleValue()];
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112if(dim==covariances[i].length){If(dim==covariances[i].length){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112double[][]covariances=rng.getEigenvalues(dim,col);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112double[][]covariances=rng.getColumnMatEigenvalues(i,dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112double[][]covariances=rng.getRowMatEigenvalues(i,col);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112double[][]covariances=col.getEigenvalues(dim,rng);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112double[][]covariances=rng.getMatEigenvalues(i,col);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112if(dim>=covariances[i].length){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112If(dim>covariances[i].length){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112double[][]covariances=col.doubleValue();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112double[][]covariances=rng.getMatteredEigenvalues(i,dim,covarianceMatrixDeterminant);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112double[][]covariances=rng.getEigenvalues(i,dim,covarianceMatrixDeterminant);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112double[][]covariances=newdouble[dim.doubleValue()+1];
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112double[][]covariances=newdouble[dim.doubleValue()*2];
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112if(dim>covariances[i].length||dim<covariances[i].length){if(dim>covariances[i].length||dim<covariances[i].length){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112if(dim>covariances[i].length||dim<covariances[i].length){If(dim>covariances[i].length||dim<covariances[i].length){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112if(dim>covariances[i].length&&dim<covariances[i].length){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112If(dim==covariances[i].length){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112if(dim>covariances[i].length&&(covariances[i].length<=col)){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112if(dim>col||(covariances[i].length<=covariances[i].length)){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112double[][]covariances=col.getEigenvalues(i,dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112double[][]covariances=newdouble[dim.doubleValue()+i];
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112double[][]covariances=rng.getEigenvalues(i,dim+1);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112double[][]covariances=dim.doubleValue();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112double[][]covariances=rng.getMatEigenvalues(i,dim+1);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112double[][]covariances=rng.getMatteredEigenvalues(i,dim+1);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112double[][]covariances=rng.getEigenvalues(dim,i);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112double[][]covariances=rng.getEigenvalues(covariance,col);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112if(dim<covariances[i].length||dim>covariances[i].length){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112double[][]covariances=newdouble[dim.doubleValue()+dim.doubleValue()];
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112If(dim<covariances[i].length){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112if(dim>covariances[i].length||(covariances[i].length!=col)){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112if(dim!=covariances[i].length){If(dim==covariances[i].length){
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112double[][]covariances=rng.getEigenvalues(covarianceMatrixDeterminant);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java112double[][]covariances=rng.getEigenvalues(covariance,i);
