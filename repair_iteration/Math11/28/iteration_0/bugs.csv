bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
55	[BUG] [BUGGY] final Array2DRowRealMatrix covMatEigenvectors = new Array2DRowRealMatrix(dim, dim); [FE] AssertionError [CONTEXT]  final double[] covMatEigenvalues = covMatDec.getRealEigenvalues(); for (int i = 0; i < covMatEigenvalues.length; i++) { if (covMatEigenvalues[i] < 0) { throw new NonPositiveDefiniteMatrixException(covMatEigenvalues[i], i, 0); } }  [BUGGY] final Array2DRowRealMatrix covMatEigenvectors = new Array2DRowRealMatrix(dim, dim); [BUGGY] for (int v = 0; v < dim; v++) { final double[] evec = covMatDec.getEigenvector(v).toArray(); covMatEigenvectors.setColumn(v, evec); } final RealMatrix tmpMatrix = covMatEigenvectors.transpose();  for (int row = 0; row < dim; row++) { final double factor = FastMath.sqrt(covMatEigenvalues[row]); [CLASS] MultivariateNormalDistribution [METHOD] <init> [RETURN_TYPE] RandomGenerator,double[],double[][])  RandomGenerator rng final double[] means final double[][] covariances [VARIABLES] EigenDecomposition covMatDec boolean double[] covMatEigenvalues evec means RealMatrix covarianceMatrix covarianceMatrixInverse samplingMatrix tmpMatrix Array2DRowRealMatrix covMatEigenvectors double covarianceMatrixDeterminant factor double[][] covariances RandomGenerator rng int col dim i row v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	139	139	1	replace	
56	[BUG] [BUGGY] [FE] AssertionError [CONTEXT]  final double[] covMatEigenvalues = covMatDec.getRealEigenvalues(); for (int i = 0; i < covMatEigenvalues.length; i++) { if (covMatEigenvalues[i] < 0) { throw new NonPositiveDefiniteMatrixException(covMatEigenvalues[i], i, 0); } }  [BUGGY] [BUGGY] final Array2DRowRealMatrix covMatEigenvectors = new Array2DRowRealMatrix(dim, dim); for (int v = 0; v < dim; v++) { final double[] evec = covMatDec.getEigenvector(v).toArray(); covMatEigenvectors.setColumn(v, evec); } final RealMatrix tmpMatrix = covMatEigenvectors.transpose();  for (int row = 0; row < dim; row++) { final double factor = FastMath.sqrt(covMatEigenvalues[row]); [CLASS] MultivariateNormalDistribution [METHOD] <init> [RETURN_TYPE] RandomGenerator,double[],double[][])  RandomGenerator rng final double[] means final double[][] covariances [VARIABLES] EigenDecomposition covMatDec boolean double[] covMatEigenvalues evec means RealMatrix covarianceMatrix covarianceMatrixInverse samplingMatrix tmpMatrix Array2DRowRealMatrix covMatEigenvectors double covarianceMatrixDeterminant factor double[][] covariances RandomGenerator rng int col dim i row v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	139	139	1	add	
