bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  Array2DRowRealMatrix  covMatEigenvectors  =  new  Array2DRowRealMatrix(dim,  covarianceMatrixDeterminant);  [CE]  no  suitable  constructor  found  for  Array2DRowRealMatrix(int,double)  [FE]    AssertionError  [CONTEXT]    final  double[]  covMatEigenvalues  =  covMatDec.getRealEigenvalues();  for  (int  i  =  0;  i  <  covMatEigenvalues.length;  i++)  {  if  (covMatEigenvalues[i]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(covMatEigenvalues[i],  i,  0);  }  }    [BUGGY]  final  Array2DRowRealMatrix  covMatEigenvectors  =  new  Array2DRowRealMatrix(dim,  covarianceMatrixDeterminant);  [BUGGY]  for  (int  v  =  0;  v  <  dim;  v++)  {  final  double[]  evec  =  covMatDec.getEigenvector(v).toArray();  covMatEigenvectors.setColumn(v,  evec);  }  final  RealMatrix  tmpMatrix  =  covMatEigenvectors.transpose();  for  (int  row  =  0;  row  <  dim;  row++)  {  final  double  factor  =  FastMath.sqrt(covMatEigenvalues[row]);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	139	139	1	replace	final  Array2DRowRealMatrix  covMatEigenvectors  =  new  Array2DRowRealMatrix(dim,  covarianceMatrixDeterminant);	final  Array2DRowRealMatrix  covMatEigenvectors  =  new  Array2DRowRealMatrix(dim,  dim);  	non-compiled	[CE]  no  suitable  constructor  found  for  Array2DRowRealMatrix(int,double)	55	None	replace
2	[BUG]  [BUGGY]  final  Array2DRowRealMatrix  covMatEigenvectors  =  new  Array2DRowRealMatrix(dim,  covariance);  [CE]  cannot  find  symbol  covariance  [FE]      AssertionError  [CONTEXT]    final  double[]  covMatEigenvalues  =  covMatDec.getRealEigenvalues();  for  (int  i  =  0;  i  <  covMatEigenvalues.length;  i++)  {  if  (covMatEigenvalues[i]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(covMatEigenvalues[i],  i,  0);  }  }    [BUGGY]  final  Array2DRowRealMatrix  covMatEigenvectors  =  new  Array2DRowRealMatrix(dim,  covariance);  [BUGGY]  for  (int  v  =  0;  v  <  dim;  v++)  {  final  double[]  evec  =  covMatDec.getEigenvector(v).toArray();  covMatEigenvectors.setColumn(v,  evec);  }  final  RealMatrix  tmpMatrix  =  covMatEigenvectors.transpose();  for  (int  row  =  0;  row  <  dim;  row++)  {  final  double  factor  =  FastMath.sqrt(covMatEigenvalues[row]);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	139	139	1	replace	final  Array2DRowRealMatrix  covMatEigenvectors  =  new  Array2DRowRealMatrix(dim,  covariance);	final  Array2DRowRealMatrix  covMatEigenvectors  =  new  Array2DRowRealMatrix(dim,  dim);  	non-compiled	[CE]  cannot  find  symbol  covariance	55	None	replace
3	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  covMatEigenvectors  [FE]        AssertionError  [CONTEXT]    final  double[]  covMatEigenvalues  =  covMatDec.getRealEigenvalues();  for  (int  i  =  0;  i  <  covMatEigenvalues.length;  i++)  {  if  (covMatEigenvalues[i]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(covMatEigenvalues[i],  i,  0);  }  }    [BUGGY]    [BUGGY]  for  (int  v  =  0;  v  <  dim;  v++)  {  final  double[]  evec  =  covMatDec.getEigenvector(v).toArray();  covMatEigenvectors.setColumn(v,  evec);  }  final  RealMatrix  tmpMatrix  =  covMatEigenvectors.transpose();  for  (int  row  =  0;  row  <  dim;  row++)  {  final  double  factor  =  FastMath.sqrt(covMatEigenvalues[row]);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	139	139	1	replace	  	final  Array2DRowRealMatrix  covMatEigenvectors  =  new  Array2DRowRealMatrix(dim,  dim);  	non-compiled	[CE]  cannot  find  symbol  covMatEigenvectors	55	None	replace
4	[BUG]  [BUGGY]    final  double[][]  covariances  =  covMatEigenvalues.toArray();  [CE]  variable  covariances  is  already  defined  in  constructor  MultivariateNormalDistribution(RandomGenerator,double[],double[][])  [FE]    AssertionError  [CONTEXT]    final  double[]  covMatEigenvalues  =  covMatDec.getRealEigenvalues();  for  (int  i  =  0;  i  <  covMatEigenvalues.length;  i++)  {  if  (covMatEigenvalues[i]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(covMatEigenvalues[i],  i,  0);  }  }    [BUGGY]    final  double[][]  covariances  =  covMatEigenvalues.toArray();  [BUGGY]  final  Array2DRowRealMatrix  covMatEigenvectors  =  new  Array2DRowRealMatrix(dim,  dim);  for  (int  v  =  0;  v  <  dim;  v++)  {  final  double[]  evec  =  covMatDec.getEigenvector(v).toArray();  covMatEigenvectors.setColumn(v,  evec);  }  final  RealMatrix  tmpMatrix  =  covMatEigenvectors.transpose();  for  (int  row  =  0;  row  <  dim;  row++)  {  final  double  factor  =  FastMath.sqrt(covMatEigenvalues[row]);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	139	139	1	replace	    final  double[][]  covariances  =  covMatEigenvalues.toArray();		non-compiled	[CE]  variable  covariances  is  already  defined  in  constructor  MultivariateNormalDistribution(RandomGenerator,double[],double[][])	56	None	add
5	[BUG]  [BUGGY]    final  double[][]  covariances  =  covMatEigenvalues.get(dim);  [CE]  variable  covariances  is  already  defined  in  constructor  MultivariateNormalDistribution(RandomGenerator,double[],double[][])  [FE]      AssertionError  [CONTEXT]    final  double[]  covMatEigenvalues  =  covMatDec.getRealEigenvalues();  for  (int  i  =  0;  i  <  covMatEigenvalues.length;  i++)  {  if  (covMatEigenvalues[i]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(covMatEigenvalues[i],  i,  0);  }  }    [BUGGY]    final  double[][]  covariances  =  covMatEigenvalues.get(dim);  [BUGGY]  final  Array2DRowRealMatrix  covMatEigenvectors  =  new  Array2DRowRealMatrix(dim,  dim);  for  (int  v  =  0;  v  <  dim;  v++)  {  final  double[]  evec  =  covMatDec.getEigenvector(v).toArray();  covMatEigenvectors.setColumn(v,  evec);  }  final  RealMatrix  tmpMatrix  =  covMatEigenvectors.transpose();  for  (int  row  =  0;  row  <  dim;  row++)  {  final  double  factor  =  FastMath.sqrt(covMatEigenvalues[row]);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	139	139	1	replace	    final  double[][]  covariances  =  covMatEigenvalues.get(dim);		non-compiled	[CE]  variable  covariances  is  already  defined  in  constructor  MultivariateNormalDistribution(RandomGenerator,double[],double[][])	56	None	add
6	[BUG]  [BUGGY]    double[][]  covariances  =  covMatEigenvalues.toArray();  [CE]  variable  covariances  is  already  defined  in  constructor  MultivariateNormalDistribution(RandomGenerator,double[],double[][])  [FE]        AssertionError  [CONTEXT]    final  double[]  covMatEigenvalues  =  covMatDec.getRealEigenvalues();  for  (int  i  =  0;  i  <  covMatEigenvalues.length;  i++)  {  if  (covMatEigenvalues[i]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(covMatEigenvalues[i],  i,  0);  }  }    [BUGGY]    double[][]  covariances  =  covMatEigenvalues.toArray();  [BUGGY]  final  Array2DRowRealMatrix  covMatEigenvectors  =  new  Array2DRowRealMatrix(dim,  dim);  for  (int  v  =  0;  v  <  dim;  v++)  {  final  double[]  evec  =  covMatDec.getEigenvector(v).toArray();  covMatEigenvectors.setColumn(v,  evec);  }  final  RealMatrix  tmpMatrix  =  covMatEigenvectors.transpose();  for  (int  row  =  0;  row  <  dim;  row++)  {  final  double  factor  =  FastMath.sqrt(covMatEigenvalues[row]);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	139	139	1	replace	    double[][]  covariances  =  covMatEigenvalues.toArray();		non-compiled	[CE]  variable  covariances  is  already  defined  in  constructor  MultivariateNormalDistribution(RandomGenerator,double[],double[][])	56	None	add
7	[BUG]  [BUGGY]    double  dim  =  FastMath.sqrt(covMatEigenvalues[i]);  [CE]  variable  dim  is  already  defined  in  constructor  MultivariateNormalDistribution(RandomGenerator,double[],double[][])  [FE]    AssertionError  [CONTEXT]    final  double[]  covMatEigenvalues  =  covMatDec.getRealEigenvalues();  for  (int  i  =  0;  i  <  covMatEigenvalues.length;  i++)  {  if  (covMatEigenvalues[i]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(covMatEigenvalues[i],  i,  0);  }  }    [BUGGY]    double  dim  =  FastMath.sqrt(covMatEigenvalues[i]);  [BUGGY]  final  Array2DRowRealMatrix  covMatEigenvectors  =  new  Array2DRowRealMatrix(dim,  dim);  for  (int  v  =  0;  v  <  dim;  v++)  {  final  double[]  evec  =  covMatDec.getEigenvector(v).toArray();  covMatEigenvectors.setColumn(v,  evec);  }  final  RealMatrix  tmpMatrix  =  covMatEigenvectors.transpose();  for  (int  row  =  0;  row  <  dim;  row++)  {  final  double  factor  =  FastMath.sqrt(covMatEigenvalues[row]);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	139	139	1	replace	    double  dim  =  FastMath.sqrt(covMatEigenvalues[i]);		non-compiled	[CE]  variable  dim  is  already  defined  in  constructor  MultivariateNormalDistribution(RandomGenerator,double[],double[][])	56	None	add
8	[BUG]  [BUGGY]    final  double[][]  dim  =  FastMath.sqrt(covMatEigenvalues[i]);  [CE]  variable  dim  is  already  defined  in  constructor  MultivariateNormalDistribution(RandomGenerator,double[],double[][])  [FE]      AssertionError  [CONTEXT]    final  double[]  covMatEigenvalues  =  covMatDec.getRealEigenvalues();  for  (int  i  =  0;  i  <  covMatEigenvalues.length;  i++)  {  if  (covMatEigenvalues[i]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(covMatEigenvalues[i],  i,  0);  }  }    [BUGGY]    final  double[][]  dim  =  FastMath.sqrt(covMatEigenvalues[i]);  [BUGGY]  final  Array2DRowRealMatrix  covMatEigenvectors  =  new  Array2DRowRealMatrix(dim,  dim);  for  (int  v  =  0;  v  <  dim;  v++)  {  final  double[]  evec  =  covMatDec.getEigenvector(v).toArray();  covMatEigenvectors.setColumn(v,  evec);  }  final  RealMatrix  tmpMatrix  =  covMatEigenvectors.transpose();  for  (int  row  =  0;  row  <  dim;  row++)  {  final  double  factor  =  FastMath.sqrt(covMatEigenvalues[row]);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	139	139	1	replace	    final  double[][]  dim  =  FastMath.sqrt(covMatEigenvalues[i]);		non-compiled	[CE]  variable  dim  is  already  defined  in  constructor  MultivariateNormalDistribution(RandomGenerator,double[],double[][])	56	None	add
9	[BUG]  [BUGGY]    final  double  dim  =  FastMath.sqrt(covMatEigenvalues[i]);  [CE]  variable  dim  is  already  defined  in  constructor  MultivariateNormalDistribution(RandomGenerator,double[],double[][])  [FE]        AssertionError  [CONTEXT]    final  double[]  covMatEigenvalues  =  covMatDec.getRealEigenvalues();  for  (int  i  =  0;  i  <  covMatEigenvalues.length;  i++)  {  if  (covMatEigenvalues[i]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(covMatEigenvalues[i],  i,  0);  }  }    [BUGGY]    final  double  dim  =  FastMath.sqrt(covMatEigenvalues[i]);  [BUGGY]  final  Array2DRowRealMatrix  covMatEigenvectors  =  new  Array2DRowRealMatrix(dim,  dim);  for  (int  v  =  0;  v  <  dim;  v++)  {  final  double[]  evec  =  covMatDec.getEigenvector(v).toArray();  covMatEigenvectors.setColumn(v,  evec);  }  final  RealMatrix  tmpMatrix  =  covMatEigenvectors.transpose();  for  (int  row  =  0;  row  <  dim;  row++)  {  final  double  factor  =  FastMath.sqrt(covMatEigenvalues[row]);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	139	139	1	replace	    final  double  dim  =  FastMath.sqrt(covMatEigenvalues[i]);		non-compiled	[CE]  variable  dim  is  already  defined  in  constructor  MultivariateNormalDistribution(RandomGenerator,double[],double[][])	56	None	add
10	[BUG]  [BUGGY]  final  Array2DRowRealMatrix  covMatEigenvectors  =  new  Array2DRowRealMatrix(dim,  covarianceMatrixInverse);  [CE]  no  suitable  constructor  found  for  Array2DRowRealMatrix(int,RealMatrix)  [FE]    AssertionError  [CONTEXT]    final  double[]  covMatEigenvalues  =  covMatDec.getRealEigenvalues();  for  (int  i  =  0;  i  <  covMatEigenvalues.length;  i++)  {  if  (covMatEigenvalues[i]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(covMatEigenvalues[i],  i,  0);  }  }    [BUGGY]  final  Array2DRowRealMatrix  covMatEigenvectors  =  new  Array2DRowRealMatrix(dim,  covarianceMatrixInverse);  [BUGGY]  for  (int  v  =  0;  v  <  dim;  v++)  {  final  double[]  evec  =  covMatDec.getEigenvector(v).toArray();  covMatEigenvectors.setColumn(v,  evec);  }  final  RealMatrix  tmpMatrix  =  covMatEigenvectors.transpose();  for  (int  row  =  0;  row  <  dim;  row++)  {  final  double  factor  =  FastMath.sqrt(covMatEigenvalues[row]);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	139	139	1	replace	final  Array2DRowRealMatrix  covMatEigenvectors  =  new  Array2DRowRealMatrix(dim,  covarianceMatrixInverse);	final  Array2DRowRealMatrix  covMatEigenvectors  =  new  Array2DRowRealMatrix(dim,  dim);  	non-compiled	[CE]  no  suitable  constructor  found  for  Array2DRowRealMatrix(int,RealMatrix)	55	None	replace
11	[BUG]  [BUGGY]    double  dim  =  FastMath.sqrt(covMatEigenvalues[row]);  [CE]  variable  dim  is  already  defined  in  constructor  MultivariateNormalDistribution(RandomGenerator,double[],double[][])  [FE]    AssertionError  [CONTEXT]    final  double[]  covMatEigenvalues  =  covMatDec.getRealEigenvalues();  for  (int  i  =  0;  i  <  covMatEigenvalues.length;  i++)  {  if  (covMatEigenvalues[i]  <  0)  {  throw  new  NonPositiveDefiniteMatrixException(covMatEigenvalues[i],  i,  0);  }  }    [BUGGY]    double  dim  =  FastMath.sqrt(covMatEigenvalues[row]);  [BUGGY]  final  Array2DRowRealMatrix  covMatEigenvectors  =  new  Array2DRowRealMatrix(dim,  dim);  for  (int  v  =  0;  v  <  dim;  v++)  {  final  double[]  evec  =  covMatDec.getEigenvector(v).toArray();  covMatEigenvectors.setColumn(v,  evec);  }  final  RealMatrix  tmpMatrix  =  covMatEigenvectors.transpose();  for  (int  row  =  0;  row  <  dim;  row++)  {  final  double  factor  =  FastMath.sqrt(covMatEigenvalues[row]);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	139	139	1	replace	    double  dim  =  FastMath.sqrt(covMatEigenvalues[row]);		non-compiled	[CE]  variable  dim  is  already  defined  in  constructor  MultivariateNormalDistribution(RandomGenerator,double[],double[][])	56	None	add
