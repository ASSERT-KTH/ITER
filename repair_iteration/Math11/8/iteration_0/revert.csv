projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java234doublesum=0;
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java234doublesum=1;
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java234
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java234double[]preMultiplied=covarianceMatrixInverse.preMultiply(centered);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java234double[]preMultiplied=covarianceMatrixInverse.preMultiply(preMultiplied);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java234finaldouble[]preMultiplied=covarianceMatrixInverse.preMultiply(centered);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java234doublepreMultiplied=covarianceMatrixInverse.preMultiply(preMultiplied);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java234doublepreMultiplied=covarianceMatrixInverse.preMultiply(centered);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java234doublesum=(preMultiplied.length<1)?0:preMultiplied[0].doubleValue();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java234double[]preMultiplied=covarianceMatrixInverse.preMultiply(preservec);
