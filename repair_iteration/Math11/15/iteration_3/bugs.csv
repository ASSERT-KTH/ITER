bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      NonPositiveDefiniteMatrixException  {      [BUGGY]  super(rng,  covariances[0].length);  [BUGGY]        final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	add	super(rng,  covariances[0].length);	  super(rng,    covariances.length);    super(rng,    covariances[0].length);    	compilable	  [FE]  AssertionError  	5	1	replace
2	[BUG]  [BUGGY]  super(rng,  covariances[0].length);  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      NonPositiveDefiniteMatrixException  {      [BUGGY]  super(rng,  covariances[0].length);  [BUGGY]        final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	super(rng,  covariances[0].length);	  super(rng,    covariances.length);    super(rng,    covariances[0].length);    	compilable	  [FE]  AssertionError  	5	1	replace
3	[BUG]  [BUGGY]  super(rng,  0,  covariances[0].length);  [CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      NonPositiveDefiniteMatrixException  {      [BUGGY]  super(rng,  0,  covariances[0].length);  [BUGGY]        final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	super(rng,  0,  covariances[0].length);	  super(rng,    covariances.length);    super(rng,    covariances[0].length);    	non-compiled	[CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;	5	None	replace
4	[BUG]  [BUGGY]  RandomGenerator  rng  =  getRandomGenerator(random,  mean);  [CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      NonPositiveDefiniteMatrixException  {      [BUGGY]  RandomGenerator  rng  =  getRandomGenerator(random,  mean);  [BUGGY]      super(rng,  means.length);  final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	RandomGenerator  rng  =  getRandomGenerator(random,  mean);	  RandomGenerator    rng    =    getRandomGenerator(random);    	non-compiled	[CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;	18	None	replace
5	[BUG]  [BUGGY]  RandomGenerator  rng  =  getRandomGenerator(random,  null);  [CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      NonPositiveDefiniteMatrixException  {      [BUGGY]  RandomGenerator  rng  =  getRandomGenerator(random,  null);  [BUGGY]      super(rng,  means.length);  final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	RandomGenerator  rng  =  getRandomGenerator(random,  null);	  RandomGenerator    rng    =    getRandomGenerator(random);    	non-compiled	[CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;	18	None	replace
6	[BUG]  [BUGGY]  super(rng,  covariances.length);  rng  =  new  RandomGenerator(null,  means.length);  [CE]  RandomGenerator  is  abstract;  cannot  be  instantiated  [FE]        AssertionError      [CONTEXT]      NonPositiveDefiniteMatrixException  {      [BUGGY]  super(rng,  covariances.length);  rng  =  new  RandomGenerator(null,  means.length);  [BUGGY]        final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	super(rng,  covariances.length);  rng  =  new  RandomGenerator(null,  means.length);	  super(rng,    covariances.length);    rng    =    new    RandomGenerator(null,    col);    	non-compiled	[CE]  RandomGenerator  is  abstract;  cannot  be  instantiated	20	None	replace
7	[BUG]  [BUGGY]  super(rng,  covariances.length);  rng  =  new  RandomGenerator(null,  mean);  [CE]  cannot  find  symbol  mean  [FE]          AssertionError      [CONTEXT]      NonPositiveDefiniteMatrixException  {      [BUGGY]  super(rng,  covariances.length);  rng  =  new  RandomGenerator(null,  mean);  [BUGGY]        final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	super(rng,  covariances.length);  rng  =  new  RandomGenerator(null,  mean);	  super(rng,    covariances.length);    rng    =    new    RandomGenerator(null,    col);    	non-compiled	[CE]  cannot  find  symbol  mean	20	None	replace
8	[BUG]  [BUGGY]  rng  =  new  RandomGenerator(null,  null);  [CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      NonPositiveDefiniteMatrixException  {      [BUGGY]  rng  =  new  RandomGenerator(null,  null);  [BUGGY]        final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	rng  =  new  RandomGenerator(null,  null);	  super(rng,    covariances.length);    rng    =    new    RandomGenerator(null,    null);    	non-compiled	[CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;	13	None	replace
9	[BUG]  [BUGGY]  super(null,  covariances.length);  rng  =  new  RandomGenerator(null,  null);  [CE]  RandomGenerator  is  abstract;  cannot  be  instantiated  [FE]            AssertionError      [CONTEXT]      NonPositiveDefiniteMatrixException  {      [BUGGY]  super(null,  covariances.length);  rng  =  new  RandomGenerator(null,  null);  [BUGGY]        final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	super(null,  covariances.length);  rng  =  new  RandomGenerator(null,  null);	  super(rng,    covariances.length);    rng    =    new    RandomGenerator(null,    null);    	non-compiled	[CE]  RandomGenerator  is  abstract;  cannot  be  instantiated	13	None	replace
10	[BUG]  [BUGGY]  super(mean,  covariances.length);  rng  =  new  RandomGenerator(null,  means);  [CE]  cannot  find  symbol  mean  [FE]        AssertionError      [CONTEXT]      NonPositiveDefiniteMatrixException  {      [BUGGY]  super(mean,  covariances.length);  rng  =  new  RandomGenerator(null,  means);  [BUGGY]        final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	super(mean,  covariances.length);  rng  =  new  RandomGenerator(null,  means);	  super(rng,    covariances.length);    rng    =    new    RandomGenerator(null,    means);    	non-compiled	[CE]  cannot  find  symbol  mean	12	None	replace
11	[BUG]  [BUGGY]  rng  =  new  RandomGenerator(null,  means);  [CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      NonPositiveDefiniteMatrixException  {      [BUGGY]  rng  =  new  RandomGenerator(null,  means);  [BUGGY]        final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	rng  =  new  RandomGenerator(null,  means);	  super(rng,    covariances.length);    rng    =    new    RandomGenerator(null,    means);    	non-compiled	[CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;	12	None	replace
12	[BUG]  [BUGGY]  super(mean,  mean.length);  [CE]  cannot  find  symbol  mean  [FE]                AssertionError      [CONTEXT]      NonPositiveDefiniteMatrixException  {      [BUGGY]  super(mean,  mean.length);  [BUGGY]        final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	super(mean,  mean.length);	  super(covMatEigenvalues,    mean.length);    	non-compiled	[CE]  cannot  find  symbol  mean	9	None	replace
13	[BUG]  [BUGGY]  super(mean.length,  mean.length);  [CE]  cannot  find  symbol  mean  [FE]                  AssertionError      [CONTEXT]      NonPositiveDefiniteMatrixException  {      [BUGGY]  super(mean.length,  mean.length);  [BUGGY]        final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	super(mean.length,  mean.length);	  super(covMatEigenvalues,    mean.length);    	non-compiled	[CE]  cannot  find  symbol  mean	9	None	replace
14	[BUG]  [BUGGY]  RandomGenerator  rng  =  new  RandomGenerator(null,  null,  means,  col);  [CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      NonPositiveDefiniteMatrixException  {      [BUGGY]  RandomGenerator  rng  =  new  RandomGenerator(null,  null,  means,  col);  [BUGGY]      super(rng,  means.length);  final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	RandomGenerator  rng  =  new  RandomGenerator(null,  null,  means,  col);	  RandomGenerator    rng    =    new    RandomGenerator(null,    null,    means);    	non-compiled	[CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;	14	None	replace
15	[BUG]  [BUGGY]  RandomGenerator  rng  =  new  RandomGenerator(null,  null,  covariances,  col);  [CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      NonPositiveDefiniteMatrixException  {      [BUGGY]  RandomGenerator  rng  =  new  RandomGenerator(null,  null,  covariances,  col);  [BUGGY]      super(rng,  means.length);  final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	RandomGenerator  rng  =  new  RandomGenerator(null,  null,  covariances,  col);	  RandomGenerator    rng    =    new    RandomGenerator(null,    null,    covariances.length);    	non-compiled	[CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;	2	None	replace
16	[BUG]  [BUGGY]  RandomGenerator  rng  =  new  RandomGenerator(null,  null,  covariances.length,  factor);  [CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      NonPositiveDefiniteMatrixException  {      [BUGGY]  RandomGenerator  rng  =  new  RandomGenerator(null,  null,  covariances.length,  factor);  [BUGGY]      super(rng,  means.length);  final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	RandomGenerator  rng  =  new  RandomGenerator(null,  null,  covariances.length,  factor);	  RandomGenerator    rng    =    new    RandomGenerator(null,    null,    covariances.length);    	non-compiled	[CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;	2	None	replace
17	[BUG]  [BUGGY]  rng  =  new  RandomGenerator(null,  null,  0,  covariances.length);  [CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      NonPositiveDefiniteMatrixException  {      [BUGGY]  rng  =  new  RandomGenerator(null,  null,  0,  covariances.length);  [BUGGY]        final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	rng  =  new  RandomGenerator(null,  null,  0,  covariances.length);	  super(rng,    covariances.length);    rng    =    new    RandomGenerator(null,    null,    0,    covariances.length);    	non-compiled	[CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;	6	None	replace
18	[BUG]  [BUGGY]  this.rng  =  new  RandomGenerator(null,  null,  0,  covariances.length);  [CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      NonPositiveDefiniteMatrixException  {      [BUGGY]  this.rng  =  new  RandomGenerator(null,  null,  0,  covariances.length);  [BUGGY]        final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	this.rng  =  new  RandomGenerator(null,  null,  0,  covariances.length);	  super(rng,    covariances.length);    rng    =    new    RandomGenerator(null,    null,    0,    covariances.length);    	non-compiled	[CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;	6	None	replace
19	[BUG]  [BUGGY]  RandomGenerator  rng  =(RandomGenerator)this.components.clone();  [CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      NonPositiveDefiniteMatrixException  {      [BUGGY]  RandomGenerator  rng  =(RandomGenerator)this.components.clone();  [BUGGY]      super(rng,  means.length);  final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	RandomGenerator  rng  =(RandomGenerator)this.components.clone();	  RandomGenerator    rng    =(RandomGenerator)components.clone();    	non-compiled	[CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;	15	None	replace
20	[BUG]  [BUGGY]  RandomGenerator  rng  =  getRandomGenerator(row,  column);  [CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      NonPositiveDefiniteMatrixException  {      [BUGGY]  RandomGenerator  rng  =  getRandomGenerator(row,  column);  [BUGGY]      super(rng,  means.length);  final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	RandomGenerator  rng  =  getRandomGenerator(row,  column);	  RandomGenerator    rng    =    getRandomGenerator(row,    col);    	non-compiled	[CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;	7	None	replace
21	[BUG]  [BUGGY]  RandomGenerator  rng  =  getRandomGenerator(row,  col,  factor);  [CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      NonPositiveDefiniteMatrixException  {      [BUGGY]  RandomGenerator  rng  =  getRandomGenerator(row,  col,  factor);  [BUGGY]      super(rng,  means.length);  final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	RandomGenerator  rng  =  getRandomGenerator(row,  col,  factor);	  RandomGenerator    rng    =    getRandomGenerator(row,    col);    	non-compiled	[CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;	7	None	replace
22	[BUG]  [BUGGY]  RandomGenerator  rng  =  new  RandomGenerator(null,  null,  covariances,  factor);  [CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      NonPositiveDefiniteMatrixException  {      [BUGGY]  RandomGenerator  rng  =  new  RandomGenerator(null,  null,  covariances,  factor);  [BUGGY]      super(rng,  means.length);  final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	RandomGenerator  rng  =  new  RandomGenerator(null,  null,  covariances,  factor);	  RandomGenerator    rng    =    new    RandomGenerator(null,    null,    covariances);    	non-compiled	[CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;	1	None	replace
23	[BUG]  [BUGGY]  RandomGenerator  rng  =  new  RandomGenerator(null,  null,  means,  covariances);  [CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      NonPositiveDefiniteMatrixException  {      [BUGGY]  RandomGenerator  rng  =  new  RandomGenerator(null,  null,  means,  covariances);  [BUGGY]      super(rng,  means.length);  final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	RandomGenerator  rng  =  new  RandomGenerator(null,  null,  means,  covariances);	  RandomGenerator    rng    =    new    RandomGenerator(null,    null,    covariances);    	non-compiled	[CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;	1	None	replace
24	[BUG]  [BUGGY]  super(dim,  covariances.length);  [CE]  cannot  find  symbol  dim  [FE]        AssertionError      [CONTEXT]      NonPositiveDefiniteMatrixException  {      [BUGGY]  super(dim,  covariances.length);  [BUGGY]        final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	super(dim,  covariances.length);	  super(mean,    covariances.length);    	non-compiled	[CE]  cannot  find  symbol  dim	16	None	replace
25	[BUG]  [BUGGY]  RandomGenerator  rng  =(RandomGenerator)components.get(i);  [CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      NonPositiveDefiniteMatrixException  {      [BUGGY]  RandomGenerator  rng  =(RandomGenerator)components.get(i);  [BUGGY]      super(rng,  means.length);  final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	RandomGenerator  rng  =(RandomGenerator)components.get(i);	  RandomGenerator    rng    =(RandomGenerator)components.clone();    	non-compiled	[CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;	15	None	replace
26	[BUG]  [BUGGY]  RandomGenerator  rng  =  new  RandomGenerator(null,  null,  means.length);  [CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      NonPositiveDefiniteMatrixException  {      [BUGGY]  RandomGenerator  rng  =  new  RandomGenerator(null,  null,  means.length);  [BUGGY]      super(rng,  means.length);  final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	RandomGenerator  rng  =  new  RandomGenerator(null,  null,  means.length);	  RandomGenerator    rng    =    new    RandomGenerator(null,    null,    covariances.length);    	non-compiled	[CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;	2	None	replace
27	[BUG]  [BUGGY]  RandomGenerator  rng  =  new  RandomGenerator(null,  null,  mean.length);  [CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      NonPositiveDefiniteMatrixException  {      [BUGGY]  RandomGenerator  rng  =  new  RandomGenerator(null,  null,  mean.length);  [BUGGY]      super(rng,  means.length);  final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	RandomGenerator  rng  =  new  RandomGenerator(null,  null,  mean.length);	  RandomGenerator    rng    =    new    RandomGenerator(null,    null,    covariances.length);    	non-compiled	[CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;	2	None	replace
28	[BUG]  [BUGGY]  super(null,  means.length);  rng  =  new  RandomGenerator(null,  null,  0,  covariances.length);  [CE]  RandomGenerator  is  abstract;  cannot  be  instantiated  [FE]            AssertionError      [CONTEXT]      NonPositiveDefiniteMatrixException  {      [BUGGY]  super(null,  means.length);  rng  =  new  RandomGenerator(null,  null,  0,  covariances.length);  [BUGGY]        final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	super(null,  means.length);  rng  =  new  RandomGenerator(null,  null,  0,  covariances.length);	  super(rng,    covariances.length);    rng    =    new    RandomGenerator(null,    null,    0,    covariances.length);    	non-compiled	[CE]  RandomGenerator  is  abstract;  cannot  be  instantiated	6	None	replace
29	[BUG]  [BUGGY]  super(rng,  means.length);  rng  =  new  RandomGenerator(null,  col);  [CE]  cannot  find  symbol  col  [FE]        AssertionError      [CONTEXT]      NonPositiveDefiniteMatrixException  {      [BUGGY]  super(rng,  means.length);  rng  =  new  RandomGenerator(null,  col);  [BUGGY]        final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	super(rng,  means.length);  rng  =  new  RandomGenerator(null,  col);	  super(rng,    covariances.length);    rng    =    new    RandomGenerator(null,    col);    	non-compiled	[CE]  cannot  find  symbol  col	20	None	replace
30	[BUG]  [BUGGY]  super(rng,  mean.length);  rng  =  new  RandomGenerator(null,  col);  [CE]  cannot  find  symbol  mean  [FE]          AssertionError      [CONTEXT]      NonPositiveDefiniteMatrixException  {      [BUGGY]  super(rng,  mean.length);  rng  =  new  RandomGenerator(null,  col);  [BUGGY]        final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	super(rng,  mean.length);  rng  =  new  RandomGenerator(null,  col);	  super(rng,    covariances.length);    rng    =    new    RandomGenerator(null,    col);    	non-compiled	[CE]  cannot  find  symbol  mean	20	None	replace
31	[BUG]  [BUGGY]  RandomGenerator  rng  =  getRandomGenerator(row,  col,  v);  [CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      NonPositiveDefiniteMatrixException  {      [BUGGY]  RandomGenerator  rng  =  getRandomGenerator(row,  col,  v);  [BUGGY]      super(rng,  means.length);  final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	RandomGenerator  rng  =  getRandomGenerator(row,  col,  v);	  RandomGenerator    rng    =    getRandomGenerator(row,    col);    	non-compiled	[CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;	7	None	replace
32	[BUG]  [BUGGY]  RandomGenerator  rng  =  getRandomGenerator(row,  col,  mean);  [CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      NonPositiveDefiniteMatrixException  {      [BUGGY]  RandomGenerator  rng  =  getRandomGenerator(row,  col,  mean);  [BUGGY]      super(rng,  means.length);  final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	RandomGenerator  rng  =  getRandomGenerator(row,  col,  mean);	  RandomGenerator    rng    =    getRandomGenerator(row,    col);    	non-compiled	[CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;	7	None	replace
33	[BUG]  [BUGGY]  RandomGenerator  rng  =(RandomGenerator)super.covEigenvalues.clone();  [CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      NonPositiveDefiniteMatrixException  {      [BUGGY]  RandomGenerator  rng  =(RandomGenerator)super.covEigenvalues.clone();  [BUGGY]      super(rng,  means.length);  final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	RandomGenerator  rng  =(RandomGenerator)super.covEigenvalues.clone();	  RandomGenerator    rng    =(RandomGenerator)this.covEigenvalues.clone();    	non-compiled	[CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;	17	None	replace
34	[BUG]  [BUGGY]  super(evec,  covariances.length);  [CE]  cannot  find  symbol  evec  [FE]        AssertionError      [CONTEXT]      NonPositiveDefiniteMatrixException  {      [BUGGY]  super(evec,  covariances.length);  [BUGGY]        final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	super(evec,  covariances.length);	  super(mean,    covariances.length);    	non-compiled	[CE]  cannot  find  symbol  evec	16	None	replace
35	[BUG]  [BUGGY]  RandomGenerator  rng  =  new  RandomGenerator(null,  null,  means,  factor);  [CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      NonPositiveDefiniteMatrixException  {      [BUGGY]  RandomGenerator  rng  =  new  RandomGenerator(null,  null,  means,  factor);  [BUGGY]      super(rng,  means.length);  final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	RandomGenerator  rng  =  new  RandomGenerator(null,  null,  means,  factor);	  RandomGenerator    rng    =    new    RandomGenerator(null,    null,    means);    	non-compiled	[CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;	14	None	replace
36	[BUG]  [BUGGY]  RandomGenerator  rng  =  new  RandomGenerator(null,  null,  means,  coefficients);  [CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      NonPositiveDefiniteMatrixException  {      [BUGGY]  RandomGenerator  rng  =  new  RandomGenerator(null,  null,  means,  coefficients);  [BUGGY]      super(rng,  means.length);  final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	RandomGenerator  rng  =  new  RandomGenerator(null,  null,  means,  coefficients);	  RandomGenerator    rng    =    new    RandomGenerator(null,    null,    means);    	non-compiled	[CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;	14	None	replace
37	[BUG]  [BUGGY]  RandomGenerator  rng  =  getRandomGenerator(random,  method);  [CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      NonPositiveDefiniteMatrixException  {      [BUGGY]  RandomGenerator  rng  =  getRandomGenerator(random,  method);  [BUGGY]      super(rng,  means.length);  final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	RandomGenerator  rng  =  getRandomGenerator(random,  method);	  RandomGenerator    rng    =    getRandomGenerator(random);    	non-compiled	[CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;	18	None	replace
