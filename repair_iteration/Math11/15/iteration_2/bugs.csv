bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  RandomGenerator  rng  =  new  RandomGenerator(null,  null,  covariances);  [CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;  [FE]            AssertionError    [CONTEXT]    NonPositiveDefiniteMatrixException  {    [BUGGY]  RandomGenerator  rng  =  new  RandomGenerator(null,  null,  covariances);  [BUGGY]    super(rng,  means.length);  final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	RandomGenerator  rng  =  new  RandomGenerator(null,  null,  covariances);	      RandomGenerator    rng    =    new    RandomGenerator(null,    null);    	non-compiled	[CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;	3	None	replace
2	[BUG]  [BUGGY]  RandomGenerator  rng  =  new  RandomGenerator(null,  null,  covariances.length);  [CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;  [FE]              AssertionError    [CONTEXT]    NonPositiveDefiniteMatrixException  {    [BUGGY]  RandomGenerator  rng  =  new  RandomGenerator(null,  null,  covariances.length);  [BUGGY]    super(rng,  means.length);  final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	RandomGenerator  rng  =  new  RandomGenerator(null,  null,  covariances.length);	      RandomGenerator    rng    =    new    RandomGenerator(null,    null);    	non-compiled	[CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;	3	None	replace
3	[BUG]  [BUGGY]  RandomGenerator  rng  =(RandomGenerator)null.clone();  [CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]    NonPositiveDefiniteMatrixException  {    [BUGGY]  RandomGenerator  rng  =(RandomGenerator)null.clone();  [BUGGY]    super(rng,  means.length);  final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	RandomGenerator  rng  =(RandomGenerator)null.clone();	      RandomGenerator    rng    =(RandomGenerator)null;    	non-compiled	[CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;	1	None	replace
4	[BUG]  [BUGGY]  super(rng,  covariances.length);  super(rng,  covariances.length);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]    AssertionError    [CONTEXT]    NonPositiveDefiniteMatrixException  {    [BUGGY]  super(rng,  covariances.length);  super(rng,  covariances.length);  [BUGGY]      final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	super(rng,    covariances.length);    super(rng,  covariances.length);	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	4	None	add
5	[BUG]  [BUGGY]  super(rng,  covariances.length);  super(rng,  covariances[0].length);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]      AssertionError    [CONTEXT]    NonPositiveDefiniteMatrixException  {    [BUGGY]  super(rng,  covariances.length);  super(rng,  covariances[0].length);  [BUGGY]      final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	super(rng,    covariances.length);    super(rng,  covariances[0].length);	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	4	None	add
6	[BUG]  [BUGGY]  super(rng,  covariances.length);  rng  =  new  RandomGenerator(null,  null,  0,  covariances.length);  [CE]  RandomGenerator  is  abstract;  cannot  be  instantiated  [FE]        AssertionError    [CONTEXT]    NonPositiveDefiniteMatrixException  {    [BUGGY]  super(rng,  covariances.length);  rng  =  new  RandomGenerator(null,  null,  0,  covariances.length);  [BUGGY]      final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	super(rng,    covariances.length);    rng  =  new  RandomGenerator(null,  null,  0,  covariances.length);	  	non-compiled	[CE]  RandomGenerator  is  abstract;  cannot  be  instantiated	4	None	add
7	[BUG]  [BUGGY]  RandomGenerator  rng  =  getRandomGenerator(row,  col);  [CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    NonPositiveDefiniteMatrixException  {    [BUGGY]  RandomGenerator  rng  =  getRandomGenerator(row,  col);  [BUGGY]    super(rng,  means.length);  final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	RandomGenerator  rng  =  getRandomGenerator(row,  col);	      RandomGenerator    rng    =    getRandomGenerator();    	non-compiled	[CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;	2	None	replace
8	[BUG]  [BUGGY]  super(covMatEigenvalues,  means.length);  [CE]  cannot  find  symbol  covMatEigenvalues  [FE]          AssertionError    [CONTEXT]    NonPositiveDefiniteMatrixException  {    [BUGGY]  super(covMatEigenvalues,  means.length);  [BUGGY]      final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	super(covMatEigenvalues,  means.length);	  super(evec,    means.length);    	non-compiled	[CE]  cannot  find  symbol  covMatEigenvalues	6	None	replace
9	[BUG]  [BUGGY]  super(covMatEigenvalues,  mean.length);  [CE]  cannot  find  symbol  covMatEigenvalues  [FE]            AssertionError    [CONTEXT]    NonPositiveDefiniteMatrixException  {    [BUGGY]  super(covMatEigenvalues,  mean.length);  [BUGGY]      final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	super(covMatEigenvalues,  mean.length);	  super(evec,    means.length);    	non-compiled	[CE]  cannot  find  symbol  covMatEigenvalues	6	None	replace
10	[BUG]  [BUGGY]  RandomGenerator  rng  =(RandomGenerator)covMatEigenvalues.clone();  [CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]    NonPositiveDefiniteMatrixException  {    [BUGGY]  RandomGenerator  rng  =(RandomGenerator)covMatEigenvalues.clone();  [BUGGY]    super(rng,  means.length);  final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	RandomGenerator  rng  =(RandomGenerator)covMatEigenvalues.clone();	      RandomGenerator    rng    =(RandomGenerator)this.covMatEigenvalues.clone();    	non-compiled	[CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;	8	None	replace
11	[BUG]  [BUGGY]  super(rng,  mean.length);  [CE]  cannot  find  symbol  mean  [FE]    AssertionError    [CONTEXT]    NonPositiveDefiniteMatrixException  {    [BUGGY]  super(rng,  mean.length);  [BUGGY]      final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	super(rng,  mean.length);	  super(rng,    covariances.length);    	non-compiled	[CE]  cannot  find  symbol  mean	5	None	replace
12	[BUG]  [BUGGY]  super(rng,  covariances.length);  rng  =  new  RandomGenerator(null,  means);  [CE]  RandomGenerator  is  abstract;  cannot  be  instantiated  [FE]    AssertionError    [CONTEXT]    NonPositiveDefiniteMatrixException  {    [BUGGY]  super(rng,  covariances.length);  rng  =  new  RandomGenerator(null,  means);  [BUGGY]      final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	super(rng,    covariances.length);    rng  =  new  RandomGenerator(null,  means);	  	non-compiled	[CE]  RandomGenerator  is  abstract;  cannot  be  instantiated	4	None	add
13	[BUG]  [BUGGY]  super(rng,  covariances.length);  rng  =  new  RandomGenerator(null,  null);  [CE]  RandomGenerator  is  abstract;  cannot  be  instantiated  [FE]      AssertionError    [CONTEXT]    NonPositiveDefiniteMatrixException  {    [BUGGY]  super(rng,  covariances.length);  rng  =  new  RandomGenerator(null,  null);  [BUGGY]      final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	super(rng,    covariances.length);    rng  =  new  RandomGenerator(null,  null);	  	non-compiled	[CE]  RandomGenerator  is  abstract;  cannot  be  instantiated	4	None	add
14	[BUG]  [BUGGY]  RandomGenerator  rng  =  new  RandomGenerator(null,  null,  means);  [CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;  [FE]            AssertionError    [CONTEXT]    NonPositiveDefiniteMatrixException  {    [BUGGY]  RandomGenerator  rng  =  new  RandomGenerator(null,  null,  means);  [BUGGY]    super(rng,  means.length);  final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	RandomGenerator  rng  =  new  RandomGenerator(null,  null,  means);	      RandomGenerator    rng    =    new    RandomGenerator(null,    null);    	non-compiled	[CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;	3	None	replace
15	[BUG]  [BUGGY]  RandomGenerator  rng  =(RandomGenerator)components.clone();  [CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]    NonPositiveDefiniteMatrixException  {    [BUGGY]  RandomGenerator  rng  =(RandomGenerator)components.clone();  [BUGGY]    super(rng,  means.length);  final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	RandomGenerator  rng  =(RandomGenerator)components.clone();	      RandomGenerator    rng    =(RandomGenerator)this.covMatEigenvalues.clone();    	non-compiled	[CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;	8	None	replace
16	[BUG]  [BUGGY]  super(mean,  covariances.length);  [CE]  cannot  find  symbol  mean  [FE]    AssertionError    [CONTEXT]    NonPositiveDefiniteMatrixException  {    [BUGGY]  super(mean,  covariances.length);  [BUGGY]      final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	super(mean,  covariances.length);	  super(rng,    covariances.length);    	non-compiled	[CE]  cannot  find  symbol  mean	5	None	replace
17	[BUG]  [BUGGY]  RandomGenerator  rng  =(RandomGenerator)this.covEigenvalues.clone();  [CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]    NonPositiveDefiniteMatrixException  {    [BUGGY]  RandomGenerator  rng  =(RandomGenerator)this.covEigenvalues.clone();  [BUGGY]    super(rng,  means.length);  final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	RandomGenerator  rng  =(RandomGenerator)this.covEigenvalues.clone();	      RandomGenerator    rng    =(RandomGenerator)this.covMatEigenvalues.clone();    	non-compiled	[CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;	8	None	replace
18	[BUG]  [BUGGY]  RandomGenerator  rng  =  getRandomGenerator(random);  [CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    NonPositiveDefiniteMatrixException  {    [BUGGY]  RandomGenerator  rng  =  getRandomGenerator(random);  [BUGGY]    super(rng,  means.length);  final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	RandomGenerator  rng  =  getRandomGenerator(random);	      RandomGenerator    rng    =    getRandomGenerator();    	non-compiled	[CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;	2	None	replace
19	[BUG]  [BUGGY]  super(dim,  means.length);  [CE]  cannot  find  symbol  dim  [FE]        AssertionError    [CONTEXT]    NonPositiveDefiniteMatrixException  {    [BUGGY]  super(dim,  means.length);  [BUGGY]      final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	super(dim,  means.length);	  super(mean,    means.length);    	non-compiled	[CE]  cannot  find  symbol  dim	7	None	replace
20	[BUG]  [BUGGY]  super(rng,  covariances.length);  rng  =  new  RandomGenerator(null,  col);  [CE]  cannot  find  symbol  col  [FE]    AssertionError    [CONTEXT]    NonPositiveDefiniteMatrixException  {    [BUGGY]  super(rng,  covariances.length);  rng  =  new  RandomGenerator(null,  col);  [BUGGY]      final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	super(rng,    covariances.length);    rng  =  new  RandomGenerator(null,  col);	  	non-compiled	[CE]  cannot  find  symbol  col	4	None	add
