bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    RandomGenerator  rng  =(RandomGenerator)null;  [CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;  [FE]    AssertionError  [CONTEXT]  NonPositiveDefiniteMatrixException  {  [BUGGY]    RandomGenerator  rng  =(RandomGenerator)null;  [BUGGY]  super(rng,  means.length);  final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	    RandomGenerator  rng  =(RandomGenerator)null;		non-compiled	[CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;	30	None	add
2	[BUG]  [BUGGY]    RandomGenerator  rng  =  getRandomGenerator();  [CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;  [FE]      AssertionError  [CONTEXT]  NonPositiveDefiniteMatrixException  {  [BUGGY]    RandomGenerator  rng  =  getRandomGenerator();  [BUGGY]  super(rng,  means.length);  final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	    RandomGenerator  rng  =  getRandomGenerator();		non-compiled	[CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;	30	None	add
3	[BUG]  [BUGGY]    RandomGenerator  rng  =  new  RandomGenerator(null,  null);  [CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;  [FE]        AssertionError  [CONTEXT]  NonPositiveDefiniteMatrixException  {  [BUGGY]    RandomGenerator  rng  =  new  RandomGenerator(null,  null);  [BUGGY]  super(rng,  means.length);  final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	    RandomGenerator  rng  =  new  RandomGenerator(null,  null);		non-compiled	[CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;	30	None	add
4	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  NonPositiveDefiniteMatrixException  {  [BUGGY]  super(rng,  covariances.length);  [BUGGY]    final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	add	super(rng,  covariances.length);	super(rng,  means.length);  	compilable	  [FE]  AssertionError  	29	1	replace
5	[BUG]  [BUGGY]  super(rng,  covariances.length);  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  NonPositiveDefiniteMatrixException  {  [BUGGY]  super(rng,  covariances.length);  [BUGGY]    final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	super(rng,  covariances.length);	super(rng,  means.length);  	compilable	  [FE]  AssertionError  	29	1	replace
6	[BUG]  [BUGGY]  super(evec,  means.length);  [CE]  cannot  find  symbol  evec  [FE]      AssertionError  [CONTEXT]  NonPositiveDefiniteMatrixException  {  [BUGGY]  super(evec,  means.length);  [BUGGY]    final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	super(evec,  means.length);	super(rng,  means.length);  	non-compiled	[CE]  cannot  find  symbol  evec	29	None	replace
7	[BUG]  [BUGGY]  super(mean,  means.length);  [CE]  cannot  find  symbol  mean  [FE]    AssertionError  [CONTEXT]  NonPositiveDefiniteMatrixException  {  [BUGGY]  super(mean,  means.length);  [BUGGY]    final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	super(mean,  means.length);	super(rng,  means.length);  	non-compiled	[CE]  cannot  find  symbol  mean	29	None	replace
8	[BUG]  [BUGGY]    RandomGenerator  rng  =(RandomGenerator)this.covMatEigenvalues.clone();  [CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;  [FE]    AssertionError  [CONTEXT]  NonPositiveDefiniteMatrixException  {  [BUGGY]    RandomGenerator  rng  =(RandomGenerator)this.covMatEigenvalues.clone();  [BUGGY]  super(rng,  means.length);  final  int  dim  =  means.length;  if  (covariances.length  !=  dim)  {  throw  new  DimensionMismatchException(covariances.length,  dim);  }  for  (int  i  =  0;  i  <  dim;  i++)  {  if  (dim  !=  covariances[i].length)  {  throw  new  DimensionMismatchException(covariances[i].length,  dim);  [CLASS]  MultivariateNormalDistribution  [METHOD]  <init>  [RETURN_TYPE]  RandomGenerator,double[],double[][])  RandomGenerator  rng  final  double[]  means  final  double[][]  covariances  [VARIABLES]  EigenDecomposition  covMatDec  boolean  double[]  covMatEigenvalues  evec  means  RealMatrix  covarianceMatrix  covarianceMatrixInverse  samplingMatrix  tmpMatrix  Array2DRowRealMatrix  covMatEigenvectors  double  covarianceMatrixDeterminant  factor  double[][]  covariances  RandomGenerator  rng  int  col  dim  i  row  v  	projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java	0.4472135954999579	103	103	1	replace	    RandomGenerator  rng  =(RandomGenerator)this.covMatEigenvalues.clone();		non-compiled	[CE]  constructor  AbstractMultivariateRealDistribution  in  class  AbstractMultivariateRealDistribution  cannot  be  applied  to  given  types;	30	None	add
