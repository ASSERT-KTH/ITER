projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java103
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java103RandomGeneratorrng=(RandomGenerator)null;
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java103RandomGeneratorrng=getRandomGenerator();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java103RandomGeneratorrng=newRandomGenerator(null,null);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java103super(rng,means.length);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java103super(rng,covariances.length);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java103super(evec,means.length);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java103super(mean,means.length);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java103RandomGeneratorrng=(RandomGenerator)this.covMatEigenvalues.clone();
