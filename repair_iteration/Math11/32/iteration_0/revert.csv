projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145finalRealMatrixtmpMatrix=covMatEigenvectors.transpose();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145finalRealMatrixtmpMatrix=covMatEigenvectors.multiply();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145finalRealMatrixtmpMatrix=covMatEigenvectors.transpose(dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145finaldouble[][]covariances=covMatEigenvectors.transpose();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145finaldouble[][]covariances=covMatEigenvectors.getColumns();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145finaldouble[][]covariances=covMatEigenvectors.toArray();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145double[][]covariances=covMatEigenvectors.transpose();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145double[][]covariances=covMatEigenvectors.multiplyEntry(dim,v);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145double[][]covariances=covMatEigenvectors.multiplyEntry(dim,v,covariances);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145finalRealMatrixtmpMatrix=covMatEigenvectors.multiplyEntry(dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145finalRealMatrixtmpMatrix=covMatEigenvectors.multiply(tmpMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145double[][]covariances=covMatEigenvectors.toArray();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145if(covMatEigenvectors!=null){for(intdim=0;dim<dim;v++){double[][]covariances=covMatEigenvectors.transpose();for(introw=0;row<
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145if(covMatEigenvectors!=null){for(intdim=0;dim<dim;v++){finaldouble[][]covariances=covMatEigenvectors.transpose();for(introw=0;row<
