projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145finalRealMatrixtmpMatrix=covMatEigenvectors.transpose();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145finalRealMatrixtmpMatrix=covMatEigenvectors.multiply();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145finalRealMatrixtmpMatrix=covMatEigenvectors.transpose(dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145finaldouble[][]covariances=covMatEigenvectors.transpose();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145finaldouble[][]covariances=covMatEigenvectors.getColumns();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145finaldouble[][]covariances=covMatEigenvectors.toArray();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145double[][]covariances=covMatEigenvectors.transpose();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145double[][]covariances=covMatEigenvectors.multiplyEntry(dim,v);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145double[][]covariances=covMatEigenvectors.multiplyEntry(dim,v,covariances);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145finalRealMatrixtmpMatrix=covMatEigenvectors.multiplyEntry(dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145finalRealMatrixtmpMatrix=covMatEigenvectors.multiply(tmpMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145double[][]covariances=covMatEigenvectors.toArray();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145if(covMatEigenvectors!=null){for(intdim=0;dim<dim;v++){double[][]covariances=covMatEigenvectors.transpose();for(introw=0;row<
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145if(covMatEigenvectors!=null){for(intdim=0;dim<dim;v++){finaldouble[][]covariances=covMatEigenvectors.transpose();for(introw=0;row<
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145finalRealMatrixtmpMatrix=covMatEigenvectors.multiplyEntry(dim,v);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145finalRealMatrixtmpMatrix=covMatEigenvectors.multiply(dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145double[][]covariances=covMatEigenvectors.multiplyEntry(dim,v,means);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145finalRealMatrixtmpMatrix=covMatEigenvectors.multiply(sampleMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145for(intdim=0;dim<dim;v++){double[][]covariances=covMatEigenvectors.transpose();for(introw=0;row<
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145finalRealMatrixtmpMatrix=covMatEigenvectors.transpose(dim,samplingMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145finalRealMatrixtmpMatrix=covMatEigenvectors.transpose(dim,covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145finaldouble[][]covariances=covMatEigenvectors.transpose(dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145finalRealMattrixtmpMatrix=covMatEigenvectors.transpose();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145finalRealMatrixtmpMatrix=covMatEigenvectors.multiplyEntry(dim,covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145finalRealMatrixtmpMatrix=covMatEigenvectors.multiplyEntry(dim,mean);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145finaldouble[][]covariances=covMatEigenvectors.getRows();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145double[][]covariances=covMatEigenvectors.multiplyEntry(dim,col);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145double[][]covariances=covMatEigenvectors.getColumns();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145double[][]covariances=covMatEigenvectors.multiplyEntry(dim,v,mean);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145double[][]covariances=covMatEigenvectors.toArray(dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145double[][]covariances=covMatEigenvectors.multiplyEntry(dim,dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145double[][]covariances=covMatEigenvectors.multiply();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145finalRealMatrixtmpMatrix=covMatEigenvectors.multiplyEntry(dim,covarianceMatrixDeterminant);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145finalRealMatrixtmpMatrix=covMatEigenvectors.multiply(covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145finalRealMatrixtmpMatrix=covMatEigenvectors.multiply(covMatDec);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145double[][]covariances=covMatEigenvectors.multiplyEntry(v,dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145double[][]covariances=covMatEigenvectors.multiply(covMatEigenvectors);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145finalRealMatrixtmpMatrix=covMatEigenvectors.transpose(dim,covarianceMatrixDeterminant);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145finalRealMatrixtmpMatrix=covMatEigenvectors.multiplyEntry();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java145finalRealMatrixtmpMatrix=covMatEigenvectors.multiply(matrix);
