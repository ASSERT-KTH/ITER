projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142covMatEigenvectors.setColumn(dim,evec);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142covMatEigenvectors.setColumn(evec,evec);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142covMatEigenvectors.setColumn(dim,v);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142covMatEigenvectors.setColumn(v,evec);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142covMatEigenvectors.setColumn(evec,v);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142if(evec!=null){for(inti=0;i<covMatEigenvalues.length;i++){if(covMatEigenvalues[i]<0){thrownewNonPositiveDefiniteMatrixException(covMatEigenvalues[i],
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142if(evec!=null){for(inti=0;i<covMatEigenvalues.length;i++){if(covMatEigenvalues[i]<0){thrownewNonPositiveDefiniteM
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142if(evec!=null){for(inti=0;i<covMatEigenvalues.length;i++){if(covMatEigenvalues[i]<0){thrownewNonPositiveDefiniteMatri
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142v=FastMath.sqrt(covMatEigenvalues[i]);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142v=FastMath.sqrt(covMatEigenvalues[v]);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142evec=FastMath.sqrt(covMatEigenvalues[v]);
