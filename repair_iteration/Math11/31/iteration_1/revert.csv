projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142covMatEigenvectors.setColumn(dim,evec);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142covMatEigenvectors.setColumn(evec,evec);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142covMatEigenvectors.setColumn(dim,v);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142covMatEigenvectors.setColumn(v,evec);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142covMatEigenvectors.setColumn(evec,v);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142if(evec!=null){for(inti=0;i<covMatEigenvalues.length;i++){if(covMatEigenvalues[i]<0){thrownewNonPositiveDefiniteMatrixException(covMatEigenvalues[i],
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142if(evec!=null){for(inti=0;i<covMatEigenvalues.length;i++){if(covMatEigenvalues[i]<0){thrownewNonPositiveDefiniteM
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142if(evec!=null){for(inti=0;i<covMatEigenvalues.length;i++){if(covMatEigenvalues[i]<0){thrownewNonPositiveDefiniteMatri
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142v=FastMath.sqrt(covMatEigenvalues[i]);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142v=FastMath.sqrt(covMatEigenvalues[v]);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142evec=FastMath.sqrt(covMatEigenvalues[v]);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142covMatEigenvectors.setColumn(dim,v,evec);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142covMatEigenvectors.setColumn(v,dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142covMatEigenvectors.setRow(dim,evec);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142v=FastMath.sqrt(covMatEigenvalues[evec]);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142covMatEigenvectors.setColumn(evec,v,means);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142covMatEigenvectors.setColumn(v,evec,evec);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142if(evec!=null){for(inti=0;i<covMatDec.length;i++){if(covMatEigenvalues[i]<0){thrownewNonPositiveDefiniteM
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142if(evec==null){for(inti=0;i<covMatDec.length;i++){if(covMatEigenvalues[i]<0){thrownewNonPositiveDefiniteM
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142covMatEigenvectors.setColumn(dim,evec);covMatEigenvectors.setColumn(dim,evec);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142covMatEigenvectors.setColumn(dim,evec);covMatEigenvectors.setRow(dim,evec);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142covMatEigenvectors.setColumn(dim,evec);covMatEigenvectors.setRange(dim,evec);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142if(evec==null){for(inti=0;i<covMatEigenvalues.length;i++){if(covMatEigenvalues[i]<0){thrownewNonPositiveDefiniteMatri
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142v=FastMath.sqrt(covMatEigenvalues[v],evec);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142if(evec!=null){for(inti=0;i<covMatDec.length;i++){if(covMatEigenvalues[i]<0){thrownewNonPositiveDefiniteMatri
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142if(evec==null){for(inti=0;i<covMatDec.length;i++){if(covMatEigenvalues[i]<0){thrownewNonPositiveDefiniteMatri
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142covMatEigenvectors.setColumn(evec,v,covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142covMatEigenvectors.setColumn(dim,evec);covMatEigenvectors.setDouble(dim,evec);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142if(evec==null){for(inti=0;i<covMatDec.length;i++){if(covMatDec.getEigenvector(v).toArray()<0){thrownewNonPositiveDef
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142for(inti=0;i<covMatDec.length;i++){if(evec!=null){for(inti=0;i<covMatDec.length;i++){if(
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142for(inti=0;i<covMatDec.length;i++){if(evec!=null){for(inti=0;i<covMatEigenvalues.length;i++){if
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142if(evec!=null){for(inti=0;i<covMatDec.length;i++){if(covMatDec.getEigenvector(v).toArray()<0){thrownewNonPositiveDef
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142covMatEigenvectors.setColumn(dim,evec,v);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142covMatEigenvectors.setColumn(dim,evec);covMatEigenvectors.setLine(dim,evec);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142if(evec!=null){for(inti=0;i<covMatDec.length;i++){if(covMatEigenvalues[i]<0){thrownewNonPositiveDefiniteMatrix
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142if(evec!=null){for(inti=0;i<covMatDec.length;i++){if(covMatEigenvalues[i]<0){thrownewNonPositiveDefiniteMatrixException(covMat
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java142if(evec!=null){for(inti=0;i<covMatEigenvalues.length;i++){if(covMatEigenvalues[i]<0){thrownewNonPositiveDefiniteMatrixException(
