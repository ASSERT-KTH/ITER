projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122((RealMatrix)covarianceMatrix).getSolver().getInverse();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122((RealMatrix)covarianceMatrix).getSolver().getInverse();covarianceMatEigenvectors=(Double[][])covariances.clone();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122((RealMatrix)covarianceMatrix).getSolver().getInverse();covarianceMatEigenvectors=(Double[][])comvariances.clone();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovMatDec=newEigenDecomposition(covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovMatDec=newEigenDecomposition(covarianceMatrixInverse);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovMatDec=newEigenDecomposition(covMatDec);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=rng.getRealMattrix();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=rng.getRealMatrix();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=rng.getRowMatches();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=factor.getRealMatEigenvectors();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=rng.getRealMatEigenvectors();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=rng.getRealMatEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122if(covMatDec!=null){finalEigenDecompositioncovMatDec=newEigenDecomposition(covarianceMatrix);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=rng.getRowMatrix();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=rng.getRealEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=rng.getRangeMatEigenvectors();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=rng.getColumnMatches();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122((RealMatrix)covarianceMatrix).getSolver(),factor.getInverse();covarianceMatEigenvectors=(Double[][])covariances.clone();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=factor.getRangeMatEigenvectors();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovMatDec=newEigenDecomposition(dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovMatDec=newEigenDecomposition(sample);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovMatDec=newEigenDecomposition(covMatDec,covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovMatDec=newEigenDecomposition(covMatDec,mean);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovarianceMatDec=newEigenDecomposition(covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122((RealMatrix)covarianceMatrix).getSolver(),this.inverse;
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=rng.getRangeMattrix();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovMatDec=newEigenDecomposition(covarianceMatrixDeterminant);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=rng.getRandomMatrix();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=rng.getRandomMattrix();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=dim.getRealMatEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122if(covMatDec!=null){finalEigenDecompositioncovarianceMatDec=newEigenDecomposition(covarianceMatrix);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovMatDec=newEigenDecomposition(covMatDec,factor);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122((RealMatrix)covarianceMatrix).getSolver(),covarianceMatrixInverse.getInverse();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=dim.getRealMatEigenvectors();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=factor.getRealEigenvectors();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=dim.getRealMatrix();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=factor.getRalMatEigenvectors();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovMatDec=newEigenDecomposition(covMatDec.getSolver());
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=dim.getRealMattrix();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=this.rng.getRandomMatrix();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovarianceMatDec=newEigenDecomposition(covarianceMatrixInverse);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=rng.getColumnMatrix();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122((RealMatrix)covarianceMatrix).getSolver(),covarianceMatrixDeterminant.getInverse();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122((RealMatrix)covarianceMatrix).getSolver(),covarianceMatrix.getInverse();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122((RealMatrix)covarianceMatrix).getSolver(),dim;
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovMatDec=newEigenDecomposition(covMatDec,evec);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovMatDec=newEigenDecomposition(covMatDec,covarianceMatEigenvalues);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovMatDec=newEigenDecomposition(covMatDec,covarianceMatrix,factor);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovMatDec=newEigenDecomposition(covMatDec,factor,covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122((RealMatrix)covarianceMatrix).getSolver(),factor.getInverse(),dim);covarianceMatEigenvectors=(Double[][])covariances.clone();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovMatDec=newEigenDecomposition(dim,covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovMatDec=newEigenDecomposition(covarianceMatrix,dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovMatDec=newEigenDecomposition(covMatDec,covarianceMatEigenvectors);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=this.rng.getRandomMattrix();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovarianceMatDec=newEigenDecomposition(dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=covarianceMatrix.getRealMatEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovMatDec=newEigenDecomposition(covMatDec.getSolver(),covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovMatDec=newEigenDecomposition(covMatDec.getSolver(),dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=covarianceMatrix.getRealMattrix();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=covariance.getRealMattrix();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovMatDec=newEigenDecomposition(dim,covarianceMatrixDeterminant);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovMatDec=newEigenDecomposition(covarianceMatrixInverse,factor);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=covarianceMatrix.getRealMatEigenvectors();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=factor.getRangeEigenvectors();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=covarianceMatrix.getRealMatrix();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=covariance.getRealMatrix();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=rng.getRangeMattrix(dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=rng.getRangeEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=dim.getRandomMatrix();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=factor.getDeterminant();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122((RealMatrix)covarianceMatrix).getSolver(),factor.getDeterminant();covarianceMatEigenvectors=(Double[][])covariances.clone();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovMatDec=newEigenDecomposition(covarianceMatrix,factor);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=rng.getRangeEigenvectors();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=rng.getRangeMatrix();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122((RealMatrix)covarianceMatrix).getSolver(),this.tmpMatrix;
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=dim.getRealEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=dim.getRandomMattrix();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovMatDec=newEigenDecomposition(covMatDec,covarianceMatrixDeterminant);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovMatDec=newEigenDecomposition(covarianceMatDec);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovMatDec=newEigenDecomposition(covarianceMatrixDeterminant,factor);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovMatDec=newEigenDecomposition(dim,factor);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovMatDec=newEigenDecomposition(covMatDec,samplingMatrix,covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovMatDec=newEigenDecomposition(covMatDec,covarianceMatrixInverse,covarianceMatEigenvectors);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=covariance.getRealMatEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=factor.getRalEigenvectors();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=dim.getRangeMattrix();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=dim.getRangeMatEigenvectors();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122if(covMatDec!=null){finalEigenDecompositioncovarianceMatDec=newEigenDecomposition(covarianceMatrixInverse);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=dim.getColumnMatches();
