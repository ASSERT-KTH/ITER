projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122((RealMatrix)covarianceMatrix).getSolver().getInverse();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122((RealMatrix)covarianceMatrix).getSolver().getInverse();covarianceMatEigenvectors=(Double[][])covariances.clone();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122((RealMatrix)covarianceMatrix).getSolver().getInverse();covarianceMatEigenvectors=(Double[][])comvariances.clone();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovMatDec=newEigenDecomposition(covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovMatDec=newEigenDecomposition(covarianceMatrixInverse);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovMatDec=newEigenDecomposition(covMatDec);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=rng.getRealMattrix();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=rng.getRealMatrix();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=rng.getRowMatches();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=factor.getRealMatEigenvectors();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=rng.getRealMatEigenvectors();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=rng.getRealMatEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122if(covMatDec!=null){finalEigenDecompositioncovMatDec=newEigenDecomposition(covarianceMatrix);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=rng.getRowMatrix();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=rng.getRealEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=rng.getRangeMatEigenvectors();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=rng.getColumnMatches();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122((RealMatrix)covarianceMatrix).getSolver(),factor.getInverse();covarianceMatEigenvectors=(Double[][])covariances.clone();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=factor.getRangeMatEigenvectors();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovMatDec=newEigenDecomposition(dim);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovMatDec=newEigenDecomposition(sample);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovMatDec=newEigenDecomposition(covMatDec,covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovMatDec=newEigenDecomposition(covMatDec,mean);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovarianceMatDec=newEigenDecomposition(covarianceMatrix);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122((RealMatrix)covarianceMatrix).getSolver(),this.inverse;
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=rng.getRangeMattrix();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovMatDec=newEigenDecomposition(covarianceMatrixDeterminant);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=rng.getRandomMatrix();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=rng.getRandomMattrix();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=dim.getRealMatEigenvalues();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122if(covMatDec!=null){finalEigenDecompositioncovarianceMatDec=newEigenDecomposition(covarianceMatrix);}
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovMatDec=newEigenDecomposition(covMatDec,factor);
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122((RealMatrix)covarianceMatrix).getSolver(),covarianceMatrixInverse.getInverse();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=dim.getRealMatEigenvectors();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=factor.getRealEigenvectors();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=dim.getRealMatrix();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=factor.getRalMatEigenvectors();
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122finalEigenDecompositioncovMatDec=newEigenDecomposition(covMatDec.getSolver());
projects/Math11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java122double[][]covariances=dim.getRealMattrix();
