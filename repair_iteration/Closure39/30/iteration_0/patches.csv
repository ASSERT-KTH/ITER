bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  propertyNames.put(name,  newProp);  [CE]  <identifier>  expected  [FE]    junit.framework.ComparisonFailure:  null  expected:<...number  [CONTEXT]  return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }  [BUGGY]  propertyNames.put(name,  newProp);  [BUGGY]  return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNames.put(name,  newProp);	properties.put(name,  newProp);  	non-compiled	[CE]  <identifier>  expected	59	None	replace
2	[BUG]  [BUGGY]  properties.put(name,  oldProp);  [CE]  <identifier>  expected  [FE]      junit.framework.ComparisonFailure:  null  expected:<...number  [CONTEXT]  return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }  [BUGGY]  properties.put(name,  oldProp);  [BUGGY]  return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	properties.put(name,  oldProp);	properties.put(name,  newProp);  	non-compiled	[CE]  <identifier>  expected	59	None	replace
3	[BUG]  [BUGGY]  properties.put(className,  newProp);  [CE]  <identifier>  expected  [FE]        junit.framework.ComparisonFailure:  null  expected:<...number  [CONTEXT]  return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }  [BUGGY]  properties.put(className,  newProp);  [BUGGY]  return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	properties.put(className,  newProp);	properties.put(name,  newProp);  	non-compiled	[CE]  <identifier>  expected	59	None	replace
4	[BUG]  [BUGGY]  Properties.put(name,  newProp);  [CE]  <identifier>  expected  [FE]          junit.framework.ComparisonFailure:  null  expected:<...number  [CONTEXT]  return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }  [BUGGY]  Properties.put(name,  newProp);  [BUGGY]  return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Properties.put(name,  newProp);	properties.put(name,  newProp);  	non-compiled	[CE]  <identifier>  expected	59	None	replace
5	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...number  [CONTEXT]  return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }  [BUGGY]    [BUGGY]  return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	  	properties.put(name,  newProp);  	non-compiled	[CE]  <identifier>  expected	59	None	replace
6	[BUG]  [BUGGY]  propertyNode.put(name,  newProp);  [CE]  <identifier>  expected  [FE]    junit.framework.ComparisonFailure:  null  expected:<...number  [CONTEXT]  return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }  [BUGGY]  propertyNode.put(name,  newProp);  [BUGGY]  return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.put(name,  newProp);	properties.put(name,  newProp);  	non-compiled	[CE]  <identifier>  expected	59	None	replace
7	[BUG]  [BUGGY]  properties.put(name,  newProp)&&!inferred;  [CE]  <identifier>  expected  [FE]      junit.framework.ComparisonFailure:  null  expected:<...number  [CONTEXT]  return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }  [BUGGY]  properties.put(name,  newProp)&&!inferred;  [BUGGY]  return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	properties.put(name,  newProp)&&!inferred;	properties.put(name,  newProp);  	non-compiled	[CE]  <identifier>  expected	59	None	replace
8	[BUG]  [BUGGY]  property.put(name,  newProp);  [CE]  <identifier>  expected  [FE]    junit.framework.ComparisonFailure:  null  expected:<...number  [CONTEXT]  return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }  [BUGGY]  property.put(name,  newProp);  [BUGGY]  return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp);	properties.put(name,  newProp);  	non-compiled	[CE]  <identifier>  expected	59	None	replace
