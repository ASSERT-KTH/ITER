bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  newProp.setImplicitPrototypeFallback(false);  [CE]  <identifier>  expected  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  newProp.setImplicitPrototypeFallback(false);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	newProp.setImplicitPrototypeFallback(false);	  newProp.setImplicitPrototypeFallback(true);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
2	[BUG]  [BUGGY]  newProp.setImplicitPrototypeFallback(false,  false);  [CE]  <identifier>  expected  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  newProp.setImplicitPrototypeFallback(false,  false);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	newProp.setImplicitPrototypeFallback(false,  false);	  newProp.setImplicitPrototypeFallback(true);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
3	[BUG]  [BUGGY]  newProp.setImplicitPrototypeFallback(true,  false);  [CE]  <identifier>  expected  [FE]                                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  newProp.setImplicitPrototypeFallback(true,  false);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	newProp.setImplicitPrototypeFallback(true,  false);	  newProp.setImplicitPrototypeFallback(true);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
4	[BUG]  [BUGGY]  if(!inferred)  {  newProp.setImplicitPrototypeFallback(true);  }  [CE]  <identifier>  expected  [FE]                                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(!inferred)  {  newProp.setImplicitPrototypeFallback(true);  }  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(!inferred)  {  newProp.setImplicitPrototypeFallback(true);  }	  newProp.setImplicitPrototypeFallback(true);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
5	[BUG]  [BUGGY]  if(inferred)  {  newProp.setImplicitPrototypeFallback(true);  }  [CE]  <identifier>  expected  [FE]                                      junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(inferred)  {  newProp.setImplicitPrototypeFallback(true);  }  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(inferred)  {  newProp.setImplicitPrototypeFallback(true);  }	  newProp.setImplicitPrototypeFallback(true);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
6	[BUG]  [BUGGY]  newProp.setImplicitPrototypeFallback(false,  true);  [CE]  <identifier>  expected  [FE]                                        junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  newProp.setImplicitPrototypeFallback(false,  true);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	newProp.setImplicitPrototypeFallback(false,  true);	  newProp.setImplicitPrototypeFallback(true);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
7	[BUG]  [BUGGY]  propertyNode.putBooleanProperty(name,  newProp,  inferred);  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.putBooleanProperty(name,  newProp,  inferred);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.putBooleanProperty(name,  newProp,  inferred);	  propertyNode.putBooleanProperty(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
8	[BUG]  [BUGGY]  propertyNode.putBooleanProperty(name,  newProp).booleanValue();  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.putBooleanProperty(name,  newProp).booleanValue();  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.putBooleanProperty(name,  newProp).booleanValue();	  propertyNode.putBooleanProperty(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
9	[BUG]  [BUGGY]  propertyNode.putBooleanProperty(name,  newProp,  false);  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.putBooleanProperty(name,  newProp,  false);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.putBooleanProperty(name,  newProp,  false);	  propertyNode.putBooleanProperty(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
10	[BUG]  [BUGGY]  propertyNode.putBooleanProperty(name,  oldProp);  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.putBooleanProperty(name,  oldProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.putBooleanProperty(name,  oldProp);	  propertyNode.putBooleanProperty(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
11	[BUG]  [BUGGY]  propertyNode.putBooleanProp(type,  newProp);  [CE]  <identifier>  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.putBooleanProp(type,  newProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.putBooleanProp(type,  newProp);	  propertyNode.putBooleanProp(propertyName,    newProp);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
12	[BUG]  [BUGGY]  propertyNode.putBooleanProp(propertyName,  newProp).booleanValue();  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.putBooleanProp(propertyName,  newProp).booleanValue();  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.putBooleanProp(propertyName,  newProp).booleanValue();	  propertyNode.putBooleanProp(propertyName,    newProp);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
13	[BUG]  [BUGGY]  propertyNode.putBooleanProp(propertyName,  oldProp);  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.putBooleanProp(propertyName,  oldProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.putBooleanProp(propertyName,  oldProp);	  propertyNode.putBooleanProp(propertyName,    newProp);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
14	[BUG]  [BUGGY]  propertyNode.putBooleanProp(newProp,  propertyName);  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.putBooleanProp(newProp,  propertyName);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.putBooleanProp(newProp,  propertyName);	  propertyNode.putBooleanProp(propertyName,    newProp);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
15	[BUG]  [BUGGY]  propertyNode.putBooleanProp(name,  newProp);  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.putBooleanProp(name,  newProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.putBooleanProp(name,  newProp);	  propertyNode.putBooleanProp(propertyName,    newProp);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
16	[BUG]  [BUGGY]  properties.put(name,  oldProp)&&!propertyNode;  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  properties.put(name,  oldProp)&&!propertyNode;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	properties.put(name,  oldProp)&&!propertyNode;	  properties.put(name,    newProp)&&!propertyNode;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
17	[BUG]  [BUGGY]  properties.put(name,  newProp)||!propertyNode;  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  properties.put(name,  newProp)||!propertyNode;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	properties.put(name,  newProp)||!propertyNode;	  properties.put(name,    newProp)&&!propertyNode;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
18	[BUG]  [BUGGY]  properties.put(name,  newProp)&&!propertyName;  [CE]  <identifier>  expected  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  properties.put(name,  newProp)&&!propertyName;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	properties.put(name,  newProp)&&!propertyName;	  properties.put(name,    newProp)&&!propertyNode;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
19	[BUG]  [BUGGY]  propertyNames.put(name,  oldProp).propertyNode;  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNames.put(name,  oldProp).propertyNode;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNames.put(name,  oldProp).propertyNode;	  propertyNames.put(name,    newProp).propertyNode;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
20	[BUG]  [BUGGY]  propertyNames.put(className,  newProp).propertyNode;  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNames.put(className,  newProp).propertyNode;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNames.put(className,  newProp).propertyNode;	  propertyNames.put(name,    newProp).propertyNode;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
21	[BUG]  [BUGGY]  if(propertyName!=  null)  {  Property  newProp  =  newProp.getProperty(propertyName);  if(newProp!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(propertyName!=  null)  {  Property  newProp  =  newProp.getProperty(propertyName);  if(newProp!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(propertyName!=  null)  {  Property  newProp  =  newProp.getProperty(propertyName);  if(newProp!=  null)  {  return  false;  }	  if(propertyNode!=    null)    {    Property    newProp    =    newProp.getProperty(propertyName);    if(newProp!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
22	[BUG]  [BUGGY]  Property  newProp  =  newProp.getProperty(propertyName);  if(newProp!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Property  newProp  =  newProp.getProperty(propertyName);  if(newProp!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Property  newProp  =  newProp.getProperty(propertyName);  if(newProp!=  null)  {  return  false;  }	  if(propertyNode!=    null)    {    Property    newProp    =    newProp.getProperty(propertyName);    if(newProp!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
23	[BUG]  [BUGGY]  if(inferred)  {  Property  newProp  =  newProp.getProperty(propertyName);  if(newProp!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(inferred)  {  Property  newProp  =  newProp.getProperty(propertyName);  if(newProp!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(inferred)  {  Property  newProp  =  newProp.getProperty(propertyName);  if(newProp!=  null)  {  return  false;  }	  if(propertyNode!=    null)    {    Property    newProp    =    newProp.getProperty(propertyName);    if(newProp!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
24	[BUG]  [BUGGY]  Property  newProp  =  newProp.getProperty(propertyName);  [CE]  <identifier>  expected  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Property  newProp  =  newProp.getProperty(propertyName);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Property  newProp  =  newProp.getProperty(propertyName);	  if(propertyNode!=    null)    {    Property    newProp    =    newProp.getProperty(propertyName);    if(newProp!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
25	[BUG]  [BUGGY]  if(propertyName!=  null)  {  Property  newProp  =  newProp.getProperty(propertyName);  if(newProp  ==  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(propertyName!=  null)  {  Property  newProp  =  newProp.getProperty(propertyName);  if(newProp  ==  null)  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(propertyName!=  null)  {  Property  newProp  =  newProp.getProperty(propertyName);  if(newProp  ==  null)  {  return  false;  }	  if(propertyNode!=    null)    {    Property    newProp    =    newProp.getProperty(propertyName);    if(newProp!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
26	[BUG]  [BUGGY]  if(propertyName!=  null)  {  Property  newProp  =  newProp.getPropertyName();  if(newProp!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(propertyName!=  null)  {  Property  newProp  =  newProp.getPropertyName();  if(newProp!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(propertyName!=  null)  {  Property  newProp  =  newProp.getPropertyName();  if(newProp!=  null)  {  return  false;  }	  if(propertyNode!=    null)    {    Property    newProp    =    newProp.getProperty(propertyName);    if(newProp!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
27	[BUG]  [BUGGY]  if(propertyName!=  null)  {  Property  newProp  =  oldProp.getPropertyName();  if(newProp!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(propertyName!=  null)  {  Property  newProp  =  oldProp.getPropertyName();  if(newProp!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(propertyName!=  null)  {  Property  newProp  =  oldProp.getPropertyName();  if(newProp!=  null)  {  return  false;  }	  if(propertyNode!=    null)    {    Property    newProp    =    newProp.getProperty(propertyName);    if(newProp!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
28	[BUG]  [BUGGY]  propertyNode.put(name,  newProp)||!inferred;  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.put(name,  newProp)||!inferred;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.put(name,  newProp)||!inferred;	  propertyNode.put(name,    newProp)&&!inferred;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
29	[BUG]  [BUGGY]  propertyNode.put(name,  oldProp)&&!inferred;  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.put(name,  oldProp)&&!inferred;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.put(name,  oldProp)&&!inferred;	  propertyNode.put(name,    newProp)&&!inferred;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
30	[BUG]  [BUGGY]  propertyNode.put(name,  newProp)&&!propertyName;  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.put(name,  newProp)&&!propertyName;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.put(name,  newProp)&&!propertyName;	  propertyNode.put(name,    newProp)&&!inferred;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
31	[BUG]  [BUGGY]  propertyNode.put(name,  newProp)&&!type;  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.put(name,  newProp)&&!type;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.put(name,  newProp)&&!type;	  propertyNode.put(name,    newProp)&&!inferred;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
32	[BUG]  [BUGGY]  property.put(name,  oldProp):  null;  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  oldProp):  null;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  oldProp):  null;	  property.put(name,    newProp):    null;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
33	[BUG]  [BUGGY]  property.put(className,  newProp):  null;  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(className,  newProp):  null;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(className,  newProp):  null;	  property.put(name,    newProp):    null;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
34	[BUG]  [BUGGY]  property.put(name,  newProp):  node;  [CE]  <identifier>  expected  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  newProp):  node;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp):  node;	  property.put(name,    newProp):    null;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
35	[BUG]  [BUGGY]  property.put(name,  newProp):  Property.NO_PROPERTY;  [CE]  <identifier>  expected  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  newProp):  Property.NO_PROPERTY;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp):  Property.NO_PROPERTY;	  property.put(name,    newProp):    null;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
36	[BUG]  [BUGGY]  propertyNames.put(className,  oldProp);  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNames.put(className,  oldProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNames.put(className,  oldProp);	  propertyNames.put(name,    oldProp);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
37	[BUG]  [BUGGY]  propertyName.setLocalName(oldProp.getLocalName());  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyName.setLocalName(oldProp.getLocalName());  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyName.setLocalName(oldProp.getLocalName());	  propertyName.setLocalName(newProp.getLocalName());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
38	[BUG]  [BUGGY]  propertyName.setLocalName(newProp.getLocalName()  +  1);  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyName.setLocalName(newProp.getLocalName()  +  1);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyName.setLocalName(newProp.getLocalName()  +  1);	  propertyName.setLocalName(newProp.getLocalName());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
39	[BUG]  [BUGGY]  propertyName.setLocalName(newProp.getLocalName()  + ": ");  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyName.setLocalName(newProp.getLocalName()  + ": ");  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyName.setLocalName(newProp.getLocalName()  + ": ");	  propertyName.setLocalName(newProp.getLocalName());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
40	[BUG]  [BUGGY]  propertyName.setLocalName(type.getLocalName());  [CE]  <identifier>  expected  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyName.setLocalName(type.getLocalName());  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyName.setLocalName(type.getLocalName());	  propertyName.setLocalName(newProp.getLocalName());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
41	[BUG]  [BUGGY]  propertyName.setLocalName(newProp.getLocalName(),  type);  [CE]  <identifier>  expected  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyName.setLocalName(newProp.getLocalName(),  type);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyName.setLocalName(newProp.getLocalName(),  type);	  propertyName.setLocalName(newProp.getLocalName());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
42	[BUG]  [BUGGY]  propertyNames.put(className,  newProp));  [CE]  <identifier>  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNames.put(className,  newProp));  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNames.put(className,  newProp));	  propertyNames.put(name,    newProp));    	non-compiled	[CE]  <identifier>  expected	55	None	replace
43	[BUG]  [BUGGY]  properties.put(name,  newProp));  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  properties.put(name,  newProp));  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	properties.put(name,  newProp));	  propertyNames.put(name,    newProp));    	non-compiled	[CE]  <identifier>  expected	55	None	replace
44	[BUG]  [BUGGY]  propertyNames.put(name,  oldProp));  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNames.put(name,  oldProp));  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNames.put(name,  oldProp));	  propertyNames.put(name,    newProp));    	non-compiled	[CE]  <identifier>  expected	55	None	replace
45	[BUG]  [BUGGY]  Properties.put(propertyName,  oldProp);  [CE]  <identifier>  expected  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Properties.put(propertyName,  oldProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Properties.put(propertyName,  oldProp);	  Properties.put(propertyName,    newProp);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
46	[BUG]  [BUGGY]  Properties.put(type,  newProp);  [CE]  <identifier>  expected  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Properties.put(type,  newProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Properties.put(type,  newProp);	  Properties.put(propertyName,    newProp);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
47	[BUG]  [BUGGY]  properties.put(name,  oldProp)||!inferred;  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  properties.put(name,  oldProp)||!inferred;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	properties.put(name,  oldProp)||!inferred;	  properties.put(name,    newProp)||!inferred;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
48	[BUG]  [BUGGY]  properties.put(name,  newProp)||!type;  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  properties.put(name,  newProp)||!type;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	properties.put(name,  newProp)||!type;	  properties.put(name,    newProp)||!inferred;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
49	[BUG]  [BUGGY]  Property  prop  =  properties.get(propertyName);  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Property  prop  =  properties.get(propertyName);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Property  prop  =  properties.get(propertyName);	  Property    prop    =    properties.get(name);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
50	[BUG]  [BUGGY]  Property  prop  =  properties.get(name  +  1);  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Property  prop  =  properties.get(name  +  1);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Property  prop  =  properties.get(name  +  1);	  Property    prop    =    properties.get(name);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
51	[BUG]  [BUGGY]  Property  prop  =  newProp.properties.get(name);  [CE]  <identifier>  expected  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Property  prop  =  newProp.properties.get(name);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Property  prop  =  newProp.properties.get(name);	  Property    prop    =    properties.get(name);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
52	[BUG]  [BUGGY]  Property  prop  =  properties.get(name  -  1);  [CE]  <identifier>  expected  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Property  prop  =  properties.get(name  -  1);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Property  prop  =  properties.get(name  -  1);	  Property    prop    =    properties.get(name);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
53	[BUG]  [BUGGY]  Property  prop  =  newProp.propertyName;  [CE]  <identifier>  expected  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Property  prop  =  newProp.propertyName;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Property  prop  =  newProp.propertyName;	  Property    prop    =    properties.get(name);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
54	[BUG]  [BUGGY]  Properties.put(className,  newProp,  propertyName);  [CE]  <identifier>  expected  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Properties.put(className,  newProp,  propertyName);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Properties.put(className,  newProp,  propertyName);	  Properties.put(name,    newProp,    propertyName);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
55	[BUG]  [BUGGY]  Properties.put(name,  oldProp,  propertyName);  [CE]  <identifier>  expected  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Properties.put(name,  oldProp,  propertyName);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Properties.put(name,  oldProp,  propertyName);	  Properties.put(name,    newProp,    propertyName);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
56	[BUG]  [BUGGY]  Properties.put(name,  newProp,  propertyName,  type);  [CE]  <identifier>  expected  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Properties.put(name,  newProp,  propertyName,  type);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Properties.put(name,  newProp,  propertyName,  type);	  Properties.put(name,    newProp,    propertyName);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
57	[BUG]  [BUGGY]  properties.put(name,  newProp,  propertyName);  [CE]  <identifier>  expected  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  properties.put(name,  newProp,  propertyName);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	properties.put(name,  newProp,  propertyName);	  Properties.put(name,    newProp,    propertyName);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
58	[BUG]  [BUGGY]  Properties.put(type,  newProp,  propertyName);  [CE]  <identifier>  expected  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Properties.put(type,  newProp,  propertyName);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Properties.put(type,  newProp,  propertyName);	  Properties.put(name,    newProp,    propertyName);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
59	[BUG]  [BUGGY]  property.put(className,  oldProp);  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(className,  oldProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(className,  oldProp);	  property.put(name,    oldProp);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
60	[BUG]  [BUGGY]  Property  property  =  properties.get(name);  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Property  property  =  properties.get(name);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Property  property  =  properties.get(name);	  property.put(name,    oldProp);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
61	[BUG]  [BUGGY]  Properties.put(className,  oldProp);  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Properties.put(className,  oldProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Properties.put(className,  oldProp);	  Properties.put(name,    oldProp);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
62	[BUG]  [BUGGY]  propertyNode.putProp(propertyName,  newProp);  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.putProp(propertyName,  newProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.putProp(propertyName,  newProp);	  propertyNode.putProp(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
63	[BUG]  [BUGGY]  propertyNode.putProp(type,  newProp);  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.putProp(type,  newProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.putProp(type,  newProp);	  propertyNode.putProp(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
64	[BUG]  [BUGGY]  propertyNode.putProp(newProp,  name);  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.putProp(newProp,  name);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.putProp(newProp,  name);	  propertyNode.putProp(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
65	[BUG]  [BUGGY]  propertyNode.putProp(className,  newProp);  [CE]  <identifier>  expected  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.putProp(className,  newProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.putProp(className,  newProp);	  propertyNode.putProp(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
66	[BUG]  [BUGGY]  propertyNode.putProp(name,  oldProp);  [CE]  <identifier>  expected  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.putProp(name,  oldProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.putProp(name,  oldProp);	  propertyNode.putProp(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
67	[BUG]  [BUGGY]  newProp.setInferred(inferred,  propertyNode);  [CE]  <identifier>  expected  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  newProp.setInferred(inferred,  propertyNode);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	newProp.setInferred(inferred,  propertyNode);	  newProp.setInferred(inferred);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
68	[BUG]  [BUGGY]  newProp.setInferred(inferred  +  1);  [CE]  <identifier>  expected  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  newProp.setInferred(inferred  +  1);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	newProp.setInferred(inferred  +  1);	  newProp.setInferred(inferred);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
69	[BUG]  [BUGGY]  newProp.setType(type);  [CE]  <identifier>  expected  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  newProp.setType(type);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	newProp.setType(type);	  newProp.setInferred(inferred);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
70	[BUG]  [BUGGY]  newProp.setImplicitPrototypeFallback(inferred);  [CE]  <identifier>  expected  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  newProp.setImplicitPrototypeFallback(inferred);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	newProp.setImplicitPrototypeFallback(inferred);	  newProp.setInferred(inferred);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
71	[BUG]  [BUGGY]  newProp.setNumberOfLinks(inferred);  [CE]  <identifier>  expected  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  newProp.setNumberOfLinks(inferred);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	newProp.setNumberOfLinks(inferred);	  newProp.setInferred(inferred);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
72	[BUG]  [BUGGY]  newProp.setInferred(inferred?  true  :  false);  [CE]  <identifier>  expected  [FE]                                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  newProp.setInferred(inferred?  true  :  false);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	newProp.setInferred(inferred?  true  :  false);	  newProp.setInferred(inferred);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
73	[BUG]  [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT  [CE]  <identifier>  expected  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.FUNCTION    ||    property.getType()!=    Token.OBJECTLIT)    {    return    newPro    	non-compiled	[CE]  <identifier>  expected	42	None	replace
74	[BUG]  [BUGGY]  if(propertyName  ==  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newPro  [CE]  <identifier>  expected  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(propertyName  ==  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newPro  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(propertyName  ==  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newPro	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.FUNCTION    ||    property.getType()!=    Token.OBJECTLIT)    {    return    newPro    	non-compiled	[CE]  <identifier>  expected	42	None	replace
75	[BUG]  [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECT  [CE]  <identifier>  expected  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECT  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECT	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.FUNCTION    ||    property.getType()!=    Token.OBJECTLIT)    {    return    newPro    	non-compiled	[CE]  <identifier>  expected	42	None	replace
76	[BUG]  [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  new  [CE]  <identifier>  expected  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  new  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  new	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.FUNCTION    ||    property.getType()!=    Token.OBJECTLIT)    {    return    newPro    	non-compiled	[CE]  <identifier>  expected	42	None	replace
77	[BUG]  [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(prop.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newPro  [CE]  <identifier>  expected  [FE]                                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(prop.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newPro  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(prop.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newPro	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.FUNCTION    ||    property.getType()!=    Token.OBJECTLIT)    {    return    newPro    	non-compiled	[CE]  <identifier>  expected	42	None	replace
78	[BUG]  [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  [CE]  <identifier>  expected  [FE]                                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.FUNCTION    ||    property.getType()!=    Token.OBJECTLIT)    {    return    newPro    	non-compiled	[CE]  <identifier>  expected	42	None	replace
79	[BUG]  [BUGGY]  propertyNames.put(className,  newProp).propertyName;  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNames.put(className,  newProp).propertyName;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNames.put(className,  newProp).propertyName;	  propertyNames.put(name,    newProp).propertyName;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
80	[BUG]  [BUGGY]  propertyNames.put(name,  oldProp).propertyName;  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNames.put(name,  oldProp).propertyName;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNames.put(name,  oldProp).propertyName;	  propertyNames.put(name,    newProp).propertyName;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
81	[BUG]  [BUGGY]  propertyNames.put(name,  newProp).propertyName  =  name;  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNames.put(name,  newProp).propertyName  =  name;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNames.put(name,  newProp).propertyName  =  name;	  propertyNames.put(name,    newProp).propertyName;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
82	[BUG]  [BUGGY]  propertyNames.put(name,  newProp).propertyName();  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNames.put(name,  newProp).propertyName();  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNames.put(name,  newProp).propertyName();	  propertyNames.put(name,    newProp).propertyName;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
83	[BUG]  [BUGGY]  Properties.put(className,  propertyNode);  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Properties.put(className,  propertyNode);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Properties.put(className,  propertyNode);	  Properties.put(name,    propertyNode);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
84	[BUG]  [BUGGY]  Properties.put(type,  propertyNode);  [CE]  <identifier>  expected  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Properties.put(type,  propertyNode);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Properties.put(type,  propertyNode);	  Properties.put(name,    propertyNode);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
85	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  newProp.clone();  [CE]  <identifier>  expected  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  junit.framework.ComparisonFailure  =  newProp.clone();  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	junit.framework.ComparisonFailure  =  newProp.clone();	  junit.framework.ComparisonFailure    =    newProp;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
86	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  newProp.build();  [CE]  <identifier>  expected  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  junit.framework.ComparisonFailure  =  newProp.build();  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	junit.framework.ComparisonFailure  =  newProp.build();	  junit.framework.ComparisonFailure    =    newProp;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
87	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  newProp.withType(type);  [CE]  <identifier>  expected  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  junit.framework.ComparisonFailure  =  newProp.withType(type);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	junit.framework.ComparisonFailure  =  newProp.withType(type);	  junit.framework.ComparisonFailure    =    newProp;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
88	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  newProp.cloneTree();  [CE]  <identifier>  expected  [FE]                                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  junit.framework.ComparisonFailure  =  newProp.cloneTree();  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	junit.framework.ComparisonFailure  =  newProp.cloneTree();	  junit.framework.ComparisonFailure    =    newProp;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
89	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  newProp.inferred;  [CE]  <identifier>  expected  [FE]                                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  junit.framework.ComparisonFailure  =  newProp.inferred;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	junit.framework.ComparisonFailure  =  newProp.inferred;	  junit.framework.ComparisonFailure    =    newProp;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
90	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  newProp.create();  [CE]  <identifier>  expected  [FE]                                      junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  junit.framework.ComparisonFailure  =  newProp.create();  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	junit.framework.ComparisonFailure  =  newProp.create();	  junit.framework.ComparisonFailure    =    newProp;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
91	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  Property(newProp,  inferred,  propertyNode);  [CE]  <identifier>  expected  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  junit.framework.ComparisonFailure:  new  Property(newProp,  inferred,  propertyNode);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	junit.framework.ComparisonFailure:  new  Property(newProp,  inferred,  propertyNode);	  junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
92	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  Property(newProp,  inferred);  [CE]  <identifier>  expected  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  junit.framework.ComparisonFailure:  new  Property(newProp,  inferred);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	junit.framework.ComparisonFailure:  new  Property(newProp,  inferred);	  junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
93	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  PrototypeFailure();  [CE]  <identifier>  expected  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  junit.framework.ComparisonFailure:  new  PrototypeFailure();  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	junit.framework.ComparisonFailure:  new  PrototypeFailure();	  junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
94	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  Property(newProp);  [CE]  <identifier>  expected  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  junit.framework.ComparisonFailure:  new  Property(newProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	junit.framework.ComparisonFailure:  new  Property(newProp);	  junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
95	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  PrototypeFailure(newProp);  [CE]  <identifier>  expected  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  junit.framework.ComparisonFailure:  new  PrototypeFailure(newProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	junit.framework.ComparisonFailure:  new  PrototypeFailure(newProp);	  junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
96	[BUG]  [BUGGY]  Property  newProp  =  properties.get(propertyName);  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Property  newProp  =  properties.get(propertyName);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Property  newProp  =  properties.get(propertyName);	  Property    newProp    =    properties.get(name);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
97	[BUG]  [BUGGY]  Property  newProp  =  properties.get(name  +  1);  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Property  newProp  =  properties.get(name  +  1);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Property  newProp  =  properties.get(name  +  1);	  Property    newProp    =    properties.get(name);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
98	[BUG]  [BUGGY]  Property  newProp  =  properties.get(name  -  1);  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Property  newProp  =  properties.get(name  -  1);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Property  newProp  =  properties.get(name  -  1);	  Property    newProp    =    properties.get(name);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
99	[BUG]  [BUGGY]  newProp  =  properties.get(name);  [CE]  <identifier>  expected  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  newProp  =  properties.get(name);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	newProp  =  properties.get(name);	  Property    newProp    =    properties.get(name);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
100	[BUG]  [BUGGY]  properties.put(name,  newProp)&&!propertyName.equals(type);  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  properties.put(name,  newProp)&&!propertyName.equals(type);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	properties.put(name,  newProp)&&!propertyName.equals(type);	  properties.put(name,    newProp)&&!propertyName.equals(propertyName);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
101	[BUG]  [BUGGY]  properties.put(name,  oldProp)&&!propertyName.equals(propertyName);  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  properties.put(name,  oldProp)&&!propertyName.equals(propertyName);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	properties.put(name,  oldProp)&&!propertyName.equals(propertyName);	  properties.put(name,    newProp)&&!propertyName.equals(propertyName);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
102	[BUG]  [BUGGY]  properties.put(className,  newProp)&&!propertyName.equals(propertyName);  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  properties.put(className,  newProp)&&!propertyName.equals(propertyName);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	properties.put(className,  newProp)&&!propertyName.equals(propertyName);	  properties.put(name,    newProp)&&!propertyName.equals(propertyName);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
103	[BUG]  [BUGGY]  propertyNode.put(propertyName,  oldProp);  [CE]  <identifier>  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.put(propertyName,  oldProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.put(propertyName,  oldProp);	  propertyNode.put(propertyName,    newProp);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
104	[BUG]  [BUGGY]  property.put(propertyName,  newProp);  [CE]  <identifier>  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(propertyName,  newProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(propertyName,  newProp);	  property.put(className,    newProp);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
105	[BUG]  [BUGGY]  property.put(type,  newProp);  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(type,  newProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(type,  newProp);	  property.put(className,    newProp);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
106	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  oldProp;  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  junit.framework.ComparisonFailure:  oldProp;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	junit.framework.ComparisonFailure:  oldProp;	  junit.framework.ComparisonFailure:    newProp;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
107	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  newProp,  inferred;  [CE]  <identifier>  expected  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  junit.framework.ComparisonFailure:  newProp,  inferred;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	junit.framework.ComparisonFailure:  newProp,  inferred;	  junit.framework.ComparisonFailure:    newProp;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
108	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  PrototypeFailure;  [CE]  <identifier>  expected  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  junit.framework.ComparisonFailure:  new  PrototypeFailure;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	junit.framework.ComparisonFailure:  new  PrototypeFailure;	  junit.framework.ComparisonFailure:    newProp;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
109	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  newProp,  inferred);  [CE]  <identifier>  expected  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  junit.framework.ComparisonFailure:  newProp,  inferred);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	junit.framework.ComparisonFailure:  newProp,  inferred);	  junit.framework.ComparisonFailure:    newProp;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
110	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  Property;  [CE]  <identifier>  expected  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  junit.framework.ComparisonFailure:  new  Property;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	junit.framework.ComparisonFailure:  new  Property;	  junit.framework.ComparisonFailure:    newProp;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
111	[BUG]  [BUGGY]  properties.put(propertyName,  oldProp);  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  properties.put(propertyName,  oldProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	properties.put(propertyName,  oldProp);	  properties.put(className,    oldProp);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
112	[BUG]  [BUGGY]  newProp.setImplicitPrototype(type);  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  newProp.setImplicitPrototype(type);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	newProp.setImplicitPrototype(type);	  newProp.setImplicitPrototype(inferred);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
113	[BUG]  [BUGGY]  newProp.setImplicitPrototype(propertyNode);  [CE]  <identifier>  expected  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  newProp.setImplicitPrototype(propertyNode);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	newProp.setImplicitPrototype(propertyNode);	  newProp.setImplicitPrototype(inferred);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
114	[BUG]  [BUGGY]  if(inferred)  {  newProp.setImplicitPrototype(inferred);  }  [CE]  <identifier>  expected  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(inferred)  {  newProp.setImplicitPrototype(inferred);  }  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(inferred)  {  newProp.setImplicitPrototype(inferred);  }	  newProp.setImplicitPrototype(inferred);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
115	[BUG]  [BUGGY]  newProp.setImplicitPrototype(inferred,  propertyNode);  [CE]  <identifier>  expected  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  newProp.setImplicitPrototype(inferred,  propertyNode);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	newProp.setImplicitPrototype(inferred,  propertyNode);	  newProp.setImplicitPrototype(inferred);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
116	[BUG]  [BUGGY]  newProp.setImplicitPrototype(propertyName);  [CE]  <identifier>  expected  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  newProp.setImplicitPrototype(propertyName);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	newProp.setImplicitPrototype(propertyName);	  newProp.setImplicitPrototype(inferred);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
117	[BUG]  [BUGGY]  propertyNode.put(className,  newProp).propertyName;  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.put(className,  newProp).propertyName;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.put(className,  newProp).propertyName;	  propertyNode.put(name,    newProp).propertyName;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
118	[BUG]  [BUGGY]  propertyNode.put(name,  oldProp).propertyName;  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.put(name,  oldProp).propertyName;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.put(name,  oldProp).propertyName;	  propertyNode.put(name,    newProp).propertyName;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
119	[BUG]  [BUGGY]  propertyNode.put(propertyName,  newProp).propertyName;  [CE]  <identifier>  expected  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.put(propertyName,  newProp).propertyName;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.put(propertyName,  newProp).propertyName;	  propertyNode.put(name,    newProp).propertyName;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
120	[BUG]  [BUGGY]  propertyNode.put(name,  newProp).propertyName  =  null;  [CE]  <identifier>  expected  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.put(name,  newProp).propertyName  =  null;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.put(name,  newProp).propertyName  =  null;	  propertyNode.put(name,    newProp).propertyName;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
121	[BUG]  [BUGGY]  propertyNames.put(name,  oldProp).setInferred(inferred);  [CE]  <identifier>  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNames.put(name,  oldProp).setInferred(inferred);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNames.put(name,  oldProp).setInferred(inferred);	  propertyNames.put(name,    newProp).setInferred(inferred);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
122	[BUG]  [BUGGY]  propertyNames.put(name,  newProp).setInferred(type);  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNames.put(name,  newProp).setInferred(type);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNames.put(name,  newProp).setInferred(type);	  propertyNames.put(name,    newProp).setInferred(inferred);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
123	[BUG]  [BUGGY]  propertyNames.put(name,  newProp).setType(inferred);  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNames.put(name,  newProp).setType(inferred);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNames.put(name,  newProp).setType(inferred);	  propertyNames.put(name,    newProp).setInferred(inferred);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
124	[BUG]  [BUGGY]  propertyNames.put(className,  newProp).setInferred(inferred);  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNames.put(className,  newProp).setInferred(inferred);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNames.put(className,  newProp).setInferred(inferred);	  propertyNames.put(name,    newProp).setInferred(inferred);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
125	[BUG]  [BUGGY]  properties.put(name,  newProp).setInferred(inferred);  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  properties.put(name,  newProp).setInferred(inferred);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	properties.put(name,  newProp).setInferred(inferred);	  propertyNames.put(name,    newProp).setInferred(inferred);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
126	[BUG]  [BUGGY]  if(propertyName  ==  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newProp  [CE]  <identifier>  expected  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(propertyName  ==  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newProp  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(propertyName  ==  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newProp	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.FUNCTION    ||    property.getType()!=    Token.OBJECTLIT)    {    return    newProp    	non-compiled	[CE]  <identifier>  expected	41	None	replace
127	[BUG]  [BUGGY]  propertyNode.put(type,  newProp);  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.put(type,  newProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.put(type,  newProp);	  propertyNode.put(className,    newProp);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
128	[BUG]  [BUGGY]  propertyNode.put(className,  oldProp);  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.put(className,  oldProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.put(className,  oldProp);	  propertyNode.put(className,    newProp);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
129	[BUG]  [BUGGY]  property.put(className,  newProp).setValue(propertyName);  [CE]  <identifier>  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(className,  newProp).setValue(propertyName);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(className,  newProp).setValue(propertyName);	  property.put(name,    newProp).setValue(propertyName);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
130	[BUG]  [BUGGY]  property.put(propertyName,  newProp).setValue(name);  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(propertyName,  newProp).setValue(name);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(propertyName,  newProp).setValue(name);	  property.put(name,    newProp).setValue(propertyName);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
131	[BUG]  [BUGGY]  property.put(name,  newProp).setString(propertyName);  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  newProp).setString(propertyName);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp).setString(propertyName);	  property.put(name,    newProp).setValue(propertyName);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
132	[BUG]  [BUGGY]  property.put(name,  oldProp).setValue(propertyName);  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  oldProp).setValue(propertyName);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  oldProp).setValue(propertyName);	  property.put(name,    newProp).setValue(propertyName);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
133	[BUG]  [BUGGY]  property.put(propertyName,  newProp).setValue(propertyName);  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(propertyName,  newProp).setValue(propertyName);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(propertyName,  newProp).setValue(propertyName);	  property.put(name,    newProp).setValue(propertyName);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
134	[BUG]  [BUGGY]  property.put(name,  newProp).setValue(value);  [CE]  <identifier>  expected  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  newProp).setValue(value);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp).setValue(value);	  property.put(name,    newProp).setValue(propertyName);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
135	[BUG]  [BUGGY]  propertyNames.put(propertyName,  newProp);  [CE]  <identifier>  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNames.put(propertyName,  newProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNames.put(propertyName,  newProp);	  propertyNames.put(className,    newProp);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
136	[BUG]  [BUGGY]  propertyNames.put(type,  newProp);  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNames.put(type,  newProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNames.put(type,  newProp);	  propertyNames.put(className,    newProp);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
137	[BUG]  [BUGGY]  property.put(name,  newProp).setImplicitPrototype(null);  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  newProp).setImplicitPrototype(null);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp).setImplicitPrototype(null);	  property.put(name,    newProp).getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
138	[BUG]  [BUGGY]  property.put(name,  newProp).setImplicitPrototype();  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  newProp).setImplicitPrototype();  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp).setImplicitPrototype();	  property.put(name,    newProp).getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
139	[BUG]  [BUGGY]  property.put(name,  oldProp).getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  oldProp).getImplicitPrototype();  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  oldProp).getImplicitPrototype();	  property.put(name,    newProp).getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
140	[BUG]  [BUGGY]  property.put(name,  newProp).setImplicitPrototype(inferred);  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  newProp).setImplicitPrototype(inferred);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp).setImplicitPrototype(inferred);	  property.put(name,    newProp).getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
141	[BUG]  [BUGGY]  PropertyNode  propertyNode  =  properties.get(propertyName);  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  PropertyNode  propertyNode  =  properties.get(propertyName);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	PropertyNode  propertyNode  =  properties.get(propertyName);	  PropertyNode    propertyNode    =    properties.get(name);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
142	[BUG]  [BUGGY]  PropertyNode  propertyNode  =  newProp.getPropertyNode(propertyName);  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  PropertyNode  propertyNode  =  newProp.getPropertyNode(propertyName);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	PropertyNode  propertyNode  =  newProp.getPropertyNode(propertyName);	  PropertyNode    propertyNode    =    properties.get(name);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
143	[BUG]  [BUGGY]  PropertyNode  propertyNode  =  newProp.getPropertyNode();  [CE]  <identifier>  expected  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  PropertyNode  propertyNode  =  newProp.getPropertyNode();  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	PropertyNode  propertyNode  =  newProp.getPropertyNode();	  PropertyNode    propertyNode    =    properties.get(name);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
144	[BUG]  [BUGGY]  PropertyNode  propertyNode  =  properties.get(name  +  1);  [CE]  <identifier>  expected  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  PropertyNode  propertyNode  =  properties.get(name  +  1);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	PropertyNode  propertyNode  =  properties.get(name  +  1);	  PropertyNode    propertyNode    =    properties.get(name);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
145	[BUG]  [BUGGY]  PropertyNode  propertyNode  =  newProp.propertyNode();  [CE]  <identifier>  expected  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  PropertyNode  propertyNode  =  newProp.propertyNode();  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	PropertyNode  propertyNode  =  newProp.propertyNode();	  PropertyNode    propertyNode    =    properties.get(name);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
146	[BUG]  [BUGGY]  PropertyNode  propertyNode  =  newProp.getPropertyNode(name);  [CE]  <identifier>  expected  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  PropertyNode  propertyNode  =  newProp.getPropertyNode(name);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	PropertyNode  propertyNode  =  newProp.getPropertyNode(name);	  PropertyNode    propertyNode    =    properties.get(name);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
147	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION)  {  return  newPro  [CE]  <identifier>  expected  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION)  {  return  newPro  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION)  {  return  newPro	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.OBJECTLIT    ||    property.getType()!=    Token.FUNCTION)    {    return    newPro    	non-compiled	[CE]  <identifier>  expected	40	None	replace
148	[BUG]  [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FU  [CE]  <identifier>  expected  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FU  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FU	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.OBJECTLIT    ||    property.getType()!=    Token.FUNCTION)    {    return    newPro    	non-compiled	[CE]  <identifier>  expected	40	None	replace
149	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION)  {  return  new  [CE]  <identifier>  expected  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION)  {  return  new  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION)  {  return  new	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.OBJECTLIT    ||    property.getType()!=    Token.FUNCTION)    {    return    newPro    	non-compiled	[CE]  <identifier>  expected	40	None	replace
150	[BUG]  [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION  [CE]  <identifier>  expected  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.OBJECTLIT    ||    property.getType()!=    Token.FUNCTION)    {    return    newPro    	non-compiled	[CE]  <identifier>  expected	40	None	replace
151	[BUG]  [BUGGY]  if(propertyName  ==  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FU  [CE]  <identifier>  expected  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(propertyName  ==  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FU  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(propertyName  ==  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FU	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.OBJECTLIT    ||    property.getType()!=    Token.FUNCTION)    {    return    newPro    	non-compiled	[CE]  <identifier>  expected	40	None	replace
152	[BUG]  [BUGGY]  if(propertyName  ==  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION)  {  return  newPro  [CE]  <identifier>  expected  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(propertyName  ==  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION)  {  return  newPro  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(propertyName  ==  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION)  {  return  newPro	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.OBJECTLIT    ||    property.getType()!=    Token.FUNCTION)    {    return    newPro    	non-compiled	[CE]  <identifier>  expected	40	None	replace
153	[BUG]  [BUGGY]  newProp.setImplicitPrototype(property);  [CE]  <identifier>  expected  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  newProp.setImplicitPrototype(property);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	newProp.setImplicitPrototype(property);	  newProp.setImplicitPrototype(null);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
154	[BUG]  [BUGGY]  newProp.setImplicitPrototype(implicitPrototypeFallback);  [CE]  <identifier>  expected  [FE]                                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  newProp.setImplicitPrototype(implicitPrototypeFallback);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	newProp.setImplicitPrototype(implicitPrototypeFallback);	  newProp.setImplicitPrototype(null);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
155	[BUG]  [BUGGY]  newProp.setImplicitPrototype(implicitPrototype);  [CE]  <identifier>  expected  [FE]                                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  newProp.setImplicitPrototype(implicitPrototype);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	newProp.setImplicitPrototype(implicitPrototype);	  newProp.setImplicitPrototype(null);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
156	[BUG]  [BUGGY]  Properties.put(name,  oldProp).setInferred(inferred);  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Properties.put(name,  oldProp).setInferred(inferred);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Properties.put(name,  oldProp).setInferred(inferred);	  Properties.put(name,    newProp).setInferred(inferred);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
157	[BUG]  [BUGGY]  Properties.put(name,  newProp).setInferred(type);  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Properties.put(name,  newProp).setInferred(type);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Properties.put(name,  newProp).setInferred(type);	  Properties.put(name,    newProp).setInferred(inferred);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
158	[BUG]  [BUGGY]  Properties.put(name,  newProp).setInferred(inferred,  propertyNode);  [CE]  <identifier>  expected  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Properties.put(name,  newProp).setInferred(inferred,  propertyNode);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Properties.put(name,  newProp).setInferred(inferred,  propertyNode);	  Properties.put(name,    newProp).setInferred(inferred);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
159	[BUG]  [BUGGY]  Properties.put(className,  newProp).setInferred(inferred);  [CE]  <identifier>  expected  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Properties.put(className,  newProp).setInferred(inferred);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Properties.put(className,  newProp).setInferred(inferred);	  Properties.put(name,    newProp).setInferred(inferred);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
160	[BUG]  [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION)  {  return  new  [CE]  <identifier>  expected  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION)  {  return  new  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION)  {  return  new	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.OBJECTLIT    ||    property.getType()!=    Token.FUNCTION)    {    return    newProp    	non-compiled	[CE]  <identifier>  expected	43	None	replace
161	[BUG]  [BUGGY]  propertyName.setPropertyName(newProp.getPropertyName());  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyName.setPropertyName(newProp.getPropertyName());  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyName.setPropertyName(newProp.getPropertyName());	  propertyName.setPropertyName(propertyName);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
162	[BUG]  [BUGGY]  propertyName.setPropertyName(name);  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyName.setPropertyName(name);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyName.setPropertyName(name);	  propertyName.setPropertyName(propertyName);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
163	[BUG]  [BUGGY]  propertyName.setPropertyName(property);  [CE]  <identifier>  expected  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyName.setPropertyName(property);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyName.setPropertyName(property);	  propertyName.setPropertyName(propertyName);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
164	[BUG]  [BUGGY]  propertyName.setPropertyName(newProp.getName());  [CE]  <identifier>  expected  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyName.setPropertyName(newProp.getName());  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyName.setPropertyName(newProp.getName());	  propertyName.setPropertyName(propertyName);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
165	[BUG]  [BUGGY]  propertyName.setPropertyName(newProp);  [CE]  <identifier>  expected  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyName.setPropertyName(newProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyName.setPropertyName(newProp);	  propertyName.setPropertyName(propertyName);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
166	[BUG]  [BUGGY]  propertyNode.putBooleanProperty(propertyName,  oldProp);  [CE]  <identifier>  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.putBooleanProperty(propertyName,  oldProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.putBooleanProperty(propertyName,  oldProp);	  propertyNode.putBooleanProperty(propertyName,    newProp);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
167	[BUG]  [BUGGY]  propertyNode.putBooleanProperty(propertyName,  newProp).booleanValue();  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.putBooleanProperty(propertyName,  newProp).booleanValue();  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.putBooleanProperty(propertyName,  newProp).booleanValue();	  propertyNode.putBooleanProperty(propertyName,    newProp);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
168	[BUG]  [BUGGY]  propertyNode.putProperty(propertyName,  newProp);  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.putProperty(propertyName,  newProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.putProperty(propertyName,  newProp);	  propertyNode.putBooleanProperty(propertyName,    newProp);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
169	[BUG]  [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newPro  [CE]  <identifier>  expected  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newPro  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newPro	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()!=    Token.FUNCTION    ||    property.getType()!=    Token.OBJECTLIT)    {    return    newProp    	non-compiled	[CE]  <identifier>  expected	45	None	replace
170	[BUG]  [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT  [CE]  <identifier>  expected  [FE]                                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()!=    Token.FUNCTION    ||    property.getType()!=    Token.OBJECTLIT)    {    return    newProp    	non-compiled	[CE]  <identifier>  expected	45	None	replace
171	[BUG]  [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECT  [CE]  <identifier>  expected  [FE]                                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECT  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECT	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()!=    Token.FUNCTION    ||    property.getType()!=    Token.OBJECTLIT)    {    return    newProp    	non-compiled	[CE]  <identifier>  expected	45	None	replace
172	[BUG]  [BUGGY]  if(propertyName  ==  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newPro  [CE]  <identifier>  expected  [FE]                                      junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(propertyName  ==  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newPro  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(propertyName  ==  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newPro	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()!=    Token.FUNCTION    ||    property.getType()!=    Token.OBJECTLIT)    {    return    newProp    	non-compiled	[CE]  <identifier>  expected	45	None	replace
173	[BUG]  [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  new  [CE]  <identifier>  expected  [FE]                                        junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  new  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  new	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()!=    Token.FUNCTION    ||    property.getType()!=    Token.OBJECTLIT)    {    return    newProp    	non-compiled	[CE]  <identifier>  expected	45	None	replace
174	[BUG]  [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  [CE]  <identifier>  expected  [FE]                                          junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()!=    Token.FUNCTION    ||    property.getType()!=    Token.OBJECTLIT)    {    return    newProp    	non-compiled	[CE]  <identifier>  expected	45	None	replace
175	[BUG]  [BUGGY]  property.put(name,  newProp).setName(propertyName);  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  newProp).setName(propertyName);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp).setName(propertyName);	  property.put(name,    newProp).getName();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
176	[BUG]  [BUGGY]  property.put(name,  oldProp).getName();  [CE]  <identifier>  expected  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  oldProp).getName();  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  oldProp).getName();	  property.put(name,    newProp).getName();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
177	[BUG]  [BUGGY]  property.put(className,  newProp).getName();  [CE]  <identifier>  expected  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(className,  newProp).getName();  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(className,  newProp).getName();	  property.put(name,    newProp).getName();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
178	[BUG]  [BUGGY]  property.put(name,  newProp).setName(name);  [CE]  <identifier>  expected  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  newProp).setName(name);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp).setName(name);	  property.put(name,    newProp).getName();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
179	[BUG]  [BUGGY]  propertyNode.putBooleanProp(newProp.booleanValue());  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.putBooleanProp(newProp.booleanValue());  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.putBooleanProp(newProp.booleanValue());	  propertyNode.putBooleanProp(newProp);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
180	[BUG]  [BUGGY]  propertyNode.putBooleanProp(newProp,  true);  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.putBooleanProp(newProp,  true);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.putBooleanProp(newProp,  true);	  propertyNode.putBooleanProp(newProp);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
181	[BUG]  [BUGGY]  propertyNode.putBooleanProp(newProp,  false);  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.putBooleanProp(newProp,  false);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.putBooleanProp(newProp,  false);	  propertyNode.putBooleanProp(newProp);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
182	[BUG]  [BUGGY]  newProp.setImplicitPrototypeFallback(propertyNode);  [CE]  <identifier>  expected  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  newProp.setImplicitPrototypeFallback(propertyNode);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	newProp.setImplicitPrototypeFallback(propertyNode);	  newProp.setImplicitPrototypeFallback(null);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
183	[BUG]  [BUGGY]  newProp.setImplicitPrototypeFallback(this);  [CE]  <identifier>  expected  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  newProp.setImplicitPrototypeFallback(this);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	newProp.setImplicitPrototypeFallback(this);	  newProp.setImplicitPrototypeFallback(null);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
184	[BUG]  [BUGGY]  newProp.setImplicitPrototypeFallback(propertyName);  [CE]  <identifier>  expected  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  newProp.setImplicitPrototypeFallback(propertyName);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	newProp.setImplicitPrototypeFallback(propertyName);	  newProp.setImplicitPrototypeFallback(null);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
185	[BUG]  [BUGGY]  newProp.setImplicitPrototypeFallback(implicitPrototypeFallback);  [CE]  <identifier>  expected  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  newProp.setImplicitPrototypeFallback(implicitPrototypeFallback);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	newProp.setImplicitPrototypeFallback(implicitPrototypeFallback);	  newProp.setImplicitPrototypeFallback(null);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
186	[BUG]  [BUGGY]  newProp.setImplicitPrototypeFallback(newProp);  [CE]  <identifier>  expected  [FE]                                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  newProp.setImplicitPrototypeFallback(newProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	newProp.setImplicitPrototypeFallback(newProp);	  newProp.setImplicitPrototypeFallback(null);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
187	[BUG]  [BUGGY]  property.put(name,  oldProp).setInferred(inferred);  [CE]  <identifier>  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  oldProp).setInferred(inferred);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  oldProp).setInferred(inferred);	  property.put(name,    newProp).setInferred(inferred);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
188	[BUG]  [BUGGY]  property.put(name,  newProp).setInferred(type);  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  newProp).setInferred(type);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp).setInferred(type);	  property.put(name,    newProp).setInferred(inferred);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
189	[BUG]  [BUGGY]  property.put(name,  newProp).setType(inferred);  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  newProp).setType(inferred);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp).setType(inferred);	  property.put(name,    newProp).setInferred(inferred);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
190	[BUG]  [BUGGY]  property.put(name,  newProp).setImmutableValue(inferred);  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  newProp).setImmutableValue(inferred);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp).setImmutableValue(inferred);	  property.put(name,    newProp).setInferred(inferred);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
191	[BUG]  [BUGGY]  property.put(name,  newProp).setInferred(inferred,  type);  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  newProp).setInferred(inferred,  type);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp).setInferred(inferred,  type);	  property.put(name,    newProp).setInferred(inferred);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
192	[BUG]  [BUGGY]  property.put(className,  newProp).setImplicitPrototype(propertyName);  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(className,  newProp).setImplicitPrototype(propertyName);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(className,  newProp).setImplicitPrototype(propertyName);	  property.put(name,    newProp).setImplicitPrototype(propertyName);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
193	[BUG]  [BUGGY]  property.put(propertyName,  newProp).setImplicitPrototype(propertyName);  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(propertyName,  newProp).setImplicitPrototype(propertyName);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(propertyName,  newProp).setImplicitPrototype(propertyName);	  property.put(name,    newProp).setImplicitPrototype(propertyName);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
194	[BUG]  [BUGGY]  property.put(name,  newProp).setImplicitPrototype(type);  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  newProp).setImplicitPrototype(type);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp).setImplicitPrototype(type);	  property.put(name,    newProp).setImplicitPrototype(propertyName);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
195	[BUG]  [BUGGY]  property.put(name,  oldProp).setImplicitPrototype(propertyName);  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  oldProp).setImplicitPrototype(propertyName);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  oldProp).setImplicitPrototype(propertyName);	  property.put(name,    newProp).setImplicitPrototype(propertyName);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
196	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR)  {  return  newPro  [CE]  <identifier>  expected  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR)  {  return  newPro  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR)  {  return  newPro	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.FUNCTION    ||    property.getType()!=    Token.VAR)    {    return    newPro    	non-compiled	[CE]  <identifier>  expected	44	None	replace
197	[BUG]  [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(prop.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR)  {  return  newPro  [CE]  <identifier>  expected  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(prop.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR)  {  return  newPro  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(prop.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR)  {  return  newPro	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.FUNCTION    ||    property.getType()!=    Token.VAR)    {    return    newPro    	non-compiled	[CE]  <identifier>  expected	44	None	replace
198	[BUG]  [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR  [CE]  <identifier>  expected  [FE]                                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.FUNCTION    ||    property.getType()!=    Token.VAR)    {    return    newPro    	non-compiled	[CE]  <identifier>  expected	44	None	replace
199	[BUG]  [BUGGY]  if(propertyName  ==  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR)  {  return  newPro  [CE]  <identifier>  expected  [FE]                                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(propertyName  ==  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR)  {  return  newPro  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(propertyName  ==  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR)  {  return  newPro	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.FUNCTION    ||    property.getType()!=    Token.VAR)    {    return    newPro    	non-compiled	[CE]  <identifier>  expected	44	None	replace
200	[BUG]  [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR)  {  return  new  [CE]  <identifier>  expected  [FE]                                      junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR)  {  return  new  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR)  {  return  new	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.FUNCTION    ||    property.getType()!=    Token.VAR)    {    return    newPro    	non-compiled	[CE]  <identifier>  expected	44	None	replace
201	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR)  {  return  new  [CE]  <identifier>  expected  [FE]                                        junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR)  {  return  new  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR)  {  return  new	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.FUNCTION    ||    property.getType()!=    Token.VAR)    {    return    newPro    	non-compiled	[CE]  <identifier>  expected	44	None	replace
202	[BUG]  [BUGGY]  properties.put(name,  propertyNode)&&!propertyNode;  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  properties.put(name,  propertyNode)&&!propertyNode;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	properties.put(name,  propertyNode)&&!propertyNode;	  properties.put(name,    newProp)&&!propertyNode;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
203	[BUG]  [BUGGY]  property.put(name,  newProp):  oldProp;  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  newProp):  oldProp;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp):  oldProp;	  property.put(name,    newProp):    null;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
204	[BUG]  [BUGGY]  property.put(name,  newProp):  PROPERTY;  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  newProp):  PROPERTY;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp):  PROPERTY;	  property.put(name,    newProp):    null;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
205	[BUG]  [BUGGY]  property.put(name,  newProp):  this;  [CE]  <identifier>  expected  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  newProp):  this;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp):  this;	  property.put(name,    newProp):    null;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
206	[BUG]  [BUGGY]  Property  prop  =  propertyNode.getProperty(propertyName);  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Property  prop  =  propertyNode.getProperty(propertyName);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Property  prop  =  propertyNode.getProperty(propertyName);	  Property    prop    =    properties.get(name);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
207	[BUG]  [BUGGY]  Property  prop  =  properties.get(name,  newProp);  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Property  prop  =  properties.get(name,  newProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Property  prop  =  properties.get(name,  newProp);	  Property    prop    =    properties.get(name);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
208	[BUG]  [BUGGY]  property.put(name,  newProp).setImplicitPrototype(newProp);  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  newProp).setImplicitPrototype(newProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp).setImplicitPrototype(newProp);	  property.put(name,    newProp).setImplicitPrototype(propertyName);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
209	[BUG]  [BUGGY]  property.put(name,  newProp).setImplicitPrototype(prop);  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  newProp).setImplicitPrototype(prop);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp).setImplicitPrototype(prop);	  property.put(name,    newProp).setImplicitPrototype(propertyName);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
210	[BUG]  [BUGGY]  Properties.put(name,  newProp).setNumberOfLinks(inferred);  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Properties.put(name,  newProp).setNumberOfLinks(inferred);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Properties.put(name,  newProp).setNumberOfLinks(inferred);	  Properties.put(name,    newProp).setInferred(inferred);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
211	[BUG]  [BUGGY]  Properties.put(name,  newProp).setImplicitPrototype(inferred);  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Properties.put(name,  newProp).setImplicitPrototype(inferred);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Properties.put(name,  newProp).setImplicitPrototype(inferred);	  Properties.put(name,    newProp).setInferred(inferred);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
212	[BUG]  [BUGGY]  if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newPro  [CE]  <identifier>  expected  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newPro  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newPro	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.FUNCTION    ||    property.getType()!=    Token.OBJECTLIT)    {    return    newProp    	non-compiled	[CE]  <identifier>  expected	41	None	replace
213	[BUG]  [BUGGY]  if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newProp  [CE]  <identifier>  expected  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newProp  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newProp	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.FUNCTION    ||    property.getType()!=    Token.OBJECTLIT)    {    return    newProp    	non-compiled	[CE]  <identifier>  expected	41	None	replace
214	[BUG]  [BUGGY]  if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT  [CE]  <identifier>  expected  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.FUNCTION    ||    property.getType()!=    Token.OBJECTLIT)    {    return    newProp    	non-compiled	[CE]  <identifier>  expected	41	None	replace
215	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newPro  [CE]  <identifier>  expected  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newPro  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newPro	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.FUNCTION    ||    property.getType()!=    Token.OBJECTLIT)    {    return    newProp    	non-compiled	[CE]  <identifier>  expected	41	None	replace
216	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newProp  [CE]  <identifier>  expected  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newProp  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newProp	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.FUNCTION    ||    property.getType()!=    Token.OBJECTLIT)    {    return    newProp    	non-compiled	[CE]  <identifier>  expected	41	None	replace
217	[BUG]  [BUGGY]  propertyNames.put(name,  newProp).propertyName  =  null;  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNames.put(name,  newProp).propertyName  =  null;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNames.put(name,  newProp).propertyName  =  null;	  propertyNames.put(name,    newProp).propertyName;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
218	[BUG]  [BUGGY]  propertyNames.put(name,  newProp).propertyName  =  propertyName;  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNames.put(name,  newProp).propertyName  =  propertyName;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNames.put(name,  newProp).propertyName  =  propertyName;	  propertyNames.put(name,    newProp).propertyName;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
219	[BUG]  [BUGGY]  Properties.put(name,  newProp,  oldProp);  [CE]  <identifier>  expected  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Properties.put(name,  newProp,  oldProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Properties.put(name,  newProp,  oldProp);	  Properties.put(name,    newProp,    propertyName);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
220	[BUG]  [BUGGY]  Properties.put(name,  newProp,  propertyName,  inferred);  [CE]  <identifier>  expected  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Properties.put(name,  newProp,  propertyName,  inferred);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Properties.put(name,  newProp,  propertyName,  inferred);	  Properties.put(name,    newProp,    propertyName);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
221	[BUG]  [BUGGY]  Properties.put(name,  newProp,  null);  [CE]  <identifier>  expected  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Properties.put(name,  newProp,  null);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Properties.put(name,  newProp,  null);	  Properties.put(name,    newProp,    propertyName);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
222	[BUG]  [BUGGY]  Properties.put(name,  newProp,  type);  [CE]  <identifier>  expected  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Properties.put(name,  newProp,  type);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Properties.put(name,  newProp,  type);	  Properties.put(name,    newProp,    propertyName);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
223	[BUG]  [BUGGY]  Properties.put(name,  newProp,  0);  [CE]  <identifier>  expected  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Properties.put(name,  newProp,  0);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Properties.put(name,  newProp,  0);	  Properties.put(name,    newProp,    propertyName);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
224	[BUG]  [BUGGY]  if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  [CE]  <identifier>  expected  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.FUNCTION    ||    property.getType()!=    Token.OBJECTLIT)    {    return    newPro    	non-compiled	[CE]  <identifier>  expected	42	None	replace
225	[BUG]  [BUGGY]  if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  new  [CE]  <identifier>  expected  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  new  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  new	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.FUNCTION    ||    property.getType()!=    Token.OBJECTLIT)    {    return    newPro    	non-compiled	[CE]  <identifier>  expected	42	None	replace
226	[BUG]  [BUGGY]  if(type  ==  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newPro  [CE]  <identifier>  expected  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(type  ==  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newPro  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(type  ==  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newPro	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.FUNCTION    ||    property.getType()!=    Token.OBJECTLIT)    {    return    newPro    	non-compiled	[CE]  <identifier>  expected	42	None	replace
227	[BUG]  [BUGGY]  Property  newProp  =  properties.get(className);  [CE]  <identifier>  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Property  newProp  =  properties.get(className);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Property  newProp  =  properties.get(className);	  property.put(className,    newProp);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
228	[BUG]  [BUGGY]  property.put(key,  newProp);  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(key,  newProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(key,  newProp);	  property.put(className,    newProp);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
229	[BUG]  [BUGGY]  newProp.setImplicitPrototype(prop);  [CE]  <identifier>  expected  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  newProp.setImplicitPrototype(prop);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	newProp.setImplicitPrototype(prop);	  newProp.setImplicitPrototype(null);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
230	[BUG]  [BUGGY]  PropertyNode  propertyNode  =  properties.get(name  -  1);  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  PropertyNode  propertyNode  =  properties.get(name  -  1);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	PropertyNode  propertyNode  =  properties.get(name  -  1);	  PropertyNode    propertyNode    =    properties.get(name);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
231	[BUG]  [BUGGY]  PropertyNode  propertyNode  =  properties.get(newProp);  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  PropertyNode  propertyNode  =  properties.get(newProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	PropertyNode  propertyNode  =  properties.get(newProp);	  PropertyNode    propertyNode    =    properties.get(name);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
232	[BUG]  [BUGGY]  PropertyNode  propertyNode  =  properties.get(name,  newProp);  [CE]  <identifier>  expected  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  PropertyNode  propertyNode  =  properties.get(name,  newProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	PropertyNode  propertyNode  =  properties.get(name,  newProp);	  PropertyNode    propertyNode    =    properties.get(name);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
233	[BUG]  [BUGGY]  if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR)  {  return  newPro  [CE]  <identifier>  expected  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR)  {  return  newPro  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR)  {  return  newPro	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.FUNCTION    ||    property.getType()!=    Token.VAR)    {    return    newPro    	non-compiled	[CE]  <identifier>  expected	44	None	replace
234	[BUG]  [BUGGY]  if(type  ==  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR)  {  return  newPro  [CE]  <identifier>  expected  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(type  ==  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR)  {  return  newPro  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(type  ==  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR)  {  return  newPro	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.FUNCTION    ||    property.getType()!=    Token.VAR)    {    return    newPro    	non-compiled	[CE]  <identifier>  expected	44	None	replace
235	[BUG]  [BUGGY]  if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR)  {  return  new  [CE]  <identifier>  expected  [FE]                                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR)  {  return  new  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR)  {  return  new	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.FUNCTION    ||    property.getType()!=    Token.VAR)    {    return    newPro    	non-compiled	[CE]  <identifier>  expected	44	None	replace
236	[BUG]  [BUGGY]  if(type!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR)  {  return  newPro  [CE]  <identifier>  expected  [FE]                                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(type!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR)  {  return  newPro  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(type!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR)  {  return  newPro	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.FUNCTION    ||    property.getType()!=    Token.VAR)    {    return    newPro    	non-compiled	[CE]  <identifier>  expected	44	None	replace
237	[BUG]  [BUGGY]  if(type  ==  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR)  {  return  new  [CE]  <identifier>  expected  [FE]                                      junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(type  ==  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR)  {  return  new  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(type  ==  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR)  {  return  new	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.FUNCTION    ||    property.getType()!=    Token.VAR)    {    return    newPro    	non-compiled	[CE]  <identifier>  expected	44	None	replace
238	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ProparisonFailure(newProp);  [CE]  <identifier>  expected  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ProparisonFailure(newProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	junit.framework.ComparisonFailure:  new  ProparisonFailure(newProp);	  junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
239	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  ProparisonFailure(null);  [CE]  <identifier>  expected  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  junit.framework.ComparisonFailure:  new  ProparisonFailure(null);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	junit.framework.ComparisonFailure:  new  ProparisonFailure(null);	  junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
240	[BUG]  [BUGGY]  propertyName.setPropertyName(newProp.getLocalName());  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyName.setPropertyName(newProp.getLocalName());  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyName.setPropertyName(newProp.getLocalName());	  propertyName.setLocalName(newProp.getLocalName());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
241	[BUG]  [BUGGY]  propertyName.setLocalName(newProp.getUpperBound());  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyName.setLocalName(newProp.getUpperBound());  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyName.setLocalName(newProp.getUpperBound());	  propertyName.setLocalName(newProp.getLocalName());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
242	[BUG]  [BUGGY]  propertyNode.putBooleanProp(newProp,  inferred);  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.putBooleanProp(newProp,  inferred);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.putBooleanProp(newProp,  inferred);	  propertyNode.putBooleanProp(newProp);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
243	[BUG]  [BUGGY]  propertyNode.putBooleanProp(null);  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.putBooleanProp(null);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.putBooleanProp(null);	  propertyNode.putBooleanProp(newProp);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
244	[BUG]  [BUGGY]  if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newPro  [CE]  <identifier>  expected  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newPro  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newPro	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()!=    Token.FUNCTION    ||    property.getType()!=    Token.OBJECTLIT)    {    return    newProp    	non-compiled	[CE]  <identifier>  expected	45	None	replace
245	[BUG]  [BUGGY]  if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT  [CE]  <identifier>  expected  [FE]                                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()!=    Token.FUNCTION    ||    property.getType()!=    Token.OBJECTLIT)    {    return    newProp    	non-compiled	[CE]  <identifier>  expected	45	None	replace
246	[BUG]  [BUGGY]  if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newProp  [CE]  <identifier>  expected  [FE]                                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newProp  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newProp	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()!=    Token.FUNCTION    ||    property.getType()!=    Token.OBJECTLIT)    {    return    newProp    	non-compiled	[CE]  <identifier>  expected	45	None	replace
247	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newPro  [CE]  <identifier>  expected  [FE]                                      junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newPro  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newPro	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()!=    Token.FUNCTION    ||    property.getType()!=    Token.OBJECTLIT)    {    return    newProp    	non-compiled	[CE]  <identifier>  expected	45	None	replace
248	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newProp  [CE]  <identifier>  expected  [FE]                                        junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newProp  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newProp	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()!=    Token.FUNCTION    ||    property.getType()!=    Token.OBJECTLIT)    {    return    newProp    	non-compiled	[CE]  <identifier>  expected	45	None	replace
249	[BUG]  [BUGGY]  if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  [CE]  <identifier>  expected  [FE]                                          junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()!=    Token.FUNCTION    ||    property.getType()!=    Token.OBJECTLIT)    {    return    newProp    	non-compiled	[CE]  <identifier>  expected	45	None	replace
250	[BUG]  [BUGGY]  if(type  ==  null)  {  Property  newProp  =  newProp.getProperty(propertyName);  if(newProp!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(type  ==  null)  {  Property  newProp  =  newProp.getProperty(propertyName);  if(newProp!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(type  ==  null)  {  Property  newProp  =  newProp.getProperty(propertyName);  if(newProp!=  null)  {  return  false;  }	  if(propertyNode!=    null)    {    Property    newProp    =    newProp.getProperty(propertyName);    if(newProp!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
251	[BUG]  [BUGGY]  if(type!=  null)  {  Property  newProp  =  newProp.getProperty(propertyName);  if(newProp!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(type!=  null)  {  Property  newProp  =  newProp.getProperty(propertyName);  if(newProp!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(type!=  null)  {  Property  newProp  =  newProp.getProperty(propertyName);  if(newProp!=  null)  {  return  false;  }	  if(propertyNode!=    null)    {    Property    newProp    =    newProp.getProperty(propertyName);    if(newProp!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
252	[BUG]  [BUGGY]  if(propertyNode!=  null)  {  Property  newProp  =  oldProp.getProperty(propertyName);  if(newProp!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(propertyNode!=  null)  {  Property  newProp  =  oldProp.getProperty(propertyName);  if(newProp!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(propertyNode!=  null)  {  Property  newProp  =  oldProp.getProperty(propertyName);  if(newProp!=  null)  {  return  false;  }	  if(propertyNode!=    null)    {    Property    newProp    =    newProp.getProperty(propertyName);    if(newProp!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
253	[BUG]  [BUGGY]  property.put(name,  newProp).setName(null);  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  newProp).setName(null);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp).setName(null);	  property.put(name,    newProp).getName();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
254	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  oldProp;  [CE]  <identifier>  expected  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  junit.framework.ComparisonFailure  =  oldProp;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	junit.framework.ComparisonFailure  =  oldProp;	  junit.framework.ComparisonFailure    =    newProp;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
255	[BUG]  [BUGGY]  Properties.put(className,  newProp,  inferred);  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Properties.put(className,  newProp,  inferred);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Properties.put(className,  newProp,  inferred);	  Properties.put(className,    newProp);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
256	[BUG]  [BUGGY]  propertyName.setPropertyName(propertyNode);  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyName.setPropertyName(propertyNode);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyName.setPropertyName(propertyNode);	  propertyName.setPropertyName(propertyName);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
257	[BUG]  [BUGGY]  propertyName.setPropertyName(prop);  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyName.setPropertyName(prop);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyName.setPropertyName(prop);	  propertyName.setPropertyName(propertyName);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
258	[BUG]  [BUGGY]  newProp.setImplicitPrototypeFallback(false,  inferred);  [CE]  <identifier>  expected  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  newProp.setImplicitPrototypeFallback(false,  inferred);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	newProp.setImplicitPrototypeFallback(false,  inferred);	  newProp.setImplicitPrototypeFallback(true);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
259	[BUG]  [BUGGY]  newProp.setImplicitPrototypeFallback(true,  inferred);  [CE]  <identifier>  expected  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  newProp.setImplicitPrototypeFallback(true,  inferred);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	newProp.setImplicitPrototypeFallback(true,  inferred);	  newProp.setImplicitPrototypeFallback(true);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
260	[BUG]  [BUGGY]  propertyNode.putBooleanProperty(newProp,  name);  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.putBooleanProperty(newProp,  name);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.putBooleanProperty(newProp,  name);	  propertyNode.putBooleanProperty(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
261	[BUG]  [BUGGY]  propertyNode.putProperty(name,  newProp);  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.putProperty(name,  newProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.putProperty(name,  newProp);	  propertyNode.putBooleanProperty(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
262	[BUG]  [BUGGY]  propertyNode.put(name,  newProp).propertyName  =  propertyName;  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.put(name,  newProp).propertyName  =  propertyName;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.put(name,  newProp).propertyName  =  propertyName;	  propertyNode.put(name,    newProp).propertyName;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
263	[BUG]  [BUGGY]  propertyNode.put(name,  newProp).propertyName  =  name;  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.put(name,  newProp).propertyName  =  name;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.put(name,  newProp).propertyName  =  name;	  propertyNode.put(name,    newProp).propertyName;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
264	[BUG]  [BUGGY]  propertyNode.put(name,  newProp).propertyName  =  oldProp;  [CE]  <identifier>  expected  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.put(name,  newProp).propertyName  =  oldProp;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.put(name,  newProp).propertyName  =  oldProp;	  propertyNode.put(name,    newProp).propertyName;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
265	[BUG]  [BUGGY]  propertyNode.putBooleanProp(oldProp,  newProp);  [CE]  <identifier>  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.putBooleanProp(oldProp,  newProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.putBooleanProp(oldProp,  newProp);	  propertyNode.putBooleanProp(propertyName,    newProp);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
266	[BUG]  [BUGGY]  propertyNode.putPropertyName(propertyName,  newProp);  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.putPropertyName(propertyName,  newProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.putPropertyName(propertyName,  newProp);	  propertyNode.putBooleanProp(propertyName,    newProp);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
267	[BUG]  [BUGGY]  Properties.put(propertyName,  propertyNode);  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Properties.put(propertyName,  propertyNode);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Properties.put(propertyName,  propertyNode);	  Properties.put(name,    propertyNode);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
268	[BUG]  [BUGGY]  propertyNames.put(name,  newProp).setNumberOfLinks(inferred);  [CE]  <identifier>  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNames.put(name,  newProp).setNumberOfLinks(inferred);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNames.put(name,  newProp).setNumberOfLinks(inferred);	  propertyNames.put(name,    newProp).setInferred(inferred);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
269	[BUG]  [BUGGY]  propertyNames.put(name,  newProp).setInferred(inferred  +  1);  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNames.put(name,  newProp).setInferred(inferred  +  1);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNames.put(name,  newProp).setInferred(inferred  +  1);	  propertyNames.put(name,    newProp).setInferred(inferred);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
270	[BUG]  [BUGGY]  property.put(name,  newProp).setValue(type);  [CE]  <identifier>  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  newProp).setValue(type);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp).setValue(type);	  property.put(name,    newProp).setValue(propertyName);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
271	[BUG]  [BUGGY]  property.put(name,  newProp).setValue(null);  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  newProp).setValue(null);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp).setValue(null);	  property.put(name,    newProp).setValue(propertyName);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
272	[BUG]  [BUGGY]  property.put(name,  newProp).setInferred(inferred  +  1);  [CE]  <identifier>  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  newProp).setInferred(inferred  +  1);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp).setInferred(inferred  +  1);	  property.put(name,    newProp).setInferred(inferred);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
273	[BUG]  [BUGGY]  property.put(name,  newProp).setNumberOfLinks(inferred);  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  newProp).setNumberOfLinks(inferred);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp).setNumberOfLinks(inferred);	  property.put(name,    newProp).setInferred(inferred);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
274	[BUG]  [BUGGY]  properties.put(name,  newProp)&&!propertyName.equals(oldProp);  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  properties.put(name,  newProp)&&!propertyName.equals(oldProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	properties.put(name,  newProp)&&!propertyName.equals(oldProp);	  properties.put(name,    newProp)&&!propertyName.equals(propertyName);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
275	[BUG]  [BUGGY]  properties.put(name,  newProp)&&!propertyName.equals(oldProp.getString());  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  properties.put(name,  newProp)&&!propertyName.equals(oldProp.getString());  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	properties.put(name,  newProp)&&!propertyName.equals(oldProp.getString());	  properties.put(name,    newProp)&&!propertyName.equals(propertyName);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
276	[BUG]  [BUGGY]  if(newProp!=  null)  {  junit.framework.ComparisonFailure:  newProp;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(newProp!=  null)  {  junit.framework.ComparisonFailure:  newProp;  }  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(newProp!=  null)  {  junit.framework.ComparisonFailure:  newProp;  }	  junit.framework.ComparisonFailure:    newProp;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
277	[BUG]  [BUGGY]  if(newProp!=  null)  {  junit.framework.ComparisonFailure:  newProp;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(newProp!=  null)  {  junit.framework.ComparisonFailure:  newProp;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(newProp!=  null)  {  junit.framework.ComparisonFailure:  newProp;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  junit.framework.ComparisonFailure:    newProp;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
278	[BUG]  [BUGGY]  if(newProp!=  null)  {  junit.framework.ComparisonFailure:  newProp;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(newProp!=  null)  {  junit.framework.ComparisonFailure:  newProp;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(newProp!=  null)  {  junit.framework.ComparisonFailure:  newProp;  }  else  {  throw  new  IllegalStateException( " ");  }	  junit.framework.ComparisonFailure:    newProp;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
279	[BUG]  [BUGGY]  propertyNode.putProp(null,  newProp);  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.putProp(null,  newProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.putProp(null,  newProp);	  propertyNode.putProp(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
280	[BUG]  [BUGGY]  if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION)  {  return  newPro  [CE]  <identifier>  expected  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION)  {  return  newPro  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION)  {  return  newPro	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.OBJECTLIT    ||    property.getType()!=    Token.FUNCTION)    {    return    newPro    	non-compiled	[CE]  <identifier>  expected	40	None	replace
281	[BUG]  [BUGGY]  if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION)  {  return  [CE]  <identifier>  expected  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION)  {  return  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION)  {  return	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.OBJECTLIT    ||    property.getType()!=    Token.FUNCTION)    {    return    newPro    	non-compiled	[CE]  <identifier>  expected	40	None	replace
282	[BUG]  [BUGGY]  if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION)  {  return  new  [CE]  <identifier>  expected  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION)  {  return  new  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION)  {  return  new	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.OBJECTLIT    ||    property.getType()!=    Token.FUNCTION)    {    return    newPro    	non-compiled	[CE]  <identifier>  expected	40	None	replace
283	[BUG]  [BUGGY]  if(type  ==  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION)  {  return  newPro  [CE]  <identifier>  expected  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(type  ==  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION)  {  return  newPro  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(type  ==  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION)  {  return  newPro	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.OBJECTLIT    ||    property.getType()!=    Token.FUNCTION)    {    return    newPro    	non-compiled	[CE]  <identifier>  expected	40	None	replace
284	[BUG]  [BUGGY]  property.put(name,  newProp).propertyName.setImplicitPrototype(null);  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  newProp).propertyName.setImplicitPrototype(null);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp).propertyName.setImplicitPrototype(null);	  property.put(name,    newProp).getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
285	[BUG]  [BUGGY]  newProp.setInferred(inferred,  nativeType);  [CE]  <identifier>  expected  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  newProp.setInferred(inferred,  nativeType);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	newProp.setInferred(inferred,  nativeType);	  newProp.setInferred(inferred);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
286	[BUG]  [BUGGY]  newProp.setInferred(inferred  &&  propertyNode!=  null);  [CE]  <identifier>  expected  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  newProp.setInferred(inferred  &&  propertyNode!=  null);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	newProp.setInferred(inferred  &&  propertyNode!=  null);	  newProp.setInferred(inferred);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
287	[BUG]  [BUGGY]  newProp.setInferred(inferred  &&  type!=  null);  [CE]  <identifier>  expected  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  newProp.setInferred(inferred  &&  type!=  null);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	newProp.setInferred(inferred  &&  type!=  null);	  newProp.setInferred(inferred);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
288	[BUG]  [BUGGY]  propertyNames.put(name,  newProp).propertyNode  =  null;  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNames.put(name,  newProp).propertyNode  =  null;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNames.put(name,  newProp).propertyNode  =  null;	  propertyNames.put(name,    newProp).propertyNode;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
289	[BUG]  [BUGGY]  propertyNames.put(name,  newProp).propertyNode  =  propertyName;  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNames.put(name,  newProp).propertyNode  =  propertyName;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNames.put(name,  newProp).propertyNode  =  propertyName;	  propertyNames.put(name,    newProp).propertyNode;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
290	[BUG]  [BUGGY]  propertyNames.put(name,  newProp).propertyNode  =  prop;  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNames.put(name,  newProp).propertyNode  =  prop;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNames.put(name,  newProp).propertyNode  =  prop;	  propertyNames.put(name,    newProp).propertyNode;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
291	[BUG]  [BUGGY]  if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION)  {  return  newProp  [CE]  <identifier>  expected  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION)  {  return  newProp  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION)  {  return  newProp	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.OBJECTLIT    ||    property.getType()!=    Token.FUNCTION)    {    return    newProp    	non-compiled	[CE]  <identifier>  expected	43	None	replace
292	[BUG]  [BUGGY]  propertyNode.putProperty(propertyName,  oldProp);  [CE]  <identifier>  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.putProperty(propertyName,  oldProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.putProperty(propertyName,  oldProp);	  propertyNode.put(propertyName,    newProp);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
293	[BUG]  [BUGGY]  Property  newProp  =  properties.get(name);  propertyNode.put(name,  newProp);  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Property  newProp  =  properties.get(name);  propertyNode.put(name,  newProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Property  newProp  =  properties.get(name);  propertyNode.put(name,  newProp);	  propertyNode.put(name,    oldProp);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
294	[BUG]  [BUGGY]  Property  newProp  =  propertyNode.getProperty(propertyName);  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Property  newProp  =  propertyNode.getProperty(propertyName);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Property  newProp  =  propertyNode.getProperty(propertyName);	  Property    newProp    =    properties.get(name);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
295	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  newProp,  propertyNode;  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  junit.framework.ComparisonFailure:  newProp,  propertyNode;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	junit.framework.ComparisonFailure:  newProp,  propertyNode;	  junit.framework.ComparisonFailure:    newProp;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
296	[BUG]  [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJ  [CE]  <identifier>  expected  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJ  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJ	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.FUNCTION    ||    property.getType()!=    Token.OBJECTLIT)    {    return    newProp    	non-compiled	[CE]  <identifier>  expected	41	None	replace
297	[BUG]  [BUGGY]  property.put(name,  newProp).propertyName.toString();  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  newProp).propertyName.toString();  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp).propertyName.toString();	  property.put(name,    newProp).getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
298	[BUG]  [BUGGY]  propertyNode.putBooleanProperty(propertyName,  newProp)&&!inferred;  [CE]  <identifier>  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.putBooleanProperty(propertyName,  newProp)&&!inferred;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.putBooleanProperty(propertyName,  newProp)&&!inferred;	  propertyNode.putBooleanProperty(propertyName,    newProp);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
299	[BUG]  [BUGGY]  propertyNode.put(name,  newProp).propertyName  =  prop;  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.put(name,  newProp).propertyName  =  prop;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.put(name,  newProp).propertyName  =  prop;	  propertyNode.put(name,    newProp).propertyName;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
300	[BUG]  [BUGGY]  propertyNode.put(name,  newProp).propertyName  + "prototype ";  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.put(name,  newProp).propertyName  + "prototype ";  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.put(name,  newProp).propertyName  + "prototype ";	  propertyNode.put(name,    newProp).propertyName;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
301	[BUG]  [BUGGY]  property.put(name,  newProp).addValue(propertyName);  [CE]  <identifier>  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  newProp).addValue(propertyName);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp).addValue(propertyName);	  property.put(name,    newProp).setValue(propertyName);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
302	[BUG]  [BUGGY]  property.put(name,  newProp).setValue(className);  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  newProp).setValue(className);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp).setValue(className);	  property.put(name,    newProp).setValue(propertyName);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
303	[BUG]  [BUGGY]  propertyNode.put(name,  newProp)&&!propertyNode;  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.put(name,  newProp)&&!propertyNode;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.put(name,  newProp)&&!propertyNode;	  properties.put(name,    newProp)&&!propertyNode;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
304	[BUG]  [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJ  [CE]  <identifier>  expected  [FE]                                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJ  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJ	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()!=    Token.FUNCTION    ||    property.getType()!=    Token.OBJECTLIT)    {    return    newProp    	non-compiled	[CE]  <identifier>  expected	45	None	replace
305	[BUG]  [BUGGY]  Properties.put(name,  newProp,  propertyName,  false);  [CE]  <identifier>  expected  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Properties.put(name,  newProp,  propertyName,  false);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Properties.put(name,  newProp,  propertyName,  false);	  Properties.put(name,    newProp,    propertyName);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
306	[BUG]  [BUGGY]  if(type!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR)  {  return  new  [CE]  <identifier>  expected  [FE]                              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(type!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR)  {  return  new  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(type!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR)  {  return  new	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.FUNCTION    ||    property.getType()!=    Token.VAR)    {    return    newPro    	non-compiled	[CE]  <identifier>  expected	44	None	replace
307	[BUG]  [BUGGY]  propertyNames.put(name,  newProp).propertyValue;  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNames.put(name,  newProp).propertyValue;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNames.put(name,  newProp).propertyValue;	  propertyNames.put(name,    newProp).propertyNode;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
308	[BUG]  [BUGGY]  propertyNode.put(name,  newProp)&&!propertyName.equals(propertyName);  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.put(name,  newProp)&&!propertyName.equals(propertyName);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.put(name,  newProp)&&!propertyName.equals(propertyName);	  propertyNode.put(name,    newProp)&&!inferred;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
309	[BUG]  [BUGGY]  propertyNode.put(name,  newProp)&&!propertyName.equals(type);  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.put(name,  newProp)&&!propertyName.equals(type);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.put(name,  newProp)&&!propertyName.equals(type);	  propertyNode.put(name,    newProp)&&!inferred;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
310	[BUG]  [BUGGY]  propertyNode.put(name,  newProp)&&!propertyName.isEmpty();  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.put(name,  newProp)&&!propertyName.isEmpty();  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.put(name,  newProp)&&!propertyName.isEmpty();	  propertyNode.put(name,    newProp)&&!inferred;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
311	[BUG]  [BUGGY]  if(type!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT  [CE]  <identifier>  expected  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(type!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(type!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.FUNCTION    ||    property.getType()!=    Token.OBJECTLIT)    {    return    newPro    	non-compiled	[CE]  <identifier>  expected	42	None	replace
312	[BUG]  [BUGGY]  propertyNode.putBooleanProperty(prop,  newProp);  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.putBooleanProperty(prop,  newProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.putBooleanProperty(prop,  newProp);	  propertyNode.putBooleanProperty(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
313	[BUG]  [BUGGY]  if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION  [CE]  <identifier>  expected  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(inferred)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION	  if(propertyName!=    null)    {    for(int    i    =    0;    i    <    properties.size();    ++i)    {    Property    property    =    properties.get(i);    if(property.getType()    ==    Token.OBJECTLIT    ||    property.getType()!=    Token.FUNCTION)    {    return    newPro    	non-compiled	[CE]  <identifier>  expected	40	None	replace
314	[BUG]  [BUGGY]  property.putBooleanProperty(name,  newProp);  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.putBooleanProperty(name,  newProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.putBooleanProperty(name,  newProp);	  property.put(name,    oldProp);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
315	[BUG]  [BUGGY]  property.putBooleanProperty(propertyName,  oldProp);  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.putBooleanProperty(propertyName,  oldProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.putBooleanProperty(propertyName,  oldProp);	  property.put(name,    oldProp);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
316	[BUG]  [BUGGY]  property.putBooleanProperty(propertyName,  newProp);  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.putBooleanProperty(propertyName,  newProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.putBooleanProperty(propertyName,  newProp);	  property.put(name,    oldProp);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
317	[BUG]  [BUGGY]  propertyName.setProperty(propertyName,  newProp);  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyName.setProperty(propertyName,  newProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyName.setProperty(propertyName,  newProp);	  properties.put(propertyName,    newProp);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
318	[BUG]  [BUGGY]  propertyName.setProperty(propertyName,  oldProp);  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyName.setProperty(propertyName,  oldProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyName.setProperty(propertyName,  oldProp);	  properties.put(propertyName,    newProp);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
319	[BUG]  [BUGGY]  propertyName.setProperty(propertyName);  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyName.setProperty(propertyName);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyName.setProperty(propertyName);	  properties.put(propertyName,    newProp);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
320	[BUG]  [BUGGY]  Property  propertyNames.put(name,  newProp);  [CE]  <identifier>  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Property  propertyNames.put(name,  newProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Property  propertyNames.put(name,  newProp);	  propertyNames.put(className,    newProp);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
321	[BUG]  [BUGGY]  propertyNames.put(property,  newProp);  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNames.put(property,  newProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNames.put(property,  newProp);	  propertyNames.put(className,    newProp);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
322	[BUG]  [BUGGY]  property.put(name,  newProp):  newProp;  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  newProp):  newProp;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp):  newProp;	  property.put(name,    newProp):    null;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
323	[BUG]  [BUGGY]  property.put(name,  newProp):  Property.UNKNOWN;  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  newProp):  Property.UNKNOWN;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp):  Property.UNKNOWN;	  property.put(name,    newProp):    null;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
324	[BUG]  [BUGGY]  propertyNode.put(name,  newProp).setInferred(inferred);  [CE]  <identifier>  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.put(name,  newProp).setInferred(inferred);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.put(name,  newProp).setInferred(inferred);	  property.put(name,    newProp).setInferred(inferred);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
325	[BUG]  [BUGGY]  property.put(name,  newProp).setInferred(inferred  &&  oldProp.getType()!=  Token.FUNCTION);  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  newProp).setInferred(inferred  &&  oldProp.getType()!=  Token.FUNCTION);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp).setInferred(inferred  &&  oldProp.getType()!=  Token.FUNCTION);	  property.put(name,    newProp).setInferred(inferred);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
326	[BUG]  [BUGGY]  property.put(name,  newProp).setInferred(inferred  &&  oldProp.getType()!=  Token.VAR);  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  newProp).setInferred(inferred  &&  oldProp.getType()!=  Token.VAR);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp).setInferred(inferred  &&  oldProp.getType()!=  Token.VAR);	  property.put(name,    newProp).setInferred(inferred);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
327	[BUG]  [BUGGY]  property.put(name,  newProp).setInferred(inferred  &&  oldProp.getType()  ==  Token.FUNCTION);  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  newProp).setInferred(inferred  &&  oldProp.getType()  ==  Token.FUNCTION);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp).setInferred(inferred  &&  oldProp.getType()  ==  Token.FUNCTION);	  property.put(name,    newProp).setInferred(inferred);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
328	[BUG]  [BUGGY]  property.put(name,  newProp).propertyName;  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  newProp).propertyName;  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp).propertyName;	  property.put(name,    newProp).getName();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
329	[BUG]  [BUGGY]  property.put(name,  newProp).getValue();  [CE]  <identifier>  expected  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  newProp).getValue();  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp).getValue();	  property.put(name,    newProp).getName();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
330	[BUG]  [BUGGY]  property.put(name,  newProp).getDeclaration();  [CE]  <identifier>  expected  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  newProp).getDeclaration();  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp).getDeclaration();	  property.put(name,    newProp).getName();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
331	[BUG]  [BUGGY]  property.put(name,  newProp).defineProperty(name,  type);  [CE]  <identifier>  expected  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  property.put(name,  newProp).defineProperty(name,  type);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp).defineProperty(name,  type);	  property.put(name,    newProp).getName();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
332	[BUG]  [BUGGY]  Properties.put(name,  newProp).setInferred(inferred  &&  oldProp.getType()!=  Token.FUNCTION);  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Properties.put(name,  newProp).setInferred(inferred  &&  oldProp.getType()!=  Token.FUNCTION);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Properties.put(name,  newProp).setInferred(inferred  &&  oldProp.getType()!=  Token.FUNCTION);	  Properties.put(name,    newProp).setInferred(inferred);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
333	[BUG]  [BUGGY]  Properties.put(name,  newProp).setInferred(inferred  &&  oldProp.getType()!=  Token.VAR);  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Properties.put(name,  newProp).setInferred(inferred  &&  oldProp.getType()!=  Token.VAR);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Properties.put(name,  newProp).setInferred(inferred  &&  oldProp.getType()!=  Token.VAR);	  Properties.put(name,    newProp).setInferred(inferred);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
334	[BUG]  [BUGGY]  Property  prop  =  newProp.getProperty(propertyName);  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  Property  prop  =  newProp.getProperty(propertyName);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Property  prop  =  newProp.getProperty(propertyName);	  Property    prop    =    properties.get(name);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
335	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  Property(newProp,  propertyNode);  [CE]  <identifier>  expected  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  junit.framework.ComparisonFailure:  new  Property(newProp,  propertyNode);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	junit.framework.ComparisonFailure:  new  Property(newProp,  propertyNode);	  junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
336	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  new  Property(name,  type,  inferred,  propertyNode);  [CE]  <identifier>  expected  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  junit.framework.ComparisonFailure:  new  Property(name,  type,  inferred,  propertyNode);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	junit.framework.ComparisonFailure:  new  Property(name,  type,  inferred,  propertyNode);	  junit.framework.ComparisonFailure:    null;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
337	[BUG]  [BUGGY]  if(propertyNode  ==  null)  {  Property  newProp  =  newProp.getProperty(propertyName);  if(newProp!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(propertyNode  ==  null)  {  Property  newProp  =  newProp.getProperty(propertyName);  if(newProp!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(propertyNode  ==  null)  {  Property  newProp  =  newProp.getProperty(propertyName);  if(newProp!=  null)  {  return  false;  }	  if(propertyNode!=    null)    {    Property    newProp    =    newProp.getProperty(propertyName);    if(newProp!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
338	[BUG]  [BUGGY]  if(newProp!=  null)  {  Property  newProp  =  newProp.getProperty(propertyName);  if(newProp!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  if(newProp!=  null)  {  Property  newProp  =  newProp.getProperty(propertyName);  if(newProp!=  null)  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(newProp!=  null)  {  Property  newProp  =  newProp.getProperty(propertyName);  if(newProp!=  null)  {  return  false;  }	  if(propertyNode!=    null)    {    Property    newProp    =    newProp.getProperty(propertyName);    if(newProp!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
339	[BUG]  [BUGGY]  propertyNames.put(name,  newProp).setInferred(inferred  &&  oldProp.getType()!=  Token.FUNCTION);  [CE]  <identifier>  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNames.put(name,  newProp).setInferred(inferred  &&  oldProp.getType()!=  Token.FUNCTION);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNames.put(name,  newProp).setInferred(inferred  &&  oldProp.getType()!=  Token.FUNCTION);	  propertyNames.put(name,    newProp).setInferred(inferred);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
340	[BUG]  [BUGGY]  propertyNames.put(name,  newProp).setInferred(inferred  &&  oldProp.getType()  ==  Token.FUNCTION);  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNames.put(name,  newProp).setInferred(inferred  &&  oldProp.getType()  ==  Token.FUNCTION);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNames.put(name,  newProp).setInferred(inferred  &&  oldProp.getType()  ==  Token.FUNCTION);	  propertyNames.put(name,    newProp).setInferred(inferred);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
341	[BUG]  [BUGGY]  propertyNames.put(name,  newProp).setInferred(inferred  &&  oldProp.getType()!=  Token.VAR);  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNames.put(name,  newProp).setInferred(inferred  &&  oldProp.getType()!=  Token.VAR);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNames.put(name,  newProp).setInferred(inferred  &&  oldProp.getType()!=  Token.VAR);	  propertyNames.put(name,    newProp).setInferred(inferred);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
342	[BUG]  [BUGGY]  propertyNode.put(node,  newProp);  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyNode.put(node,  newProp);  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.put(node,  newProp);	  propertyNode.put(className,    newProp);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
343	[BUG]  [BUGGY]  propertyName.setLocalName(newProp.getLocalName()  + ".prototype. ");  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyName.setLocalName(newProp.getLocalName()  + ".prototype. ");  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyName.setLocalName(newProp.getLocalName()  + ".prototype. ");	  propertyName.setLocalName(newProp.getLocalName());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
344	[BUG]  [BUGGY]  propertyName.setType(newProp.getLocalName());  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number      [CONTEXT]      return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }      [BUGGY]  propertyName.setType(newProp.getLocalName());  [BUGGY]      return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyName.setType(newProp.getLocalName());	  propertyName.setLocalName(newProp.getLocalName());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
