bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  property.put(className,  newProp);  [CE]  <identifier>  expected  [FE]        junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  property.put(className,  newProp);  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(className,  newProp);	  property.put(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
2	[BUG]  [BUGGY]  property.put(name,  oldProp);  [CE]  <identifier>  expected  [FE]          junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  property.put(name,  oldProp);  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  oldProp);	  property.put(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
3	[BUG]  [BUGGY]  Property  newProp  =  properties.get(name);  [CE]  <identifier>  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  Property  newProp  =  properties.get(name);  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Property  newProp  =  properties.get(name);	  property.put(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
4	[BUG]  [BUGGY]  property.put(name,  newProp):  null;  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  property.put(name,  newProp):  null;  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp):  null;	  property.put(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
5	[BUG]  [BUGGY]  property.put(name,  newProp).getName();  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  property.put(name,  newProp).getName();  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp).getName();	  property.put(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
6	[BUG]  [BUGGY]  Properties.put(className,  newProp);  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  Properties.put(className,  newProp);  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Properties.put(className,  newProp);	  Properties.put(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
7	[BUG]  [BUGGY]  Properties.put(name,  oldProp);  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  Properties.put(name,  oldProp);  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Properties.put(name,  oldProp);	  Properties.put(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
8	[BUG]  [BUGGY]  Properties.put(propertyName,  newProp);  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  Properties.put(propertyName,  newProp);  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Properties.put(propertyName,  newProp);	  Properties.put(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
9	[BUG]  [BUGGY]  Properties.put(name,  newProp,  propertyName);  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  Properties.put(name,  newProp,  propertyName);  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Properties.put(name,  newProp,  propertyName);	  Properties.put(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
10	[BUG]  [BUGGY]  properties.put(name,  oldProp)&&!inferred;  [CE]  <identifier>  expected  [FE]          junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  properties.put(name,  oldProp)&&!inferred;  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	properties.put(name,  oldProp)&&!inferred;	  properties.put(name,    newProp)&&!inferred;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
11	[BUG]  [BUGGY]  properties.put(name,  newProp)||!inferred;  [CE]  <identifier>  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  properties.put(name,  newProp)||!inferred;  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	properties.put(name,  newProp)||!inferred;	  properties.put(name,    newProp)&&!inferred;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
12	[BUG]  [BUGGY]  properties.put(name,  newProp)&&!propertyNode;  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  properties.put(name,  newProp)&&!propertyNode;  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	properties.put(name,  newProp)&&!propertyNode;	  properties.put(name,    newProp)&&!inferred;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
13	[BUG]  [BUGGY]  propertyNames.put(name,  oldProp);  [CE]  <identifier>  expected  [FE]          junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  propertyNames.put(name,  oldProp);  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNames.put(name,  oldProp);	  properties.put(name,    oldProp);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
14	[BUG]  [BUGGY]  propertyNode.put(propertyName,  newProp);  [CE]  <identifier>  expected  [FE]        junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  propertyNode.put(propertyName,  newProp);  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.put(propertyName,  newProp);	  propertyNode.put(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
15	[BUG]  [BUGGY]  propertyNode.put(name,  oldProp);  [CE]  <identifier>  expected  [FE]          junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  propertyNode.put(name,  oldProp);  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.put(name,  oldProp);	  propertyNode.put(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
16	[BUG]  [BUGGY]  propertyNode.put(className,  newProp);  [CE]  <identifier>  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  propertyNode.put(className,  newProp);  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.put(className,  newProp);	  propertyNode.put(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
17	[BUG]  [BUGGY]  propertyNode.put(name,  newProp).propertyName;  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  propertyNode.put(name,  newProp).propertyName;  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.put(name,  newProp).propertyName;	  propertyNode.put(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
18	[BUG]  [BUGGY]  propertyNames.put(className,  newProp);  [CE]  <identifier>  expected  [FE]        junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  propertyNames.put(className,  newProp);  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNames.put(className,  newProp);	  propertyNames.put(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
19	[BUG]  [BUGGY]  properties.put(propertyName,  newProp);  [CE]  <identifier>  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  properties.put(propertyName,  newProp);  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	properties.put(propertyName,  newProp);	  properties.put(className,    newProp);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
20	[BUG]  [BUGGY]  properties.put(className,  oldProp);  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  properties.put(className,  oldProp);  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	properties.put(className,  oldProp);	  properties.put(className,    newProp);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
21	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  newProp;  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  junit.framework.ComparisonFailure:  newProp;  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	junit.framework.ComparisonFailure:  newProp;	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
22	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  null;  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  junit.framework.ComparisonFailure:  null;  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	junit.framework.ComparisonFailure:  null;	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
23	[BUG]  [BUGGY]  newProp.setInferred(inferred);  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  newProp.setInferred(inferred);  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	newProp.setInferred(inferred);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
24	[BUG]  [BUGGY]  newProp.setImplicitPrototypeFallback(null);  [CE]  <identifier>  expected  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  newProp.setImplicitPrototypeFallback(null);  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	newProp.setImplicitPrototypeFallback(null);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
25	[BUG]  [BUGGY]  junit.framework.ComparisonFailure  =  newProp;  [CE]  <identifier>  expected  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  junit.framework.ComparisonFailure  =  newProp;  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	junit.framework.ComparisonFailure  =  newProp;	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
26	[BUG]  [BUGGY]  newProp.setImplicitPrototypeFallback(true);  [CE]  <identifier>  expected  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  newProp.setImplicitPrototypeFallback(true);  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	newProp.setImplicitPrototypeFallback(true);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
27	[BUG]  [BUGGY]  newProp.setImplicitPrototype(null);  [CE]  <identifier>  expected  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  newProp.setImplicitPrototype(null);  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	newProp.setImplicitPrototype(null);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
28	[BUG]  [BUGGY]  propertyNames.put(name,  newProp).setInferred(inferred);  [CE]  <identifier>  expected  [FE]        junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  propertyNames.put(name,  newProp).setInferred(inferred);  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNames.put(name,  newProp).setInferred(inferred);	  propertyNames.put(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
29	[BUG]  [BUGGY]  propertyNames.put(name,  newProp).propertyNode;  [CE]  <identifier>  expected  [FE]          junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  propertyNames.put(name,  newProp).propertyNode;  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNames.put(name,  newProp).propertyNode;	  propertyNames.put(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
30	[BUG]  [BUGGY]  property.put(name,  newProp).setInferred(inferred);  [CE]  <identifier>  expected  [FE]        junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  property.put(name,  newProp).setInferred(inferred);  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp).setInferred(inferred);	  property.put(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
31	[BUG]  [BUGGY]  property.put(name,  newProp).getImplicitPrototype();  [CE]  <identifier>  expected  [FE]          junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  property.put(name,  newProp).getImplicitPrototype();  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp).getImplicitPrototype();	  property.put(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
32	[BUG]  [BUGGY]  Properties.put(name,  newProp).setInferred(inferred);  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  Properties.put(name,  newProp).setInferred(inferred);  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Properties.put(name,  newProp).setInferred(inferred);	  Properties.put(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
33	[BUG]  [BUGGY]  Properties.put(name,  propertyNode);  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  Properties.put(name,  propertyNode);  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Properties.put(name,  propertyNode);	  Properties.put(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
34	[BUG]  [BUGGY]  newProp.setImplicitPrototype(inferred);  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  newProp.setImplicitPrototype(inferred);  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	newProp.setImplicitPrototype(inferred);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
35	[BUG]  [BUGGY]  propertyNode.putBooleanProperty(propertyName,  newProp);  [CE]  <identifier>  expected  [FE]        junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  propertyNode.putBooleanProperty(propertyName,  newProp);  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.putBooleanProperty(propertyName,  newProp);	  propertyNode.put(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
36	[BUG]  [BUGGY]  propertyNode.putBooleanProperty(name,  newProp);  [CE]  <identifier>  expected  [FE]          junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  propertyNode.putBooleanProperty(name,  newProp);  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.putBooleanProperty(name,  newProp);	  propertyNode.put(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
37	[BUG]  [BUGGY]  propertyNode.putProp(name,  newProp);  [CE]  <identifier>  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  propertyNode.putProp(name,  newProp);  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.putProp(name,  newProp);	  propertyNode.put(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
38	[BUG]  [BUGGY]  PropertyNode  propertyNode  =  properties.get(name);  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  PropertyNode  propertyNode  =  properties.get(name);  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	PropertyNode  propertyNode  =  properties.get(name);	  propertyNode.put(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
39	[BUG]  [BUGGY]  if(propertyNode!=  null)  {  Property  newProp  =  newProp.getProperty(propertyName);  if(newProp!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  if(propertyNode!=  null)  {  Property  newProp  =  newProp.getProperty(propertyName);  if(newProp!=  null)  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(propertyNode!=  null)  {  Property  newProp  =  newProp.getProperty(propertyName);  if(newProp!=  null)  {  return  false;  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
40	[BUG]  [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION)  {  return  newPro  [CE]  <identifier>  expected  [FE]                  junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION)  {  return  newPro  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION)  {  return  newPro	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
41	[BUG]  [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newProp  [CE]  <identifier>  expected  [FE]                    junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newProp  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newProp	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
42	[BUG]  [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newPro  [CE]  <identifier>  expected  [FE]                      junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newPro  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newPro	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
43	[BUG]  [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION)  {  return  newProp  [CE]  <identifier>  expected  [FE]                        junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION)  {  return  newProp  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.OBJECTLIT  ||  property.getType()!=  Token.FUNCTION)  {  return  newProp	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
44	[BUG]  [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR)  {  return  newPro  [CE]  <identifier>  expected  [FE]                          junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR)  {  return  newPro  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()  ==  Token.FUNCTION  ||  property.getType()!=  Token.VAR)  {  return  newPro	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
45	[BUG]  [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newProp  [CE]  <identifier>  expected  [FE]                            junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newProp  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	if(propertyName!=  null)  {  for(int  i  =  0;  i  <  properties.size();  ++i)  {  Property  property  =  properties.get(i);  if(property.getType()!=  Token.FUNCTION  ||  property.getType()!=  Token.OBJECTLIT)  {  return  newProp	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
46	[BUG]  [BUGGY]  propertyName.setLocalName(newProp.getLocalName());  [CE]  <identifier>  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  propertyName.setLocalName(newProp.getLocalName());  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyName.setLocalName(newProp.getLocalName());	  properties.put(className,    newProp);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
47	[BUG]  [BUGGY]  propertyName.setPropertyName(propertyName);  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  propertyName.setPropertyName(propertyName);  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyName.setPropertyName(propertyName);	  properties.put(className,    newProp);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
48	[BUG]  [BUGGY]  propertyNode.putBooleanProp(propertyName,  newProp);  [CE]  <identifier>  expected  [FE]        junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  propertyNode.putBooleanProp(propertyName,  newProp);  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.putBooleanProp(propertyName,  newProp);	  propertyNode.put(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
49	[BUG]  [BUGGY]  propertyNode.putBooleanProp(newProp);  [CE]  <identifier>  expected  [FE]          junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  propertyNode.putBooleanProp(newProp);  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.putBooleanProp(newProp);	  propertyNode.put(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
50	[BUG]  [BUGGY]  propertyNode.put(name,  newProp)&&!inferred;  [CE]  <identifier>  expected  [FE]          junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  propertyNode.put(name,  newProp)&&!inferred;  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNode.put(name,  newProp)&&!inferred;	  properties.put(name,    newProp)&&!inferred;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
51	[BUG]  [BUGGY]  properties.put(name,  newProp)&&!propertyName.equals(propertyName);  [CE]  <identifier>  expected  [FE]            junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  properties.put(name,  newProp)&&!propertyName.equals(propertyName);  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	properties.put(name,  newProp)&&!propertyName.equals(propertyName);	  properties.put(name,    newProp)&&!inferred;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
52	[BUG]  [BUGGY]  property.put(name,  newProp).setValue(propertyName);  [CE]  <identifier>  expected  [FE]        junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  property.put(name,  newProp).setValue(propertyName);  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp).setValue(propertyName);	  property.put(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
53	[BUG]  [BUGGY]  property.put(name,  newProp).setImplicitPrototype(propertyName);  [CE]  <identifier>  expected  [FE]          junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  property.put(name,  newProp).setImplicitPrototype(propertyName);  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	property.put(name,  newProp).setImplicitPrototype(propertyName);	  property.put(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
54	[BUG]  [BUGGY]  Property  prop  =  properties.get(name);  [CE]  <identifier>  expected  [FE]              junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  Property  prop  =  properties.get(name);  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	Property  prop  =  properties.get(name);	  Properties.put(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
55	[BUG]  [BUGGY]  propertyNames.put(name,  newProp));  [CE]  <identifier>  expected  [FE]        junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  propertyNames.put(name,  newProp));  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNames.put(name,  newProp));	  propertyNames.put(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
56	[BUG]  [BUGGY]  propertyNames.put(name,  newProp).propertyName;  [CE]  <identifier>  expected  [FE]          junit.framework.ComparisonFailure:  null  expected:<...number    [CONTEXT]    return  false;  }  Property  newProp  =  new  Property(  name,  type,  inferred,  propertyNode);  Property  oldProp  =  properties.get(name);  if  (oldProp  !=  null)  {    newProp.setJSDocInfo(oldProp.getJSDocInfo());  }    [BUGGY]  propertyNames.put(name,  newProp).propertyName;  [BUGGY]    return  true;  }  [CLASS]  PrototypeObjectType  [METHOD]  defineProperty  [RETURN_TYPE]  boolean  String  name  JSType  type  boolean  inferred  Node  propertyNode  [VARIABLES]  ObjectType  implicitPrototype  implicitPrototypeFallback  interfaceType  boolean  inferred  nativeType  prettyPrint  JSType  type  FunctionType  ownerFunction  Node  propertyNode  String  className  name  prop  property  propertyName  Map  properties  Property  newProp  oldProp  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  localCount  	projects/Closure39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.8164965809277261	247	247	2	replace	propertyNames.put(name,  newProp).propertyName;	  propertyNames.put(name,    newProp);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
