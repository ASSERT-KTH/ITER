bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(null);  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]    NullPointerException    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(null);  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(null);    JSTypeNative  typeId  =  typeRegistry.getNativeType(null);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	5	None	add
2	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(null);  JSTypeNative  result  =  typeRegistry.getNativeType(null);  [CE]  incompatible  types  [FE]      NullPointerException    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(null);  JSTypeNative  result  =  typeRegistry.getNativeType(null);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(null);    JSTypeNative  result  =  typeRegistry.getNativeType(null);	  	non-compiled	[CE]  incompatible  types	5	None	add
3	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(null);  JSType  typeRegistry  =  typeRegistry.getNativeType(null);  [CE]  getNativeType(JSTypeNative)  is  not  public  in  JSType;  cannot  be  accessed  from  outside  package  [FE]        NullPointerException    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(null);  JSType  typeRegistry  =  typeRegistry.getNativeType(null);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(null);    JSType  typeRegistry  =  typeRegistry.getNativeType(null);	  	non-compiled	[CE]  getNativeType(JSTypeNative)  is  not  public  in  JSType;  cannot  be  accessed  from  outside  package	5	None	add
4	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(null);  JSTypeRegistry  typeRegistry  =  getNativeType(null);  [CE]  incompatible  types  [FE]          NullPointerException    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(null);  JSTypeRegistry  typeRegistry  =  getNativeType(null);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(null);    JSTypeRegistry  typeRegistry  =  getNativeType(null);	  	non-compiled	[CE]  incompatible  types	5	None	add
5	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(null);  JSTypeRegistry  typeRegistry  =  getNativeType(typeId);  [CE]  incompatible  types  [FE]            NullPointerException    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(null);  JSTypeRegistry  typeRegistry  =  getNativeType(typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(null);    JSTypeRegistry  typeRegistry  =  getNativeType(typeId);	  	non-compiled	[CE]  incompatible  types	5	None	add
6	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(null);  typeRegistry.setNativeType(null);  [CE]  cannot  find  symbol  [FE]              NullPointerException    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(null);  typeRegistry.setNativeType(null);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(null);    typeRegistry.setNativeType(null);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
7	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(null);  typeRegistry.getNativeType(null);  [CE]  unreachable  statement  [FE]                NullPointerException    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(null);  typeRegistry.getNativeType(null);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(null);    typeRegistry.getNativeType(null);	  	non-compiled	[CE]  unreachable  statement	5	None	add
8	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(null);  JSTypeNative  typeId  =  getNativeType(null);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                  NullPointerException    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(null);  JSTypeNative  typeId  =  getNativeType(null);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(null);    JSTypeNative  typeId  =  getNativeType(null);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	5	None	add
9	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId).restrictNullVisitor;  [CE]  cannot  find  symbol  restrictNullVisitor  [FE]                AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId).restrictNullVisitor;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId).restrictNullVisitor;	  return    typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor;    	non-compiled	[CE]  cannot  find  symbol  restrictNullVisitor	18	None	replace
10	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId).restrictUndefinedVisitor;  [CE]  cannot  find  symbol  restrictUndefinedVisitor  [FE]                  AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId).restrictUndefinedVisitor;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId).restrictUndefinedVisitor;	  return    typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor;    	non-compiled	[CE]  cannot  find  symbol  restrictUndefinedVisitor	18	None	replace
11	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId).restrictByUndefinedVisitor;  [CE]  cannot  find  symbol  restrictByUndefinedVisitor  [FE]                    AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId).restrictByUndefinedVisitor;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId).restrictByUndefinedVisitor;	  return    typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor;    	non-compiled	[CE]  cannot  find  symbol  restrictByUndefinedVisitor	18	None	replace
12	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId).restrictByFalseTypeOfResultVisitor;  [CE]  cannot  find  symbol  restrictByFalseTypeOfResultVisitor  [FE]                      AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId).restrictByFalseTypeOfResultVisitor;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId).restrictByFalseTypeOfResultVisitor;	  return    typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor;    	non-compiled	[CE]  cannot  find  symbol  restrictByFalseTypeOfResultVisitor	18	None	replace
13	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId).restrictByOneTypeOfResultVisitor;  [CE]  cannot  find  symbol  restrictByOneTypeOfResultVisitor  [FE]                        AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId).restrictByOneTypeOfResultVisitor;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId).restrictByOneTypeOfResultVisitor;	  return    typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor;    	non-compiled	[CE]  cannot  find  symbol  restrictByOneTypeOfResultVisitor	18	None	replace
14	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId).restrictByNullVisitor;  [CE]  cannot  find  symbol  restrictByNullVisitor  [FE]                          AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId).restrictByNullVisitor;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId).restrictByNullVisitor;	  return    typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor;    	non-compiled	[CE]  cannot  find  symbol  restrictByNullVisitor	18	None	replace
15	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null;  [CE]  incompatible  types  [FE]                    AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)  ==  null;	      	non-compiled	[CE]  incompatible  types	9	None	replace
16	[BUG]  [BUGGY]  if(typeId  ==  null)  {  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  resultEqualsValue  =  resultEqualsValue;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  if(typeId  ==  null)  {  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  resultEqualsValue  =  resultEqualsValue;  }  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  resultEqualsValue  =  resultEqualsValue;  }	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
17	[BUG]  [BUGGY]  if(typeId  ==  null)  {  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  resultEqualsValue  =  resultEqualsValue;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  if(typeId  ==  null)  {  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  resultEqualsValue  =  resultEqualsValue;  }  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  resultEqualsValue  =  resultEqualsValue;  }	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
18	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null;  [CE]  incompatible  types  [FE]                          AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)!=  null;	      	non-compiled	[CE]  incompatible  types	9	None	replace
19	[BUG]  [BUGGY]  return  typeId  ==  null?  null  :  typeId.getNativeType();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeId  ==  null?  null  :  typeId.getNativeType();  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId  ==  null?  null  :  typeId.getNativeType();	      	non-compiled	[CE]  cannot  find  symbol	9	None	replace
20	[BUG]  [BUGGY]  if(typeId  ==  null)  {  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  resultEqualsValue  =  result;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  if(typeId  ==  null)  {  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  resultEqualsValue  =  result;  }  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  resultEqualsValue  =  result;  }	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
21	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  typeRegistry.getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]    AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  typeRegistry.getNativeType(typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType  typeId  =  typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	13	None	add
22	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;	  	non-compiled	[CE]  unreachable  statement	13	None	add
23	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;	  	non-compiled	[CE]  not  a  statement	13	None	add
24	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;	  	non-compiled	[CE]  not  a  statement	13	None	add
25	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]            AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType  typeId  =  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	13	None	add
26	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  result  =  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  unreachable  statement  [FE]              AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  result  =  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType  result  =  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;	  	non-compiled	[CE]  unreachable  statement	13	None	add
27	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	13	None	add
28	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    NullPointerException    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(null);    	compilable	  [FE]  AssertionFailedError  	6	2	replace
29	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);  [FE]  AssertionFailedError  [FE]    NullPointerException    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(null);    	compilable	  [FE]  AssertionFailedError  	6	2	replace
30	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)?  null  :  typeRegistry.getNativeType(typeId);  [CE]  incompatible  types  [FE]      NullPointerException    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)?  null  :  typeRegistry.getNativeType(typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)?  null  :  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(null);    	non-compiled	[CE]  incompatible  types	6	None	replace
31	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(null,  typeId);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]        NullPointerException    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(null,  typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(null,  typeId);	  return    typeRegistry.getNativeType(null);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	6	None	replace
32	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(new  JSTypeNative(typeId));  [CE]  enum  types  may  not  be  instantiated  [FE]          NullPointerException    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(new  JSTypeNative(typeId));  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(new  JSTypeNative(typeId));	  return    typeRegistry.getNativeType(null);    	non-compiled	[CE]  enum  types  may  not  be  instantiated	6	None	replace
33	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(new  JSTypeNative(typeId));  [CE]  enum  types  may  not  be  instantiated  [FE]            NullPointerException    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(new  JSTypeNative(typeId));  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(new  JSTypeNative(typeId));	  return    typeRegistry.getNativeType(null);    	non-compiled	[CE]  enum  types  may  not  be  instantiated	6	None	replace
34	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	compilable	  [FE]  NullPointerException  	14	26	replace
35	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	compilable	  [FE]  NullPointerException  	14	26	replace
36	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null  &&  typeRegistry.getNativeType(typeId):  null;  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null  &&  typeRegistry.getNativeType(typeId):  null;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)!=  null  &&  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  ';'  expected	14	None	replace
37	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(qualifiedName)!=  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  cannot  find  symbol  qualifiedName  [FE]        AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(qualifiedName)!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(qualifiedName)!=  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	14	None	replace
38	[BUG]  [BUGGY]  return  typeRegistry.getType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  no  suitable  method  found  for  getType(JSTypeNative)  [FE]          AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  no  suitable  method  found  for  getType(JSTypeNative)	14	None	replace
39	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	compilable	  [FE]  AssertionFailedError  	14	2	replace
40	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	compilable	  [FE]  AssertionFailedError  	14	2	replace
41	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  qualifiedName);  [CE]  cannot  find  symbol  qualifiedName  [FE]          AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId,  qualifiedName);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  qualifiedName);	  return    typeRegistry.getNativeType(typeId,    value);    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	3	None	replace
42	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  result);  [CE]  cannot  find  symbol  result  [FE]            AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId,  result);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  result);	  return    typeRegistry.getNativeType(typeId,    value);    	non-compiled	[CE]  cannot  find  symbol  result	3	None	replace
43	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.qualifiedName);  [CE]  cannot  find  symbol  qualifiedName  [FE]              AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.qualifiedName);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this.qualifiedName);	  return    typeRegistry.getNativeType(typeId,    value);    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	3	None	replace
44	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  null);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId,  null);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  null);	  return    typeRegistry.getNativeType(typeId,    value);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	3	None	replace
45	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  id);  [CE]  cannot  find  symbol  id  [FE]                  AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId,  id);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  id);	  return    typeRegistry.getNativeType(typeId,    value);    	non-compiled	[CE]  cannot  find  symbol  id	3	None	replace
46	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.restrictNullVisitor);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.restrictNullVisitor);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this.restrictNullVisitor);	  return    typeRegistry.getNativeType(typeId,    value);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	3	None	replace
47	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId);  JSType  return  this.typeRegistry.getNativeType(typeId);  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  this.typeRegistry.getNativeType(typeId);  JSType  return  this.typeRegistry.getNativeType(typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId);    JSType  return  this.typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  not  a  statement	1	None	add
48	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]      AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId);    JSType  typeId  =  this.typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	1	None	add
49	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId);  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]        AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  this.typeRegistry.getNativeType(typeId);  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId);    JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	1	None	add
50	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId);    if(typeId  ==  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
51	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId);  return  this.typeRegistry.getNativeType(typeId);  [CE]  unreachable  statement  [FE]            AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  this.typeRegistry.getNativeType(typeId);  return  this.typeRegistry.getNativeType(typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId);    return  this.typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  unreachable  statement	1	None	add
52	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeId;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeId;  }  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId);    if(typeId  ==  null)  {  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeId;  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
53	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  getNativeType(typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId);    JSType  typeId  =  getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	1	None	add
54	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId);  JSType  return  typeRegistry.getNativeType(typeId);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  this.typeRegistry.getNativeType(typeId);  JSType  return  typeRegistry.getNativeType(typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId);    JSType  return  typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  not  a  statement	1	None	add
55	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  typeId);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  typeId);	  return    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	2	None	replace
56	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  value);  [CE]  cannot  find  symbol  value  [FE]      AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  value);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  value);	  return    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  value	2	None	replace
57	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  null);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  null);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  null);	  return    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	2	None	replace
58	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  this.value);  [CE]  cannot  find  symbol  value  [FE]          AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  this.value);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  this.value);	  return    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  value	2	None	replace
59	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  0);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  0);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  0);	  return    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	2	None	replace
60	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE).restrictByUndefinedVisitor();  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(UNKNOWN_TYPE).restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(typeId).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
61	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(qualifiedName).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  qualifiedName  [FE]              AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(qualifiedName).restrictByUndefinedVisitor();  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(qualifiedName).restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(typeId).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	16	None	replace
62	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByUndefinedVisitor();  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(typeId).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
63	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(nativeTypeId).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  nativeTypeId  [FE]                  AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(nativeTypeId).restrictByUndefinedVisitor();  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(nativeTypeId).restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(typeId).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol  nativeTypeId	16	None	replace
64	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId).restrictNullVisitor();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId).restrictNullVisitor();  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId).restrictNullVisitor();	  return    typeRegistry.getNativeType(typeId).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
65	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId).restrictUndefinedVisitor();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId).restrictUndefinedVisitor();  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId).restrictUndefinedVisitor();	  return    typeRegistry.getNativeType(typeId).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
66	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(qualifiedName)||  typeRegistry.getNativeType(typeId);  [CE]  cannot  find  symbol  qualifiedName  [FE]          AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(qualifiedName)||  typeRegistry.getNativeType(typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(qualifiedName)||  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	15	None	replace
67	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  typeRegistry.getNativeType(typeId);  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]            AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  typeRegistry.getNativeType(typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)&&  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	15	None	replace
68	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(qualifiedName)&&  typeRegistry.getNativeType(typeId);  [CE]  cannot  find  symbol  qualifiedName  [FE]              AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(qualifiedName)&&  typeRegistry.getNativeType(typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(qualifiedName)&&  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	15	None	replace
69	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(value);  [CE]  cannot  find  symbol  value  [FE]                AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(value);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(value);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  value	15	None	replace
70	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  value);  [CE]  cannot  find  symbol  value  [FE]                  AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  value);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  value);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  value	15	None	replace
71	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId);  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                    AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  this.typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	15	None	replace
72	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(keyId);  [CE]  cannot  find  symbol  keyId  [FE]            AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(keyId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(keyId);	  return    typeRegistry.getNativeType(qualifiedName);    	non-compiled	[CE]  cannot  find  symbol  keyId	4	None	replace
73	[BUG]  [BUGGY]  return  typeregistry.getNativeType(typeId);  [CE]  cannot  find  symbol  typeregistry  [FE]              AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeregistry.getNativeType(typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeregistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(qualifiedName);    	non-compiled	[CE]  cannot  find  symbol  typeregistry	4	None	replace
74	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(_typeId);  [CE]  cannot  find  symbol  _typeId  [FE]                AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(_typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(_typeId);	  return    typeRegistry.getNativeType(qualifiedName);    	non-compiled	[CE]  cannot  find  symbol  _typeId	4	None	replace
75	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(TYPE_Id);  [CE]  cannot  find  symbol  TYPE_Id  [FE]                  AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(TYPE_Id);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(TYPE_Id);	  return    typeRegistry.getNativeType(qualifiedName);    	non-compiled	[CE]  cannot  find  symbol  TYPE_Id	4	None	replace
76	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)+  2;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)+  2;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)+  2;	  return    typeRegistry.getNativeType(typeId)+    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	12	None	replace
77	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)/  1;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]              AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)/  1;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)/  1;	  return    typeRegistry.getNativeType(typeId)+    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	12	None	replace
78	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)+  0;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)+  0;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)+  0;	  return    typeRegistry.getNativeType(typeId)+    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	12	None	replace
79	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)+  4;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                  AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)+  4;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)+  4;	  return    typeRegistry.getNativeType(typeId)+    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	12	None	replace
80	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)-  1;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                    AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)-  1;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)-  1;	  return    typeRegistry.getNativeType(typeId)+    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	12	None	replace
81	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)+  3;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                      AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)+  3;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)+  3;	  return    typeRegistry.getNativeType(typeId)+    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	12	None	replace
82	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE).restrictByTrueTypeOfResultVisitor();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE).restrictByTrueTypeOfResultVisitor();  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(UNKNOWN_TYPE).restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
83	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByTrueTypeOfResultVisitor();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByTrueTypeOfResultVisitor();  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
84	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(nativeTypeId).restrictByTrueTypeOfResultVisitor();  [CE]  cannot  find  symbol  nativeTypeId  [FE]                  AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(nativeTypeId).restrictByTrueTypeOfResultVisitor();  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(nativeTypeId).restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol  nativeTypeId	17	None	replace
85	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(GLOBAL_TYPE).restrictByTrueTypeOfResultVisitor();  [CE]  cannot  find  symbol  GLOBAL_TYPE  [FE]                    AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(GLOBAL_TYPE).restrictByTrueTypeOfResultVisitor();  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(GLOBAL_TYPE).restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol  GLOBAL_TYPE	17	None	replace
86	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(NO_TYPE).restrictByTrueTypeOfResultVisitor();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(NO_TYPE).restrictByTrueTypeOfResultVisitor();  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(NO_TYPE).restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
87	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId).restrictByFalseTypeOfResultVisitor();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId).restrictByFalseTypeOfResultVisitor();  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId).restrictByFalseTypeOfResultVisitor();	  return    typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
88	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  state);  [CE]  cannot  find  symbol  state  [FE]        AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId,  state);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  state);	  return    typeRegistry.getNativeType(typeId,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  state	10	None	replace
89	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.value);  [CE]  cannot  find  symbol  value  [FE]          AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.value);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this.value);	  return    typeRegistry.getNativeType(typeId,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  value	10	None	replace
90	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  condition);  [CE]  cannot  find  symbol  condition  [FE]            AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId,  condition);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  condition);	  return    typeRegistry.getNativeType(typeId,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  condition	10	None	replace
91	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  value);  [CE]  cannot  find  symbol  value  [FE]          AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  value);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this,  value);	  return    typeRegistry.getNativeType(typeId,    this);    	non-compiled	[CE]  cannot  find  symbol  value	11	None	replace
92	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  state);  [CE]  cannot  find  symbol  state  [FE]            AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  state);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this,  state);	  return    typeRegistry.getNativeType(typeId,    this);    	non-compiled	[CE]  cannot  find  symbol  state	11	None	replace
93	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  resultEqualsValue);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]              AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  resultEqualsValue);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this,  resultEqualsValue);	  return    typeRegistry.getNativeType(typeId,    this);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	11	None	replace
94	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  qualifiedName);  [CE]  cannot  find  symbol  qualifiedName  [FE]                AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  qualifiedName);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this,  qualifiedName);	  return    typeRegistry.getNativeType(typeId,    this);    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	11	None	replace
95	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  condition);  [CE]  cannot  find  symbol  condition  [FE]                  AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  condition);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this,  condition);	  return    typeRegistry.getNativeType(typeId,    this);    	non-compiled	[CE]  cannot  find  symbol  condition	11	None	replace
96	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(resultEqualsValue);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                  AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(resultEqualsValue);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(resultEqualsValue);	  return    typeRegistry.getNativeType(value);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	8	None	replace
97	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)?  typeRegistry.getNativeType(typeId):  null;  [CE]  incompatible  types  [FE]                    AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(value);    	non-compiled	[CE]  incompatible  types	8	None	replace
98	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  typeId.equals(typeId);  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                      AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  typeId.equals(typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)&&  typeId.equals(typeId);	  return    typeRegistry.getNativeType(value);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	8	None	replace
99	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  typeId);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId,  typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  typeId);	  return    typeRegistry.getNativeType(scope,    typeId);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	7	None	replace
100	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(qualifiedName,  typeId);  [CE]  cannot  find  symbol  qualifiedName  [FE]                  AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(qualifiedName,  typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(qualifiedName,  typeId);	  return    typeRegistry.getNativeType(scope,    typeId);    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	7	None	replace
101	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(value,  typeId);  [CE]  cannot  find  symbol  value  [FE]                    AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(value,  typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(value,  typeId);	  return    typeRegistry.getNativeType(scope,    typeId);    	non-compiled	[CE]  cannot  find  symbol  value	7	None	replace
102	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  scope);  [CE]  cannot  find  symbol  scope  [FE]                      AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId,  scope);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  scope);	  return    typeRegistry.getNativeType(scope,    typeId);    	non-compiled	[CE]  cannot  find  symbol  scope	7	None	replace
103	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  getNativeType(typeId));  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId,  getNativeType(typeId));  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  getNativeType(typeId));	  return    typeRegistry.getNativeType(typeId,    value);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	3	None	replace
104	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.restrictUndefinedVisitor);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.restrictUndefinedVisitor);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this.restrictUndefinedVisitor);	  return    typeRegistry.getNativeType(typeId,    value);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	3	None	replace
105	[BUG]  [BUGGY]  Return  typeRegistry.getNativeType(typeId);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  Return  typeRegistry.getNativeType(typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	Return  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(qualifiedName);    	non-compiled	[CE]  ';'  expected	4	None	replace
106	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]    AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  getNativeType(typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType  typeId  =  getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	13	None	add
107	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  JSType  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId):  null;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  JSType  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    if(typeId!=  null)  {  JSType  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId):  null;  }	  	non-compiled	[CE]  ';'  expected	13	None	add
108	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  JSType  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(typeId):  null;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  JSType  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    if(typeId!=  null)  {  JSType  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(typeId):  null;  }	  	non-compiled	[CE]  ';'  expected	13	None	add
109	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  JSType  type  =  typeRegistry.getNativeType(typeId);  if(type!=  null)  {  return  typeRegistry.getNativeType(typeId):  null;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  JSType  type  =  typeRegistry.getNativeType(typeId);  if(type!=  null)  {  return  typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    if(typeId!=  null)  {  JSType  type  =  typeRegistry.getNativeType(typeId);  if(type!=  null)  {  return  typeRegistry.getNativeType(typeId):  null;  }	  	non-compiled	[CE]  ';'  expected	13	None	add
110	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  JSType  type  =  typeRegistry.getNativeType(typeId);  if(type!=  null)  {  return  type;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  JSType  type  =  typeRegistry.getNativeType(typeId);  if(type!=  null)  {  return  type;  }  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    if(typeId!=  null)  {  JSType  type  =  typeRegistry.getNativeType(typeId);  if(type!=  null)  {  return  type;  }	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
111	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId);  JSType  result  =  this.typeRegistry.getNativeType(typeId);  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  this.typeRegistry.getNativeType(typeId);  JSType  result  =  this.typeRegistry.getNativeType(typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId);    JSType  result  =  this.typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  unreachable  statement	1	None	add
112	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSType  type  =  typeId.getNativeType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSType  type  =  typeId.getNativeType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId);    if(typeId!=  null)  {  JSType  type  =  typeId.getNativeType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
113	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSType  type  =  typeId.getNativeType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSType  type  =  typeId.getNativeType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId);    if(typeId  ==  null)  {  JSType  type  =  typeId.getNativeType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
114	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSType  type  =  typeId.getJSType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSType  type  =  typeId.getJSType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId);    if(typeId!=  null)  {  JSType  type  =  typeId.getJSType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
115	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSType  type  =  getNativeType(typeId);  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSType  type  =  getNativeType(typeId);  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId);    if(typeId  ==  null)  {  JSType  type  =  getNativeType(typeId);  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
116	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSType  type  =  getNativeType(typeId);  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSType  type  =  getNativeType(typeId);  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId);    if(typeId!=  null)  {  JSType  type  =  getNativeType(typeId);  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
117	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(null);  if(typeRegistry!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(null);  if(typeRegistry!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(null);    if(typeRegistry!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
118	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(null);  if(typeRegistry!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(null);  if(typeRegistry!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  }  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(null);    if(typeRegistry!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
119	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(null);  if(typeRegistry!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null)  {  resultEqualsValue  =  true;  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(null);  if(typeRegistry!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null)  {  resultEqualsValue  =  true;  }  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(null);    if(typeRegistry!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null)  {  resultEqualsValue  =  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
120	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(null);  if(typeRegistry!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null)  {  resultEqualsValue  =  getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(null);  if(typeRegistry!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null)  {  resultEqualsValue  =  getNativeType(typeId);  }  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(null);    if(typeRegistry!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null)  {  resultEqualsValue  =  getNativeType(typeId);  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
121	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(null);  if(typeRegistry!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null)  {  resultEqualsValue  =  false;  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(null);  if(typeRegistry!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null)  {  resultEqualsValue  =  false;  }  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(null);    if(typeRegistry!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null)  {  resultEqualsValue  =  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
122	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(null);  if(typeRegistry!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId  ==  null)  {  resultEqualsValue  =  true;  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(null);  if(typeRegistry!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId  ==  null)  {  resultEqualsValue  =  true;  }  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(null);    if(typeRegistry!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId  ==  null)  {  resultEqualsValue  =  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
123	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(nameId).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  nameId  [FE]            AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(nameId).restrictByUndefinedVisitor();  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(nameId).restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(typeId).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol  nameId	16	None	replace
124	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(value).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  value  [FE]              AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(value).restrictByUndefinedVisitor();  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(value).restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(typeId).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol  value	16	None	replace
125	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	compilable	  [FE]  AssertionFailedError  	14	2	replace
126	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	compilable	  [FE]  AssertionFailedError  	14	2	replace
127	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(value)!=  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  cannot  find  symbol  value  [FE]      AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(value)!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(value)!=  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  cannot  find  symbol  value	14	None	replace
128	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(OBJECT_TYPE).restrictByTrueTypeOfResultVisitor();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(OBJECT_TYPE).restrictByTrueTypeOfResultVisitor();  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(OBJECT_TYPE).restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
129	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.NO_TYPE).restrictByTrueTypeOfResultVisitor();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.NO_TYPE).restrictByTrueTypeOfResultVisitor();  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.NO_TYPE).restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
130	[BUG]  [BUGGY]  resultEqualsValue  =  getNativeType(typeId);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                    AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  resultEqualsValue  =  getNativeType(typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  getNativeType(typeId);	      	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	9	None	replace
131	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)  >=  null;  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                      AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)  >=  null;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)  >=  null;	      	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	9	None	replace
132	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)  [Delete]  null;  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)  [Delete]  null;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)  [Delete]  null;	      	non-compiled	[CE]  ';'  expected	9	None	replace
133	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  constraintEqualsValue);  [CE]  cannot  find  symbol  constraintEqualsValue  [FE]          AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  constraintEqualsValue);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this,  constraintEqualsValue);	  return    typeRegistry.getNativeType(typeId,    this);    	non-compiled	[CE]  cannot  find  symbol  constraintEqualsValue	11	None	replace
134	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  state.restrictNullVisitor);  [CE]  cannot  find  symbol  state  [FE]        AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId,  state.restrictNullVisitor);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  state.restrictNullVisitor);	  return    typeRegistry.getNativeType(typeId,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  state	10	None	replace
135	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(nativeId);  [CE]  cannot  find  symbol  nativeId  [FE]                  AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(nativeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(nativeId);	  return    typeRegistry.getNativeType(value);    	non-compiled	[CE]  cannot  find  symbol  nativeId	8	None	replace
136	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);	  return    this.typeRegistry.getNativeType(typeId);    	compilable	  [FE]  NullPointerException  	2	26	replace
137	[BUG]  [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);	  return    this.typeRegistry.getNativeType(typeId);    	compilable	  [FE]  NullPointerException  	2	26	replace
138	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  this.restrictNullVisitor);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  this.restrictNullVisitor);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  this.restrictNullVisitor);	  return    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	2	None	replace
139	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  this.restrictByTrueTypeOfResultVisitor);  [CE]  cannot  find  symbol  restrictByTrueTypeOfResultVisitor  [FE]        AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  this.restrictByTrueTypeOfResultVisitor);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  this.restrictByTrueTypeOfResultVisitor);	  return    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  restrictByTrueTypeOfResultVisitor	2	None	replace
140	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  this.restrictUndefinedVisitor);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  this.restrictUndefinedVisitor);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  this.restrictUndefinedVisitor);	  return    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	2	None	replace
141	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  resultEqualsValue);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]          AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  resultEqualsValue);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  resultEqualsValue);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	15	None	replace
142	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)&&!typeRegistry.getNativeType(typeId);  [CE]  bad  operand  type  JSType  for  unary  operator  '!'  [FE]            AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)&&!typeRegistry.getNativeType(typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)&&!typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  bad  operand  type  JSType  for  unary  operator  '!'	15	None	replace
143	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getInstanceType(typeId);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getInstanceType(typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeRegistry.getInstanceType(typeId);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
144	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);	  return    typeRegistry.getNativeType(null);    	compilable	  [FE]  NullPointerException  	6	28	replace
145	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);	  return    typeRegistry.getNativeType(null);    	compilable	  [FE]  NullPointerException  	6	28	replace
146	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      NullPointerException    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  getNativeType(typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return  getNativeType(typeId);	  return    typeRegistry.getNativeType(null);    	compilable	  [FE]  StackOverflowError  	6	28	replace
147	[BUG]  [BUGGY]  return  getNativeType(typeId);  [FE]  StackOverflowError  [FE]      NullPointerException    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  getNativeType(typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  getNativeType(typeId);	  return    typeRegistry.getNativeType(null);    	compilable	  [FE]  StackOverflowError  	6	28	replace
148	[BUG]  [BUGGY]  return  typeregistry.getNativeType(typeId).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  typeregistry  [FE]            AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeregistry.getNativeType(typeId).restrictByUndefinedVisitor();  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeregistry.getNativeType(typeId).restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(typeId).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol  typeregistry	16	None	replace
149	[BUG]  [BUGGY]  return  typesRegistry.getNativeType(typeId).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  typesRegistry  [FE]              AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typesRegistry.getNativeType(typeId).restrictByUndefinedVisitor();  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typesRegistry.getNativeType(typeId).restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(typeId).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol  typesRegistry	16	None	replace
150	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  this.typeRegistry.getNativeType(typeId).restrictByUndefinedVisitor();  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId).restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(typeId).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
151	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	compilable	  [FE]  AssertionFailedError  	14	2	replace
152	[BUG]  [BUGGY]  return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	compilable	  [FE]  AssertionFailedError  	14	2	replace
153	[BUG]  [BUGGY]  return  typeregistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [CE]  cannot  find  symbol  typeregistry  [FE]              AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeregistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeregistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol  typeregistry	17	None	replace
154	[BUG]  [BUGGY]  return  typesRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [CE]  cannot  find  symbol  typesRegistry  [FE]                AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typesRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typesRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol  typesRegistry	17	None	replace
155	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  this.typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
156	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  this  :  typeRegistry.getNativeType(typeId);  [CE]  incompatible  types  [FE]    NullPointerException    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  this  :  typeRegistry.getNativeType(typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)!=  null?  this  :  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(null);    	non-compiled	[CE]  incompatible  types	6	None	replace
157	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId).restrictByUndefined();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId).restrictByUndefined();  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId).restrictByUndefined();	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
158	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)||  this.typeRegistry.getNativeType(typeId);  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]            AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  this.typeRegistry.getNativeType(typeId)||  this.typeRegistry.getNativeType(typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId)||  this.typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	15	None	replace
159	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals( "function ")||  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  bad  operand  types  for  binary  operator  [FE]                  AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals( "function ")||  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeId.equals( "function ")||  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(value);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  	8	None	replace
160	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object "));  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object "));  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object "));	  return    typeRegistry.getNativeType(value);    	non-compiled	[CE]  	8	None	replace
161	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object "));  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object "));  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object "));	  return    typeRegistry.getNativeType(value);    	non-compiled	[CE]  	8	None	replace
162	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)?  typeRegistry.getNativeType(typeId):  registry.getNativeType(typeId);  [CE]  incompatible  types  [FE]                        AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)?  typeRegistry.getNativeType(typeId):  registry.getNativeType(typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)?  typeRegistry.getNativeType(typeId):  registry.getNativeType(typeId);	  return    typeRegistry.getNativeType(value);    	non-compiled	[CE]  incompatible  types	8	None	replace
163	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  null,  null);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId,  null,  null);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  null,  null);	  return    typeRegistry.getNativeType(typeId,    this);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	11	None	replace
164	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  constraint);  [CE]  cannot  find  symbol  constraint  [FE]            AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  constraint);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this,  constraint);	  return    typeRegistry.getNativeType(typeId,    this);    	non-compiled	[CE]  cannot  find  symbol  constraint	11	None	replace
165	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(null);  if(typeRegistry!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null);  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(null);  if(typeRegistry!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null);  }  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(null);    if(typeRegistry!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null);  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
166	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(null);  if(typeRegistry!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId  ==  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null);  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(null);  if(typeRegistry!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId  ==  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null);  }  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(null);    if(typeRegistry!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId  ==  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null);  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
167	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(null);  JSType  typeId  =  typeRegistry.getNativeType(null);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]        NullPointerException    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(null);  JSType  typeId  =  typeRegistry.getNativeType(null);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(null);    JSType  typeId  =  typeRegistry.getNativeType(null);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	5	None	add
168	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(null);  if(typeRegistry!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(null);  if(typeRegistry!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(null);    if(typeRegistry!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
169	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(null);  if(typeRegistry!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null  [CE]  ')'  expected  [FE]            NullPointerException    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(null);  if(typeRegistry!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(null);    if(typeRegistry!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null	  	non-compiled	[CE]  ')'  expected	5	None	add
170	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  }  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  }	  	non-compiled	[CE]  unreachable  statement	13	None	add
171	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  }  else  {  return  typeRegistry.getNativeType(typeId):  null;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  }  else  {  return  typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  }  else  {  return  typeRegistry.getNativeType(typeId):  null;  }	  	non-compiled	[CE]  ';'  expected	13	None	add
172	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  typeId;  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  typeId;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  typeId;	  return    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  incompatible  types	2	None	replace
173	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);	  return    this.typeRegistry.getNativeType(typeId);    	compilable	  [FE]  AssertionFailedError  	2	2	replace
174	[BUG]  [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);	  return    this.typeRegistry.getNativeType(typeId);    	compilable	  [FE]  AssertionFailedError  	2	2	replace
175	[BUG]  [BUGGY]  return(this.typeRegistry!=  null  &&  this.typeRegistry.getNativeType(typeId)  ==  typeId);  [CE]  incomparable  types:  JSType  and  JSTypeNative  [FE]        AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return(this.typeRegistry!=  null  &&  this.typeRegistry.getNativeType(typeId)  ==  typeId);  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry!=  null  &&  this.typeRegistry.getNativeType(typeId)  ==  typeId);	  return    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  incomparable  types:  JSType  and  JSTypeNative	2	None	replace
176	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;	  return    this.typeRegistry.getNativeType(typeId);    	compilable	  [FE]  AssertionFailedError  	2	2	replace
177	[BUG]  [BUGGY]  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;	  return    this.typeRegistry.getNativeType(typeId);    	compilable	  [FE]  AssertionFailedError  	2	2	replace
178	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;	  return    this.typeRegistry.getNativeType(typeId);    	compilable	  [FE]  NullPointerException  	2	26	replace
179	[BUG]  [BUGGY]  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  [FE]  NullPointerException  [FE]            AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;	  return    this.typeRegistry.getNativeType(typeId);    	compilable	  [FE]  NullPointerException  	2	26	replace
180	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                    AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeId  ==  null?  getNativeType(typeId):  null;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return  typeId  ==  null?  getNativeType(typeId):  null;	      	compilable	  [FE]  NullPointerException  	9	26	replace
181	[BUG]  [BUGGY]  return  typeId  ==  null?  getNativeType(typeId):  null;  [FE]  NullPointerException  [FE]                    AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeId  ==  null?  getNativeType(typeId):  null;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId  ==  null?  getNativeType(typeId):  null;	      	compilable	  [FE]  NullPointerException  	9	26	replace
182	[BUG]  [BUGGY]  return  typeId  ==  null?  null  :  typeId.toString();  [CE]  incompatible  types  [FE]                      AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeId  ==  null?  null  :  typeId.toString();  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId  ==  null?  null  :  typeId.toString();	      	non-compiled	[CE]  incompatible  types	9	None	replace
183	[BUG]  [BUGGY]  return  typeId  ==  null?  null  :  typeId.instanceType();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeId  ==  null?  null  :  typeId.instanceType();  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId  ==  null?  null  :  typeId.instanceType();	      	non-compiled	[CE]  cannot  find  symbol	9	None	replace
184	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId).restrictNullValue;  [CE]  cannot  find  symbol  restrictNullValue  [FE]                AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(typeId).restrictNullValue;  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId).restrictNullValue;	  return    typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor;    	non-compiled	[CE]  cannot  find  symbol  restrictNullValue	18	None	replace
185	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId);    if(typeId  ==  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
186	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId);    if(typeId!=  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
187	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId);    if(typeId!=  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
188	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(new  ObjectTypeId(typeId));  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(new  ObjectTypeId(typeId));  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(new  ObjectTypeId(typeId));	  return    typeRegistry.getNativeType(qualifiedName);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
189	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(new  ObjectType(typeId));  [CE]  ObjectType  is  abstract;  cannot  be  instantiated  [FE]              AssertionFailedError    [CONTEXT]    JSType  getNativeType(JSTypeNative  typeId)  {    [BUGGY]  return  typeRegistry.getNativeType(new  ObjectType(typeId));  [BUGGY]    }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(new  ObjectType(typeId));	  return    typeRegistry.getNativeType(qualifiedName);    	non-compiled	[CE]  ObjectType  is  abstract;  cannot  be  instantiated	4	None	replace
