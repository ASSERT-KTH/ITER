bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  typeId!=  null?  null  :  typeId.getNativeType();  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId!=  null?  null  :  typeId.getNativeType();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId!=  null?  null  :  typeId.getNativeType();	  return    typeId    ==    null?    null    :    typeId.getNativeType();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
2	[BUG]  [BUGGY]  return  typeId  ==  null?  null  :  typeRegistry.getNativeType();  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  null  :  typeRegistry.getNativeType();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId  ==  null?  null  :  typeRegistry.getNativeType();	  return    typeId    ==    null?    null    :    typeId.getNativeType();    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	19	None	replace
3	[BUG]  [BUGGY]  return  typeId  ==  null?  null  :  typeId,  typeRegistry.getNativeType();  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  null  :  typeId,  typeRegistry.getNativeType();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId  ==  null?  null  :  typeId,  typeRegistry.getNativeType();	  return    typeId    ==    null?    null    :    typeId.getNativeType();    	non-compiled	[CE]  ';'  expected	19	None	replace
4	[BUG]  [BUGGY]  return  typeId  ==  null?  null  :  typeId,  getNativeType();  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  null  :  typeId,  getNativeType();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId  ==  null?  null  :  typeId,  getNativeType();	  return    typeId    ==    null?    null    :    typeId.getNativeType();    	non-compiled	[CE]  ';'  expected	19	None	replace
5	[BUG]  [BUGGY]  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    JSTypeNative    typeId    =    getNativeType(typeId);    if(typeId!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	187	None	replace
6	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    JSTypeNative    typeId    =    getNativeType(typeId);    if(typeId!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  missing  return  statement	187	None	replace
7	[BUG]  [BUGGY]  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  missing  return  statement  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    JSTypeNative    typeId    =    getNativeType(typeId);    if(typeId!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  missing  return  statement	187	None	replace
8	[BUG]  [BUGGY]  JSType  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    JSTypeNative    typeId    =    getNativeType(typeId);    if(typeId!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	187	None	replace
9	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return	  return    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    JSTypeNative    typeId    =    getNativeType(typeId);    if(typeId!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
10	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return	  return    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    JSTypeNative    typeId    =    getNativeType(typeId);    if(typeId!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
11	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.restrictUndefinedVisitor,  resultEqualsValue);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.restrictUndefinedVisitor,  resultEqualsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this.restrictUndefinedVisitor,  resultEqualsValue);	  return    typeRegistry.getNativeType(typeId,    this.restrictUndefinedVisitor);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	104	None	replace
12	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(this.restrictUndefinedVisitor,  typeId);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(this.restrictUndefinedVisitor,  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(this.restrictUndefinedVisitor,  typeId);	  return    typeRegistry.getNativeType(typeId,    this.restrictUndefinedVisitor);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	104	None	replace
13	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.restrictNullVisitor,  this.restrictUndefinedVisitor);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.restrictNullVisitor,  this.restrictUndefinedVisitor);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this.restrictNullVisitor,  this.restrictUndefinedVisitor);	  return    typeRegistry.getNativeType(typeId,    this.restrictUndefinedVisitor);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	104	None	replace
14	[BUG]  [BUGGY]  return  this.restrictUndefinedVisitor.getNativeType(typeId);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.restrictUndefinedVisitor.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.restrictUndefinedVisitor.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId,    this.restrictUndefinedVisitor);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
15	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.restrictNullVisitor,  resultEqualsValue);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.restrictNullVisitor,  resultEqualsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this.restrictNullVisitor,  resultEqualsValue);	  return    typeRegistry.getNativeType(typeId,    this.restrictUndefinedVisitor);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	104	None	replace
16	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  resultEqualsValue,  this.restrictUndefinedVisitor);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  resultEqualsValue,  this.restrictUndefinedVisitor);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  resultEqualsValue,  this.restrictUndefinedVisitor);	  return    typeRegistry.getNativeType(typeId,    this.restrictUndefinedVisitor);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	104	None	replace
17	[BUG]  [BUGGY]  return  this.restrictUndefinedVisitor.getNativeType(typeId,  typeRegistry);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.restrictUndefinedVisitor.getNativeType(typeId,  typeRegistry);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.restrictUndefinedVisitor.getNativeType(typeId,  typeRegistry);	  return    typeRegistry.getNativeType(typeId,    this.restrictUndefinedVisitor);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
18	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(value);  [CE]  cannot  find  symbol  value  [FE]    NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(value);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(value);	  return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(null);    	non-compiled	[CE]  cannot  find  symbol  value	145	None	replace
19	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null,  null);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]      NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null,  null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null,  null);	  return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(null);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	145	None	replace
20	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(id);  [CE]  cannot  find  symbol  id  [FE]        NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(id);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(id);	  return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(null);    	non-compiled	[CE]  cannot  find  symbol  id	145	None	replace
21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(null);    	compilable	  [FE]  AssertionFailedError  	145	27	replace
22	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [FE]  AssertionFailedError  [FE]          NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(null);    	compilable	  [FE]  AssertionFailedError  	145	27	replace
23	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(this);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]            NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(this);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(this);	  return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(null);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	145	None	replace
24	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return(typeId  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);	  return(this.typeRegistry!=    null)?    null    :    this.typeRegistry.getNativeType(typeId);    	compilable	  [FE]  AssertionFailedError  	137	2	replace
25	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  [FE]  AssertionFailedError  [FE]    NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);	  return(this.typeRegistry!=    null)?    null    :    this.typeRegistry.getNativeType(typeId);    	compilable	  [FE]  AssertionFailedError  	137	2	replace
26	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId!=  null)?  null  :  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return(typeId!=  null)?  null  :  typeRegistry.getNativeType(typeId);	  return(this.typeRegistry!=    null)?    null    :    this.typeRegistry.getNativeType(typeId);    	compilable	  [FE]  NullPointerException  	137	26	replace
27	[BUG]  [BUGGY]  return(typeId!=  null)?  null  :  typeRegistry.getNativeType(typeId);  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId!=  null)?  null  :  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId!=  null)?  null  :  typeRegistry.getNativeType(typeId);	  return(this.typeRegistry!=    null)?    null    :    this.typeRegistry.getNativeType(typeId);    	compilable	  [FE]  NullPointerException  	137	26	replace
28	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return(typeId!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);	  return(this.typeRegistry!=    null)?    null    :    this.typeRegistry.getNativeType(typeId);    	compilable	  [FE]  NullPointerException  	137	26	replace
29	[BUG]  [BUGGY]  return(typeId!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);	  return(this.typeRegistry!=    null)?    null    :    this.typeRegistry.getNativeType(typeId);    	compilable	  [FE]  NullPointerException  	137	26	replace
30	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(new  JSTypeNative(typeId,  qualifiedName));  [CE]  cannot  find  symbol  qualifiedName  [FE]              NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(new  JSTypeNative(typeId,  qualifiedName));  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(new  JSTypeNative(typeId,  qualifiedName));	  return    typeRegistry.getNativeType(new    JSTypeNative(typeId));    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	32	None	replace
31	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(new  JSTypeNative(typeId,  value));  [CE]  cannot  find  symbol  value  [FE]                NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(new  JSTypeNative(typeId,  value));  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(new  JSTypeNative(typeId,  value));	  return    typeRegistry.getNativeType(new    JSTypeNative(typeId));    	non-compiled	[CE]  cannot  find  symbol  value	32	None	replace
32	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(new  JSTypeNative(typeId),  typeId);  [CE]  enum  types  may  not  be  instantiated  [FE]                  NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(new  JSTypeNative(typeId),  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(new  JSTypeNative(typeId),  typeId);	  return    typeRegistry.getNativeType(new    JSTypeNative(typeId));    	non-compiled	[CE]  enum  types  may  not  be  instantiated	32	None	replace
33	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(new  JSTypeNative(typeId),  qualifiedName);  [CE]  enum  types  may  not  be  instantiated  [FE]                    NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(new  JSTypeNative(typeId),  qualifiedName);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(new  JSTypeNative(typeId),  qualifiedName);	  return    typeRegistry.getNativeType(new    JSTypeNative(typeId));    	non-compiled	[CE]  enum  types  may  not  be  instantiated	32	None	replace
34	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(new  JSTypeNative(qualifiedName));  [CE]  cannot  find  symbol  qualifiedName  [FE]                      NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(new  JSTypeNative(qualifiedName));  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(new  JSTypeNative(qualifiedName));	  return    typeRegistry.getNativeType(new    JSTypeNative(typeId));    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	32	None	replace
35	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(new  JSTypeNative(typeId));  [CE]  enum  types  may  not  be  instantiated  [FE]                        NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(new  JSTypeNative(typeId));  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(new  JSTypeNative(typeId));	  return    typeRegistry.getNativeType(new    JSTypeNative(typeId));    	non-compiled	[CE]  enum  types  may  not  be  instantiated	32	None	replace
36	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE),  typeId.restrictByTrueTypeOfResultVisitor();  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE),  typeId.restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(UNKNOWN_TYPE),  typeId.restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(UNKNOWN_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  ';'  expected	82	None	replace
37	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE),  state.restrictByTrueTypeOfResultVisitor();  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE),  state.restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(UNKNOWN_TYPE),  state.restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(UNKNOWN_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  ';'  expected	82	None	replace
38	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE,  typeId).restrictByTrueTypeOfResultVisitor();  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE,  typeId).restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(UNKNOWN_TYPE,  typeId).restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(UNKNOWN_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	82	None	replace
39	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE),  resultEqualsValue,  typeId.restrictByTrueTypeOfResultVisitor();  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE),  resultEqualsValue,  typeId.restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(UNKNOWN_TYPE),  resultEqualsValue,  typeId.restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(UNKNOWN_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  ';'  expected	82	None	replace
40	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE),  this.restrictByTrueTypeOfResultVisitor();  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE),  this.restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(UNKNOWN_TYPE),  this.restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(UNKNOWN_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  ';'  expected	82	None	replace
41	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE),  UNKNOWN_TYPE,  resultEqualsValue();  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE),  UNKNOWN_TYPE,  resultEqualsValue();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(UNKNOWN_TYPE),  UNKNOWN_TYPE,  resultEqualsValue();	  return    typeRegistry.getNativeType(UNKNOWN_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  ';'  expected	82	None	replace
42	[BUG]  [BUGGY]  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    JSTypeNative    typeId    =    typeId.getJSType();    if(typeId!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	186	None	replace
43	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return	  return    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    JSTypeNative    typeId    =    typeId.getJSType();    if(typeId!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  illegal  start  of  expression	186	None	replace
44	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry	  return    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    JSTypeNative    typeId    =    typeId.getJSType();    if(typeId!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  ';'  expected	186	None	replace
45	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistr  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistr  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistr	  return    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    JSTypeNative    typeId    =    typeId.getJSType();    if(typeId!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  ';'  expected	186	None	replace
46	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)/  2;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)/  2;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)/  2;	  return    typeRegistry.getNativeType(typeId)+    2;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	76	None	replace
47	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)-  2;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)-  2;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)-  2;	  return    typeRegistry.getNativeType(typeId)+    2;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	76	None	replace
48	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)+  2;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)+  2;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId)+  2;	  return    typeRegistry.getNativeType(typeId)+    2;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	76	None	replace
49	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(this.restrictNullVisitor,  typeId);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(this.restrictNullVisitor,  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(this.restrictNullVisitor,  typeId);	  return    typeRegistry.getNativeType(typeId,    this.restrictNullVisitor);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	46	None	replace
50	[BUG]  [BUGGY]  return  this.restrictNullVisitor.getNativeType(typeId);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.restrictNullVisitor.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.restrictNullVisitor.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId,    this.restrictNullVisitor);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
51	[BUG]  [BUGGY]  return  this.restrictNullVisitor.getNativeType(typeId,  typeRegistry);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.restrictNullVisitor.getNativeType(typeId,  typeRegistry);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.restrictNullVisitor.getNativeType(typeId,  typeRegistry);	  return    typeRegistry.getNativeType(typeId,    this.restrictNullVisitor);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
52	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.restrictUndefinedVisitor,  this.restrictNullVisitor);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.restrictUndefinedVisitor,  this.restrictNullVisitor);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this.restrictUndefinedVisitor,  this.restrictNullVisitor);	  return    typeRegistry.getNativeType(typeId,    this.restrictNullVisitor);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	46	None	replace
53	[BUG]  [BUGGY]  return  this.restrictNullVisitor.getNativeType(typeId,  typeId);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.restrictNullVisitor.getNativeType(typeId,  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.restrictNullVisitor.getNativeType(typeId,  typeId);	  return    typeRegistry.getNativeType(typeId,    this.restrictNullVisitor);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
54	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return(typeId  ==  null)?  null  :  getNativeType(typeId);	  return    getNativeType(typeId);    	compilable	  [FE]  StackOverflowError  	147	28	replace
55	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  getNativeType(typeId);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId  ==  null)?  null  :  getNativeType(typeId);	  return    getNativeType(typeId);    	compilable	  [FE]  StackOverflowError  	147	28	replace
56	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      StackOverflowError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId!=  null)?  null  :  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return(typeId!=  null)?  null  :  getNativeType(typeId);	  return    getNativeType(typeId);    	compilable	  [FE]  NullPointerException  	147	26	replace
57	[BUG]  [BUGGY]  return(typeId!=  null)?  null  :  getNativeType(typeId);  [FE]  NullPointerException  [FE]      StackOverflowError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId!=  null)?  null  :  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId!=  null)?  null  :  getNativeType(typeId);	  return    getNativeType(typeId);    	compilable	  [FE]  NullPointerException  	147	26	replace
58	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeId.getNativeType();  [CE]  cannot  find  symbol  [FE]        StackOverflowError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeId.getNativeType();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId  ==  null)?  null  :  typeId.getNativeType();	  return    getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
59	[BUG]  [BUGGY]  return  getNativeType(typeId,  value);  [CE]  cannot  find  symbol  value  [FE]          StackOverflowError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  getNativeType(typeId,  value);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  getNativeType(typeId,  value);	  return    getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  value	147	None	replace
60	[BUG]  [BUGGY]  return(typeId!=  null)?  null  :  typeId.getNativeType();  [CE]  cannot  find  symbol  [FE]            StackOverflowError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId!=  null)?  null  :  typeId.getNativeType();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId!=  null)?  null  :  typeId.getNativeType();	  return    getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
61	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeId.getRawType();  [CE]  cannot  find  symbol  [FE]              StackOverflowError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeId.getRawType();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId  ==  null)?  null  :  typeId.getRawType();	  return    getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
62	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;	  	non-compiled	[CE]  unreachable  statement	39	None	add
63	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;	  	non-compiled	[CE]  not  a  statement	39	None	add
64	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;	  	non-compiled	[CE]  not  a  statement	39	None	add
65	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]          AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType  typeId  =  this.typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	39	None	add
66	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]            AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType  typeId  =  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	39	None	add
67	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  this.typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]              AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  this.typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType  typeId  =  this.typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	39	None	add
68	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType  typeId  =  getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	39	None	add
69	[BUG]  [BUGGY]  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  typeId  =  this.typeRegistry.getNativeType(typeId);	  return    this.typeRegistry.getNativeType(typeId);    JSType    typeId    =    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	48	None	replace
70	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    JSType    typeId    =    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	48	None	replace
71	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    JSType    typeId    =    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	48	None	replace
72	[BUG]  [BUGGY]  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    JSType    typeId    =    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	48	None	replace
73	[BUG]  [BUGGY]  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    JSType    typeId    =    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	48	None	replace
74	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  typeId  =  this.typeRegistry.getNativeType(typeId);  }  [CE]  incompatible  types  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  typeId  =  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  typeId  =  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    JSType    typeId    =    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  incompatible  types	48	None	replace
75	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  typeId,  this.restrictUndefinedVisitor);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  typeId,  this.restrictUndefinedVisitor);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  typeId,  this.restrictUndefinedVisitor);	  return    this.typeRegistry.getNativeType(typeId,    this.restrictUndefinedVisitor);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	140	None	replace
76	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  this.restrictUndefinedVisitor,  resultEqualsValue);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  this.restrictUndefinedVisitor,  resultEqualsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  this.restrictUndefinedVisitor,  resultEqualsValue);	  return    this.typeRegistry.getNativeType(typeId,    this.restrictUndefinedVisitor);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	140	None	replace
77	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  this.restrictNullVisitor,  this.restrictUndefinedVisitor);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  this.restrictNullVisitor,  this.restrictUndefinedVisitor);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  this.restrictNullVisitor,  this.restrictUndefinedVisitor);	  return    this.typeRegistry.getNativeType(typeId,    this.restrictUndefinedVisitor);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	140	None	replace
78	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  resultEqualsValue,  this.restrictUndefinedVisitor);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  resultEqualsValue,  this.restrictUndefinedVisitor);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  resultEqualsValue,  this.restrictUndefinedVisitor);	  return    this.typeRegistry.getNativeType(typeId,    this.restrictUndefinedVisitor);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	140	None	replace
79	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  this.restrictNullVisitor,  resultEqualsValue);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  this.restrictNullVisitor,  resultEqualsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  this.restrictNullVisitor,  resultEqualsValue);	  return    this.typeRegistry.getNativeType(typeId,    this.restrictUndefinedVisitor);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	140	None	replace
80	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId).value;  [CE]  cannot  find  symbol  value  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId).value;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId).value;	  return    typeRegistry.getNativeType(typeId).restrictNullValue;    	non-compiled	[CE]  cannot  find  symbol  value	184	None	replace
81	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId).restrictUndefinedValue;  [CE]  cannot  find  symbol  restrictUndefinedValue  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId).restrictUndefinedValue;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId).restrictUndefinedValue;	  return    typeRegistry.getNativeType(typeId).restrictNullValue;    	non-compiled	[CE]  cannot  find  symbol  restrictUndefinedValue	184	None	replace
82	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId).restrictNullValue();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId).restrictNullValue();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId).restrictNullValue();	  return    typeRegistry.getNativeType(typeId).restrictNullValue;    	non-compiled	[CE]  cannot  find  symbol	184	None	replace
83	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId).nullValue;  [CE]  cannot  find  symbol  nullValue  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId).nullValue;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId).nullValue;	  return    typeRegistry.getNativeType(typeId).restrictNullValue;    	non-compiled	[CE]  cannot  find  symbol  nullValue	184	None	replace
84	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId).nullVisitor;  [CE]  cannot  find  symbol  nullVisitor  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId).nullVisitor;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId).nullVisitor;	  return    typeRegistry.getNativeType(typeId).restrictNullVisitor;    	non-compiled	[CE]  cannot  find  symbol  nullVisitor	9	None	replace
85	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId).undefinedVisitor;  [CE]  cannot  find  symbol  undefinedVisitor  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId).undefinedVisitor;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId).undefinedVisitor;	  return    typeRegistry.getNativeType(typeId).restrictNullVisitor;    	non-compiled	[CE]  cannot  find  symbol  undefinedVisitor	9	None	replace
86	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId).invokeUndefinedVisitor;  [CE]  cannot  find  symbol  invokeUndefinedVisitor  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId).invokeUndefinedVisitor;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId).invokeUndefinedVisitor;	  return    typeRegistry.getNativeType(typeId).restrictNullVisitor;    	non-compiled	[CE]  cannot  find  symbol  invokeUndefinedVisitor	9	None	replace
87	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId).invoke(null,  resultEqualsValue);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId).invoke(null,  resultEqualsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId).invoke(null,  resultEqualsValue);	  return    typeRegistry.getNativeType(typeId).restrictNullVisitor;    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	9	None	replace
88	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId).restrictNullVisitor  &&  resultEqualsValue;  [CE]  cannot  find  symbol  restrictNullVisitor  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId).restrictNullVisitor  &&  resultEqualsValue;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId).restrictNullVisitor  &&  resultEqualsValue;	  return    typeRegistry.getNativeType(typeId).restrictNullVisitor;    	non-compiled	[CE]  cannot  find  symbol  restrictNullVisitor	9	None	replace
89	[BUG]  [BUGGY]  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSTypeNative    typeId    =    getNativeType(typeId);    if(typeId!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	50	None	replace
90	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  resultEqualsValue.equals(typeId);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  resultEqualsValue.equals(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)&&  resultEqualsValue.equals(typeId);	  return    typeRegistry.getNativeType(typeId)&&    typeId.equals(typeId);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	98	None	replace
91	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  value.equals(typeId);  [CE]  cannot  find  symbol  value  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  value.equals(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)&&  value.equals(typeId);	  return    typeRegistry.getNativeType(typeId)&&    typeId.equals(typeId);    	non-compiled	[CE]  cannot  find  symbol  value	98	None	replace
92	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(qualifiedName)&&  typeId.equals(typeId);  [CE]  cannot  find  symbol  qualifiedName  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(qualifiedName)&&  typeId.equals(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(qualifiedName)&&  typeId.equals(typeId);	  return    typeRegistry.getNativeType(typeId)&&    typeId.equals(typeId);    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	98	None	replace
93	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals(typeId);  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeId.equals(typeId);	  return    typeRegistry.getNativeType(typeId)&&    typeId.equals(typeId);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	98	None	replace
94	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  qualifiedName.equals(typeId);  [CE]  cannot  find  symbol  qualifiedName  [FE]                                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  qualifiedName.equals(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)&&  qualifiedName.equals(typeId);	  return    typeRegistry.getNativeType(typeId)&&    typeId.equals(typeId);    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	98	None	replace
95	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  id.equals(typeId);  [CE]  cannot  find  symbol  id  [FE]                                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  id.equals(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)&&  id.equals(typeId);	  return    typeRegistry.getNativeType(typeId)&&    typeId.equals(typeId);    	non-compiled	[CE]  cannot  find  symbol  id	98	None	replace
96	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeId).restrictByUndefinedVisitor();  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeId).restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeId).restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByUndefinedVisitor();    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	62	None	replace
97	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  typeId.restrictByUndefinedVisitor();  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  typeId.restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  typeId.restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByUndefinedVisitor();    	non-compiled	[CE]  ';'  expected	62	None	replace
98	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  state.restrictByUndefinedVisitor();  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  state.restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  state.restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByUndefinedVisitor();    	non-compiled	[CE]  ';'  expected	62	None	replace
99	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  this.restrictByUndefinedVisitor();  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  this.restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  this.restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByUndefinedVisitor();    	non-compiled	[CE]  ';'  expected	62	None	replace
100	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  resultEqualsValue,  typeId.restrictByUndefinedVisitor();  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  resultEqualsValue,  typeId.restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  resultEqualsValue,  typeId.restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByUndefinedVisitor();    	non-compiled	[CE]  ';'  expected	62	None	replace
101	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE)&&  typeId.restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE)&&  typeId.restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE)&&  typeId.restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
102	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.NO_TYPE,  typeId).restrictByTrueTypeOfResultVisitor();  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.NO_TYPE,  typeId).restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.NO_TYPE,  typeId).restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(JSTypeNative.NO_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	129	None	replace
103	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.NO_TYPE),  typeId.restrictByTrueTypeOfResultVisitor();  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.NO_TYPE),  typeId.restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.NO_TYPE),  typeId.restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(JSTypeNative.NO_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  ';'  expected	129	None	replace
104	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.NO_TYPE),  this.restrictByTrueTypeOfResultVisitor();  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.NO_TYPE),  this.restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.NO_TYPE),  this.restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(JSTypeNative.NO_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  ';'  expected	129	None	replace
105	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.NO_TYPE),  state.restrictByTrueTypeOfResultVisitor();  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.NO_TYPE),  state.restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.NO_TYPE),  state.restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(JSTypeNative.NO_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  ';'  expected	129	None	replace
106	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.NO_TYPE),  resultEqualsValue,  typeId.restrictByTrueTypeOfResultVisitor();  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.NO_TYPE),  resultEqualsValue,  typeId.restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.NO_TYPE),  resultEqualsValue,  typeId.restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(JSTypeNative.NO_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  ';'  expected	129	None	replace
107	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.NO_TYPE).restrictByFalseTypeOfResultVisitor();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.NO_TYPE).restrictByFalseTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.NO_TYPE).restrictByFalseTypeOfResultVisitor();	  return    typeRegistry.getNativeType(JSTypeNative.NO_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
108	[BUG]  [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  }  else  {  return  typeRegistry.getNativeType(typeId):  null;  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  }  else  {  return  typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  }  else  {  return  typeRegistry.getNativeType(typeId):  null;  }	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  ';'  expected	22	None	replace
109	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  }  else  {  return  typeRegistry.getNativeType(typeId):  null;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  }  else  {  return  typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  }  else  {  return  typeRegistry.getNativeType(typeId):  null;  }	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  ';'  expected	22	None	replace
110	[BUG]  [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  }  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  }	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  missing  return  statement	22	None	replace
111	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(qualifiedName)  ==  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  cannot  find  symbol  qualifiedName  [FE]          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(qualifiedName)  ==  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(qualifiedName)  ==  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(value)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	127	None	replace
112	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(qualifiedName)&&!typeRegistry.getNativeType(typeId);  [CE]  cannot  find  symbol  qualifiedName  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(qualifiedName)&&!typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(qualifiedName)&&!typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)&&!typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	142	None	replace
113	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||!typeRegistry.getNativeType(typeId);  [CE]  bad  operand  type  JSType  for  unary  operator  '!'  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||!typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||!typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)&&!typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  bad  operand  type  JSType  for  unary  operator  '!'	142	None	replace
114	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)&&!restrictUndefinedVisitor.getNativeType(typeId);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)&&!restrictUndefinedVisitor.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)&&!restrictUndefinedVisitor.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)&&!typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
115	[BUG]  [BUGGY]  JSType  typeId  =  typeRegistry.getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  typeId  =  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  typeId  =  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType    typeId    =    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	21	None	replace
116	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  typeRegistry.getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType    typeId    =    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	21	None	replace
117	[BUG]  [BUGGY]  JSType  typeId  =  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  typeId  =  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  typeId  =  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType    typeId    =    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	21	None	replace
118	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    return    this.typeRegistry.getNativeType(typeId);    	compilable	  [FE]  AssertionFailedError  	51	2	replace
119	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  return  this.typeRegistry.getNativeType(typeId);  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    return    this.typeRegistry.getNativeType(typeId);    	compilable	  [FE]  AssertionFailedError  	51	2	replace
120	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    return    this.typeRegistry.getNativeType(typeId);    	compilable	  [FE]  AssertionFailedError  	51	2	replace
121	[BUG]  [BUGGY]  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  return  this.typeRegistry.getNativeType(typeId);  }  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    return    this.typeRegistry.getNativeType(typeId);    	compilable	  [FE]  AssertionFailedError  	51	2	replace
122	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  return  resultEqualsValue;  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  return  resultEqualsValue;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  return  resultEqualsValue;	  return    this.typeRegistry.getNativeType(typeId);    return    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	51	None	replace
123	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(this.typeRegistry!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	if(this.typeRegistry!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    return    this.typeRegistry.getNativeType(typeId);    	compilable	  [FE]  AssertionFailedError  	51	2	replace
124	[BUG]  [BUGGY]  if(this.typeRegistry!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  return  this.typeRegistry.getNativeType(typeId);  }  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(this.typeRegistry!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(this.typeRegistry!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    return    this.typeRegistry.getNativeType(typeId);    	compilable	  [FE]  AssertionFailedError  	51	2	replace
125	[BUG]  [BUGGY]  if(typeId.equals(this.typeRegistry.getNativeType(typeId)))  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId.equals(this.typeRegistry.getNativeType(typeId)))  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId.equals(this.typeRegistry.getNativeType(typeId)))  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    JSType    type    =    typeId.getJSType();    if(type!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  missing  return  statement	114	None	replace
126	[BUG]  [BUGGY]  JSType  type  =  typeId.getJSType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  type  =  typeId.getJSType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  type  =  typeId.getJSType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    JSType    type    =    typeId.getJSType();    if(type!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
127	[BUG]  [BUGGY]  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSType  type  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSType  type  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSType  type  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType	  return    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    JSType    type    =    typeId.getJSType();    if(type!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  ';'  expected	114	None	replace
128	[BUG]  [BUGGY]  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeId.getJSType();  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeId.getJSType();  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeId.getJSType();  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    JSType    type    =    typeId.getJSType();    if(type!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	114	None	replace
129	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  result);  [CE]  cannot  find  symbol  result  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  result);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  result);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  result	141	None	replace
130	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  condition);  [CE]  cannot  find  symbol  condition  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  condition);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  condition);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  condition	141	None	replace
131	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  null);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  null);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId,    resultEqualsValue);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	141	None	replace
132	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  this.value);  [CE]  cannot  find  symbol  value  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  this.value);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  this.value);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  value	141	None	replace
133	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  0);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  0);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  0);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId,    resultEqualsValue);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	141	None	replace
134	[BUG]  [BUGGY]  return  this.value.getNativeType(typeId);  [CE]  cannot  find  symbol  value  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.value.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.value.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId,    this.value);    	non-compiled	[CE]  cannot  find  symbol  value	89	None	replace
135	[BUG]  [BUGGY]  return  this.value.getNativeType(typeId,  typeRegistry);  [CE]  cannot  find  symbol  value  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.value.getNativeType(typeId,  typeRegistry);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.value.getNativeType(typeId,  typeRegistry);	  return    typeRegistry.getNativeType(typeId,    this.value);    	non-compiled	[CE]  cannot  find  symbol  value	89	None	replace
136	[BUG]  [BUGGY]  return  this.valueRegistry.getNativeType(typeId,  typeId);  [CE]  cannot  find  symbol  valueRegistry  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.valueRegistry.getNativeType(typeId,  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.valueRegistry.getNativeType(typeId,  typeId);	  return    typeRegistry.getNativeType(typeId,    this.value);    	non-compiled	[CE]  cannot  find  symbol  valueRegistry	89	None	replace
137	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(qualifiedName,  this.value);  [CE]  cannot  find  symbol  qualifiedName  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(qualifiedName,  this.value);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(qualifiedName,  this.value);	  return    typeRegistry.getNativeType(typeId,    this.value);    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	89	None	replace
138	[BUG]  [BUGGY]  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]        NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null)    {    return    typeRegistry.getNativeType(null);    }    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	117	None	replace
139	[BUG]  [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  }  [CE]  missing  return  statement  [FE]          NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null)    {    return    typeRegistry.getNativeType(null);    }    	non-compiled	[CE]  missing  return  statement	117	None	replace
140	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }  [CE]  missing  return  statement  [FE]            NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null)    {    return    typeRegistry.getNativeType(null);    }    	non-compiled	[CE]  missing  return  statement	117	None	replace
141	[BUG]  [BUGGY]  JSType  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]              NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null)    {    return    typeRegistry.getNativeType(null);    }    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	117	None	replace
142	[BUG]  [BUGGY]  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null)    {    return    typeRegistry.getNativeType(null);    }    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	117	None	replace
143	[BUG]  [BUGGY]  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                  NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null)    {    return    typeRegistry.getNativeType(null);    }    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	117	None	replace
144	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null  ||  typeRegistry.getNativeType(typeId):  null;  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null  ||  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)!=  null  ||  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null    &&    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  ';'  expected	36	None	replace
145	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null  &&  typeRegistry.getNativeType(typeId):  null;  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null  &&  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)  ==  null  &&  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null    &&    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  ';'  expected	36	None	replace
146	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null  ||  typeRegistry.getNativeType(typeId):  null;  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null  ||  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)  ==  null  ||  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null    &&    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  ';'  expected	36	None	replace
147	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null  &&  this.typeRegistry.getNativeType(typeId):  null;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null  &&  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId)!=  null  &&  this.typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null    &&    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  ';'  expected	36	None	replace
148	[BUG]  [BUGGY]  return  typeRegistry.getType(typeId)!=  null  &&  typeRegistry.getNativeType(typeId):  null;  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getType(typeId)!=  null  &&  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getType(typeId)!=  null  &&  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null    &&    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  ';'  expected	36	None	replace
149	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null  &&  typeRegistry.getNativeType(typeId).isUndefinedType()  :  null;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null  &&  typeRegistry.getNativeType(typeId).isUndefinedType()  :  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)!=  null  &&  typeRegistry.getNativeType(typeId).isUndefinedType()  :  null;	  return    typeRegistry.getNativeType(typeId)!=    null    &&    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  ';'  expected	36	None	replace
150	[BUG]  [BUGGY]  JSType  return  typeRegistry.getNativeType(typeId);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  return  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  return  typeRegistry.getNativeType(typeId);	  return    this.typeRegistry.getNativeType(typeId);    JSType    return    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  not  a  statement	54	None	replace
151	[BUG]  [BUGGY]  JSType  return  this.typeRegistry.getNativeType(typeId);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  return  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  return  this.typeRegistry.getNativeType(typeId);	  return    this.typeRegistry.getNativeType(typeId);    JSType    return    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  not  a  statement	54	None	replace
152	[BUG]  [BUGGY]  JSType  return  _typeRegistry.getNativeType(typeId);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  return  _typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  return  _typeRegistry.getNativeType(typeId);	  return    this.typeRegistry.getNativeType(typeId);    JSType    return    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  not  a  statement	54	None	replace
153	[BUG]  [BUGGY]  JSType  return  typeRegistry.getNativeType(this.typeId);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  return  typeRegistry.getNativeType(this.typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  return  typeRegistry.getNativeType(this.typeId);	  return    this.typeRegistry.getNativeType(typeId);    JSType    return    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  not  a  statement	54	None	replace
154	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)&&  this.typeRegistry.getNativeType(typeId);  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)&&  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId)&&  this.typeRegistry.getNativeType(typeId);	  return    this.typeRegistry.getNativeType(typeId)||    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	158	None	replace
155	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  this.typeRegistry.getNativeType(typeId);  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  this.typeRegistry.getNativeType(typeId);	  return    this.typeRegistry.getNativeType(typeId)||    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	158	None	replace
156	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)||  this.restrictUndefinedVisitor.getNativeType(typeId);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)||  this.restrictUndefinedVisitor.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId)||  this.restrictUndefinedVisitor.getNativeType(typeId);	  return    this.typeRegistry.getNativeType(typeId)||    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol	158	None	replace
157	[BUG]  [BUGGY]  return  typeId.getNativeType(this.typeRegistry)||  this.typeRegistry.getNativeType(typeId);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId.getNativeType(this.typeRegistry)||  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId.getNativeType(this.typeRegistry)||  this.typeRegistry.getNativeType(typeId);	  return    this.typeRegistry.getNativeType(typeId)||    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol	158	None	replace
158	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)||  this.valueRegistry.getNativeType(typeId);  [CE]  cannot  find  symbol  valueRegistry  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)||  this.valueRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId)||  this.valueRegistry.getNativeType(typeId);	  return    this.typeRegistry.getNativeType(typeId)||    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  valueRegistry	158	None	replace
159	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)||  this.typeRegistry.getNativeType(typeId,  this.restrictUndefinedVisitor);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)||  this.typeRegistry.getNativeType(typeId,  this.restrictUndefinedVisitor);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId)||  this.typeRegistry.getNativeType(typeId,  this.restrictUndefinedVisitor);	  return    this.typeRegistry.getNativeType(typeId)||    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	158	None	replace
160	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(null,  typeId,  resultEqualsValue);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]            NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(null,  typeId,  resultEqualsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(null,  typeId,  resultEqualsValue);	  return    typeRegistry.getNativeType(null,    typeId);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	31	None	replace
161	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(null,  typeId,  value);  [CE]  cannot  find  symbol  value  [FE]              NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(null,  typeId,  value);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(null,  typeId,  value);	  return    typeRegistry.getNativeType(null,    typeId);    	non-compiled	[CE]  cannot  find  symbol  value	31	None	replace
162	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(null,  typeId,  state);  [CE]  cannot  find  symbol  state  [FE]                NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(null,  typeId,  state);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(null,  typeId,  state);	  return    typeRegistry.getNativeType(null,    typeId);    	non-compiled	[CE]  cannot  find  symbol  state	31	None	replace
163	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(null,  typeId,  qualifiedName);  [CE]  cannot  find  symbol  qualifiedName  [FE]                  NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(null,  typeId,  qualifiedName);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(null,  typeId,  qualifiedName);	  return    typeRegistry.getNativeType(null,    typeId);    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	31	None	replace
164	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(null,  typeId,  null);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                    NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(null,  typeId,  null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(null,  typeId,  null);	  return    typeRegistry.getNativeType(null,    typeId);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	31	None	replace
165	[BUG]  [BUGGY]  resultEqualsValue  =  getNativeType(typeId,  value);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  getNativeType(typeId,  value);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  getNativeType(typeId,  value);	  resultEqualsValue    =    getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	130	None	replace
166	[BUG]  [BUGGY]  resultEqualsValue  =  getNativeType(typeId.restrictByTrueTypeOfResultVisitor);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  getNativeType(typeId.restrictByTrueTypeOfResultVisitor);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  getNativeType(typeId.restrictByTrueTypeOfResultVisitor);	  resultEqualsValue    =    getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	130	None	replace
167	[BUG]  [BUGGY]  outcomeEqualsValue  =  getNativeType(typeId);  [CE]  cannot  find  symbol  outcomeEqualsValue  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  outcomeEqualsValue  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	outcomeEqualsValue  =  getNativeType(typeId);	  resultEqualsValue    =    getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  outcomeEqualsValue	130	None	replace
168	[BUG]  [BUGGY]  resultValue  =  getNativeType(typeId);  [CE]  cannot  find  symbol  resultValue  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultValue  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultValue  =  getNativeType(typeId);	  resultEqualsValue    =    getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  resultValue	130	None	replace
169	[BUG]  [BUGGY]  resultEqualsValue  =  getNativeType(typeId.toString());  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  getNativeType(typeId.toString());  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  getNativeType(typeId.toString());	  resultEqualsValue    =    getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	130	None	replace
170	[BUG]  [BUGGY]  resultEqualsValue  =  getNativeType(typeId)&&  typeRegistry.getNativeType(typeId);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  getNativeType(typeId)&&  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  getNativeType(typeId)&&  typeRegistry.getNativeType(typeId);	  resultEqualsValue    =    getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	130	None	replace
171	[BUG]  [BUGGY]  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSTypeNative    typeId    =    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	27	None	replace
172	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSTypeNative    typeId    =    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	27	None	replace
173	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(qualifiedName)!=  null?  typeRegistry.getNativeType(qualifiedName):  null;  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  [CE]  cannot  find  symbol  qualifiedName  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(qualifiedName)!=  null?  typeRegistry.getNativeType(qualifiedName):  null;  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(qualifiedName)!=  null?  typeRegistry.getNativeType(qualifiedName):  null;  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSTypeNative    typeId    =    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	27	None	replace
174	[BUG]  [BUGGY]  JSType  typeId  =  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  typeId  =  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  typeId  =  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType    typeId    =    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	25	None	replace
175	[BUG]  [BUGGY]  JSType  typeId  =  typeRegistry.getNativeType(typeId)  >>  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  typeId  =  typeRegistry.getNativeType(typeId)  >>  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  typeId  =  typeRegistry.getNativeType(typeId)  >>  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType    typeId    =    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	25	None	replace
176	[BUG]  [BUGGY]  JSType  typeId  =  typeRegistry.getNativeType(typeId):  null;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  typeId  =  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  typeId  =  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType    typeId    =    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  ';'  expected	25	None	replace
177	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(TYPE).restrictByTrueTypeOfResultVisitor();  [CE]  cannot  find  symbol  TYPE  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(TYPE).restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(TYPE).restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(GLOBAL_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol  TYPE	85	None	replace
178	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.TYPE).restrictByTrueTypeOfResultVisitor();  [CE]  cannot  find  symbol  TYPE  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.TYPE).restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.TYPE).restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(GLOBAL_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol  TYPE	85	None	replace
179	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);  JSType  typeId  =  typeRegistry.getNativeType(null);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]    NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);  JSType  typeId  =  typeRegistry.getNativeType(null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(null);    JSType  typeId  =  typeRegistry.getNativeType(null);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	144	None	add
180	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]      NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(null);    JSTypeNative  typeId  =  typeRegistry.getNativeType(null);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	144	None	add
181	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);  (typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);  [CE]  not  a  statement  [FE]        NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);  (typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(null);    (typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);	  	non-compiled	[CE]  not  a  statement	144	None	add
182	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);  typeId  =  typeRegistry.getNativeType(null);  [CE]  incompatible  types  [FE]          NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);  typeId  =  typeRegistry.getNativeType(null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(null);    typeId  =  typeRegistry.getNativeType(null);	  	non-compiled	[CE]  incompatible  types	144	None	add
183	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]            NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(null);    JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	144	None	add
184	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);  JSTypeNative  typeId  =  getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]              NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);  JSTypeNative  typeId  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(null);    JSTypeNative  typeId  =  getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	144	None	add
185	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  context);  [CE]  cannot  find  symbol  context  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  context);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  context);	  return    typeRegistry.getNativeType(typeId,    state);    	non-compiled	[CE]  cannot  find  symbol  context	88	None	replace
186	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSTypeNative    typeId    =    typeId.getJSType();    if(typeId!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
187	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSTypeNative    typeId    =    typeId.getJSType();    if(typeId!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  ';'  expected	185	None	replace
188	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSTypeNative    typeId    =    typeId.getJSType();    if(typeId!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  <identifier>  expected	185	None	replace
189	[BUG]  [BUGGY]  return  resultEqualsValue.getNativeType(typeId);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  resultEqualsValue.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  resultEqualsValue.getNativeType(typeId);	  return    typeRegistry.getNativeType(resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	96	None	replace
190	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(restrictUndefinedVisitor);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(restrictUndefinedVisitor);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(restrictUndefinedVisitor);	  return    typeRegistry.getNativeType(resultEqualsValue);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	96	None	replace
191	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)?  getNativeType(typeId):  null;  [CE]  incompatible  types  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)?  getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)?  getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(resultEqualsValue);    	non-compiled	[CE]  incompatible  types	96	None	replace
192	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeId).restrictByTrueTypeOfResultVisitor();  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeId).restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeId).restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	83	None	replace
193	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  typeId.restrictByTrueTypeOfResultVisitor();  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  typeId.restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  typeId.restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  ';'  expected	83	None	replace
194	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  state.restrictByTrueTypeOfResultVisitor();  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  state.restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  state.restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  ';'  expected	83	None	replace
195	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  this.restrictByTrueTypeOfResultVisitor();  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  this.restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  this.restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  ';'  expected	83	None	replace
196	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE)&&  typeId.restrictByTrueTypeOfResultVisitor();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE)&&  typeId.restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE)&&  typeId.restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
197	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  resultEqualsValue,  typeId.restrictByTrueTypeOfResultVisitor();  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  resultEqualsValue,  typeId.restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  resultEqualsValue,  typeId.restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  ';'  expected	83	None	replace
198	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(OBJECT_TYPE,  typeId).restrictByTrueTypeOfResultVisitor();  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(OBJECT_TYPE,  typeId).restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(OBJECT_TYPE,  typeId).restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(OBJECT_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	128	None	replace
199	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(OBJECT_TYPE),  typeId.restrictByTrueTypeOfResultVisitor();  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(OBJECT_TYPE),  typeId.restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(OBJECT_TYPE),  typeId.restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(OBJECT_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  ';'  expected	128	None	replace
200	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(OBJECT_TYPE)+  OBJECT_TYPE.restrictByTrueTypeOfResultVisitor();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(OBJECT_TYPE)+  OBJECT_TYPE.restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(OBJECT_TYPE)+  OBJECT_TYPE.restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(OBJECT_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
201	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(OBJECT_TYPE),  state.restrictByTrueTypeOfResultVisitor();  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(OBJECT_TYPE),  state.restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(OBJECT_TYPE),  state.restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(OBJECT_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  ';'  expected	128	None	replace
202	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(OBJECT_TYPE),  this.restrictByTrueTypeOfResultVisitor();  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(OBJECT_TYPE),  this.restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(OBJECT_TYPE),  this.restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(OBJECT_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  ';'  expected	128	None	replace
203	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(OBJECT_TYPE),  getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(OBJECT_TYPE),  getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(OBJECT_TYPE),  getNativeType(typeId).restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(OBJECT_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  ';'  expected	128	None	replace
204	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(this.qualifiedName,  typeId);  [CE]  cannot  find  symbol  qualifiedName  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(this.qualifiedName,  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(this.qualifiedName,  typeId);	  return    typeRegistry.getNativeType(typeId,    this.qualifiedName);    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	43	None	replace
205	[BUG]  [BUGGY]  return  this.qualifiedName.getNativeType(typeId);  [CE]  cannot  find  symbol  qualifiedName  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.qualifiedName.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.qualifiedName.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId,    this.qualifiedName);    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	43	None	replace
206	[BUG]  [BUGGY]  return  this.qualifiedName.getNativeType(typeId,  typeRegistry);  [CE]  cannot  find  symbol  qualifiedName  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.qualifiedName.getNativeType(typeId,  typeRegistry);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.qualifiedName.getNativeType(typeId,  typeRegistry);	  return    typeRegistry.getNativeType(typeId,    this.qualifiedName);    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	43	None	replace
207	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);  JSType  typeId  =  typeRegistry.getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]    AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);  JSType  typeId  =  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(typeId);    JSType  typeId  =  typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	28	None	add
208	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);  JSType  typeId  =(typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]      AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);  JSType  typeId  =(typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(typeId);    JSType  typeId  =(typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	28	None	add
209	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);  (typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);  (typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(typeId);    (typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  not  a  statement	28	None	add
210	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]          AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(typeId);    JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	28	None	add
211	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);  JSType  typeId  =  getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]            AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);  JSType  typeId  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(typeId);    JSType  typeId  =  getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	28	None	add
212	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);  typeId  =  typeRegistry.getNativeType(typeId);  [CE]  incompatible  types  [FE]              AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);  typeId  =  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(typeId);    typeId  =  typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  incompatible  types	28	None	add
213	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);  JSTypeNative  typeId  =  getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);  JSTypeNative  typeId  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(typeId);    JSTypeNative  typeId  =  getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	28	None	add
214	[BUG]  [BUGGY]  JSType  type  =  getNativeType(typeId);  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  missing  return  statement  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  type  =  getNativeType(typeId);  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  type  =  getNativeType(typeId);  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSType    type    =    getNativeType(typeId);    if(type!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  missing  return  statement	115	None	replace
215	[BUG]  [BUGGY]  JSType  type  =  getNativeType(typeId);  if(type  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  missing  return  statement  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  type  =  getNativeType(typeId);  if(type  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  type  =  getNativeType(typeId);  if(type  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSType    type    =    getNativeType(typeId);    if(type!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  missing  return  statement	115	None	replace
216	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  JSType  type  =  getNativeType(typeId);  if(type!=  null)  {  return  this.typeRegistry.getN  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  JSType  type  =  getNativeType(typeId);  if(type!=  null)  {  return  this.typeRegistry.getN  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  JSType  type  =  getNativeType(typeId);  if(type!=  null)  {  return  this.typeRegistry.getN	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSType    type    =    getNativeType(typeId);    if(type!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  ';'  expected	115	None	replace
217	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)/  0;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)/  0;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)/  0;	  return    typeRegistry.getNativeType(typeId)+    0;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	78	None	replace
218	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)/  2  +  0;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)/  2  +  0;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)/  2  +  0;	  return    typeRegistry.getNativeType(typeId)+    0;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	78	None	replace
219	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)+  0;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)+  0;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId)+  0;	  return    typeRegistry.getNativeType(typeId)+    0;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	78	None	replace
220	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(NO_TYPE),  typeId.restrictByTrueTypeOfResultVisitor();  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(NO_TYPE),  typeId.restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(NO_TYPE),  typeId.restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(NO_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  ';'  expected	86	None	replace
221	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(NO_TYPE,  typeId).restrictByTrueTypeOfResultVisitor();  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(NO_TYPE,  typeId).restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(NO_TYPE,  typeId).restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(NO_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	86	None	replace
222	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(NO_TYPE).restrictByFalseTypeOfResultVisitor();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(NO_TYPE).restrictByFalseTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(NO_TYPE).restrictByFalseTypeOfResultVisitor();	  return    typeRegistry.getNativeType(NO_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
223	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(NO_TYPE),  resultEqualsValue,  typeId.restrictByTrueTypeOfResultVisitor();  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(NO_TYPE),  resultEqualsValue,  typeId.restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(NO_TYPE),  resultEqualsValue,  typeId.restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(NO_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  ';'  expected	86	None	replace
224	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(NO_TYPE),  state.restrictByTrueTypeOfResultVisitor();  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(NO_TYPE),  state.restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(NO_TYPE),  state.restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(NO_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  ';'  expected	86	None	replace
225	[BUG]  [BUGGY]  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null)  {  resultEqualsValue  =  getNativeType(typeId);  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]              NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null)  {  resultEqualsValue  =  getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null)  {  resultEqualsValue  =  getNativeType(typeId);  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null)    {    resultEqualsValue    =    getNativeType(typeId);    }    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	120	None	replace
226	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null)  {  return  typeRegistry.getNativeType(null);  }  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(resultEqualsValue  ==  null)  {  return  typeRegistry.getNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(resultEqualsValue  ==  null)  {  return  typeRegistry.getNativeType(null);  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null)    {    resultEqualsValue    =    getNativeType(typeId);    }    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	120	None	replace
227	[BUG]  [BUGGY]  if(resultEqualsValue!=  null)  {  return  typeRegistry.getNativeType(null);  }  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                  NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(resultEqualsValue!=  null)  {  return  typeRegistry.getNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(resultEqualsValue!=  null)  {  return  typeRegistry.getNativeType(null);  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null)    {    resultEqualsValue    =    getNativeType(typeId);    }    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	120	None	replace
228	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  resultEqualsValue  =  getNativeType(typeId);  }  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                    NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(resultEqualsValue  ==  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  resultEqualsValue  =  getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(resultEqualsValue  ==  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  resultEqualsValue  =  getNativeType(typeId);  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null)    {    resultEqualsValue    =    getNativeType(typeId);    }    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	120	None	replace
229	[BUG]  [BUGGY]  if(resultEqualsValue!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  resultEqualsValue  =  getNativeType(typeId);  }  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                      NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(resultEqualsValue!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  resultEqualsValue  =  getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(resultEqualsValue!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  resultEqualsValue  =  getNativeType(typeId);  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null)    {    resultEqualsValue    =    getNativeType(typeId);    }    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	120	None	replace
230	[BUG]  [BUGGY]  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId  ==  null)  {  resultEqualsValue  =  getNativeType(typeId);  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                        NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId  ==  null)  {  resultEqualsValue  =  getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId  ==  null)  {  resultEqualsValue  =  getNativeType(typeId);  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null)    {    resultEqualsValue    =    getNativeType(typeId);    }    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	120	None	replace
231	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals(qualifiedName)||  typeId.equals( "object   ")||  typeId.equals( "object   ")||  typeId.equals( "object   ")||  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals(qualifiedName)||  typeId.equals( "object   ")||  typeId.equals( "object   ")||  typeId.equals( "object   ")||  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeId.equals(qualifiedName)||  typeId.equals( "object   ")||  typeId.equals( "object   ")||  typeId.equals( "object   ")||	  return    typeRegistry.getNativeType(typeId)||    typeId.equals(   "object   ")||    typeId.equals(   "object   ")||    typeId.equals(   "object   ")||    typeId.equals(   "object   "));    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
232	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals( "object   ")||  typeId.equals( "object   ")||  typeId.equals( "object   ")||  typeId.equals( "object   ")||  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals( "object   ")||  typeId.equals( "object   ")||  typeId.equals( "object   ")||  typeId.equals( "object   ")||  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeId.equals( "object   ")||  typeId.equals( "object   ")||  typeId.equals( "object   ")||  typeId.equals( "object   ")||	  return    typeRegistry.getNativeType(typeId)||    typeId.equals(   "object   ")||    typeId.equals(   "object   ")||    typeId.equals(   "object   ")||    typeId.equals(   "object   "));    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
233	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals(qualifiedName)||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object   ")||  typeId.equals  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals(qualifiedName)||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object   ")||  typeId.equals  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeId.equals(qualifiedName)||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object   ")||  typeId.equals	  return    typeRegistry.getNativeType(typeId)||    typeId.equals(   "object   ")||    typeId.equals(   "object   ")||    typeId.equals(   "object   ")||    typeId.equals(   "object   "));    	non-compiled	[CE]  	160	None	replace
234	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals(qualifiedName)||  typeId.equals( "object   ")||  typeId.equals( "object   ")||  typeId.equals( "object   ")||  typeId  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals(qualifiedName)||  typeId.equals( "object   ")||  typeId.equals( "object   ")||  typeId.equals( "object   ")||  typeId  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeId.equals(qualifiedName)||  typeId.equals( "object   ")||  typeId.equals( "object   ")||  typeId.equals( "object   ")||  typeId	  return    typeRegistry.getNativeType(typeId)||    typeId.equals(   "object   ")||    typeId.equals(   "object   ")||    typeId.equals(   "object   ")||    typeId.equals(   "object   "));    	non-compiled	[CE]  	160	None	replace
235	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals	  return    typeRegistry.getNativeType(typeId)||    typeId.equals(   "object   ")||    typeId.equals(   "object   ")||    typeId.equals(   "object   ")||    typeId.equals(   "object   "));    	non-compiled	[CE]  	160	None	replace
236	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals(qualifiedName)||  typeId.equals( "object   ")||  typeId.equals( "object   ")||  typeId.equals( "object   ")||  typeId.  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals(qualifiedName)||  typeId.equals( "object   ")||  typeId.equals( "object   ")||  typeId.equals( "object   ")||  typeId.  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeId.equals(qualifiedName)||  typeId.equals( "object   ")||  typeId.equals( "object   ")||  typeId.equals( "object   ")||  typeId.	  return    typeRegistry.getNativeType(typeId)||    typeId.equals(   "object   ")||    typeId.equals(   "object   ")||    typeId.equals(   "object   ")||    typeId.equals(   "object   "));    	non-compiled	[CE]  <identifier>  expected	160	None	replace
237	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals( "object   ")||  typeId.equals( "object   ")||  typeId.equals( "object   ")||  typeId.equals( "object   ")  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals( "object   ")||  typeId.equals( "object   ")||  typeId.equals( "object   ")||  typeId.equals( "object   ")  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeId.equals( "object   ")||  typeId.equals( "object   ")||  typeId.equals( "object   ")||  typeId.equals( "object   ")	  return    typeRegistry.getNativeType(typeId)||    typeId.equals(   "object   ")||    typeId.equals(   "object   ")||    typeId.equals(   "object   ")||    typeId.equals(   "object   "));    	non-compiled	[CE]  	160	None	replace
238	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(qualifiedName)?  null  :  typeRegistry.getNativeType(typeId);  [CE]  cannot  find  symbol  qualifiedName  [FE]          NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(qualifiedName)?  null  :  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(qualifiedName)?  null  :  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)?    null    :    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	30	None	replace
239	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)?  null  :  typeRegistry.getNativeType(typeId);  [CE]  incompatible  types  [FE]            NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)?  null  :  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId)?  null  :  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)?    null    :    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  incompatible  types	30	None	replace
240	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)?  null  :  typeRegistry.getNativeType(typeId,  value);  [CE]  incompatible  types  [FE]              NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)?  null  :  typeRegistry.getNativeType(typeId,  value);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)?  null  :  typeRegistry.getNativeType(typeId,  value);	  return    typeRegistry.getNativeType(typeId)?    null    :    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  incompatible  types	30	None	replace
241	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(qualifiedName)?  null  :  typeRegistry.getNativeType(qualifiedName);  [CE]  cannot  find  symbol  qualifiedName  [FE]                NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(qualifiedName)?  null  :  typeRegistry.getNativeType(qualifiedName);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(qualifiedName)?  null  :  typeRegistry.getNativeType(qualifiedName);	  return    typeRegistry.getNativeType(typeId)?    null    :    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	30	None	replace
242	[BUG]  [BUGGY]  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId    ==    null?    this.typeRegistry.getNativeType(typeId):    null;    typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;	  	non-compiled	[CE]  not  a  statement	178	None	add
243	[BUG]  [BUGGY]  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]      NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId    ==    null?    this.typeRegistry.getNativeType(typeId):    null;    JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	178	None	add
244	[BUG]  [BUGGY]  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  JSTypeNative  typeId  =  getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]        NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  JSTypeNative  typeId  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId    ==    null?    this.typeRegistry.getNativeType(typeId):    null;    JSTypeNative  typeId  =  getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	178	None	add
245	[BUG]  [BUGGY]  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]          NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId    ==    null?    this.typeRegistry.getNativeType(typeId):    null;    JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	178	None	add
246	[BUG]  [BUGGY]  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]            NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId    ==    null?    this.typeRegistry.getNativeType(typeId):    null;    JSType  typeId  =  this.typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	178	None	add
247	[BUG]  [BUGGY]  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]              NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId    ==    null?    this.typeRegistry.getNativeType(typeId):    null;    JSType  typeId  =  getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	178	None	add
248	[BUG]  [BUGGY]  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  typeRegistry.getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId    ==    null?    this.typeRegistry.getNativeType(typeId):    null;    JSType  typeId  =  typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	178	None	add
249	[BUG]  [BUGGY]  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                  NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId    ==    null?    this.typeRegistry.getNativeType(typeId):    null;    JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	178	None	add
250	[BUG]  [BUGGY]  return  _typeRegistry.getNativeType(typeId);  [CE]  cannot  find  symbol  _typeRegistry  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  _typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  _typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(_typeId);    	non-compiled	[CE]  cannot  find  symbol  _typeRegistry	74	None	replace
251	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(_value);  [CE]  cannot  find  symbol  _value  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(_value);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(_value);	  return    typeRegistry.getNativeType(_typeId);    	non-compiled	[CE]  cannot  find  symbol  _value	74	None	replace
252	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(TYPE_EXPR_TYPE);  [CE]  cannot  find  symbol  TYPE_EXPR_TYPE  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(TYPE_EXPR_TYPE);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(TYPE_EXPR_TYPE);	  return    typeRegistry.getNativeType(TYPE_Id);    	non-compiled	[CE]  cannot  find  symbol  TYPE_EXPR_TYPE	75	None	replace
253	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(TYPE_NAME);  [CE]  cannot  find  symbol  TYPE_NAME  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(TYPE_NAME);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(TYPE_NAME);	  return    typeRegistry.getNativeType(TYPE_Id);    	non-compiled	[CE]  cannot  find  symbol  TYPE_NAME	75	None	replace
254	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(TYPE_FALSE);  [CE]  cannot  find  symbol  TYPE_FALSE  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(TYPE_FALSE);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(TYPE_FALSE);	  return    typeRegistry.getNativeType(TYPE_Id);    	non-compiled	[CE]  cannot  find  symbol  TYPE_FALSE	75	None	replace
255	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(TYPE_QUOTE);  [CE]  cannot  find  symbol  TYPE_QUOTE  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(TYPE_QUOTE);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(TYPE_QUOTE);	  return    typeRegistry.getNativeType(TYPE_Id);    	non-compiled	[CE]  cannot  find  symbol  TYPE_QUOTE	75	None	replace
256	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(TYPE_ID);  [CE]  cannot  find  symbol  TYPE_ID  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(TYPE_ID);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(TYPE_ID);	  return    typeRegistry.getNativeType(TYPE_Id);    	non-compiled	[CE]  cannot  find  symbol  TYPE_ID	75	None	replace
257	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(new  JSTypeNative(typeId),  value);  [CE]  enum  types  may  not  be  instantiated  [FE]                NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(new  JSTypeNative(typeId),  value);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(new  JSTypeNative(typeId),  value);	  return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(new    JSTypeNative(typeId));    	non-compiled	[CE]  enum  types  may  not  be  instantiated	33	None	replace
258	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(new  JSTypeNative(typeId,  value));  [CE]  cannot  find  symbol  value  [FE]                  NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(new  JSTypeNative(typeId,  value));  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(new  JSTypeNative(typeId,  value));	  return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(new    JSTypeNative(typeId));    	non-compiled	[CE]  cannot  find  symbol  value	33	None	replace
259	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(new  JSTypeNative(typeId),  qualifiedName);  [CE]  enum  types  may  not  be  instantiated  [FE]                    NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(new  JSTypeNative(typeId),  qualifiedName);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(new  JSTypeNative(typeId),  qualifiedName);	  return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(new    JSTypeNative(typeId));    	non-compiled	[CE]  enum  types  may  not  be  instantiated	33	None	replace
260	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(new  JSTypeNative(typeId),  this);  [CE]  enum  types  may  not  be  instantiated  [FE]                      NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(new  JSTypeNative(typeId),  this);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(new  JSTypeNative(typeId),  this);	  return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(new    JSTypeNative(typeId));    	non-compiled	[CE]  enum  types  may  not  be  instantiated	33	None	replace
261	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(new  JSTypeNative(typeId),  false);  [CE]  enum  types  may  not  be  instantiated  [FE]                        NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(new  JSTypeNative(typeId),  false);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(new  JSTypeNative(typeId),  false);	  return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(new    JSTypeNative(typeId));    	non-compiled	[CE]  enum  types  may  not  be  instantiated	33	None	replace
262	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(new  JSTypeNative(value));  [CE]  cannot  find  symbol  value  [FE]                          NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(new  JSTypeNative(value));  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(new  JSTypeNative(value));	  return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(new    JSTypeNative(typeId));    	non-compiled	[CE]  cannot  find  symbol  value	33	None	replace
263	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  qualifiedName);  [CE]  cannot  find  symbol  qualifiedName  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  qualifiedName);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  qualifiedName);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId,    value);    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	70	None	replace
264	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  this.restrictNullVisitor);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  this.restrictNullVisitor);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  this.restrictNullVisitor);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId,    value);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	70	None	replace
265	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  this.restrictUndefinedVisitor);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  this.restrictUndefinedVisitor);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  this.restrictUndefinedVisitor);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId,    value);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	70	None	replace
266	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  null  :  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return  typeRegistry.getNativeType(typeId)!=  null?  null  :  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)    >=    null;    	compilable	  [FE]  NullPointerException  	131	26	replace
267	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  null  :  typeRegistry.getNativeType(typeId);  [FE]  NullPointerException  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  null  :  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)!=  null?  null  :  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)    >=    null;    	compilable	  [FE]  NullPointerException  	131	26	replace
268	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  null  :  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return  typeRegistry.getNativeType(typeId)  ==  null?  null  :  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)    >=    null;    	compilable	  [FE]  AssertionFailedError  	131	2	replace
269	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  null  :  typeRegistry.getNativeType(typeId);  [FE]  AssertionFailedError  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  null  :  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)  ==  null?  null  :  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)    >=    null;    	compilable	  [FE]  AssertionFailedError  	131	2	replace
270	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null;  [CE]  incompatible  types  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId)!=  null;	  return    typeRegistry.getNativeType(typeId)    >=    null;    	non-compiled	[CE]  incompatible  types	131	None	replace
271	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  value)!=  null;  [CE]  cannot  find  symbol  value  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  value)!=  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  value)!=  null;	  return    typeRegistry.getNativeType(typeId)    >=    null;    	non-compiled	[CE]  cannot  find  symbol  value	131	None	replace
272	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(new  ObjectType(typeId),  typeId);  [CE]  ObjectType  is  abstract;  cannot  be  instantiated  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(new  ObjectType(typeId),  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(new  ObjectType(typeId),  typeId);	  return    typeRegistry.getNativeType(new    ObjectType(typeId));    	non-compiled	[CE]  ObjectType  is  abstract;  cannot  be  instantiated	189	None	replace
273	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(new  ObjectType(typeId,  value));  [CE]  cannot  find  symbol  value  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(new  ObjectType(typeId,  value));  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(new  ObjectType(typeId,  value));	  return    typeRegistry.getNativeType(new    ObjectType(typeId));    	non-compiled	[CE]  cannot  find  symbol  value	189	None	replace
274	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(new  ObjectType(typeId),  value);  [CE]  ObjectType  is  abstract;  cannot  be  instantiated  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(new  ObjectType(typeId),  value);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(new  ObjectType(typeId),  value);	  return    typeRegistry.getNativeType(new    ObjectType(typeId));    	non-compiled	[CE]  ObjectType  is  abstract;  cannot  be  instantiated	189	None	replace
275	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(new  ObjectType(typeId),  this);  [CE]  ObjectType  is  abstract;  cannot  be  instantiated  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(new  ObjectType(typeId),  this);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(new  ObjectType(typeId),  this);	  return    typeRegistry.getNativeType(new    ObjectType(typeId));    	non-compiled	[CE]  ObjectType  is  abstract;  cannot  be  instantiated	189	None	replace
276	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(new  ObjectType(typeId),  qualifiedName);  [CE]  ObjectType  is  abstract;  cannot  be  instantiated  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(new  ObjectType(typeId),  qualifiedName);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(new  ObjectType(typeId),  qualifiedName);	  return    typeRegistry.getNativeType(new    ObjectType(typeId));    	non-compiled	[CE]  ObjectType  is  abstract;  cannot  be  instantiated	189	None	replace
277	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(new  ObjectType(typeId),  null);  [CE]  ObjectType  is  abstract;  cannot  be  instantiated  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(new  ObjectType(typeId),  null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(new  ObjectType(typeId),  null);	  return    typeRegistry.getNativeType(new    ObjectType(typeId));    	non-compiled	[CE]  ObjectType  is  abstract;  cannot  be  instantiated	189	None	replace
278	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(clazz);  [CE]  cannot  find  symbol  clazz  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(clazz);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(clazz);	  return    typeRegistry.getNativeType(keyId);    	non-compiled	[CE]  cannot  find  symbol  clazz	72	None	replace
279	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE).restrictNullVisitor();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE).restrictNullVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(UNKNOWN_TYPE).restrictNullVisitor();	  return    typeRegistry.getNativeType(typeId).restrictNullVisitor();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
280	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictNullVisitor();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictNullVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictNullVisitor();	  return    typeRegistry.getNativeType(typeId).restrictNullVisitor();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
281	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(qualifiedName).restrictNullVisitor();  [CE]  cannot  find  symbol  qualifiedName  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(qualifiedName).restrictNullVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(qualifiedName).restrictNullVisitor();	  return    typeRegistry.getNativeType(typeId).restrictNullVisitor();    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	64	None	replace
282	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(nativeTypeId).restrictNullVisitor();  [CE]  cannot  find  symbol  nativeTypeId  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(nativeTypeId).restrictNullVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(nativeTypeId).restrictNullVisitor();	  return    typeRegistry.getNativeType(typeId).restrictNullVisitor();    	non-compiled	[CE]  cannot  find  symbol  nativeTypeId	64	None	replace
283	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(value).restrictNullVisitor();  [CE]  cannot  find  symbol  value  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(value).restrictNullVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(value).restrictNullVisitor();	  return    typeRegistry.getNativeType(typeId).restrictNullVisitor();    	non-compiled	[CE]  cannot  find  symbol  value	64	None	replace
284	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(qualifiedName)||  typeRegistry.getNativeType(typeId).restrictByUndefined();  [CE]  cannot  find  symbol  qualifiedName  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(qualifiedName)||  typeRegistry.getNativeType(typeId).restrictByUndefined();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(qualifiedName)||  typeRegistry.getNativeType(typeId).restrictByUndefined();	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId).restrictByUndefined();    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	157	None	replace
285	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId),  restrictUndefinedVisitor.restrictByUndefined();  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId),  restrictUndefinedVisitor.restrictByUndefined();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId),  restrictUndefinedVisitor.restrictByUndefined();	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId).restrictByUndefined();    	non-compiled	[CE]  ';'  expected	157	None	replace
286	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  typeRegistry.getNativeType(typeId).restrictByUndefined();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  typeRegistry.getNativeType(typeId).restrictByUndefined();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)&&  typeRegistry.getNativeType(typeId).restrictByUndefined();	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId).restrictByUndefined();    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
287	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(value)||  typeRegistry.getNativeType(typeId).restrictByUndefined();  [CE]  cannot  find  symbol  value  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(value)||  typeRegistry.getNativeType(typeId).restrictByUndefined();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(value)||  typeRegistry.getNativeType(typeId).restrictByUndefined();	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId).restrictByUndefined();    	non-compiled	[CE]  cannot  find  symbol  value	157	None	replace
288	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId).restrictByUndefined();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId).restrictByUndefined();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId).restrictByUndefined();	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId).restrictByUndefined();    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
289	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(name)||  typeRegistry.getNativeType(typeId).restrictByUndefined();  [CE]  cannot  find  symbol  name  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(name)||  typeRegistry.getNativeType(typeId).restrictByUndefined();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(name)||  typeRegistry.getNativeType(typeId).restrictByUndefined();	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId).restrictByUndefined();    	non-compiled	[CE]  cannot  find  symbol  name	157	None	replace
290	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals( "function ")||  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  bad  operand  types  for  binary  operator  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals( "function ")||  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeId.equals( "function ")||  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)||    typeId.equals(   "function   ")||    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  	159	None	replace
291	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  typeId.equals( "function ")||  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  bad  operand  types  for  binary  operator  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  typeId.equals( "function ")||  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)&&  typeId.equals( "function ")||  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)||    typeId.equals(   "function   ")||    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  	159	None	replace
292	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals( ".function ")||  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  bad  operand  types  for  binary  operator  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals( ".function ")||  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeId.equals( ".function ")||  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)||    typeId.equals(   "function   ")||    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  	159	None	replace
293	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals( ",function ")||  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  bad  operand  types  for  binary  operator  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals( ",function ")||  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeId.equals( ",function ")||  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)||    typeId.equals(   "function   ")||    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  	159	None	replace
294	[BUG]  [BUGGY]  return  typeId!=  null?  null  :  typeId.toString();  [CE]  incompatible  types  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId!=  null?  null  :  typeId.toString();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId!=  null?  null  :  typeId.toString();	  return    typeId    ==    null?    null    :    typeId.toString();    	non-compiled	[CE]  incompatible  types	182	None	replace
295	[BUG]  [BUGGY]  return  typeId  ==  null? "null "  :  typeId.toString();  [CE]  incompatible  types  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null? "null "  :  typeId.toString();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId  ==  null? "null "  :  typeId.toString();	  return    typeId    ==    null?    null    :    typeId.toString();    	non-compiled	[CE]  incompatible  types	182	None	replace
296	[BUG]  [BUGGY]  return  typeId  ==  null  ||  typeId.toString().equals(typeId.toString());  [CE]  incompatible  types  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null  ||  typeId.toString().equals(typeId.toString());  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId  ==  null  ||  typeId.toString().equals(typeId.toString());	  return    typeId    ==    null?    null    :    typeId.toString();    	non-compiled	[CE]  incompatible  types	182	None	replace
297	[BUG]  [BUGGY]  return  typeId  ==  null?  null  :  typeId.getRawClass().toString();  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  null  :  typeId.getRawClass().toString();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId  ==  null?  null  :  typeId.getRawClass().toString();	  return    typeId    ==    null?    null    :    typeId.toString();    	non-compiled	[CE]  cannot  find  symbol	182	None	replace
298	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  result);  [CE]  cannot  find  symbol  result  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  result);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this,  result);	  return    typeRegistry.getNativeType(typeId,    this,    condition);    	non-compiled	[CE]  cannot  find  symbol  result	95	None	replace
299	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  null);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this,  null);	  return    typeRegistry.getNativeType(typeId,    this,    condition);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	95	None	replace
300	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  getNativeType(typeId));  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  getNativeType(typeId));  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this,  getNativeType(typeId));	  return    typeRegistry.getNativeType(typeId,    this,    condition);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	95	None	replace
301	[BUG]  [BUGGY]  return  state.getNativeType(typeId,  typeRegistry.restrictNullVisitor);  [CE]  cannot  find  symbol  restrictNullVisitor  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  state.getNativeType(typeId,  typeRegistry.restrictNullVisitor);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  state.getNativeType(typeId,  typeRegistry.restrictNullVisitor);	  return    typeRegistry.getNativeType(typeId,    state.restrictNullVisitor);    	non-compiled	[CE]  cannot  find  symbol  restrictNullVisitor	134	None	replace
302	[BUG]  [BUGGY]  return  state.restrictNullVisitor.getNativeType(typeId);  [CE]  package  state  does  not  exist  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  state.restrictNullVisitor.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  state.restrictNullVisitor.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId,    state.restrictNullVisitor);    	non-compiled	[CE]  package  state  does  not  exist	134	None	replace
303	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  condition.restrictNullVisitor);  [CE]  cannot  find  symbol  condition  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  condition.restrictNullVisitor);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  condition.restrictNullVisitor);	  return    typeRegistry.getNativeType(typeId,    state.restrictNullVisitor);    	non-compiled	[CE]  cannot  find  symbol  condition	134	None	replace
304	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  state.restrictUndefinedVisitor);  [CE]  cannot  find  symbol  state  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  state.restrictUndefinedVisitor);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  state.restrictUndefinedVisitor);	  return    typeRegistry.getNativeType(typeId,    state.restrictNullVisitor);    	non-compiled	[CE]  cannot  find  symbol  state	134	None	replace
305	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  context.restrictNullVisitor);  [CE]  cannot  find  symbol  context  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  context.restrictNullVisitor);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  context.restrictNullVisitor);	  return    typeRegistry.getNativeType(typeId,    state.restrictNullVisitor);    	non-compiled	[CE]  cannot  find  symbol  context	134	None	replace
306	[BUG]  [BUGGY]  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null);  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]        NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null);  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null    ||    typeId.equals(typeId))    {    return    typeRegistry.getNativeType(null);    }    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	165	None	replace
307	[BUG]  [BUGGY]  JSType  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null);  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]          NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null);  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null    ||    typeId.equals(typeId))    {    return    typeRegistry.getNativeType(null);    }    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	165	None	replace
308	[BUG]  [BUGGY]  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId!=  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null);  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]            NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId!=  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId!=  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null);  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null    ||    typeId.equals(typeId))    {    return    typeRegistry.getNativeType(null);    }    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	165	None	replace
309	[BUG]  [BUGGY]  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId  ==  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null);  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]              NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId  ==  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId  ==  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null);  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null    ||    typeId.equals(typeId))    {    return    typeRegistry.getNativeType(null);    }    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	165	None	replace
310	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId),  value  -  1;  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId),  value  -  1;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId),  value  -  1;	  return    typeRegistry.getNativeType(typeId)-    1;    	non-compiled	[CE]  ';'  expected	80	None	replace
311	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId),  getNativeType(typeId)-  1;  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId),  getNativeType(typeId)-  1;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId),  getNativeType(typeId)-  1;	  return    typeRegistry.getNativeType(typeId)-    1;    	non-compiled	[CE]  ';'  expected	80	None	replace
312	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(qualifiedName)-  1;  [CE]  cannot  find  symbol  qualifiedName  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(qualifiedName)-  1;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(qualifiedName)-  1;	  return    typeRegistry.getNativeType(typeId)-    1;    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	80	None	replace
313	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId):  null;  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId):  null;  }	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    if(typeId!=    null)    {    JSType    typeId    =    typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    return    typeRegistry.getNativeType(typeId):    null;    }    	non-compiled	[CE]  ';'  expected	107	None	replace
314	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  }  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  }	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    if(typeId!=    null)    {    JSType    typeId    =    typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    return    typeRegistry.getNativeType(typeId):    null;    }    	non-compiled	[CE]  missing  return  statement	107	None	replace
315	[BUG]  [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(typeId):  null;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  return  typeRegistry.getNativeType(typeId):  null;  }	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    if(typeId!=    null)    {    JSType    typeId    =    typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    return    typeRegistry.getNativeType(typeId):    null;    }    	non-compiled	[CE]  ';'  expected	107	None	replace
316	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry!=  null?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return  this.typeRegistry!=  null?  this.typeRegistry.getNativeType(typeId):  null;	  return    typeId    ==    null?    this.typeRegistry.getNativeType(typeId):    null;    	compilable	  [FE]  AssertionFailedError  	179	2	replace
317	[BUG]  [BUGGY]  return  this.typeRegistry!=  null?  this.typeRegistry.getNativeType(typeId):  null;  [FE]  AssertionFailedError  [FE]    NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry!=  null?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry!=  null?  this.typeRegistry.getNativeType(typeId):  null;	  return    typeId    ==    null?    this.typeRegistry.getNativeType(typeId):    null;    	compilable	  [FE]  AssertionFailedError  	179	2	replace
318	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return  this.typeRegistry  ==  null?  this.typeRegistry.getNativeType(typeId):  null;	  return    typeId    ==    null?    this.typeRegistry.getNativeType(typeId):    null;    	compilable	  [FE]  NullPointerException  	179	26	replace
319	[BUG]  [BUGGY]  return  this.typeRegistry  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry  ==  null?  this.typeRegistry.getNativeType(typeId):  null;	  return    typeId    ==    null?    this.typeRegistry.getNativeType(typeId):    null;    	compilable	  [FE]  NullPointerException  	179	26	replace
320	[BUG]  [BUGGY]  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  Collections.emptyList();  [CE]  cannot  find  symbol  Collections  [FE]        NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  Collections.emptyList();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  Collections.emptyList();	  return    typeId    ==    null?    this.typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  cannot  find  symbol  Collections	179	None	replace
321	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId):  null;  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId):  null;	  return    typeId    ==    null?    this.typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  ';'  expected	179	None	replace
322	[BUG]  [BUGGY]  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId!=    null?    this.typeRegistry.getNativeType(typeId):    null;    JSType  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;	  	non-compiled	[CE]  not  a  statement	176	None	add
323	[BUG]  [BUGGY]  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId!=    null?    this.typeRegistry.getNativeType(typeId):    null;    JSType  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;	  	non-compiled	[CE]  not  a  statement	176	None	add
324	[BUG]  [BUGGY]  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]        AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId!=    null?    this.typeRegistry.getNativeType(typeId):    null;    JSType  typeId  =  getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	176	None	add
325	[BUG]  [BUGGY]  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  typeRegistry.getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]          AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId!=    null?    this.typeRegistry.getNativeType(typeId):    null;    JSType  typeId  =  typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	176	None	add
326	[BUG]  [BUGGY]  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]            AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId!=    null?    this.typeRegistry.getNativeType(typeId):    null;    JSType  typeId  =  this.typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	176	None	add
327	[BUG]  [BUGGY]  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId!=    null?    this.typeRegistry.getNativeType(typeId):    null;    typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;	  	non-compiled	[CE]  not  a  statement	176	None	add
328	[BUG]  [BUGGY]  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId!=    null?    this.typeRegistry.getNativeType(typeId):    null;    JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	176	None	add
329	[BUG]  [BUGGY]  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  JSTypeNative  typeId  =  getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                  AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  JSTypeNative  typeId  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId!=    null?    this.typeRegistry.getNativeType(typeId):    null;    JSTypeNative  typeId  =  getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	176	None	add
330	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId).reasonUndefinedVisitor;  [CE]  cannot  find  symbol  reasonUndefinedVisitor  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId).reasonUndefinedVisitor;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId).reasonUndefinedVisitor;	  return    typeRegistry.getNativeType(typeId).restrictUndefinedVisitor;    	non-compiled	[CE]  cannot  find  symbol  reasonUndefinedVisitor	10	None	replace
331	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  value,  null);  [CE]  cannot  find  symbol  value  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  value,  null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  value,  null);	  return    typeRegistry.getNativeType(typeId,    null);    	non-compiled	[CE]  cannot  find  symbol  value	44	None	replace
332	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  null,  value);  [CE]  cannot  find  symbol  value  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  null,  value);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  null,  value);	  return    typeRegistry.getNativeType(typeId,    null);    	non-compiled	[CE]  cannot  find  symbol  value	44	None	replace
333	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  null,  resultEqualsValue);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  null,  resultEqualsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  null,  resultEqualsValue);	  return    typeRegistry.getNativeType(typeId,    null);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	44	None	replace
334	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  typeId,  null,  resultEqualsValue);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  typeId,  null,  resultEqualsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  typeId,  null,  resultEqualsValue);	  return    typeRegistry.getNativeType(typeId,    null);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	44	None	replace
335	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  null,  typeId);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  null,  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  null,  typeId);	  return    typeRegistry.getNativeType(typeId,    null);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	44	None	replace
336	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  typeId,  null);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  typeId,  null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  typeId,  null);	  return    typeRegistry.getNativeType(typeId,    null);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	44	None	replace
337	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  null,  state);  [CE]  cannot  find  symbol  state  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  null,  state);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  null,  state);	  return    typeRegistry.getNativeType(typeId,    null);    	non-compiled	[CE]  cannot  find  symbol  state	44	None	replace
338	[BUG]  [BUGGY]  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]        NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSTypeNative  typeId  =  typeRegistry.getNativeType(null);	  return    typeRegistry.getNativeType(null);    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	1	None	replace
339	[BUG]  [BUGGY]  JSTypeNative  typeId  =  typeRegistry.getNativeType(null,  typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]          NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSTypeNative  typeId  =  typeRegistry.getNativeType(null,  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSTypeNative  typeId  =  typeRegistry.getNativeType(null,  typeId);	  return    typeRegistry.getNativeType(null);    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	1	None	replace
340	[BUG]  [BUGGY]  null  typeId  =  typeRegistry.getNativeType(null);  [CE]  not  a  statement  [FE]            NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  null  typeId  =  typeRegistry.getNativeType(null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	null  typeId  =  typeRegistry.getNativeType(null);	  return    typeRegistry.getNativeType(null);    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    	non-compiled	[CE]  not  a  statement	1	None	replace
341	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return  this.typeRegistry.getNativeType(typeId)  ==  null?  this.typeRegistry.getNativeType(typeId):  null;	  return    this.typeRegistry.getNativeType(typeId)!=    null?    this.typeRegistry.getNativeType(typeId):    null;    	compilable	  [FE]  AssertionFailedError  	126	26	replace
342	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId)  ==  null?  this.typeRegistry.getNativeType(typeId):  null;	  return    this.typeRegistry.getNativeType(typeId)!=    null?    this.typeRegistry.getNativeType(typeId):    null;    	compilable	  [FE]  AssertionFailedError  	126	26	replace
343	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return  typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;	  return    this.typeRegistry.getNativeType(typeId)!=    null?    this.typeRegistry.getNativeType(typeId):    null;    	compilable	  [FE]  AssertionFailedError  	126	2	replace
344	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;	  return    this.typeRegistry.getNativeType(typeId)!=    null?    this.typeRegistry.getNativeType(typeId):    null;    	compilable	  [FE]  AssertionFailedError  	126	2	replace
345	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return  typeRegistry.getNativeType(typeId)  ==  null?  this.typeRegistry.getNativeType(typeId):  null;	  return    this.typeRegistry.getNativeType(typeId)!=    null?    this.typeRegistry.getNativeType(typeId):    null;    	compilable	  [FE]  NullPointerException  	126	26	replace
346	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  [FE]  NullPointerException  [FE]        AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)  ==  null?  this.typeRegistry.getNativeType(typeId):  null;	  return    this.typeRegistry.getNativeType(typeId)!=    null?    this.typeRegistry.getNativeType(typeId):    null;    	compilable	  [FE]  NullPointerException  	126	26	replace
347	[BUG]  [BUGGY]  JSTypeRegistry  typeRegistry  =  getNativeType(typeId);  [CE]  incompatible  types  [FE]                NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSTypeRegistry  typeRegistry  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSTypeRegistry  typeRegistry  =  getNativeType(typeId);	  return    typeRegistry.getNativeType(null);    JSTypeRegistry    typeRegistry    =    getNativeType(typeId);    	non-compiled	[CE]  incompatible  types	5	None	replace
348	[BUG]  [BUGGY]  if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  JSTypeRegistry  typeRegistry  =  getNativeType(typeId);  }  [CE]  incompatible  types  [FE]                  NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  JSTypeRegistry  typeRegistry  =  getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  JSTypeRegistry  typeRegistry  =  getNativeType(typeId);  }	  return    typeRegistry.getNativeType(null);    JSTypeRegistry    typeRegistry    =    getNativeType(typeId);    	non-compiled	[CE]  incompatible  types	5	None	replace
349	[BUG]  [BUGGY]  if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  Class  <?>  typeRegistry  =  getNativeType(typeId);  }  [CE]  incompatible  types  [FE]                    NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  Class  <?>  typeRegistry  =  getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  Class  <?>  typeRegistry  =  getNativeType(typeId);  }	  return    typeRegistry.getNativeType(null);    JSTypeRegistry    typeRegistry    =    getNativeType(typeId);    	non-compiled	[CE]  incompatible  types	5	None	replace
350	[BUG]  [BUGGY]  if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  typeRegistry  =  getNativeType(typeId);  }  [CE]  cannot  assign  a  value  to  final  variable  typeRegistry  [FE]                      NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  typeRegistry  =  getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  typeRegistry  =  getNativeType(typeId);  }	  return    typeRegistry.getNativeType(null);    JSTypeRegistry    typeRegistry    =    getNativeType(typeId);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  typeRegistry	5	None	replace
351	[BUG]  [BUGGY]  if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(null);  }  [CE]  missing  return  statement  [FE]                        NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(null);  }	  return    typeRegistry.getNativeType(null);    JSTypeRegistry    typeRegistry    =    getNativeType(typeId);    	non-compiled	[CE]  missing  return  statement	5	None	replace
352	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  field);  [CE]  cannot  find  symbol  field  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  field);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this,  field);	  return    typeRegistry.getNativeType(typeId,    this,    constraint);    	non-compiled	[CE]  cannot  find  symbol  field	164	None	replace
353	[BUG]  [BUGGY]  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  resultEqualsValue  =  result;  }  [CE]  incompatible  types  [FE]                                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  resultEqualsValue  =  result;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  resultEqualsValue  =  result;  }	  if(typeId    ==    null)    {    JSTypeNative    result    =    typeRegistry.getNativeType(typeId);    if(resultEqualsValue    ==    null)    {    resultEqualsValue    =    result;    }    	non-compiled	[CE]  incompatible  types	20	None	replace
354	[BUG]  [BUGGY]  if(typeId  ==  null)  {  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  resultEqualsValue  =  result;  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  resultEqualsValue  =  result;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  resultEqualsValue  =  result;  }	  if(typeId    ==    null)    {    JSTypeNative    result    =    typeRegistry.getNativeType(typeId);    if(resultEqualsValue    ==    null)    {    resultEqualsValue    =    result;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
355	[BUG]  [BUGGY]  resultEqualsValue  =  result;  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  result;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  result;	  if(typeId    ==    null)    {    JSTypeNative    result    =    typeRegistry.getNativeType(typeId);    if(resultEqualsValue    ==    null)    {    resultEqualsValue    =    result;    }    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	20	None	replace
356	[BUG]  [BUGGY]  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  resultEqualsValue  =  result;  }  [CE]  incompatible  types  [FE]                                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  resultEqualsValue  =  result;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  resultEqualsValue  =  result;  }	  if(typeId    ==    null)    {    JSTypeNative    result    =    typeRegistry.getNativeType(typeId);    if(resultEqualsValue    ==    null)    {    resultEqualsValue    =    result;    }    	non-compiled	[CE]  incompatible  types	20	None	replace
357	[BUG]  [BUGGY]  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  [CE]  incompatible  types  [FE]                                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSTypeNative  result  =  typeRegistry.getNativeType(typeId);	  if(typeId    ==    null)    {    JSTypeNative    result    =    typeRegistry.getNativeType(typeId);    if(resultEqualsValue    ==    null)    {    resultEqualsValue    =    result;    }    	non-compiled	[CE]  incompatible  types	20	None	replace
358	[BUG]  [BUGGY]  if(typeId  ==  null)  {  JSTypeNative  result  =  getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  resultEqualsValue  =  result;  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  JSTypeNative  result  =  getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  resultEqualsValue  =  result;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  JSTypeNative  result  =  getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  resultEqualsValue  =  result;  }	  if(typeId    ==    null)    {    JSTypeNative    result    =    typeRegistry.getNativeType(typeId);    if(resultEqualsValue    ==    null)    {    resultEqualsValue    =    result;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
359	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(value)  ==  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  cannot  find  symbol  value  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(value)  ==  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(value)  ==  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(qualifiedName)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  cannot  find  symbol  value	37	None	replace
360	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(id)!=  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  cannot  find  symbol  id  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(id)!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(id)!=  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(qualifiedName)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  cannot  find  symbol  id	37	None	replace
361	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(qualifiedName,  typeId,  getNativeType(typeId));  [CE]  cannot  find  symbol  qualifiedName  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(qualifiedName,  typeId,  getNativeType(typeId));  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(qualifiedName,  typeId,  getNativeType(typeId));	  return    typeRegistry.getNativeType(typeId,    getNativeType(typeId));    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	103	None	replace
362	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  getNativeType(typeId),  value);  [CE]  cannot  find  symbol  value  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  getNativeType(typeId),  value);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  getNativeType(typeId),  value);	  return    typeRegistry.getNativeType(typeId,    getNativeType(typeId));    	non-compiled	[CE]  cannot  find  symbol  value	103	None	replace
363	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  getNativeType(typeId),  qualifiedName);  [CE]  cannot  find  symbol  qualifiedName  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  getNativeType(typeId),  qualifiedName);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  getNativeType(typeId),  qualifiedName);	  return    typeRegistry.getNativeType(typeId,    getNativeType(typeId));    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	103	None	replace
364	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  getNativeType(typeId),  typeId);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  getNativeType(typeId),  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  getNativeType(typeId),  typeId);	  return    typeRegistry.getNativeType(typeId,    getNativeType(typeId));    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	103	None	replace
365	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  getNativeType(typeId),  state);  [CE]  cannot  find  symbol  state  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  getNativeType(typeId),  state);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  getNativeType(typeId),  state);	  return    typeRegistry.getNativeType(typeId,    getNativeType(typeId));    	non-compiled	[CE]  cannot  find  symbol  state	103	None	replace
366	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  getNativeType(typeId),  condition);  [CE]  cannot  find  symbol  condition  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  getNativeType(typeId),  condition);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  getNativeType(typeId),  condition);	  return    typeRegistry.getNativeType(typeId,    getNativeType(typeId));    	non-compiled	[CE]  cannot  find  symbol  condition	103	None	replace
367	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  getNativeType(typeId),  this);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  getNativeType(typeId),  this);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  getNativeType(typeId),  this);	  return    typeRegistry.getNativeType(typeId,    getNativeType(typeId));    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	103	None	replace
368	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  typeRegistry.getNativeType(null);  }  [CE]  missing  return  statement  [FE]                    NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  typeRegistry.getNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  typeRegistry.getNativeType(null);  }	  return    typeRegistry.getNativeType(null);    typeRegistry.getNativeType(null);    	non-compiled	[CE]  missing  return  statement	7	None	replace
369	[BUG]  [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  typeRegistry.getNativeType(null);  }  [CE]  missing  return  statement  [FE]                      NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  typeRegistry.getNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  typeRegistry.getNativeType(null);  }	  return    typeRegistry.getNativeType(null);    typeRegistry.getNativeType(null);    	non-compiled	[CE]  missing  return  statement	7	None	replace
370	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  typeRegistry.getNativeType(null,  typeId);  }  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                        NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  typeRegistry.getNativeType(null,  typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  typeRegistry.getNativeType(null,  typeId);  }	  return    typeRegistry.getNativeType(null);    typeRegistry.getNativeType(null);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	7	None	replace
371	[BUG]  [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  typeRegistry.getNativeType(null,  typeId);  }  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                          NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  typeRegistry.getNativeType(null,  typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  typeRegistry.getNativeType(null,  typeId);  }	  return    typeRegistry.getNativeType(null);    typeRegistry.getNativeType(null);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	7	None	replace
372	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  name);  [CE]  cannot  find  symbol  name  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  name);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  name);	  return    typeRegistry.getNativeType(typeId,    id);    	non-compiled	[CE]  cannot  find  symbol  name	45	None	replace
373	[BUG]  [BUGGY]  JSType  return  typeId.getNativeType(this.typeRegistry);  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  return  typeId.getNativeType(this.typeRegistry);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  return  typeId.getNativeType(this.typeRegistry);	  return    this.typeRegistry.getNativeType(typeId);    JSType    return    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  not  a  statement	47	None	replace
374	[BUG]  [BUGGY]  return  typeId.getNativeType(this.typeRegistry).restrictByTrueTypeOfResultVisitor();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId.getNativeType(this.typeRegistry).restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId.getNativeType(this.typeRegistry).restrictByTrueTypeOfResultVisitor();	  return    this.typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
375	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(this.typeId).restrictByTrueTypeOfResultVisitor();  [CE]  cannot  find  symbol  typeId  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(this.typeId).restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(this.typeId).restrictByTrueTypeOfResultVisitor();	  return    this.typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol  typeId	155	None	replace
376	[BUG]  [BUGGY]  return  _typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [CE]  cannot  find  symbol  _typeRegistry  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  _typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  _typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();	  return    this.typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol  _typeRegistry	155	None	replace
377	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId),  this.restrictByTrueTypeOfResultVisitor();  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId),  this.restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId),  this.restrictByTrueTypeOfResultVisitor();	  return    this.typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  ';'  expected	155	None	replace
378	[BUG]  [BUGGY]  return  types.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [CE]  cannot  find  symbol  types  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  types.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  types.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();	  return    this.typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol  types	155	None	replace
379	[BUG]  [BUGGY]  return  _convention.getNativeType(typeId).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  _convention  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  _convention.getNativeType(typeId).restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  _convention.getNativeType(typeId).restrictByUndefinedVisitor();	  return    typeregistry.getNativeType(typeId).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol  _convention	148	None	replace
380	[BUG]  [BUGGY]  return  getNativeType(typeId).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  getNativeType(typeId).restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  getNativeType(typeId).restrictByUndefinedVisitor();	  return    typeregistry.getNativeType(typeId).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol	148	None	replace
381	[BUG]  [BUGGY]  return  this.convention.getNativeType(typeId).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.convention.getNativeType(typeId).restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.convention.getNativeType(typeId).restrictByUndefinedVisitor();	  return    typeregistry.getNativeType(typeId).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol	148	None	replace
382	[BUG]  [BUGGY]  return  owner.getNativeType(typeId).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  owner  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  owner.getNativeType(typeId).restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  owner.getNativeType(typeId).restrictByUndefinedVisitor();	  return    typeregistry.getNativeType(typeId).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol  owner	148	None	replace
383	[BUG]  [BUGGY]  return  typeId  ==  null?  getNativeType(typeId):  null;  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]    NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  getNativeType(typeId):  null;  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId    ==    null?    getNativeType(typeId):    null;    JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	180	None	add
384	[BUG]  [BUGGY]  return  typeId  ==  null?  getNativeType(typeId):  null;  JSTypeNative  typeId  =  getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]      NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  getNativeType(typeId):  null;  JSTypeNative  typeId  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId    ==    null?    getNativeType(typeId):    null;    JSTypeNative  typeId  =  getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	180	None	add
385	[BUG]  [BUGGY]  return  typeId  ==  null?  getNativeType(typeId):  null;  typeId  ==  null?  getNativeType(typeId):  null;  [CE]  not  a  statement  [FE]        NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  getNativeType(typeId):  null;  typeId  ==  null?  getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId    ==    null?    getNativeType(typeId):    null;    typeId  ==  null?  getNativeType(typeId):  null;	  	non-compiled	[CE]  not  a  statement	180	None	add
386	[BUG]  [BUGGY]  return  typeId  ==  null?  getNativeType(typeId):  null;  JSType  typeId  =  typeRegistry.getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]          NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  getNativeType(typeId):  null;  JSType  typeId  =  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId    ==    null?    getNativeType(typeId):    null;    JSType  typeId  =  typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	180	None	add
387	[BUG]  [BUGGY]  return  typeId  ==  null?  getNativeType(typeId):  null;  JSType  typeId  =  getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]            NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  getNativeType(typeId):  null;  JSType  typeId  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId    ==    null?    getNativeType(typeId):    null;    JSType  typeId  =  getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	180	None	add
388	[BUG]  [BUGGY]  return  typeId  ==  null?  getNativeType(typeId):  null;  return  typeId  ==  null?  getNativeType(typeId):  null;  [CE]  unreachable  statement  [FE]              NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  getNativeType(typeId):  null;  return  typeId  ==  null?  getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId    ==    null?    getNativeType(typeId):    null;    return  typeId  ==  null?  getNativeType(typeId):  null;	  	non-compiled	[CE]  unreachable  statement	180	None	add
389	[BUG]  [BUGGY]  return  typeId  ==  null?  getNativeType(typeId):  null;  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  getNativeType(typeId):  null;  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId    ==    null?    getNativeType(typeId):    null;    JSTypeNative  typeId  =  typeRegistry.getNativeType(null);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	180	None	add
390	[BUG]  [BUGGY]  return(typeId!=  null  &&  this.typeRegistry.getNativeType(typeId)  ==  typeId);  [CE]  incomparable  types:  JSType  and  JSTypeNative  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId!=  null  &&  this.typeRegistry.getNativeType(typeId)  ==  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId!=  null  &&  this.typeRegistry.getNativeType(typeId)  ==  typeId);	  return(this.typeRegistry!=    null    &&    this.typeRegistry.getNativeType(typeId)    ==    typeId);    	non-compiled	[CE]  incomparable  types:  JSType  and  JSTypeNative	175	None	replace
391	[BUG]  [BUGGY]  return(typeId  ==  null  &&  this.typeRegistry.getNativeType(typeId)  ==  typeId);  [CE]  incomparable  types:  JSType  and  JSTypeNative  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null  &&  this.typeRegistry.getNativeType(typeId)  ==  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId  ==  null  &&  this.typeRegistry.getNativeType(typeId)  ==  typeId);	  return(this.typeRegistry!=    null    &&    this.typeRegistry.getNativeType(typeId)    ==    typeId);    	non-compiled	[CE]  incomparable  types:  JSType  and  JSTypeNative	175	None	replace
392	[BUG]  [BUGGY]  return(this.typeRegistry!=  null  ||  this.typeRegistry.getNativeType(typeId)  ==  typeId);  [CE]  incomparable  types:  JSType  and  JSTypeNative  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry!=  null  ||  this.typeRegistry.getNativeType(typeId)  ==  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry!=  null  ||  this.typeRegistry.getNativeType(typeId)  ==  typeId);	  return(this.typeRegistry!=    null    &&    this.typeRegistry.getNativeType(typeId)    ==    typeId);    	non-compiled	[CE]  incomparable  types:  JSType  and  JSTypeNative	175	None	replace
393	[BUG]  [BUGGY]  return(this.typeRegistry!=  null  &&  this.typeRegistry.getNativeType(typeId)  ==  getNativeType(typeId));  [CE]  incompatible  types  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry!=  null  &&  this.typeRegistry.getNativeType(typeId)  ==  getNativeType(typeId));  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry!=  null  &&  this.typeRegistry.getNativeType(typeId)  ==  getNativeType(typeId));	  return(this.typeRegistry!=    null    &&    this.typeRegistry.getNativeType(typeId)    ==    typeId);    	non-compiled	[CE]  incompatible  types	175	None	replace
394	[BUG]  [BUGGY]  return(this.typeRegistry  ==  null  &&  this.typeRegistry.getNativeType(typeId)  ==  typeId);  [CE]  incomparable  types:  JSType  and  JSTypeNative  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry  ==  null  &&  this.typeRegistry.getNativeType(typeId)  ==  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry  ==  null  &&  this.typeRegistry.getNativeType(typeId)  ==  typeId);	  return(this.typeRegistry!=    null    &&    this.typeRegistry.getNativeType(typeId)    ==    typeId);    	non-compiled	[CE]  incomparable  types:  JSType  and  JSTypeNative	175	None	replace
395	[BUG]  [BUGGY]  return(this.typeRegistry!=  null  &&  this.typeRegistry.getNativeType(typeId)  ==  0);  [CE]  incomparable  types:  JSType  and  int  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry!=  null  &&  this.typeRegistry.getNativeType(typeId)  ==  0);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry!=  null  &&  this.typeRegistry.getNativeType(typeId)  ==  0);	  return(this.typeRegistry!=    null    &&    this.typeRegistry.getNativeType(typeId)    ==    typeId);    	non-compiled	[CE]  incomparable  types:  JSType  and  int	175	None	replace
396	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  JSType  type  =  getNativeType(typeId);  if(type!=  null)  {  return  this.typeRegistry.getN  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  JSType  type  =  getNativeType(typeId);  if(type!=  null)  {  return  this.typeRegistry.getN  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  JSType  type  =  getNativeType(typeId);  if(type!=  null)  {  return  this.typeRegistry.getN	  return    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    JSType    type    =    getNativeType(typeId);    if(type!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  ';'  expected	116	None	replace
397	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(new  ObjectTypeId(typeId),  qualifiedName);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(new  ObjectTypeId(typeId),  qualifiedName);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(new  ObjectTypeId(typeId),  qualifiedName);	  return    typeRegistry.getNativeType(new    ObjectTypeId(typeId));    	non-compiled	[CE]  cannot  find  symbol	188	None	replace
398	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(new  ObjectTypeId(typeId),  value);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(new  ObjectTypeId(typeId),  value);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(new  ObjectTypeId(typeId),  value);	  return    typeRegistry.getNativeType(new    ObjectTypeId(typeId));    	non-compiled	[CE]  cannot  find  symbol	188	None	replace
399	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(new  ObjectTypeId(typeId,  value));  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(new  ObjectTypeId(typeId,  value));  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(new  ObjectTypeId(typeId,  value));	  return    typeRegistry.getNativeType(new    ObjectTypeId(typeId));    	non-compiled	[CE]  cannot  find  symbol	188	None	replace
400	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(new  ObjectTypeId(typeId),  this);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(new  ObjectTypeId(typeId),  this);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(new  ObjectTypeId(typeId),  this);	  return    typeRegistry.getNativeType(new    ObjectTypeId(typeId));    	non-compiled	[CE]  cannot  find  symbol	188	None	replace
401	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(new  ObjectTypeId(typeId),  typeId);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(new  ObjectTypeId(typeId),  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(new  ObjectTypeId(typeId),  typeId);	  return    typeRegistry.getNativeType(new    ObjectTypeId(typeId));    	non-compiled	[CE]  cannot  find  symbol	188	None	replace
402	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(new  ObjectTypeId(typeId),  null);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(new  ObjectTypeId(typeId),  null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(new  ObjectTypeId(typeId),  null);	  return    typeRegistry.getNativeType(new    ObjectTypeId(typeId));    	non-compiled	[CE]  cannot  find  symbol	188	None	replace
403	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(value)||  typeRegistry.getNativeType(typeId);  [CE]  cannot  find  symbol  value  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(value)||  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(value)||  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(qualifiedName)||    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  value	66	None	replace
404	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(id)||  typeRegistry.getNativeType(typeId);  [CE]  cannot  find  symbol  id  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(id)||  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(id)||  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(qualifiedName)||    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  id	66	None	replace
405	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(key)||  typeRegistry.getNativeType(typeId);  [CE]  cannot  find  symbol  key  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(key)||  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(key)||  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(qualifiedName)||    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  key	66	None	replace
406	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(name)||  typeRegistry.getNativeType(typeId);  [CE]  cannot  find  symbol  name  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(name)||  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(name)||  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(qualifiedName)||    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  name	66	None	replace
407	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(null)||  typeRegistry.getNativeType(typeId);  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(null)||  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(null)||  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(qualifiedName)||    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	66	None	replace
408	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(size)||  typeRegistry.getNativeType(typeId);  [CE]  cannot  find  symbol  size  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(size)||  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(size)||  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(qualifiedName)||    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  size	66	None	replace
409	[BUG]  [BUGGY]  JSType  typeId  =  typeRegistry.getNativeType(null);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]            NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  typeId  =  typeRegistry.getNativeType(null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  typeId  =  typeRegistry.getNativeType(null);	  return    typeRegistry.getNativeType(null);    JSType    typeId    =    typeRegistry.getNativeType(null);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	167	None	replace
410	[BUG]  [BUGGY]  JSType  typeId  =  typeRegistry.getNativeType(null,  typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]              NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  typeId  =  typeRegistry.getNativeType(null,  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  typeId  =  typeRegistry.getNativeType(null,  typeId);	  return    typeRegistry.getNativeType(null);    JSType    typeId    =    typeRegistry.getNativeType(null);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	167	None	replace
411	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId!=  null?  getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return  typeId!=  null?  getNativeType(typeId):  null;	  return    typeId    ==    null?    getNativeType(typeId):    null;    	compilable	  [FE]  StackOverflowError  	181	28	replace
412	[BUG]  [BUGGY]  return  typeId!=  null?  getNativeType(typeId):  null;  [FE]  StackOverflowError  [FE]    NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId!=  null?  getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId!=  null?  getNativeType(typeId):  null;	  return    typeId    ==    null?    getNativeType(typeId):    null;    	compilable	  [FE]  StackOverflowError  	181	28	replace
413	[BUG]  [BUGGY]  return  this.typeId  ==  null?  getNativeType(typeId):  null;  [CE]  cannot  find  symbol  typeId  [FE]      NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeId  ==  null?  getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeId  ==  null?  getNativeType(typeId):  null;	  return    typeId    ==    null?    getNativeType(typeId):    null;    	non-compiled	[CE]  cannot  find  symbol  typeId	181	None	replace
414	[BUG]  [BUGGY]  return  typeId  ==  null?  getNativeType(typeId):  Collections.emptyList();  [CE]  cannot  find  symbol  Collections  [FE]        NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  getNativeType(typeId):  Collections.emptyList();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId  ==  null?  getNativeType(typeId):  Collections.emptyList();	  return    typeId    ==    null?    getNativeType(typeId):    null;    	non-compiled	[CE]  cannot  find  symbol  Collections	181	None	replace
415	[BUG]  [BUGGY]  return  typeId  ==  null?  getNativeType(typeId):  this;  [CE]  incompatible  types  [FE]          NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  getNativeType(typeId):  this;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId  ==  null?  getNativeType(typeId):  this;	  return    typeId    ==    null?    getNativeType(typeId):    null;    	non-compiled	[CE]  incompatible  types	181	None	replace
416	[BUG]  [BUGGY]  return  typeId  ==  null?  getNativeType(typeId):  NONE;  [CE]  cannot  find  symbol  NONE  [FE]            NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  getNativeType(typeId):  NONE;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId  ==  null?  getNativeType(typeId):  NONE;	  return    typeId    ==    null?    getNativeType(typeId):    null;    	non-compiled	[CE]  cannot  find  symbol  NONE	181	None	replace
417	[BUG]  [BUGGY]  return  typeId.getNativeType(typeId).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId.getNativeType(typeId).restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId.getNativeType(typeId).restrictByUndefinedVisitor();	  return    typesRegistry.getNativeType(typeId).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
418	[BUG]  [BUGGY]  return  convention.getNativeType(typeId).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  convention.getNativeType(typeId).restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  convention.getNativeType(typeId).restrictByUndefinedVisitor();	  return    typesRegistry.getNativeType(typeId).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
419	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry  ==  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return  typeRegistry  ==  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry!=    null?    typeRegistry.getNativeType(typeId):    null;    	compilable	  [FE]  NullPointerException  	152	26	replace
420	[BUG]  [BUGGY]  return  typeRegistry  ==  null?  typeRegistry.getNativeType(typeId):  null;  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry  ==  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry  ==  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry!=    null?    typeRegistry.getNativeType(typeId):    null;    	compilable	  [FE]  NullPointerException  	152	26	replace
421	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return  this.typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry!=    null?    typeRegistry.getNativeType(typeId):    null;    	compilable	  [FE]  AssertionFailedError  	152	2	replace
422	[BUG]  [BUGGY]  return  this.typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry!=    null?    typeRegistry.getNativeType(typeId):    null;    	compilable	  [FE]  AssertionFailedError  	152	2	replace
423	[BUG]  [BUGGY]  return  typeRegistry  >=  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry  >=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry  >=  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	152	None	replace
424	[BUG]  [BUGGY]  return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  new  JSType(typeId);  [CE]  JSType  is  abstract;  cannot  be  instantiated  [FE]          AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  new  JSType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  new  JSType(typeId);	  return    typeRegistry!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  JSType  is  abstract;  cannot  be  instantiated	152	None	replace
425	[BUG]  [BUGGY]  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  resultEqualsValue  =  resultEqualsValue;  }  [CE]  incompatible  types  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  resultEqualsValue  =  resultEqualsValue;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  resultEqualsValue  =  resultEqualsValue;  }	  if(typeId    ==    null)    {    JSTypeNative    result    =    typeRegistry.getNativeType(typeId);    if(resultEqualsValue    ==    null)    {    resultEqualsValue    =    resultEqualsValue;    }    	non-compiled	[CE]  incompatible  types	16	None	replace
426	[BUG]  [BUGGY]  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  resultEqualsValue  =  resultEqualsValue;  }  [CE]  incompatible  types  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  resultEqualsValue  =  resultEqualsValue;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  resultEqualsValue  =  resultEqualsValue;  }	  if(typeId    ==    null)    {    JSTypeNative    result    =    typeRegistry.getNativeType(typeId);    if(resultEqualsValue    ==    null)    {    resultEqualsValue    =    resultEqualsValue;    }    	non-compiled	[CE]  incompatible  types	16	None	replace
427	[BUG]  [BUGGY]  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  resultEqualsValue  =  resultEqualsValue;  }  [CE]  cannot  find  symbol  result  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  resultEqualsValue  =  resultEqualsValue;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  resultEqualsValue  =  resultEqualsValue;  }	  if(typeId    ==    null)    {    JSTypeNative    result    =    typeRegistry.getNativeType(typeId);    if(resultEqualsValue    ==    null)    {    resultEqualsValue    =    resultEqualsValue;    }    	non-compiled	[CE]  cannot  find  symbol  result	16	None	replace
428	[BUG]  [BUGGY]  if(typeId  ==  null)  {  JSTypeNative  result  =  getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  resultEqualsValue  =  resultEqualsValue;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  JSTypeNative  result  =  getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  resultEqualsValue  =  resultEqualsValue;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  JSTypeNative  result  =  getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  resultEqualsValue  =  resultEqualsValue;  }	  if(typeId    ==    null)    {    JSTypeNative    result    =    typeRegistry.getNativeType(typeId);    if(resultEqualsValue    ==    null)    {    resultEqualsValue    =    resultEqualsValue;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
429	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(qualifiedName)||  typeRegistry.getInstanceType(typeId);  [CE]  cannot  find  symbol  qualifiedName  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(qualifiedName)||  typeRegistry.getInstanceType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(qualifiedName)||  typeRegistry.getInstanceType(typeId);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getInstanceType(typeId);    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	143	None	replace
430	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  typeRegistry.getInstanceType(typeId);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  typeRegistry.getInstanceType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)&&  typeRegistry.getInstanceType(typeId);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getInstanceType(typeId);    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
431	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  registry.getInstanceType(typeId);  [CE]  cannot  find  symbol  registry  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  registry.getInstanceType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  registry.getInstanceType(typeId);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getInstanceType(typeId);    	non-compiled	[CE]  cannot  find  symbol  registry	143	None	replace
432	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)||  typeRegistry.getInstanceType(typeId);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)||  typeRegistry.getInstanceType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId)||  typeRegistry.getInstanceType(typeId);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getInstanceType(typeId);    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
433	[BUG]  [BUGGY]  return  registry.getNativeType(typeId)||  typeRegistry.getInstanceType(typeId);  [CE]  cannot  find  symbol  registry  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  registry.getNativeType(typeId)||  typeRegistry.getInstanceType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  registry.getNativeType(typeId)||  typeRegistry.getInstanceType(typeId);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getInstanceType(typeId);    	non-compiled	[CE]  cannot  find  symbol  registry	143	None	replace
434	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  _convention.getInstanceType(typeId);  [CE]  cannot  find  symbol  _convention  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  _convention.getInstanceType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  _convention.getInstanceType(typeId);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getInstanceType(typeId);    	non-compiled	[CE]  cannot  find  symbol  _convention	143	None	replace
435	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  _resultEqualsValue);  [CE]  cannot  find  symbol  _resultEqualsValue  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  _resultEqualsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this,  _resultEqualsValue);	  return    typeRegistry.getNativeType(typeId,    this,    value);    	non-compiled	[CE]  cannot  find  symbol  _resultEqualsValue	91	None	replace
436	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  _restrictNullVisitor);  [CE]  cannot  find  symbol  _restrictNullVisitor  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  _restrictNullVisitor);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this,  _restrictNullVisitor);	  return    typeRegistry.getNativeType(typeId,    this,    value);    	non-compiled	[CE]  cannot  find  symbol  _restrictNullVisitor	91	None	replace
437	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)/  4;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)/  4;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)/  4;	  return    typeRegistry.getNativeType(typeId)+    4;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	79	None	replace
438	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)-  4;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)-  4;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)-  4;	  return    typeRegistry.getNativeType(typeId)+    4;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	79	None	replace
439	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(TYPE_NAME).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  TYPE_NAME  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(TYPE_NAME).restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(TYPE_NAME).restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(qualifiedName).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol  TYPE_NAME	61	None	replace
440	[BUG]  [BUGGY]  Return  typeRegistry.getNativeType(typeId).restrictByUndefinedVisitor();  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  Return  typeRegistry.getNativeType(typeId).restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	Return  typeRegistry.getNativeType(typeId).restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(qualifiedName).restrictByUndefinedVisitor();    	non-compiled	[CE]  ';'  expected	61	None	replace
441	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(TYPE_IGNORE).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  TYPE_IGNORE  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(TYPE_IGNORE).restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(TYPE_IGNORE).restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(qualifiedName).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol  TYPE_IGNORE	61	None	replace
442	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(TYPE_ID).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  TYPE_ID  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(TYPE_ID).restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(TYPE_ID).restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(qualifiedName).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol  TYPE_ID	61	None	replace
443	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(id).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  id  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(id).restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(id).restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(qualifiedName).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol  id	61	None	replace
444	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  return  type;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  return  type;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  return  type;  }	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    if(typeId!=    null)    {    JSType    type    =    typeRegistry.getNativeType(typeId);    if(type!=    null)    {    return    type;    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
445	[BUG]  [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  return  type;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  return  type;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  return  type;  }	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    if(typeId!=    null)    {    JSType    type    =    typeRegistry.getNativeType(typeId);    if(type!=    null)    {    return    type;    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
446	[BUG]  [BUGGY]  JSType  type  =  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  missing  return  statement  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  type  =  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  type  =  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    if(typeId!=    null)    {    JSType    type    =    typeRegistry.getNativeType(typeId);    if(type!=    null)    {    return    type;    }    	non-compiled	[CE]  missing  return  statement	110	None	replace
447	[BUG]  [BUGGY]  JSType  type  =  typeRegistry.getNativeType(typeId);  [CE]  missing  return  statement  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  type  =  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  type  =  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    if(typeId!=    null)    {    JSType    type    =    typeRegistry.getNativeType(typeId);    if(type!=    null)    {    return    type;    }    	non-compiled	[CE]  missing  return  statement	110	None	replace
448	[BUG]  [BUGGY]  return  getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  getNativeType(typeId).restrictByTrueTypeOfResultVisitor();	  return    typesRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
449	[BUG]  [BUGGY]  return  _convention.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [CE]  cannot  find  symbol  _convention  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  _convention.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  _convention.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();	  return    typesRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol  _convention	154	None	replace
450	[BUG]  [BUGGY]  return  this.convention.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.convention.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.convention.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();	  return    typesRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
451	[BUG]  [BUGGY]  return  typeId.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();	  return    typesRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
452	[BUG]  [BUGGY]  return  convention.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  convention.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  convention.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();	  return    typesRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
453	[BUG]  [BUGGY]  JSTypeNative  typeId  =  getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                      NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSTypeNative  typeId  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSTypeNative  typeId  =  getNativeType(typeId);	  return    typeRegistry.getNativeType(null);    JSTypeNative    typeId    =    getNativeType(null);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	8	None	replace
454	[BUG]  [BUGGY]  JSTypeNative  typeId  =  getNativeType(null);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                        NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSTypeNative  typeId  =  getNativeType(null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSTypeNative  typeId  =  getNativeType(null);	  return    typeRegistry.getNativeType(null);    JSTypeNative    typeId    =    getNativeType(null);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	8	None	replace
455	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  JSTypeNative  typeId  =  getNativeType(null);  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                          NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  JSTypeNative  typeId  =  getNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  JSTypeNative  typeId  =  getNativeType(null);  }	  return    typeRegistry.getNativeType(null);    JSTypeNative    typeId    =    getNativeType(null);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	8	None	replace
456	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  JSTypeNative  typeId  =  getNativeType(null,  typeId);  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                            NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  JSTypeNative  typeId  =  getNativeType(null,  typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  JSTypeNative  typeId  =  getNativeType(null,  typeId);  }	  return    typeRegistry.getNativeType(null);    JSTypeNative    typeId    =    getNativeType(null);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	8	None	replace
457	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  typeId,  resultEqualsValue);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  typeId,  resultEqualsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  typeId,  resultEqualsValue);	  return    typeRegistry.getNativeType(typeId,    typeId);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	99	None	replace
458	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  typeId,  value);  [CE]  cannot  find  symbol  value  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  typeId,  value);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  typeId,  value);	  return    typeRegistry.getNativeType(typeId,    typeId);    	non-compiled	[CE]  cannot  find  symbol  value	99	None	replace
459	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  typeId,  result);  [CE]  cannot  find  symbol  result  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  typeId,  result);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  typeId,  result);	  return    typeRegistry.getNativeType(typeId,    typeId);    	non-compiled	[CE]  cannot  find  symbol  result	99	None	replace
460	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  typeId,  state);  [CE]  cannot  find  symbol  state  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  typeId,  state);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  typeId,  state);	  return    typeRegistry.getNativeType(typeId,    typeId);    	non-compiled	[CE]  cannot  find  symbol  state	99	None	replace
461	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null? "null "  :  typeRegistry.getNativeType(typeId);  [CE]  incompatible  types  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null? "null "  :  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)  ==  null? "null "  :  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)    [Delete]    null;    	non-compiled	[CE]  incompatible  types	132	None	replace
462	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null? "null "  :  typeRegistry.getNativeType(typeId);  [CE]  incompatible  types  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null? "null "  :  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)!=  null? "null "  :  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)    [Delete]    null;    	non-compiled	[CE]  incompatible  types	132	None	replace
463	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(name).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  name  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(name).restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(name).restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(nameId).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol  name	123	None	replace
464	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(key).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  key  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(key).restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(key).restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(nameId).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol  key	123	None	replace
465	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(clazz).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  clazz  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(clazz).restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(clazz).restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(nameId).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol  clazz	123	None	replace
466	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)&&  typeRegistry.getNativeType(typeId);  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)&&  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId)&&  typeRegistry.getNativeType(typeId);	  return    this.typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	71	None	replace
467	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(this.typeId);  [CE]  cannot  find  symbol  typeId  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(this.typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(this.typeId);	  return    this.typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  typeId	71	None	replace
468	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(qualifiedName)||  typeRegistry.getNativeType(typeId);  [CE]  cannot  find  symbol  qualifiedName  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(qualifiedName)||  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(qualifiedName)||  typeRegistry.getNativeType(typeId);	  return    this.typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	71	None	replace
469	[BUG]  [BUGGY]  return  typeRegistry.getType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  no  suitable  method  found  for  getType(JSTypeNative)  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  no  suitable  method  found  for  getType(JSTypeNative)	38	None	replace
470	[BUG]  [BUGGY]  return  typeRegistry.getType(typeId),  typeId!=  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getType(typeId),  typeId!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getType(typeId),  typeId!=  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  ';'  expected	38	None	replace
471	[BUG]  [BUGGY]  return  typeRegistry.getType(typeId,  value)!=  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  cannot  find  symbol  value  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getType(typeId,  value)!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getType(typeId,  value)!=  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  cannot  find  symbol  value	38	None	replace
472	[BUG]  [BUGGY]  JSType  type  =  typeId.getNativeType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  type  =  typeId.getNativeType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  type  =  typeId.getNativeType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSType    type    =    typeId.getNativeType();    if(type!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
473	[BUG]  [BUGGY]  JSType  type  =  typeId.getNativeType();  if(type  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  type  =  typeId.getNativeType();  if(type  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  type  =  typeId.getNativeType();  if(type  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSType    type    =    typeId.getNativeType();    if(type!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
474	[BUG]  [BUGGY]  JSType  type  =  this.typeRegistry.getNativeType(typeId);  [CE]  missing  return  statement  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  type  =  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  type  =  this.typeRegistry.getNativeType(typeId);	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSType    type    =    typeId.getNativeType();    if(type!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  missing  return  statement	113	None	replace
475	[BUG]  [BUGGY]  JSType  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType    return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  not  a  statement	23	None	replace
476	[BUG]  [BUGGY]  JSType  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType    return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  not  a  statement	23	None	replace
477	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  typeId,  resultEqualsValue);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  typeId,  resultEqualsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  typeId,  resultEqualsValue);	  return    this.typeRegistry.getNativeType(typeId,    typeId);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	55	None	replace
478	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  typeId,  result);  [CE]  cannot  find  symbol  result  [FE]          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  typeId,  result);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  typeId,  result);	  return    this.typeRegistry.getNativeType(typeId,    typeId);    	non-compiled	[CE]  cannot  find  symbol  result	55	None	replace
479	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  typeId,  value);  [CE]  cannot  find  symbol  value  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  typeId,  value);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  typeId,  value);	  return    this.typeRegistry.getNativeType(typeId,    typeId);    	non-compiled	[CE]  cannot  find  symbol  value	55	None	replace
480	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.typeId);  [CE]  cannot  find  symbol  typeId  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this.typeId);	  return    this.typeRegistry.getNativeType(typeId,    typeId);    	non-compiled	[CE]  cannot  find  symbol  typeId	55	None	replace
481	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  typeId,  state);  [CE]  cannot  find  symbol  state  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  typeId,  state);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  typeId,  state);	  return    this.typeRegistry.getNativeType(typeId,    typeId);    	non-compiled	[CE]  cannot  find  symbol  state	55	None	replace
482	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  resultEqualsValue);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  resultEqualsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  resultEqualsValue);	  return    this.typeRegistry.getNativeType(typeId,    typeId);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	55	None	replace
483	[BUG]  [BUGGY]  JSType  result  =  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  missing  return  statement  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  result  =  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  result  =  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType    result    =    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  missing  return  statement	26	None	replace
484	[BUG]  [BUGGY]  JSType  result  =  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  missing  return  statement  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  result  =  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  result  =  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType    result    =    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  missing  return  statement	26	None	replace
485	[BUG]  [BUGGY]  JSType  result  =  typeRegistry.getNativeType(typeId)  >>  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  result  =  typeRegistry.getNativeType(typeId)  >>  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  result  =  typeRegistry.getNativeType(typeId)  >>  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType    result    =    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	26	None	replace
486	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  this.qualifiedName);  [CE]  cannot  find  symbol  qualifiedName  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  this.qualifiedName);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  this.qualifiedName);	  return    this.typeRegistry.getNativeType(typeId,    this.value);    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	58	None	replace
487	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  this.value,  this.restrictNullVisitor);  [CE]  cannot  find  symbol  value  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  this.value,  this.restrictNullVisitor);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  this.value,  this.restrictNullVisitor);	  return    this.typeRegistry.getNativeType(typeId,    this.value);    	non-compiled	[CE]  cannot  find  symbol  value	58	None	replace
488	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  this.value,  resultEqualsValue);  [CE]  cannot  find  symbol  value  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  this.value,  resultEqualsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  this.value,  resultEqualsValue);	  return    this.typeRegistry.getNativeType(typeId,    this.value);    	non-compiled	[CE]  cannot  find  symbol  value	58	None	replace
489	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId)!=    null?    this.typeRegistry.getNativeType(typeId):    null;    JSType  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;	  	non-compiled	[CE]  not  a  statement	125	None	add
490	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId)!=    null?    this.typeRegistry.getNativeType(typeId):    null;    return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;	  	non-compiled	[CE]  unreachable  statement	125	None	add
491	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  getNativeType(JSTypeNative  typeId)  {  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  getNativeType(JSTypeNative  typeId)  {  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId)!=    null?    this.typeRegistry.getNativeType(typeId):    null;    JSType  getNativeType(JSTypeNative  typeId)  {  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;	  	non-compiled	[CE]  ';'  expected	125	None	add
492	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  getNativeType(JSTypeNative  typeId)  {  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  getNativeType(JSTypeNative  typeId)  {  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId)!=    null?    this.typeRegistry.getNativeType(typeId):    null;    JSType  getNativeType(JSTypeNative  typeId)  {  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  }	  	non-compiled	[CE]  ';'  expected	125	None	add
493	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]            AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId)!=    null?    this.typeRegistry.getNativeType(typeId):    null;    JSType  typeId  =  this.typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	125	None	add
494	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  return  this.typeRegistry.getNativeType(typeId)  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  return  this.typeRegistry.getNativeType(typeId)  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId)!=    null?    this.typeRegistry.getNativeType(typeId):    null;    JSType  return  this.typeRegistry.getNativeType(typeId)  ==  null?  this.typeRegistry.getNativeType(typeId):  null;	  	non-compiled	[CE]  not  a  statement	125	None	add
495	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId)!=    null?    this.typeRegistry.getNativeType(typeId):    null;    JSType  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;	  	non-compiled	[CE]  not  a  statement	125	None	add
496	[BUG]  [BUGGY]  return  registry.getNativeType(typeId)?  typeRegistry.getNativeType(typeId):  typeRegistry.getNativeType(typeId);  [CE]  cannot  find  symbol  registry  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  registry.getNativeType(typeId)?  typeRegistry.getNativeType(typeId):  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  registry.getNativeType(typeId)?  typeRegistry.getNativeType(typeId):  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)?    typeRegistry.getNativeType(typeId):    registry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  registry	162	None	replace
497	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)?  registry.getNativeType(typeId):  typeRegistry.getNativeType(typeId);  [CE]  incompatible  types  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)?  registry.getNativeType(typeId):  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)?  registry.getNativeType(typeId):  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)?    typeRegistry.getNativeType(typeId):    registry.getNativeType(typeId);    	non-compiled	[CE]  incompatible  types	162	None	replace
498	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(qualifiedName)?  typeRegistry.getNativeType(typeId):  registry.getNativeType(typeId);  [CE]  cannot  find  symbol  qualifiedName  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(qualifiedName)?  typeRegistry.getNativeType(typeId):  registry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(qualifiedName)?  typeRegistry.getNativeType(typeId):  registry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)?    typeRegistry.getNativeType(typeId):    registry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	162	None	replace
499	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  registry.getNativeType(typeId):  typeRegistry.getNativeType(typeId);  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  registry.getNativeType(typeId):  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  registry.getNativeType(typeId):  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)?    typeRegistry.getNativeType(typeId):    registry.getNativeType(typeId);    	non-compiled	[CE]  ';'  expected	162	None	replace
500	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  this  :  typeRegistry.getNativeType(typeId);  [CE]  incompatible  types  [FE]        NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  this  :  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)  ==  null?  this  :  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)!=    null?    this    :    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  incompatible  types	156	None	replace
501	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  null  :  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return  this.typeRegistry.getNativeType(typeId)!=  null?  null  :  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)!=    null?    this    :    typeRegistry.getNativeType(typeId);    	compilable	  [FE]  NullPointerException  	156	26	replace
502	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  null  :  typeRegistry.getNativeType(typeId);  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  null  :  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId)!=  null?  null  :  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)!=    null?    this    :    typeRegistry.getNativeType(typeId);    	compilable	  [FE]  NullPointerException  	156	26	replace
503	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(qualifiedName)!=  null?  this  :  typeRegistry.getNativeType(typeId);  [CE]  cannot  find  symbol  qualifiedName  [FE]            NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(qualifiedName)!=  null?  this  :  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(qualifiedName)!=  null?  this  :  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)!=    null?    this    :    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	156	None	replace
504	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  super  :  typeRegistry.getNativeType(typeId);  [CE]  '.'  expected  [FE]              NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  super  :  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)!=  null?  super  :  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)!=    null?    this    :    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  '.'  expected	156	None	replace
505	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)/  2.0;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)/  2.0;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)/  2.0;	  return    typeRegistry.getNativeType(typeId)/    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	77	None	replace
506	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)/  3;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)/  3;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)/  3;	  return    typeRegistry.getNativeType(typeId)/    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	77	None	replace
507	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(qualifiedName)/  1;  [CE]  cannot  find  symbol  qualifiedName  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(qualifiedName)/  1;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(qualifiedName)/  1;	  return    typeRegistry.getNativeType(typeId)/    1;    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	77	None	replace
508	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)/  1;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)/  1;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId)/  1;	  return    typeRegistry.getNativeType(typeId)/    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	77	None	replace
509	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)  >=  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)  >=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)  >=  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    if(typeId!=    null)    {    return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    }    else    {    return    typeRegistry.getNativeType(typeId):    null;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	171	None	replace
510	[BUG]  [BUGGY]  Return  typeRegistry.getNativeType(typeId,  value);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  Return  typeRegistry.getNativeType(typeId,  value);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	Return  typeRegistry.getNativeType(typeId,  value);	  Return    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  ';'  expected	105	None	replace
511	[BUG]  [BUGGY]  return  this.restrictUndefinedVisitor.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.restrictUndefinedVisitor.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.restrictUndefinedVisitor.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();	  return    typeregistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
512	[BUG]  [BUGGY]  return  owner.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [CE]  cannot  find  symbol  owner  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  owner.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  owner.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();	  return    typeregistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol  owner	153	None	replace
513	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  typeId,  null);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  typeId,  null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  typeId,  null);	  return    this.typeRegistry.getNativeType(typeId,    null);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	57	None	replace
514	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  typeId,  null,  resultEqualsValue);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  typeId,  null,  resultEqualsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  typeId,  null,  resultEqualsValue);	  return    this.typeRegistry.getNativeType(typeId,    null);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	57	None	replace
515	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  null,  typeId);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  null,  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  null,  typeId);	  return    this.typeRegistry.getNativeType(typeId,    null);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	57	None	replace
516	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  value,  null);  [CE]  cannot  find  symbol  value  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  value,  null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  value,  null);	  return    this.typeRegistry.getNativeType(typeId,    null);    	non-compiled	[CE]  cannot  find  symbol  value	57	None	replace
517	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  typeId,  null,  result);  [CE]  cannot  find  symbol  result  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  typeId,  null,  result);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  typeId,  null,  result);	  return    this.typeRegistry.getNativeType(typeId,    null);    	non-compiled	[CE]  cannot  find  symbol  result	57	None	replace
518	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  null,  resultEqualsValue);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  null,  resultEqualsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  null,  resultEqualsValue);	  return    this.typeRegistry.getNativeType(typeId,    null);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	57	None	replace
519	[BUG]  [BUGGY]  resultEqualsValue  =  true;  [CE]  cannot  find  symbol  resultEqualsValue  [FE]            NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  true;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  true;	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null)    {    resultEqualsValue    =    true;    }    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	119	None	replace
520	[BUG]  [BUGGY]  resultEqualsValue  =  typeRegistry.getNativeType(null);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]              NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  typeRegistry.getNativeType(null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  typeRegistry.getNativeType(null);	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null)    {    resultEqualsValue    =    true;    }    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	119	None	replace
521	[BUG]  [BUGGY]  resultEqualsValue  =  typeRegistry.getNativeType(typeId);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null)    {    resultEqualsValue    =    true;    }    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	119	None	replace
522	[BUG]  [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  resultEqualsValue  =  true;  }  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                  NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  resultEqualsValue  =  true;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  resultEqualsValue  =  true;  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null)    {    resultEqualsValue    =    true;    }    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	119	None	replace
523	[BUG]  [BUGGY]  return  typeId  ==  null?  null  :  typeId.typeRegistry.instanceType();  [CE]  cannot  find  symbol  typeRegistry  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  null  :  typeId.typeRegistry.instanceType();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId  ==  null?  null  :  typeId.typeRegistry.instanceType();	  return    typeId    ==    null?    null    :    typeId.instanceType();    	non-compiled	[CE]  cannot  find  symbol  typeRegistry	183	None	replace
524	[BUG]  [BUGGY]  return  typeId!=  null?  null  :  typeId.instanceType();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId!=  null?  null  :  typeId.instanceType();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId!=  null?  null  :  typeId.instanceType();	  return    typeId    ==    null?    null    :    typeId.instanceType();    	non-compiled	[CE]  cannot  find  symbol	183	None	replace
525	[BUG]  [BUGGY]  final  JSTypeRegistry  typeRegistry  =  getNativeType(typeId);  [CE]  incompatible  types  [FE]              NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  final  JSTypeRegistry  typeRegistry  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	final  JSTypeRegistry  typeRegistry  =  getNativeType(typeId);	  return    typeRegistry.getNativeType(null);    JSTypeRegistry    typeRegistry    =    getNativeType(null);    	non-compiled	[CE]  incompatible  types	4	None	replace
526	[BUG]  [BUGGY]  null  typeRegistry  =  getNativeType(typeId);  [CE]  not  a  statement  [FE]                NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  null  typeRegistry  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	null  typeRegistry  =  getNativeType(typeId);	  return    typeRegistry.getNativeType(null);    JSTypeRegistry    typeRegistry    =    getNativeType(null);    	non-compiled	[CE]  not  a  statement	4	None	replace
527	[BUG]  [BUGGY]  JSTypeRegistry  typeRegistry  =  getNativeType(null);  [CE]  incompatible  types  [FE]                  NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSTypeRegistry  typeRegistry  =  getNativeType(null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSTypeRegistry  typeRegistry  =  getNativeType(null);	  return    typeRegistry.getNativeType(null);    JSTypeRegistry    typeRegistry    =    getNativeType(null);    	non-compiled	[CE]  incompatible  types	4	None	replace
528	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  outcome);  [CE]  cannot  find  symbol  outcome  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  outcome);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this,  outcome);	  return    typeRegistry.getNativeType(typeId,    this,    constraintEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  outcome	133	None	replace
529	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  outcomeEqualsValue);  [CE]  cannot  find  symbol  outcomeEqualsValue  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  outcomeEqualsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this,  outcomeEqualsValue);	  return    typeRegistry.getNativeType(typeId,    this,    constraintEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  outcomeEqualsValue	133	None	replace
530	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  resulted);  [CE]  cannot  find  symbol  resulted  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  resulted);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this,  resulted);	  return    typeRegistry.getNativeType(typeId,    this,    constraintEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  resulted	133	None	replace
531	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  outcomes);  [CE]  cannot  find  symbol  outcomes  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  outcomes);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this,  outcomes);	  return    typeRegistry.getNativeType(typeId,    this,    constraintEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  outcomes	133	None	replace
532	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  conn);  [CE]  cannot  find  symbol  conn  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  conn);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this,  conn);	  return    typeRegistry.getNativeType(typeId,    this,    state);    	non-compiled	[CE]  cannot  find  symbol  conn	92	None	replace
533	[BUG]  [BUGGY]  JSType  typeId  =  typeRegistry.getNativeType(null);  if(typeId  ==  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null);  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]          NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  typeId  =  typeRegistry.getNativeType(null);  if(typeId  ==  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  typeId  =  typeRegistry.getNativeType(null);  if(typeId  ==  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null);  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId    ==    null    ||    typeId.equals(typeId))    {    return    typeRegistry.getNativeType(null);    }    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	166	None	replace
534	[BUG]  [BUGGY]  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId  ==  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null);  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]            NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId  ==  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId  ==  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null);  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId    ==    null    ||    typeId.equals(typeId))    {    return    typeRegistry.getNativeType(null);    }    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	166	None	replace
535	[BUG]  [BUGGY]  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);	  return    this.typeRegistry.getNativeType(typeId);    JSTypeNative    typeId    =    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	49	None	replace
536	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    JSTypeNative    typeId    =    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	49	None	replace
537	[BUG]  [BUGGY]  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    JSTypeNative    typeId    =    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	49	None	replace
538	[BUG]  [BUGGY]  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  typeId  =  this.typeRegistry.getNativeType(typeId);  }  [CE]  incompatible  types  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  typeId  =  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  typeId  =  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    JSTypeNative    typeId    =    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  incompatible  types	49	None	replace
539	[BUG]  [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSType  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSType  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry    ==    null)?    null    :    this.typeRegistry.getNativeType(typeId);    JSType  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  not  a  statement	173	None	add
540	[BUG]  [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  (this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  (this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry    ==    null)?    null    :    this.typeRegistry.getNativeType(typeId);    (this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  not  a  statement	173	None	add
541	[BUG]  [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]        AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry    ==    null)?    null    :    this.typeRegistry.getNativeType(typeId);    JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	173	None	add
542	[BUG]  [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSTypeNative  typeId  =  getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]          AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSTypeNative  typeId  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry    ==    null)?    null    :    this.typeRegistry.getNativeType(typeId);    JSTypeNative  typeId  =  getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	173	None	add
543	[BUG]  [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]            AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry    ==    null)?    null    :    this.typeRegistry.getNativeType(typeId);    JSType  typeId  =  getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	173	None	add
544	[BUG]  [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSTypeRegistry  typeRegistry  =  getNativeType(typeId);  [CE]  incompatible  types  [FE]              AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSTypeRegistry  typeRegistry  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry    ==    null)?    null    :    this.typeRegistry.getNativeType(typeId);    JSTypeRegistry  typeRegistry  =  getNativeType(typeId);	  	non-compiled	[CE]  incompatible  types	173	None	add
545	[BUG]  [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSType  result  =  getNativeType(typeId);  [CE]  unreachable  statement  [FE]                AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSType  result  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry    ==    null)?    null    :    this.typeRegistry.getNativeType(typeId);    JSType  result  =  getNativeType(typeId);	  	non-compiled	[CE]  unreachable  statement	173	None	add
546	[BUG]  [BUGGY]  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  resultEqualsValue  =  resultEqualsValue;  }  [CE]  cannot  find  symbol  result  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  resultEqualsValue  =  resultEqualsValue;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  resultEqualsValue  =  resultEqualsValue;  }	  if(typeId    ==    null)    {    JSTypeNative    result    =    typeRegistry.getNativeType(typeId);    if(resultEqualsValue!=    null)    {    resultEqualsValue    =    resultEqualsValue;    }    	non-compiled	[CE]  cannot  find  symbol  result	17	None	replace
547	[BUG]  [BUGGY]  if(typeId  ==  null)  {  JSTypeNative  result  =  getNativeType(typeId);  if(resultEqualsValue!=  null)  {  resultEqualsValue  =  resultEqualsValue;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  JSTypeNative  result  =  getNativeType(typeId);  if(resultEqualsValue!=  null)  {  resultEqualsValue  =  resultEqualsValue;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  JSTypeNative  result  =  getNativeType(typeId);  if(resultEqualsValue!=  null)  {  resultEqualsValue  =  resultEqualsValue;  }	  if(typeId    ==    null)    {    JSTypeNative    result    =    typeRegistry.getNativeType(typeId);    if(resultEqualsValue!=    null)    {    resultEqualsValue    =    resultEqualsValue;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
548	[BUG]  [BUGGY]  resultEqualsValue  =  resultEqualsValue;  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  resultEqualsValue;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  resultEqualsValue;	  if(typeId    ==    null)    {    JSTypeNative    result    =    typeRegistry.getNativeType(typeId);    if(resultEqualsValue!=    null)    {    resultEqualsValue    =    resultEqualsValue;    }    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	17	None	replace
549	[BUG]  [BUGGY]  if(typeId  ==  null)  {  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  resultEqualsValue  =  resultEquals;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  resultEqualsValue  =  resultEquals;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  resultEqualsValue  =  resultEquals;  }	  if(typeId    ==    null)    {    JSTypeNative    result    =    typeRegistry.getNativeType(typeId);    if(resultEqualsValue!=    null)    {    resultEqualsValue    =    resultEqualsValue;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
550	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(calendar,  typeId);  [CE]  cannot  find  symbol  calendar  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(calendar,  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(calendar,  typeId);	  return    typeRegistry.getNativeType(value,    typeId);    	non-compiled	[CE]  cannot  find  symbol  calendar	101	None	replace
551	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  0);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  0);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  0);	  return    typeRegistry.getNativeType(typeId,    result);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	42	None	replace
552	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  this,  typeId);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  this,  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  this,  typeId);	  return    typeRegistry.getNativeType(typeId,    this,    qualifiedName);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	94	None	replace
553	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  values);  [CE]  cannot  find  symbol  values  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  values);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this,  values);	  return    typeRegistry.getNativeType(typeId,    this,    qualifiedName);    	non-compiled	[CE]  cannot  find  symbol  values	94	None	replace
554	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  null,  this);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  null,  this);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  null,  this);	  return    typeRegistry.getNativeType(typeId,    this,    qualifiedName);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	94	None	replace
555	[BUG]  [BUGGY]  resultEqualsValue  =  false;  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  false;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  false;	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null)    {    resultEqualsValue    =    false;    }    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	121	None	replace
556	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  values);  [CE]  cannot  find  symbol  values  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  values);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  values);	  return    typeRegistry.getNativeType(typeId,    qualifiedName);    	non-compiled	[CE]  cannot  find  symbol  values	41	None	replace
557	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  null,  null,  resultEqualsValue);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  null,  null,  resultEqualsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  null,  null,  resultEqualsValue);	  return    typeRegistry.getNativeType(typeId,    null,    null);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	163	None	replace
558	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  value,  null,  null);  [CE]  cannot  find  symbol  value  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  value,  null,  null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  value,  null,  null);	  return    typeRegistry.getNativeType(typeId,    null,    null);    	non-compiled	[CE]  cannot  find  symbol  value	163	None	replace
559	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  null,  null,  value);  [CE]  cannot  find  symbol  value  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  null,  null,  value);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  null,  null,  value);	  return    typeRegistry.getNativeType(typeId,    null,    null);    	non-compiled	[CE]  cannot  find  symbol  value	163	None	replace
560	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  null,  null,  result);  [CE]  cannot  find  symbol  result  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  null,  null,  result);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  null,  null,  result);	  return    typeRegistry.getNativeType(typeId,    null,    null);    	non-compiled	[CE]  cannot  find  symbol  result	163	None	replace
561	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  null,  null,  0);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  null,  null,  0);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  null,  null,  0);	  return    typeRegistry.getNativeType(typeId,    null,    null);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	163	None	replace
562	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  null,  null,  null);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  null,  null,  null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  null,  null,  null);	  return    typeRegistry.getNativeType(typeId,    null,    null);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	163	None	replace
563	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  typeId,  null,  null,  null);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  typeId,  null,  null,  null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  typeId,  null,  null,  null);	  return    typeRegistry.getNativeType(typeId,    null,    null);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	163	None	replace
564	[BUG]  [BUGGY]  JSType  typeRegistry  =  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  getNativeType(JSTypeNative)  is  not  public  in  JSType;  cannot  be  accessed  from  outside  package  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  typeRegistry  =  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  typeRegistry  =  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  getNativeType(JSTypeNative)  is  not  public  in  JSType;  cannot  be  accessed  from  outside  package	24	None	replace
565	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  }  [CE]  missing  return  statement  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  }	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  missing  return  statement	24	None	replace
566	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  qualifiedName);  [CE]  cannot  find  symbol  qualifiedName  [FE]          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  qualifiedName);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  qualifiedName);	  return    this.typeRegistry.getNativeType(typeId,    value);    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	56	None	replace
567	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  result);  [CE]  cannot  find  symbol  result  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  result);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  result);	  return    this.typeRegistry.getNativeType(typeId,    value);    	non-compiled	[CE]  cannot  find  symbol  result	56	None	replace
568	[BUG]  [BUGGY]  return  typeId.getNativeType(this.typeRegistry).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId.getNativeType(this.typeRegistry).restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId.getNativeType(this.typeRegistry).restrictByUndefinedVisitor();	  return    this.typeRegistry.getNativeType(typeId).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol	150	None	replace
569	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(this.typeId).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  typeId  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(this.typeId).restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(this.typeId).restrictByUndefinedVisitor();	  return    this.typeRegistry.getNativeType(typeId).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol  typeId	150	None	replace
570	[BUG]  [BUGGY]  return  _typeRegistry.getNativeType(typeId).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  _typeRegistry  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  _typeRegistry.getNativeType(typeId).restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  _typeRegistry.getNativeType(typeId).restrictByUndefinedVisitor();	  return    this.typeRegistry.getNativeType(typeId).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol  _typeRegistry	150	None	replace
571	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId),  typeId.restrictByUndefinedVisitor();  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId),  typeId.restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId),  typeId.restrictByUndefinedVisitor();	  return    this.typeRegistry.getNativeType(typeId).restrictByUndefinedVisitor();    	non-compiled	[CE]  ';'  expected	150	None	replace
572	[BUG]  [BUGGY]  JSType  result  =  this.typeRegistry.getNativeType(typeId);  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  result  =  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  result  =  this.typeRegistry.getNativeType(typeId);	  return    this.typeRegistry.getNativeType(typeId);    JSType    result    =    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  missing  return  statement	111	None	replace
573	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  result  =  this.typeRegistry.getNativeType(typeId);  }  [CE]  unreachable  statement  [FE]          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  result  =  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  result  =  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    JSType    result    =    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  unreachable  statement	111	None	replace
574	[BUG]  [BUGGY]  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  result  =  this.typeRegistry.getNativeType(typeId);  }  [CE]  unreachable  statement  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  result  =  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  result  =  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    JSType    result    =    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  unreachable  statement	111	None	replace
575	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  result  =  this.typeRegistry.getNativeType(typeId);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unreachable  statement  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  result  =  this.typeRegistry.getNativeType(typeId);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  result  =  this.typeRegistry.getNativeType(typeId);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    this.typeRegistry.getNativeType(typeId);    JSType    result    =    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  unreachable  statement	111	None	replace
576	[BUG]  [BUGGY]  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  result  =  this.typeRegistry.getNativeType(typeId);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unreachable  statement  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  result  =  this.typeRegistry.getNativeType(typeId);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  result  =  this.typeRegistry.getNativeType(typeId);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    this.typeRegistry.getNativeType(typeId);    JSType    result    =    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  unreachable  statement	111	None	replace
577	[BUG]  [BUGGY]  return  this.typeregistry.getNativeType(typeId);  [CE]  cannot  find  symbol  typeregistry  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeregistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeregistry.getNativeType(typeId);	  return    typeregistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  typeregistry	73	None	replace
578	[BUG]  [BUGGY]  return  _convention.getNativeType(typeId);  [CE]  cannot  find  symbol  _convention  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  _convention.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  _convention.getNativeType(typeId);	  return    typeregistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  _convention	73	None	replace
579	[BUG]  [BUGGY]  return  registry.getNativeType(typeId);  [CE]  cannot  find  symbol  registry  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  registry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  registry.getNativeType(typeId);	  return    typeregistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  registry	73	None	replace
580	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE),  typeId.restrictByUndefinedVisitor();  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE),  typeId.restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(UNKNOWN_TYPE),  typeId.restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(UNKNOWN_TYPE).restrictByUndefinedVisitor();    	non-compiled	[CE]  ';'  expected	60	None	replace
581	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE,  typeId).restrictByUndefinedVisitor();  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE,  typeId).restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(UNKNOWN_TYPE,  typeId).restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(UNKNOWN_TYPE).restrictByUndefinedVisitor();    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	60	None	replace
582	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE),  state.restrictByUndefinedVisitor();  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE),  state.restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(UNKNOWN_TYPE),  state.restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(UNKNOWN_TYPE).restrictByUndefinedVisitor();    	non-compiled	[CE]  ';'  expected	60	None	replace
583	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE),  resultEqualsValue,  typeId.restrictByUndefinedVisitor();  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE),  resultEqualsValue,  typeId.restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(UNKNOWN_TYPE),  resultEqualsValue,  typeId.restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(UNKNOWN_TYPE).restrictByUndefinedVisitor();    	non-compiled	[CE]  ';'  expected	60	None	replace
584	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE)&&  typeId.restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE)&&  typeId.restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(UNKNOWN_TYPE)&&  typeId.restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(UNKNOWN_TYPE).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
585	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE),  getNativeType(typeId).restrictByUndefinedVisitor();  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE),  getNativeType(typeId).restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(UNKNOWN_TYPE),  getNativeType(typeId).restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(UNKNOWN_TYPE).restrictByUndefinedVisitor();    	non-compiled	[CE]  ';'  expected	60	None	replace
586	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return(this.typeRegistry  ==  null)?  null  :  typeRegistry.getNativeType(typeId);	  return(this.typeRegistry    ==    null)?    null    :    this.typeRegistry.getNativeType(typeId);    	compilable	  [FE]  AssertionFailedError  	174	2	replace
587	[BUG]  [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  typeRegistry.getNativeType(typeId);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry  ==  null)?  null  :  typeRegistry.getNativeType(typeId);	  return(this.typeRegistry    ==    null)?    null    :    this.typeRegistry.getNativeType(typeId);    	compilable	  [FE]  AssertionFailedError  	174	2	replace
588	[BUG]  [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId,  typeId);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId,  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId,  typeId);	  return(this.typeRegistry    ==    null)?    null    :    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	174	None	replace
589	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)  ==  null?  this.typeRegistry.getNativeType(typeId):  typeId;  [CE]  incompatible  types  [FE]        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)  ==  null?  this.typeRegistry.getNativeType(typeId):  typeId;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId)  ==  null?  this.typeRegistry.getNativeType(typeId):  typeId;	  return    this.typeRegistry.getNativeType(typeId)!=    null?    this.typeRegistry.getNativeType(typeId):    typeId;    	non-compiled	[CE]  incompatible  types	172	None	replace
590	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  typeId;  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  typeId;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  typeId;	  return    this.typeRegistry.getNativeType(typeId)!=    null?    this.typeRegistry.getNativeType(typeId):    typeId;    	non-compiled	[CE]  incompatible  types	172	None	replace
591	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  getNativeType(typeId);	  return    this.typeRegistry.getNativeType(typeId)!=    null?    this.typeRegistry.getNativeType(typeId):    typeId;    	compilable	  [FE]  AssertionFailedError  	172	2	replace
592	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  getNativeType(typeId);  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  getNativeType(typeId);	  return    this.typeRegistry.getNativeType(typeId)!=    null?    this.typeRegistry.getNativeType(typeId):    typeId;    	compilable	  [FE]  AssertionFailedError  	172	2	replace
593	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId),  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  typeId;  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId),  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  typeId;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId),  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  typeId;	  return    this.typeRegistry.getNativeType(typeId)!=    null?    this.typeRegistry.getNativeType(typeId):    typeId;    	non-compiled	[CE]  ';'  expected	172	None	replace
594	[BUG]  [BUGGY]  return  getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  typeId;  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  typeId;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  typeId;	  return    this.typeRegistry.getNativeType(typeId)!=    null?    this.typeRegistry.getNativeType(typeId):    typeId;    	non-compiled	[CE]  incompatible  types	172	None	replace
595	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)+  3;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)+  3;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId)+  3;	  return    typeRegistry.getNativeType(typeId)+    3;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	81	None	replace
596	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals(qualifiedName)||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object "));  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals(qualifiedName)||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object "));  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeId.equals(qualifiedName)||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object "));	  return    typeRegistry.getNativeType(typeId)||    typeId.equals(   "object   ")||    typeId.equals(   "object   ")||    typeId.equals(   "object   "));    	non-compiled	[CE]  	161	None	replace
597	[BUG]  [BUGGY]  result  =  typeRegistry.getNativeType(typeId);  [CE]  cannot  find  symbol  result  [FE]          NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  result  =  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	result  =  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(null);    JSTypeNative    result    =    typeRegistry.getNativeType(null);    	non-compiled	[CE]  cannot  find  symbol  result	2	None	replace
598	[BUG]  [BUGGY]  JSTypeNative  result  =  this.typeRegistry.getNativeType(typeId);  [CE]  incompatible  types  [FE]            NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSTypeNative  result  =  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSTypeNative  result  =  this.typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(null);    JSTypeNative    result    =    typeRegistry.getNativeType(null);    	non-compiled	[CE]  incompatible  types	2	None	replace
599	[BUG]  [BUGGY]  final  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  [CE]  incompatible  types  [FE]              NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  final  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	final  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(null);    JSTypeNative    result    =    typeRegistry.getNativeType(null);    	non-compiled	[CE]  incompatible  types	2	None	replace
600	[BUG]  [BUGGY]  JSTypeNative  result  =  typeRegistry.getNativeType(null);  [CE]  incompatible  types  [FE]                NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSTypeNative  result  =  typeRegistry.getNativeType(null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSTypeNative  result  =  typeRegistry.getNativeType(null);	  return    typeRegistry.getNativeType(null);    JSTypeNative    result    =    typeRegistry.getNativeType(null);    	non-compiled	[CE]  incompatible  types	2	None	replace
601	[BUG]  [BUGGY]  JSType  type  =  this.typeRegistry.getNativeType(typeId);  if(type!=  null)  {  return  type;  }  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  type  =  this.typeRegistry.getNativeType(typeId);  if(type!=  null)  {  return  type;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  type  =  this.typeRegistry.getNativeType(typeId);  if(type!=  null)  {  return  type;  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    JSType    type    =    typeId.getNativeType();    if(type!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  missing  return  statement	112	None	replace
602	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return  this.typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;	  return    this.typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	compilable	  [FE]  NullPointerException  	40	26	replace
603	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;	  return    this.typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	compilable	  [FE]  NullPointerException  	40	26	replace
604	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(this.typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  cannot  find  symbol  typeId  [FE]      AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(this.typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(this.typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;	  return    this.typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  cannot  find  symbol  typeId	40	None	replace
605	[BUG]  [BUGGY]  JSType  typeId  =  getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  typeId  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  typeId  =  getNativeType(typeId);	  return    this.typeRegistry.getNativeType(typeId);    JSType    typeId    =    getNativeType(typeId);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	53	None	replace
606	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  JSType  typeId  =  getNativeType(typeId);  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  JSType  typeId  =  getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  JSType  typeId  =  getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    JSType    typeId    =    getNativeType(typeId);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	53	None	replace
607	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  getNativeType(typeId);  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    JSType    typeId    =    getNativeType(typeId);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	53	None	replace
608	[BUG]  [BUGGY]  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  JSType  typeId  =  getNativeType(typeId);  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  JSType  typeId  =  getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  JSType  typeId  =  getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    JSType    typeId    =    getNativeType(typeId);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	53	None	replace
609	[BUG]  [BUGGY]  nullValue  =  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  getNativeType(typeId);  [CE]  cannot  find  symbol  nullValue  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  nullValue  =  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	nullValue  =  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  getNativeType(typeId);	  return    this.typeRegistry.getNativeType(typeId);    JSType    typeId    =    getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  nullValue	53	None	replace
610	[BUG]  [BUGGY]  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  getNativeType(typeId);  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    JSType    typeId    =    getNativeType(typeId);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	53	None	replace
611	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return  getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)    ==    null?    typeRegistry.getNativeType(typeId):    null;    	compilable	  [FE]  StackOverflowError  	35	28	replace
612	[BUG]  [BUGGY]  return  getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  [FE]  StackOverflowError  [FE]    NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)    ==    null?    typeRegistry.getNativeType(typeId):    null;    	compilable	  [FE]  StackOverflowError  	35	28	replace
613	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  this.restrictByFalseTypeOfResultVisitor);  [CE]  cannot  find  symbol  restrictByFalseTypeOfResultVisitor  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  this.restrictByFalseTypeOfResultVisitor);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  this.restrictByFalseTypeOfResultVisitor);	  return    this.typeRegistry.getNativeType(typeId,    this.restrictByTrueTypeOfResultVisitor);    	non-compiled	[CE]  cannot  find  symbol  restrictByFalseTypeOfResultVisitor	139	None	replace
614	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  this.restrictByOneTypeOfResultVisitor);  [CE]  cannot  find  symbol  restrictByOneTypeOfResultVisitor  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  this.restrictByOneTypeOfResultVisitor);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  this.restrictByOneTypeOfResultVisitor);	  return    this.typeRegistry.getNativeType(typeId,    this.restrictByTrueTypeOfResultVisitor);    	non-compiled	[CE]  cannot  find  symbol  restrictByOneTypeOfResultVisitor	139	None	replace
615	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.restrictByTrueTypeOfResultVisitor);  [CE]  cannot  find  symbol  restrictByTrueTypeOfResultVisitor  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.restrictByTrueTypeOfResultVisitor);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this.restrictByTrueTypeOfResultVisitor);	  return    this.typeRegistry.getNativeType(typeId,    this.restrictByTrueTypeOfResultVisitor);    	non-compiled	[CE]  cannot  find  symbol  restrictByTrueTypeOfResultVisitor	139	None	replace
616	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  this.restrictByUndefinedVisitor);  [CE]  cannot  find  symbol  restrictByUndefinedVisitor  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  this.restrictByUndefinedVisitor);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  this.restrictByUndefinedVisitor);	  return    this.typeRegistry.getNativeType(typeId,    this.restrictByTrueTypeOfResultVisitor);    	non-compiled	[CE]  cannot  find  symbol  restrictByUndefinedVisitor	139	None	replace
617	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(typeId)    ==    null?    typeRegistry.getNativeType(typeId):    null;    typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;	  	non-compiled	[CE]  not  a  statement	34	None	add
618	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  unreachable  statement  [FE]      NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(typeId)    ==    null?    typeRegistry.getNativeType(typeId):    null;    return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;	  	non-compiled	[CE]  unreachable  statement	34	None	add
619	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  not  a  statement  [FE]        NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(typeId)    ==    null?    typeRegistry.getNativeType(typeId):    null;    typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;	  	non-compiled	[CE]  not  a  statement	34	None	add
620	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId  ==  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId):  null;  }  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId  ==  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(typeId)    ==    null?    typeRegistry.getNativeType(typeId):    null;    if(typeId  ==  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId):  null;  }	  	non-compiled	[CE]  ';'  expected	34	None	add
621	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  JSTypeNative  typeId  =  getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]            NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  JSTypeNative  typeId  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(typeId)    ==    null?    typeRegistry.getNativeType(typeId):    null;    JSTypeNative  typeId  =  getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	34	None	add
622	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(resultEqualsValue).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(resultEqualsValue).restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(resultEqualsValue).restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(value).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	124	None	replace
623	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(null).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(null).restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(null).restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(value).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
624	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId):  null;  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  ';'  expected	97	None	replace
625	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(qualifiedName)?  typeRegistry.getNativeType(typeId):  null;  [CE]  cannot  find  symbol  qualifiedName  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(qualifiedName)?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(qualifiedName)?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	97	None	replace
626	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)?  typeRegistry.getNativeType(typeId):  null;  [CE]  incompatible  types  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId)?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  incompatible  types	97	None	replace
627	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)?  typeRegistry.getNativeType(value):  null;  [CE]  incompatible  types  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)?  typeRegistry.getNativeType(value):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)?  typeRegistry.getNativeType(value):  null;	  return    typeRegistry.getNativeType(typeId)?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  incompatible  types	97	None	replace
628	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)?  null  :  typeRegistry.getNativeType(typeId):  null;  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)?  null  :  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)?  null  :  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  ';'  expected	97	None	replace
629	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(value)&&  typeRegistry.getNativeType(typeId);  [CE]  cannot  find  symbol  value  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(value)&&  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(value)&&  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(qualifiedName)&&    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  value	68	None	replace
630	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(id)&&  typeRegistry.getNativeType(typeId);  [CE]  cannot  find  symbol  id  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(id)&&  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(id)&&  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(qualifiedName)&&    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  id	68	None	replace
631	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(key)&&  typeRegistry.getNativeType(typeId);  [CE]  cannot  find  symbol  key  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(key)&&  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(key)&&  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(qualifiedName)&&    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  key	68	None	replace
632	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(name)&&  typeRegistry.getNativeType(typeId);  [CE]  cannot  find  symbol  name  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(name)&&  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(name)&&  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(qualifiedName)&&    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  name	68	None	replace
633	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(ID)&&  typeRegistry.getNativeType(typeId);  [CE]  cannot  find  symbol  ID  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(ID)&&  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(ID)&&  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(qualifiedName)&&    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  ID	68	None	replace
634	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(name)&&  typeId.getNativeType(typeId);  [CE]  cannot  find  symbol  name  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(name)&&  typeId.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(name)&&  typeId.getNativeType(typeId);	  return    typeRegistry.getNativeType(qualifiedName)&&    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  name	68	None	replace
635	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)  ==  null;  [CE]  incompatible  types  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)  ==  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId)  ==  null;	  return    typeRegistry.getNativeType(typeId)    ==    null;    	non-compiled	[CE]  incompatible  types	15	None	replace
636	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  value)  ==  null;  [CE]  cannot  find  symbol  value  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  value)  ==  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  value)  ==  null;	  return    typeRegistry.getNativeType(typeId)    ==    null;    	non-compiled	[CE]  cannot  find  symbol  value	15	None	replace
637	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null  &&  typeRegistry.getNativeType(typeId);  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null  &&  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)  ==  null  &&  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)    ==    null;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	15	None	replace
638	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE).restrictByFalseTypeOfResultVisitor;  [CE]  cannot  find  symbol  restrictByFalseTypeOfResultVisitor  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE).restrictByFalseTypeOfResultVisitor;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(UNKNOWN_TYPE).restrictByFalseTypeOfResultVisitor;	  return    typeRegistry.getNativeType(typeId).restrictByFalseTypeOfResultVisitor;    	non-compiled	[CE]  cannot  find  symbol  restrictByFalseTypeOfResultVisitor	12	None	replace
639	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor;  [CE]  cannot  find  symbol  restrictByTrueTypeOfResultVisitor  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor;	  return    typeRegistry.getNativeType(typeId).restrictByFalseTypeOfResultVisitor;    	non-compiled	[CE]  cannot  find  symbol  restrictByTrueTypeOfResultVisitor	12	None	replace
640	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  typeRegistry.getNativeType(typeId,  value);  [CE]  cannot  find  symbol  value  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  typeRegistry.getNativeType(typeId,  value);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)&&  typeRegistry.getNativeType(typeId,  value);	  return    typeRegistry.getNativeType(typeId)&&    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  value	67	None	replace
641	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  typeRegistry.getNativeType(value);  [CE]  cannot  find  symbol  value  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  typeRegistry.getNativeType(value);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)&&  typeRegistry.getNativeType(value);	  return    typeRegistry.getNativeType(typeId)&&    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  value	67	None	replace
642	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(name,  typeId);  [CE]  cannot  find  symbol  name  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(name,  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(name,  typeId);	  return    typeRegistry.getNativeType(qualifiedName,    typeId);    	non-compiled	[CE]  cannot  find  symbol  name	100	None	replace
643	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(id,  typeId);  [CE]  cannot  find  symbol  id  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(id,  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(id,  typeId);	  return    typeRegistry.getNativeType(qualifiedName,    typeId);    	non-compiled	[CE]  cannot  find  symbol  id	100	None	replace
644	[BUG]  [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  (this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  (this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry!=    null)?    null    :    this.typeRegistry.getNativeType(typeId);    (this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  not  a  statement	136	None	add
645	[BUG]  [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  (this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  (this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry!=    null)?    null    :    this.typeRegistry.getNativeType(typeId);    (this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  not  a  statement	136	None	add
646	[BUG]  [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]        NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry!=    null)?    null    :    this.typeRegistry.getNativeType(typeId);    JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	136	None	add
647	[BUG]  [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSTypeNative  typeId  =  getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]          NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSTypeNative  typeId  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry!=    null)?    null    :    this.typeRegistry.getNativeType(typeId);    JSTypeNative  typeId  =  getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	136	None	add
648	[BUG]  [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSTypeRegistry  typeRegistry  =  getNativeType(typeId);  [CE]  incompatible  types  [FE]            NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSTypeRegistry  typeRegistry  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry!=    null)?    null    :    this.typeRegistry.getNativeType(typeId);    JSTypeRegistry  typeRegistry  =  getNativeType(typeId);	  	non-compiled	[CE]  incompatible  types	136	None	add
649	[BUG]  [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSType  resultEqualsValue  =  getNativeType(typeId);  [CE]  unreachable  statement  [FE]              NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSType  resultEqualsValue  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry!=    null)?    null    :    this.typeRegistry.getNativeType(typeId);    JSType  resultEqualsValue  =  getNativeType(typeId);	  	non-compiled	[CE]  unreachable  statement	136	None	add
650	[BUG]  [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry!=    null)?    null    :    this.typeRegistry.getNativeType(typeId);    JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	136	None	add
651	[BUG]  [BUGGY]  JSType  typeRegistry  =  typeRegistry.getNativeType(typeId);  [CE]  getNativeType(JSTypeNative)  is  not  public  in  JSType;  cannot  be  accessed  from  outside  package  [FE]            NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  typeRegistry  =  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  typeRegistry  =  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(null);    JSType    typeRegistry    =    typeRegistry.getNativeType(null);    	non-compiled	[CE]  getNativeType(JSTypeNative)  is  not  public  in  JSType;  cannot  be  accessed  from  outside  package	3	None	replace
652	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  JSType  typeRegistry  =  typeRegistry.getNativeType(null);  }  [CE]  getNativeType(JSTypeNative)  is  not  public  in  JSType;  cannot  be  accessed  from  outside  package  [FE]              NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  JSType  typeRegistry  =  typeRegistry.getNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  JSType  typeRegistry  =  typeRegistry.getNativeType(null);  }	  return    typeRegistry.getNativeType(null);    JSType    typeRegistry    =    typeRegistry.getNativeType(null);    	non-compiled	[CE]  getNativeType(JSTypeNative)  is  not  public  in  JSType;  cannot  be  accessed  from  outside  package	3	None	replace
653	[BUG]  [BUGGY]  null  =  typeRegistry.getNativeType(typeId);  JSType  typeRegistry  =  typeRegistry.getNativeType(typeId);  [CE]  unexpected  type  [FE]                NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  null  =  typeRegistry.getNativeType(typeId);  JSType  typeRegistry  =  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	null  =  typeRegistry.getNativeType(typeId);  JSType  typeRegistry  =  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(null);    JSType    typeRegistry    =    typeRegistry.getNativeType(null);    	non-compiled	[CE]  unexpected  type	3	None	replace
654	[BUG]  [BUGGY]  JSType  typeRegistry  =  typeRegistry.getNativeType(null);  [CE]  getNativeType(JSTypeNative)  is  not  public  in  JSType;  cannot  be  accessed  from  outside  package  [FE]                  NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  typeRegistry  =  typeRegistry.getNativeType(null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  typeRegistry  =  typeRegistry.getNativeType(null);	  return    typeRegistry.getNativeType(null);    JSType    typeRegistry    =    typeRegistry.getNativeType(null);    	non-compiled	[CE]  getNativeType(JSTypeNative)  is  not  public  in  JSType;  cannot  be  accessed  from  outside  package	3	None	replace
655	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  negative);  [CE]  cannot  find  symbol  negative  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  negative);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this,  negative);	  return    typeRegistry.getNativeType(typeId,    this,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  negative	93	None	replace
656	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId).declareTypeOfResultVisitor;  [CE]  cannot  find  symbol  declareTypeOfResultVisitor  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId).declareTypeOfResultVisitor;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId).declareTypeOfResultVisitor;	  return    typeRegistry.getNativeType(typeId).restrictByOneTypeOfResultVisitor;    	non-compiled	[CE]  cannot  find  symbol  declareTypeOfResultVisitor	13	None	replace
657	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId).restrictNotNullVisitor;  [CE]  cannot  find  symbol  restrictNotNullVisitor  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId).restrictNotNullVisitor;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId).restrictNotNullVisitor;	  return    typeRegistry.getNativeType(typeId).restrictByOneTypeOfResultVisitor;    	non-compiled	[CE]  cannot  find  symbol  restrictNotNullVisitor	13	None	replace
658	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE).restrictByFalseTypeOfResultVisitor();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE).restrictByFalseTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(UNKNOWN_TYPE).restrictByFalseTypeOfResultVisitor();	  return    typeRegistry.getNativeType(typeId).restrictByFalseTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
659	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByFalseTypeOfResultVisitor();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByFalseTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByFalseTypeOfResultVisitor();	  return    typeRegistry.getNativeType(typeId).restrictByFalseTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
660	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(nativeTypeId).restrictByFalseTypeOfResultVisitor();  [CE]  cannot  find  symbol  nativeTypeId  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(nativeTypeId).restrictByFalseTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(nativeTypeId).restrictByFalseTypeOfResultVisitor();	  return    typeRegistry.getNativeType(typeId).restrictByFalseTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol  nativeTypeId	87	None	replace
661	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(GLOBAL_TYPE).restrictByFalseTypeOfResultVisitor();  [CE]  cannot  find  symbol  GLOBAL_TYPE  [FE]                                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(GLOBAL_TYPE).restrictByFalseTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(GLOBAL_TYPE).restrictByFalseTypeOfResultVisitor();	  return    typeRegistry.getNativeType(typeId).restrictByFalseTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol  GLOBAL_TYPE	87	None	replace
662	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(OBJECT_TYPE).restrictByFalseTypeOfResultVisitor();  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(OBJECT_TYPE).restrictByFalseTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(OBJECT_TYPE).restrictByFalseTypeOfResultVisitor();	  return    typeRegistry.getNativeType(typeId).restrictByFalseTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
663	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId).null;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId).null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId).null;	  return    typeRegistry.getNativeType(typeId).restrictByUndefinedVisitor;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
664	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(qualifiedName).restrictUndefinedVisitor();  [CE]  cannot  find  symbol  qualifiedName  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(qualifiedName).restrictUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(qualifiedName).restrictUndefinedVisitor();	  return    typeRegistry.getNativeType(typeId).restrictUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	65	None	replace
665	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE).restrictUndefinedVisitor();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE).restrictUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(UNKNOWN_TYPE).restrictUndefinedVisitor();	  return    typeRegistry.getNativeType(typeId).restrictUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
666	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictUndefinedVisitor();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictUndefinedVisitor();	  return    typeRegistry.getNativeType(typeId).restrictUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
667	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(nativeTypeId).restrictUndefinedVisitor();  [CE]  cannot  find  symbol  nativeTypeId  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(nativeTypeId).restrictUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(nativeTypeId).restrictUndefinedVisitor();	  return    typeRegistry.getNativeType(typeId).restrictUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol  nativeTypeId	65	None	replace
668	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId),  restrictNullVisitor.restrictUndefinedVisitor();  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId),  restrictNullVisitor.restrictUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId),  restrictNullVisitor.restrictUndefinedVisitor();	  return    typeRegistry.getNativeType(typeId).restrictUndefinedVisitor();    	non-compiled	[CE]  ';'  expected	65	None	replace
669	[BUG]  [BUGGY]  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]              NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null)    {    return    typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	168	None	replace
670	[BUG]  [BUGGY]  JSType  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null)    {    return    typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	168	None	replace
671	[BUG]  [BUGGY]  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                  NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null)    {    return    typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	168	None	replace
672	[BUG]  [BUGGY]  return  getNativeType(typeId);  JSTypeNative  typeId  =  getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]    StackOverflowError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  getNativeType(typeId);  JSTypeNative  typeId  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    getNativeType(typeId);    JSTypeNative  typeId  =  getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	146	None	add
673	[BUG]  [BUGGY]  return  getNativeType(typeId);  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]      StackOverflowError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  getNativeType(typeId);  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    getNativeType(typeId);    JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	146	None	add
674	[BUG]  [BUGGY]  return  getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null)  {  return  getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null)  {  return  getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    getNativeType(typeId);    if(typeId  ==  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId!=  null)  {  return  getNativeType(typeId);  }	  	non-compiled	[CE]  illegal  start  of  expression	146	None	add
675	[BUG]  [BUGGY]  return  getNativeType(typeId);  JSType  typeId  =  getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]          StackOverflowError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  getNativeType(typeId);  JSType  typeId  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    getNativeType(typeId);    JSType  typeId  =  getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	146	None	add
676	[BUG]  [BUGGY]  return  getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType( "typeId ");  if(typeId!=  null)  {  return  getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType( "typeId ");  if(typeId!=  null)  {  return  getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    getNativeType(typeId);    if(typeId  ==  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType( "typeId ");  if(typeId!=  null)  {  return  getNativeType(typeId);  }	  	non-compiled	[CE]  illegal  start  of  expression	146	None	add
677	[BUG]  [BUGGY]  return  getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId  ==  null)  {  return  getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]              StackOverflowError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId  ==  null)  {  return  getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    getNativeType(typeId);    if(typeId!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(null);  if(typeId  ==  null)  {  return  getNativeType(typeId);  }	  	non-compiled	[CE]  illegal  start  of  expression	146	None	add
678	[BUG]  [BUGGY]  return  getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]                StackOverflowError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    getNativeType(typeId);    if(typeId  ==  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }	  	non-compiled	[CE]  illegal  start  of  expression	146	None	add
679	[BUG]  [BUGGY]  return  getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }  [CE]  illegal  start  of  expression  [FE]                  StackOverflowError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    getNativeType(typeId);    if(typeId  ==  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }	  	non-compiled	[CE]  illegal  start  of  expression	146	None	add
680	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  typeId,  0);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  typeId,  0);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  typeId,  0);	  return    this.typeRegistry.getNativeType(typeId,    0);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	59	None	replace
681	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  null,  0);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  null,  0);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  null,  0);	  return    this.typeRegistry.getNativeType(typeId,    0);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	59	None	replace
682	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  typeId,  1);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  typeId,  1);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  typeId,  1);	  return    this.typeRegistry.getNativeType(typeId,    0);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	59	None	replace
683	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  typeId,  false);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  typeId,  false);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  typeId,  false);	  return    this.typeRegistry.getNativeType(typeId,    0);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	59	None	replace
684	[BUG]  [BUGGY]  typeRegistry.setNativeType(null);  [CE]  cannot  find  symbol  [FE]                  NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  typeRegistry.setNativeType(null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	typeRegistry.setNativeType(null);	  return    typeRegistry.getNativeType(null);    typeRegistry.setNativeType(null);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
685	[BUG]  [BUGGY]  if(typeRegistry.getNativeType(typeId)!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  typeRegistry.setNativeType(null);  }  [CE]  cannot  find  symbol  [FE]                    NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeRegistry.getNativeType(typeId)!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  typeRegistry.setNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeRegistry.getNativeType(typeId)!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  typeRegistry.setNativeType(null);  }	  return    typeRegistry.getNativeType(null);    typeRegistry.setNativeType(null);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
686	[BUG]  [BUGGY]  typeRegistry.setNativeType(typeId);  [CE]  cannot  find  symbol  [FE]                      NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  typeRegistry.setNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	typeRegistry.setNativeType(typeId);	  return    typeRegistry.getNativeType(null);    typeRegistry.setNativeType(null);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
687	[BUG]  [BUGGY]  if(typeRegistry.getNativeType(typeId)  ==  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  typeRegistry.setNativeType(null);  }  [CE]  cannot  find  symbol  [FE]                        NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeRegistry.getNativeType(typeId)  ==  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  typeRegistry.setNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeRegistry.getNativeType(typeId)  ==  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  typeRegistry.setNativeType(null);  }	  return    typeRegistry.getNativeType(null);    typeRegistry.setNativeType(null);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
688	[BUG]  [BUGGY]  if(typeRegistry.getNativeType(typeId)!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  typeRegistry.setNativeType(null);  }  [CE]  cannot  find  symbol  [FE]                          NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeRegistry.getNativeType(typeId)!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  typeRegistry.setNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeRegistry.getNativeType(typeId)!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  typeRegistry.setNativeType(null);  }	  return    typeRegistry.getNativeType(null);    typeRegistry.setNativeType(null);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
689	[BUG]  [BUGGY]  if(typeRegistry.getNativeType(typeId)  >=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  typeRegistry.setNativeType(null);  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                            NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeRegistry.getNativeType(typeId)  >=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  typeRegistry.setNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeRegistry.getNativeType(typeId)  >=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  typeRegistry.setNativeType(null);  }	  return    typeRegistry.getNativeType(null);    typeRegistry.setNativeType(null);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	6	None	replace
690	[BUG]  [BUGGY]  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeId;  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeId;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeId;  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSTypeNative    typeId    =    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    return    typeId;    }    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	52	None	replace
691	[BUG]  [BUGGY]  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  return  typeId;  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  return  typeId;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  return  typeId;  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSTypeNative    typeId    =    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    return    typeId;    }    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	52	None	replace
692	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSTypeNative    typeId    =    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    return    typeId;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
693	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  type  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  type  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  type	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSTypeNative    typeId    =    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    return    typeId;    }    	non-compiled	[CE]  ';'  expected	52	None	replace
694	[BUG]  [BUGGY]  return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  typeRegistry.getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]    AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType  typeId  =  typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	151	None	add
695	[BUG]  [BUGGY]  return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry!=    null?    typeRegistry.getNativeType(typeId):    null;    typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;	  	non-compiled	[CE]  not  a  statement	151	None	add
696	[BUG]  [BUGGY]  return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType  return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;	  	non-compiled	[CE]  not  a  statement	151	None	add
697	[BUG]  [BUGGY]  return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]          AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry!=    null?    typeRegistry.getNativeType(typeId):    null;    JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	151	None	add
698	[BUG]  [BUGGY]  return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  typeRegistry  =  typeRegistry.getNativeType(typeId);  [CE]  getNativeType(JSTypeNative)  is  not  public  in  JSType;  cannot  be  accessed  from  outside  package  [FE]            AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  typeRegistry  =  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType  typeRegistry  =  typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  getNativeType(JSTypeNative)  is  not  public  in  JSType;  cannot  be  accessed  from  outside  package	151	None	add
699	[BUG]  [BUGGY]  return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;  typeRegistry  ==  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;  typeRegistry  ==  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry!=    null?    typeRegistry.getNativeType(typeId):    null;    typeRegistry  ==  null?  typeRegistry.getNativeType(typeId):  null;	  	non-compiled	[CE]  not  a  statement	151	None	add
700	[BUG]  [BUGGY]  return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType  typeId  =  getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	151	None	add
701	[BUG]  [BUGGY]  return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  typeRegistry  =  getNativeType(typeId);  [CE]  getNativeType(JSTypeNative)  is  not  public  in  JSType;  cannot  be  accessed  from  outside  package  [FE]                  AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  typeRegistry  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType  typeRegistry  =  getNativeType(typeId);	  	non-compiled	[CE]  getNativeType(JSTypeNative)  is  not  public  in  JSType;  cannot  be  accessed  from  outside  package	151	None	add
702	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  typeId,  this.restrictNullVisitor);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  typeId,  this.restrictNullVisitor);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  typeId,  this.restrictNullVisitor);	  return    this.typeRegistry.getNativeType(typeId,    this.restrictNullVisitor);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	138	None	replace
703	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  resultEqualsValue,  this.restrictNullVisitor);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  resultEqualsValue,  this.restrictNullVisitor);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  resultEqualsValue,  this.restrictNullVisitor);	  return    this.typeRegistry.getNativeType(typeId,    this.restrictNullVisitor);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	138	None	replace
704	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(qualifiedName);  [CE]  cannot  find  symbol  qualifiedName  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(qualifiedName);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(qualifiedName);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(value);    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	69	None	replace
705	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(resultEqualsValue);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(resultEqualsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(resultEqualsValue);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(value);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	69	None	replace
706	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(qualifiedName)||  typeRegistry.getNativeType(value);  [CE]  cannot  find  symbol  qualifiedName  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(qualifiedName)||  typeRegistry.getNativeType(value);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(qualifiedName)||  typeRegistry.getNativeType(value);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(value);    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	69	None	replace
707	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(id);  [CE]  cannot  find  symbol  id  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(id);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(id);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(value);    	non-compiled	[CE]  cannot  find  symbol  id	69	None	replace
708	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType    typeId    =    getNativeType(typeId);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	106	None	replace
709	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  getNativeType(typeId,  typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  getNativeType(typeId,  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  getNativeType(typeId,  typeId);	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType    typeId    =    getNativeType(typeId);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	106	None	replace
710	[BUG]  [BUGGY]  if(typeId  ==  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null);  }  [CE]  missing  return  statement  [FE]                NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null);  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null    ||    typeId.equals(typeId))    {    return    typeRegistry.getNativeType(null    	non-compiled	[CE]  missing  return  statement	169	None	replace
711	[BUG]  [BUGGY]  if(typeId  ==  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null  [CE]  ')'  expected  [FE]                  NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null    ||    typeId.equals(typeId))    {    return    typeRegistry.getNativeType(null    	non-compiled	[CE]  ')'  expected	169	None	replace
712	[BUG]  [BUGGY]  if(typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null);  }  [CE]  missing  return  statement  [FE]                    NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null);  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null    ||    typeId.equals(typeId))    {    return    typeRegistry.getNativeType(null    	non-compiled	[CE]  missing  return  statement	169	None	replace
713	[BUG]  [BUGGY]  if(typeId  ==  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null  }  [CE]  ')'  expected  [FE]                      NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null    ||    typeId.equals(typeId))    {    return    typeRegistry.getNativeType(null    	non-compiled	[CE]  ')'  expected	169	None	replace
714	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(nativeTypeId);  [CE]  cannot  find  symbol  nativeTypeId  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(nativeTypeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(nativeTypeId);	  return    typeRegistry.getNativeType(nativeId);    	non-compiled	[CE]  cannot  find  symbol  nativeTypeId	135	None	replace
715	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return  typeRegistry.getNativeType(typeId)!=  null?  getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)    [Delete]    null;    	compilable	  [FE]  StackOverflowError  	132	28	replace
716	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  getNativeType(typeId):  null;  [FE]  StackOverflowError  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)!=  null?  getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)    [Delete]    null;    	compilable	  [FE]  StackOverflowError  	132	28	replace
717	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId).invoke(null,  outcomeEqualsValue);  [CE]  cannot  find  symbol  outcomeEqualsValue  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId).invoke(null,  outcomeEqualsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId).invoke(null,  outcomeEqualsValue);	  return    typeRegistry.getNativeType(typeId).restrictUndefinedVisitor;    	non-compiled	[CE]  cannot  find  symbol  outcomeEqualsValue	10	None	replace
718	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)  ==  null?  getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return  this.typeRegistry.getNativeType(typeId)  ==  null?  getNativeType(typeId):  null;	  return    this.typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	compilable	  [FE]  NullPointerException  	40	26	replace
719	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)  ==  null?  getNativeType(typeId):  null;  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)  ==  null?  getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId)  ==  null?  getNativeType(typeId):  null;	  return    this.typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	compilable	  [FE]  NullPointerException  	40	26	replace
720	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  owner);  [CE]  cannot  find  symbol  owner  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  owner);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this,  owner);	  return    typeRegistry.getNativeType(typeId,    this,    state);    	non-compiled	[CE]  cannot  find  symbol  owner	92	None	replace
721	[BUG]  [BUGGY]  return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;  AssertionFailedError  <  JSType>  result  =  typeRegistry.getNativeType(typeId);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;  AssertionFailedError  <  JSType>  result  =  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry!=    null?    typeRegistry.getNativeType(typeId):    null;    AssertionFailedError  <  JSType>  result  =  typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  cannot  find  symbol	151	None	add
722	[BUG]  [BUGGY]  return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;  AssertionFailedError  <  JSType>  result  =  getNativeType(typeId);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;  AssertionFailedError  <  JSType>  result  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry!=    null?    typeRegistry.getNativeType(typeId):    null;    AssertionFailedError  <  JSType>  result  =  getNativeType(typeId);	  	non-compiled	[CE]  cannot  find  symbol	151	None	add
723	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE).restrictByTrueTypeOfResultVisitor;  [CE]  cannot  find  symbol  restrictByTrueTypeOfResultVisitor  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE).restrictByTrueTypeOfResultVisitor;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(UNKNOWN_TYPE).restrictByTrueTypeOfResultVisitor;	  return    typeRegistry.getNativeType(typeId).restrictByFalseTypeOfResultVisitor;    	non-compiled	[CE]  cannot  find  symbol  restrictByTrueTypeOfResultVisitor	12	None	replace
724	[BUG]  [BUGGY]  JSType  return  typeRegistry.getNativeType(typeId)  >>  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  return  typeRegistry.getNativeType(typeId)  >>  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  return  typeRegistry.getNativeType(typeId)  >>  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType    return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  not  a  statement	23	None	replace
725	[BUG]  [BUGGY]  return  typeId  ==  null?  null  :  typeId.getRawType();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  null  :  typeId.getRawType();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId  ==  null?  null  :  typeId.getRawType();	  return    typeId    ==    null?    null    :    typeId.toString();    	non-compiled	[CE]  cannot  find  symbol	182	None	replace
726	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  JSType  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId):  null;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  JSType  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    if(typeId!=  null)  {  JSType  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId):  null;  }	  	non-compiled	[CE]  ';'  expected	39	None	add
727	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  JSType  type  =  typeRegistry.getNativeType(typeId);  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId):  null;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  JSType  type  =  typeRegistry.getNativeType(typeId);  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    if(typeId!=  null)  {  JSType  type  =  typeRegistry.getNativeType(typeId);  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId):  null;  }	  	non-compiled	[CE]  ';'  expected	39	None	add
728	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  JSType  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId):  null;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  JSType  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    if(typeId!=  null)  {  JSType  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId):  null;  }	  	non-compiled	[CE]  ';'  expected	39	None	add
729	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  AssertionFailedError  <  JSType>  result  =  this.typeRegistry.getNativeType(typeId);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  AssertionFailedError  <  JSType>  result  =  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    AssertionFailedError  <  JSType>  result  =  this.typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  cannot  find  symbol	39	None	add
730	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(nativeId)&&  typeRegistry.getNativeType(typeId);  [CE]  cannot  find  symbol  nativeId  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(nativeId)&&  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(nativeId)&&  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(qualifiedName)&&    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  nativeId	68	None	replace
731	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(TYPE_NAME)&&  typeRegistry.getNativeType(typeId);  [CE]  cannot  find  symbol  TYPE_NAME  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(TYPE_NAME)&&  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(TYPE_NAME)&&  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(qualifiedName)&&    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  TYPE_NAME	68	None	replace
732	[BUG]  [BUGGY]  JSTypeNative  typeId  =  getNativeType(getNativeType(typeId));  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                      NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSTypeNative  typeId  =  getNativeType(getNativeType(typeId));  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSTypeNative  typeId  =  getNativeType(getNativeType(typeId));	  return    typeRegistry.getNativeType(null);    JSTypeNative    typeId    =    getNativeType(null);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	8	None	replace
733	[BUG]  [BUGGY]  JSTypeNative  typeId  =  getNativeType(new  JSTypeNative(typeId));  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                        NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSTypeNative  typeId  =  getNativeType(new  JSTypeNative(typeId));  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSTypeNative  typeId  =  getNativeType(new  JSTypeNative(typeId));	  return    typeRegistry.getNativeType(null);    JSTypeNative    typeId    =    getNativeType(null);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	8	None	replace
734	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  JSType  typeRegistry  =  typeRegistry.getNativeType(null);  }  [CE]  getNativeType(JSTypeNative)  is  not  public  in  JSType;  cannot  be  accessed  from  outside  package  [FE]            NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  JSType  typeRegistry  =  typeRegistry.getNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  JSType  typeRegistry  =  typeRegistry.getNativeType(null);  }	  return    typeRegistry.getNativeType(null);    JSType    typeRegistry    =    typeRegistry.getNativeType(null);    	non-compiled	[CE]  getNativeType(JSTypeNative)  is  not  public  in  JSType;  cannot  be  accessed  from  outside  package	3	None	replace
735	[BUG]  [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  JSType  typeRegistry  =  typeRegistry.getNativeType(null);  }  [CE]  getNativeType(JSTypeNative)  is  not  public  in  JSType;  cannot  be  accessed  from  outside  package  [FE]              NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  JSType  typeRegistry  =  typeRegistry.getNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  JSType  typeRegistry  =  typeRegistry.getNativeType(null);  }	  return    typeRegistry.getNativeType(null);    JSType    typeRegistry    =    typeRegistry.getNativeType(null);    	non-compiled	[CE]  getNativeType(JSTypeNative)  is  not  public  in  JSType;  cannot  be  accessed  from  outside  package	3	None	replace
736	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  return  getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  return  getNativeType(typeId);  }	  return    typeRegistry.getNativeType(null);    JSTypeRegistry    typeRegistry    =    getNativeType(typeId);    	compilable	  [FE]  NullPointerException  	5	28	replace
737	[BUG]  [BUGGY]  if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  return  getNativeType(typeId);  }  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  return  getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  return  getNativeType(typeId);  }	  return    typeRegistry.getNativeType(null);    JSTypeRegistry    typeRegistry    =    getNativeType(typeId);    	compilable	  [FE]  NullPointerException  	5	28	replace
738	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]                  NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeRegistry  ==  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  return  getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	if(typeRegistry  ==  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  return  getNativeType(typeId);  }	  return    typeRegistry.getNativeType(null);    JSTypeRegistry    typeRegistry    =    getNativeType(typeId);    	compilable	  [FE]  StackOverflowError  	5	28	replace
739	[BUG]  [BUGGY]  if(typeRegistry  ==  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  return  getNativeType(typeId);  }  [FE]  StackOverflowError  [FE]                  NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeRegistry  ==  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  return  getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeRegistry  ==  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  return  getNativeType(typeId);  }	  return    typeRegistry.getNativeType(null);    JSTypeRegistry    typeRegistry    =    getNativeType(typeId);    	compilable	  [FE]  StackOverflowError  	5	28	replace
740	[BUG]  [BUGGY]  return  this.restrictNullVisitor.getNativeType(typeId).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.restrictNullVisitor.getNativeType(typeId).restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.restrictNullVisitor.getNativeType(typeId).restrictByUndefinedVisitor();	  return    typeregistry.getNativeType(typeId).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol	148	None	replace
741	[BUG]  [BUGGY]  return  state.getNativeType(typeId).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  state  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  state.getNativeType(typeId).restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  state.getNativeType(typeId).restrictByUndefinedVisitor();	  return    typeregistry.getNativeType(typeId).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol  state	148	None	replace
742	[BUG]  [BUGGY]  if(resultEqualsValue)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  result  =  this.typeRegistry.getNativeType(typeId);  }  [CE]  cannot  find  symbol  resultEqualsValue  [FE]        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(resultEqualsValue)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  result  =  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(resultEqualsValue)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  result  =  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    JSType    result    =    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	111	None	replace
743	[BUG]  [BUGGY]  if(resultEqualsValue)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  result  =  this.typeRegistry.getNativeType(typeId);  }  else  {  return  resultEqualsValue;  }  [CE]  cannot  find  symbol  resultEqualsValue  [FE]          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(resultEqualsValue)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  result  =  this.typeRegistry.getNativeType(typeId);  }  else  {  return  resultEqualsValue;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(resultEqualsValue)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  result  =  this.typeRegistry.getNativeType(typeId);  }  else  {  return  resultEqualsValue;  }	  return    this.typeRegistry.getNativeType(typeId);    JSType    result    =    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	111	None	replace
744	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  result  =  this.typeRegistry.getNativeType(typeId);  }  else  {  return  resultEqualsValue;  }  [CE]  cannot  find  symbol  resultEqualsValue  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  result  =  this.typeRegistry.getNativeType(typeId);  }  else  {  return  resultEqualsValue;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  result  =  this.typeRegistry.getNativeType(typeId);  }  else  {  return  resultEqualsValue;  }	  return    this.typeRegistry.getNativeType(typeId);    JSType    result    =    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	111	None	replace
745	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId).getNativeType(typeId);  [CE]  getNativeType(JSTypeNative)  is  not  public  in  JSType;  cannot  be  accessed  from  outside  package  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId).getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId).getNativeType(typeId);	  return    typeRegistry.getNativeType(resultEqualsValue);    	non-compiled	[CE]  getNativeType(JSTypeNative)  is  not  public  in  JSType;  cannot  be  accessed  from  outside  package	96	None	replace
746	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(TYPE_IGNORE_TYPE);  [CE]  cannot  find  symbol  TYPE_IGNORE_TYPE  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(TYPE_IGNORE_TYPE);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(TYPE_IGNORE_TYPE);	  return    typeRegistry.getNativeType(resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  TYPE_IGNORE_TYPE	96	None	replace
747	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  typeId,  outcome);  [CE]  cannot  find  symbol  outcome  [FE]        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  typeId,  outcome);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  typeId,  outcome);	  return    this.typeRegistry.getNativeType(typeId,    typeId);    	non-compiled	[CE]  cannot  find  symbol  outcome	55	None	replace
748	[BUG]  [BUGGY]  if(typeId!=  null)  {  JSType  type  =  typeId.getJSType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  JSType  type  =  typeId.getJSType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  JSType  type  =  typeId.getJSType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    JSType    type    =    typeId.getJSType();    if(type!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
749	[BUG]  [BUGGY]  if(typeId  ==  null)  {  JSType  type  =  typeId.getJSType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  JSType  type  =  typeId.getJSType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  JSType  type  =  typeId.getJSType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    JSType    type    =    typeId.getJSType();    if(type!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
750	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSType  type  =  typeId.getJSType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSType  type  =  typeId.getJSType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSType  type  =  typeId.getJSType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType	  return    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    JSType    type    =    typeId.getJSType();    if(type!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  ';'  expected	114	None	replace
751	[BUG]  [BUGGY]  if(typeId!=  null)  {  JSType  type  =  typeId.getJSType();  if(type  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  JSType  type  =  typeId.getJSType();  if(type  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  JSType  type  =  typeId.getJSType();  if(type  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    JSType    type    =    typeId.getJSType();    if(type!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
752	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(name)!=  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  cannot  find  symbol  name  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(name)!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(name)!=  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(qualifiedName)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  cannot  find  symbol  name	37	None	replace
753	[BUG]  [BUGGY]  Return  typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  Return  typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	Return  typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();	  return    this.typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  ';'  expected	155	None	replace
754	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);	  return    this.typeRegistry.getNativeType(typeId);    JSType    typeId    =    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	48	None	replace
755	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  this.typeRegistry.getNativeType(typeId,  resultEqualsValue);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  this.typeRegistry.getNativeType(typeId,  resultEqualsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  this.typeRegistry.getNativeType(typeId,  resultEqualsValue);	  return    this.typeRegistry.getNativeType(typeId);    JSType    typeId    =    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	48	None	replace
756	[BUG]  [BUGGY]  typeId  =  this.typeRegistry.getNativeType(typeId);  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  typeId  =  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	typeId  =  this.typeRegistry.getNativeType(typeId);	  return    this.typeRegistry.getNativeType(typeId);    JSType    typeId    =    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  incompatible  types	48	None	replace
757	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    JSTypeNative    typeId    =    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	49	None	replace
758	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    this.typeRegistry.getNativeType(typeId);    JSTypeNative    typeId    =    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	49	None	replace
759	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  }  else  {  throw  new  IllegalStateException( " ");  }	  return    this.typeRegistry.getNativeType(typeId);    JSTypeNative    typeId    =    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	49	None	replace
760	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  }  else  {  return  null;  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  }  else  {  return  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  }  else  {  return  null;  }	  return    this.typeRegistry.getNativeType(typeId);    JSTypeNative    typeId    =    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	49	None	replace
761	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);  typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);  typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(typeId);    typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  not  a  statement	28	None	add
762	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);  JSType  typeId  =  typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]      AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);  JSType  typeId  =  typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(typeId);    JSType  typeId  =  typeRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	28	None	add
763	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);  JSError.make(convention,  typeId,  resultEqualsValue);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]        AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);  JSError.make(convention,  typeId,  resultEqualsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(typeId);    JSError.make(convention,  typeId,  resultEqualsValue);	  	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	28	None	add
764	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  return  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  return  null;  }	  return    this.typeRegistry.getNativeType(typeId);    return    this.typeRegistry.getNativeType(typeId);    	compilable	  [FE]  AssertionFailedError  	51	2	replace
765	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  return  null;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  return  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  return  null;  }	  return    this.typeRegistry.getNativeType(typeId);    return    this.typeRegistry.getNativeType(typeId);    	compilable	  [FE]  AssertionFailedError  	51	2	replace
766	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  return  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  return  null;  }	  return    this.typeRegistry.getNativeType(typeId);    return    this.typeRegistry.getNativeType(typeId);    	compilable	  [FE]  NullPointerException  	51	26	replace
767	[BUG]  [BUGGY]  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  return  null;  }  [FE]  NullPointerException  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  return  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  return  null;  }	  return    this.typeRegistry.getNativeType(typeId);    return    this.typeRegistry.getNativeType(typeId);    	compilable	  [FE]  NullPointerException  	51	26	replace
768	[BUG]  [BUGGY]  if(this.typeRegistry!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  missing  return  statement  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(this.typeRegistry!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(this.typeRegistry!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    return    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  missing  return  statement	51	None	replace
769	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  return  typeRegistry.getNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  return  typeRegistry.getNativeType(null);  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId    ==    null)    {    return    typeRegistry.getNativeType(null);    }    	compilable	  [FE]  NullPointerException  	118	28	replace
770	[BUG]  [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  return  typeRegistry.getNativeType(null);  }  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  return  typeRegistry.getNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  return  typeRegistry.getNativeType(null);  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId    ==    null)    {    return    typeRegistry.getNativeType(null);    }    	compilable	  [FE]  NullPointerException  	118	28	replace
771	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  return  typeRegistry.getNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  return  typeRegistry.getNativeType(null);  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId    ==    null)    {    return    typeRegistry.getNativeType(null);    }    	compilable	  [FE]  NullPointerException  	118	28	replace
772	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  return  typeRegistry.getNativeType(null);  }  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  return  typeRegistry.getNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  return  typeRegistry.getNativeType(null);  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId    ==    null)    {    return    typeRegistry.getNativeType(null);    }    	compilable	  [FE]  NullPointerException  	118	28	replace
773	[BUG]  [BUGGY]  JSType  typeId  =  typeRegistry.getNativeType(null);  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]              NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  typeId  =  typeRegistry.getNativeType(null);  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  typeId  =  typeRegistry.getNativeType(null);  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId    ==    null)    {    return    typeRegistry.getNativeType(null);    }    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	118	None	replace
774	[BUG]  [BUGGY]  return  typeId  ==  null?  null  :  typeId.restrictByTypeOfResultVisitor.instanceType();  [CE]  cannot  find  symbol  restrictByTypeOfResultVisitor  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  null  :  typeId.restrictByTypeOfResultVisitor.instanceType();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId  ==  null?  null  :  typeId.restrictByTypeOfResultVisitor.instanceType();	  return    typeId    ==    null?    null    :    typeId.instanceType();    	non-compiled	[CE]  cannot  find  symbol  restrictByTypeOfResultVisitor	183	None	replace
775	[BUG]  [BUGGY]  if(typeId!=  null)  {  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  resultEqualsValue  =  result;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  resultEqualsValue  =  result;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  resultEqualsValue  =  result;  }	  if(typeId    ==    null)    {    JSTypeNative    result    =    typeRegistry.getNativeType(typeId);    if(resultEqualsValue    ==    null)    {    resultEqualsValue    =    result;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
776	[BUG]  [BUGGY]  if(typeId!=  null)  {  JSTypeNative  result  =  getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  resultEqualsValue  =  result;  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  JSTypeNative  result  =  getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  resultEqualsValue  =  result;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  JSTypeNative  result  =  getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  resultEqualsValue  =  result;  }	  if(typeId    ==    null)    {    JSTypeNative    result    =    typeRegistry.getNativeType(typeId);    if(resultEqualsValue    ==    null)    {    resultEqualsValue    =    result;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
777	[BUG]  [BUGGY]  return  getNativeType(typeId);  JSType  resultEqualsValue  =  getNativeType(typeId);  [CE]  unreachable  statement  [FE]    StackOverflowError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  getNativeType(typeId);  JSType  resultEqualsValue  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    getNativeType(typeId);    JSType  resultEqualsValue  =  getNativeType(typeId);	  	non-compiled	[CE]  unreachable  statement	146	None	add
778	[BUG]  [BUGGY]  return  getNativeType(typeId);  resultEqualsValue  =  getNativeType(typeId);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]      StackOverflowError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  getNativeType(typeId);  resultEqualsValue  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    getNativeType(typeId);    resultEqualsValue  =  getNativeType(typeId);	  	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	146	None	add
779	[BUG]  [BUGGY]  return  getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  resultEqualsValue  =  true;  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  resultEqualsValue  =  true;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    getNativeType(typeId);    if(typeId!=  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  resultEqualsValue  =  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	146	None	add
780	[BUG]  [BUGGY]  return  getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  resultEqualsValue  =  true;  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  resultEqualsValue  =  true;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    getNativeType(typeId);    if(typeId  ==  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  resultEqualsValue  =  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	146	None	add
781	[BUG]  [BUGGY]  return  getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  resultEqualsValue  =  false;  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  resultEqualsValue  =  false;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    getNativeType(typeId);    if(typeId!=  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  resultEqualsValue  =  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	146	None	add
782	[BUG]  [BUGGY]  return  getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  resultEqualsValue  =  false;  }  [CE]  illegal  start  of  expression  [FE]              StackOverflowError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  resultEqualsValue  =  false;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    getNativeType(typeId);    if(typeId  ==  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  resultEqualsValue  =  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	146	None	add
783	[BUG]  [BUGGY]  return(typeRegistry!=  null  &&  this.typeRegistry.getNativeType(typeId)  ==  typeId);  [CE]  incomparable  types:  JSType  and  JSTypeNative  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeRegistry!=  null  &&  this.typeRegistry.getNativeType(typeId)  ==  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeRegistry!=  null  &&  this.typeRegistry.getNativeType(typeId)  ==  typeId);	  return(this.typeRegistry!=    null    &&    this.typeRegistry.getNativeType(typeId)    ==    typeId);    	non-compiled	[CE]  incomparable  types:  JSType  and  JSTypeNative	175	None	replace
784	[BUG]  [BUGGY]  return(this.typeRegistry!=  null  &&  this.typeRegistry.getNativeType(typeId)!=  typeId);  [CE]  incomparable  types:  JSType  and  JSTypeNative  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry!=  null  &&  this.typeRegistry.getNativeType(typeId)!=  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry!=  null  &&  this.typeRegistry.getNativeType(typeId)!=  typeId);	  return(this.typeRegistry!=    null    &&    this.typeRegistry.getNativeType(typeId)    ==    typeId);    	non-compiled	[CE]  incomparable  types:  JSType  and  JSTypeNative	175	None	replace
785	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)  >>  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)  >>  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)  >>  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    if(typeId!=    null)    {    return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	170	None	replace
786	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)&&!typeRegistry.getInstanceType(typeId);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)&&!typeRegistry.getInstanceType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)&&!typeRegistry.getInstanceType(typeId);	  return    typeRegistry.getNativeType(typeId)&&!typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
787	[BUG]  [BUGGY]  return  typeregistry  ==  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  cannot  find  symbol  typeregistry  [FE]    AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeregistry  ==  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeregistry  ==  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  cannot  find  symbol  typeregistry	152	None	replace
788	[BUG]  [BUGGY]  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =(typeId!=  null)?  this.typeRegistry.getNativeType(typeId):  null;  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]    AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =(typeId!=  null)?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId!=    null?    this.typeRegistry.getNativeType(typeId):    null;    JSType  typeId  =(typeId!=  null)?  this.typeRegistry.getNativeType(typeId):  null;	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	176	None	add
789	[BUG]  [BUGGY]  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId!=    null?    this.typeRegistry.getNativeType(typeId):    null;    typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;	  	non-compiled	[CE]  not  a  statement	176	None	add
790	[BUG]  [BUGGY]  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  JSType  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  typeId;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  JSType  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  typeId;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId!=    null?    this.typeRegistry.getNativeType(typeId):    null;    if(typeId!=  null)  {  JSType  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  typeId;  }	  	non-compiled	[CE]  illegal  start  of  expression	176	None	add
791	[BUG]  [BUGGY]  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  JSType  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeId;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  JSType  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeId;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId!=    null?    this.typeRegistry.getNativeType(typeId):    null;    if(typeId!=  null)  {  JSType  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeId;  }	  	non-compiled	[CE]  illegal  start  of  expression	176	None	add
792	[BUG]  [BUGGY]  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  JSType  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId):  null;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  JSType  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId!=    null?    this.typeRegistry.getNativeType(typeId):    null;    if(typeId!=  null)  {  JSType  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId):  null;  }	  	non-compiled	[CE]  ';'  expected	176	None	add
793	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  resultElement);  [CE]  cannot  find  symbol  resultElement  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  resultElement);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  resultElement);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  resultElement	141	None	replace
794	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  country.restrictNullVisitor);  [CE]  cannot  find  symbol  country  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  country.restrictNullVisitor);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  country.restrictNullVisitor);	  return    typeRegistry.getNativeType(typeId,    state.restrictNullVisitor);    	non-compiled	[CE]  cannot  find  symbol  country	134	None	replace
795	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  nullVisitor);  [CE]  cannot  find  symbol  nullVisitor  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  nullVisitor);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  nullVisitor);	  return    typeRegistry.getNativeType(typeId,    state.restrictNullVisitor);    	non-compiled	[CE]  cannot  find  symbol  nullVisitor	134	None	replace
796	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  resultequalsValue);  [CE]  cannot  find  symbol  resultequalsValue  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  resultequalsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this,  resultequalsValue);	  return    typeRegistry.getNativeType(typeId,    this,    constraintEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  resultequalsValue	133	None	replace
797	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  results);  [CE]  cannot  find  symbol  results  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  results);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this,  results);	  return    typeRegistry.getNativeType(typeId,    this,    constraintEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  results	133	None	replace
798	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId):  null;  }  else  {  return  typeRegistry.getNativeType(typeId);  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId):  null;  }  else  {  return  typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId):  null;  }  else  {  return  typeRegistry.getNativeType(typeId);  }	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    if(typeId!=    null)    {    JSType    type    =    typeRegistry.getNativeType(typeId);    if(type!=    null)    {    return    typeRegistry.getNativeType(typeId):    null;    }    	non-compiled	[CE]  ';'  expected	109	None	replace
799	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeId;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeId;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeId;  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSTypeNative    typeId    =    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    return    typeId;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
800	[BUG]  [BUGGY]  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeId;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeId;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeId;  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSTypeNative    typeId    =    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    return    typeId;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
801	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  type  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  type  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  type	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSTypeNative    typeId    =    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    return    typeId;    }    	non-compiled	[CE]  ';'  expected	52	None	replace
802	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  type  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  type  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  type	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSTypeNative    typeId    =    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    return    typeId;    }    	non-compiled	[CE]  ';'  expected	52	None	replace
803	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSTypeNative    typeId    =    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    return    typeId;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
804	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  return  typeId;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  return  typeId;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  return  typeId;  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSTypeNative    typeId    =    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    return    typeId;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
805	[BUG]  [BUGGY]  if(typeId!=  null)  {  JSType  type  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  JSType  type  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  JSType  type  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSType    type    =    getNativeType(typeId);    if(type!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
806	[BUG]  [BUGGY]  if(typeId  ==  null)  {  JSType  type  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  JSType  type  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  JSType  type  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSType    type    =    getNativeType(typeId);    if(type!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
807	[BUG]  [BUGGY]  if(typeId  ==  null)  {  JSType  type  =  getNativeType(typeId);  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  JSType  type  =  getNativeType(typeId);  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  JSType  type  =  getNativeType(typeId);  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSType    type    =    getNativeType(typeId);    if(type!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
808	[BUG]  [BUGGY]  if(typeId!=  null)  {  JSType  type  =  getNativeType(typeId);  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  JSType  type  =  getNativeType(typeId);  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  JSType  type  =  getNativeType(typeId);  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSType    type    =    getNativeType(typeId);    if(type!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
809	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSType  type  =  getNativeType(typeId);  if(type!=  null)  {  return  this.typeRegistry.getNativeType  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSType  type  =  getNativeType(typeId);  if(type!=  null)  {  return  this.typeRegistry.getNativeType  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSType  type  =  getNativeType(typeId);  if(type!=  null)  {  return  this.typeRegistry.getNativeType	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSType    type    =    getNativeType(typeId);    if(type!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  ';'  expected	115	None	replace
810	[BUG]  [BUGGY]  resultEqualsValue  =  getNativeType(typeId,  result);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  getNativeType(typeId,  result);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  getNativeType(typeId,  result);	  resultEqualsValue    =    getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	130	None	replace
811	[BUG]  [BUGGY]  ResultEqualsValue  =  getNativeType(typeId);  [CE]  cannot  find  symbol  ResultEqualsValue  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  ResultEqualsValue  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	ResultEqualsValue  =  getNativeType(typeId);	  resultEqualsValue    =    getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  ResultEqualsValue	130	None	replace
812	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return(typeId  ==  null)?  this.typeRegistry.getNativeType(typeId):  null;	  return    typeId    ==    null?    this.typeRegistry.getNativeType(typeId):    null;    	compilable	  [FE]  NullPointerException  	179	26	replace
813	[BUG]  [BUGGY]  return(typeId  ==  null)?  this.typeRegistry.getNativeType(typeId):  null;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId  ==  null)?  this.typeRegistry.getNativeType(typeId):  null;	  return    typeId    ==    null?    this.typeRegistry.getNativeType(typeId):    null;    	compilable	  [FE]  NullPointerException  	179	26	replace
814	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId!=  null)?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return(typeId!=  null)?  this.typeRegistry.getNativeType(typeId):  null;	  return    typeId    ==    null?    this.typeRegistry.getNativeType(typeId):    null;    	compilable	  [FE]  AssertionFailedError  	179	2	replace
815	[BUG]  [BUGGY]  return(typeId!=  null)?  this.typeRegistry.getNativeType(typeId):  null;  [FE]  AssertionFailedError  [FE]      NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId!=  null)?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId!=  null)?  this.typeRegistry.getNativeType(typeId):  null;	  return    typeId    ==    null?    this.typeRegistry.getNativeType(typeId):    null;    	compilable	  [FE]  AssertionFailedError  	179	2	replace
816	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(nativeId,  typeId);  [CE]  cannot  find  symbol  nativeId  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(nativeId,  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(nativeId,  typeId);	  return    typeRegistry.getNativeType(nativeId);    	non-compiled	[CE]  cannot  find  symbol  nativeId	135	None	replace
817	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null  &&  typeRegistry.getNativeType(typeId).isUnknownType()  :  null;  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null  &&  typeRegistry.getNativeType(typeId).isUnknownType()  :  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)!=  null  &&  typeRegistry.getNativeType(typeId).isUnknownType()  :  null;	  return    typeRegistry.getNativeType(typeId)!=    null    &&    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  ';'  expected	36	None	replace
818	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null  &&  typeRegistry.getNativeType(typeId)=  null;  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null  &&  typeRegistry.getNativeType(typeId)=  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)!=  null  &&  typeRegistry.getNativeType(typeId)=  null;	  return    typeRegistry.getNativeType(typeId)!=    null    &&    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	36	None	replace
819	[BUG]  [BUGGY]  return  this.convention.getNativeType(typeId,  typeId);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.convention.getNativeType(typeId,  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.convention.getNativeType(typeId,  typeId);	  return    typeRegistry.getNativeType(typeId,    this.qualifiedName);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
820	[BUG]  [BUGGY]  return  this.restrictUndefinedVisitor.getNativeType(typeId,  typeId);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.restrictUndefinedVisitor.getNativeType(typeId,  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.restrictUndefinedVisitor.getNativeType(typeId,  typeId);	  return    typeRegistry.getNativeType(typeId,    this.qualifiedName);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
821	[BUG]  [BUGGY]  return  this.qualifiedName.getNativeType(typeId,  typeId);  [CE]  cannot  find  symbol  qualifiedName  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.qualifiedName.getNativeType(typeId,  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.qualifiedName.getNativeType(typeId,  typeId);	  return    typeRegistry.getNativeType(typeId,    this.qualifiedName);    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	43	None	replace
822	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(this.value,  typeId);  [CE]  cannot  find  symbol  value  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(this.value,  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(this.value,  typeId);	  return    typeRegistry.getNativeType(typeId,    this.value);    	non-compiled	[CE]  cannot  find  symbol  value	89	None	replace
823	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.value,  resultEqualsValue);  [CE]  cannot  find  symbol  value  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.value,  resultEqualsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this.value,  resultEqualsValue);	  return    typeRegistry.getNativeType(typeId,    this.value);    	non-compiled	[CE]  cannot  find  symbol  value	89	None	replace
824	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.value,  outcomeEqualsValue);  [CE]  cannot  find  symbol  value  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.value,  outcomeEqualsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this.value,  outcomeEqualsValue);	  return    typeRegistry.getNativeType(typeId,    this.value);    	non-compiled	[CE]  cannot  find  symbol  value	89	None	replace
825	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId).reasonToRestrictNullVisitor;  [CE]  cannot  find  symbol  reasonToRestrictNullVisitor  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId).reasonToRestrictNullVisitor;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId).reasonToRestrictNullVisitor;	  return    typeRegistry.getNativeType(typeId).restrictNullVisitor;    	non-compiled	[CE]  cannot  find  symbol  reasonToRestrictNullVisitor	9	None	replace
826	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId),  restrictNullVisitor.restrictByUndefined();  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId),  restrictNullVisitor.restrictByUndefined();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId),  restrictNullVisitor.restrictByUndefined();	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId).restrictByUndefined();    	non-compiled	[CE]  ';'  expected	157	None	replace
827	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  registry.getNativeType(typeId).restrictByUndefined();  [CE]  cannot  find  symbol  registry  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  registry.getNativeType(typeId).restrictByUndefined();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  registry.getNativeType(typeId).restrictByUndefined();	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId).restrictByUndefined();    	non-compiled	[CE]  cannot  find  symbol  registry	157	None	replace
828	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  new  JSTypeNative(typeId);  [CE]  enum  types  may  not  be  instantiated  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  new  JSTypeNative(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  new  JSTypeNative(typeId);	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSTypeNative    typeId    =    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  enum  types  may  not  be  instantiated	27	None	replace
829	[BUG]  [BUGGY]  JSError.make(convention,  typeId,  value):  null;  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSError.make(convention,  typeId,  value):  null;  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSError.make(convention,  typeId,  value):  null;  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSTypeNative    typeId    =    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  ';'  expected	27	None	replace
830	[BUG]  [BUGGY]  return  this.value.getNativeType(typeId,  this.typeRegistry);  [CE]  cannot  find  symbol  value  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.value.getNativeType(typeId,  this.typeRegistry);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.value.getNativeType(typeId,  this.typeRegistry);	  return    this.typeRegistry.getNativeType(typeId,    this.value);    	non-compiled	[CE]  cannot  find  symbol  value	58	None	replace
831	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(this.qualifiedName,  typeId);  [CE]  cannot  find  symbol  qualifiedName  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(this.qualifiedName,  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(this.qualifiedName,  typeId);	  return    this.typeRegistry.getNativeType(typeId,    this.value);    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	58	None	replace
832	[BUG]  [BUGGY]  if(typeId!=  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    JSTypeNative    typeId    =    typeId.getJSType();    if(typeId!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  illegal  start  of  expression	186	None	replace
833	[BUG]  [BUGGY]  if(typeId!=  null)  {  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    JSTypeNative    typeId    =    typeId.getJSType();    if(typeId!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  illegal  start  of  expression	186	None	replace
834	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.getN  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.getN  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.getN	  return    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    JSTypeNative    typeId    =    typeId.getJSType();    if(typeId!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  ';'  expected	186	None	replace
835	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.	  return    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    JSTypeNative    typeId    =    typeId.getJSType();    if(typeId!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  <identifier>  expected	186	None	replace
836	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry	  return    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    JSTypeNative    typeId    =    typeId.getJSType();    if(typeId!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  ';'  expected	186	None	replace
837	[BUG]  [BUGGY]  return  typeId  ==  null  ||  getNativeType(typeId):  null;  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null  ||  getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId  ==  null  ||  getNativeType(typeId):  null;	  return    typeId    ==    null?    getNativeType(typeId):    null;    	non-compiled	[CE]  ';'  expected	181	None	replace
838	[BUG]  [BUGGY]  if(typeId!=  null)  {  JSType  type  =  typeId.getNativeType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  JSType  type  =  typeId.getNativeType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  JSType  type  =  typeId.getNativeType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSType    type    =    typeId.getNativeType();    if(type!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
839	[BUG]  [BUGGY]  if(typeId  ==  null)  {  JSType  type  =  typeId.getNativeType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  JSType  type  =  typeId.getNativeType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  JSType  type  =  typeId.getNativeType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSType    type    =    typeId.getNativeType();    if(type!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
840	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSType  type  =  typeId.getNativeType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSType  type  =  typeId.getNativeType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSType  type  =  typeId.getNativeType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSType    type    =    typeId.getNativeType();    if(type!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  ';'  expected	113	None	replace
841	[BUG]  [BUGGY]  if(typeId!=  null)  {  JSType  type  =  typeId.getNativeType();  if(type  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  JSType  type  =  typeId.getNativeType();  if(type  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  JSType  type  =  typeId.getNativeType();  if(type  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSType    type    =    typeId.getNativeType();    if(type!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
842	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSType  type  =  typeId.getNativeType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSType  type  =  typeId.getNativeType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSType  type  =  typeId.getNativeType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSType    type    =    typeId.getNativeType();    if(type!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  ';'  expected	113	None	replace
843	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.NULL_TYPE).restrictByTrueTypeOfResultVisitor();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.NULL_TYPE).restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.NULL_TYPE).restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(GLOBAL_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
844	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE),  this.restrictByUndefinedVisitor();  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE),  this.restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(UNKNOWN_TYPE),  this.restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(UNKNOWN_TYPE).restrictByUndefinedVisitor();    	non-compiled	[CE]  ';'  expected	60	None	replace
845	[BUG]  [BUGGY]  return  UNKNOWN_TYPE.getNativeType(typeId).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  UNKNOWN_TYPE.getNativeType(typeId).restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  UNKNOWN_TYPE.getNativeType(typeId).restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(UNKNOWN_TYPE).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
846	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE),  resultEqualsValue,  typeRegistry.restrictByUndefinedVisitor();  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE),  resultEqualsValue,  typeRegistry.restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(UNKNOWN_TYPE),  resultEqualsValue,  typeRegistry.restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(UNKNOWN_TYPE).restrictByUndefinedVisitor();    	non-compiled	[CE]  ';'  expected	60	None	replace
847	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE),  resultEqualsValue).restrictByUndefinedVisitor();  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE),  resultEqualsValue).restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(UNKNOWN_TYPE),  resultEqualsValue).restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(UNKNOWN_TYPE).restrictByUndefinedVisitor();    	non-compiled	[CE]  ';'  expected	60	None	replace
848	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(this,  typeId);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(this,  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(this,  typeId);	  return    typeRegistry.getNativeType(typeId,    this,    qualifiedName);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	94	None	replace
849	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]    AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId)!=    null?    this.typeRegistry.getNativeType(typeId):    null;    JSType  typeId  =  getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	125	None	add
850	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  JSType  typeId  =  typeId.getNativeType();  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId):  null;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  JSType  typeId  =  typeId.getNativeType();  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId)!=    null?    this.typeRegistry.getNativeType(typeId):    null;    if(typeId!=  null)  {  JSType  typeId  =  typeId.getNativeType();  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId):  null;  }	  	non-compiled	[CE]  ';'  expected	125	None	add
851	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  resultEqualsValue  =  getNativeType(typeId);  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  resultEqualsValue  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId)!=    null?    this.typeRegistry.getNativeType(typeId):    null;    JSType  resultEqualsValue  =  getNativeType(typeId);	  	non-compiled	[CE]  unreachable  statement	125	None	add
852	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  AssertionFailedError  <  JSType>  result  =  this.typeRegistry.getNativeType(typeId);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  AssertionFailedError  <  JSType>  result  =  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId)!=    null?    this.typeRegistry.getNativeType(typeId):    null;    AssertionFailedError  <  JSType>  result  =  this.typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  cannot  find  symbol	125	None	add
853	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  JSType  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId):  null;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  JSType  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId)!=    null?    this.typeRegistry.getNativeType(typeId):    null;    if(typeId!=  null)  {  JSType  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId):  null;  }	  	non-compiled	[CE]  ';'  expected	125	None	add
854	[BUG]  [BUGGY]  return  registry.getNativeType(typeId)?  typeRegistry.getNativeType(typeId):  getNativeType(typeId);  [CE]  cannot  find  symbol  registry  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  registry.getNativeType(typeId)?  typeRegistry.getNativeType(typeId):  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  registry.getNativeType(typeId)?  typeRegistry.getNativeType(typeId):  getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)?    typeRegistry.getNativeType(typeId):    registry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  registry	162	None	replace
855	[BUG]  [BUGGY]  return  register.getNativeType(typeId)?  typeRegistry.getNativeType(typeId):  typeRegistry.getNativeType(typeId);  [CE]  cannot  find  symbol  register  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  register.getNativeType(typeId)?  typeRegistry.getNativeType(typeId):  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  register.getNativeType(typeId)?  typeRegistry.getNativeType(typeId):  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)?    typeRegistry.getNativeType(typeId):    registry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  register	162	None	replace
856	[BUG]  [BUGGY]  return  registry.getNativeType(typeId)?  typeRegistry.getNativeType(typeId):  typeregistry.getNativeType(typeId);  [CE]  cannot  find  symbol  registry  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  registry.getNativeType(typeId)?  typeRegistry.getNativeType(typeId):  typeregistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  registry.getNativeType(typeId)?  typeRegistry.getNativeType(typeId):  typeregistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)?    typeRegistry.getNativeType(typeId):    registry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  registry	162	None	replace
857	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null)  {  resultEqualsValue  =  getNativeType(typeId);  }  [CE]  cannot  find  symbol  resultEqualsValue  [FE]              NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(resultEqualsValue  ==  null)  {  resultEqualsValue  =  getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(resultEqualsValue  ==  null)  {  resultEqualsValue  =  getNativeType(typeId);  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null)    {    resultEqualsValue    =    getNativeType(typeId);    }    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	120	None	replace
858	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  getNativeType(typeId),  resultEqualsValue);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  getNativeType(typeId),  resultEqualsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  getNativeType(typeId),  resultEqualsValue);	  return    typeRegistry.getNativeType(typeId,    getNativeType(typeId));    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	103	None	replace
859	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  getNativeType(typeId),  result);  [CE]  cannot  find  symbol  result  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  getNativeType(typeId),  result);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  getNativeType(typeId),  result);	  return    typeRegistry.getNativeType(typeId,    getNativeType(typeId));    	non-compiled	[CE]  cannot  find  symbol  result	103	None	replace
860	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  sourceName);  [CE]  cannot  find  symbol  sourceName  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  sourceName);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  sourceName);	  return    typeRegistry.getNativeType(typeId,    id);    	non-compiled	[CE]  cannot  find  symbol  sourceName	45	None	replace
861	[BUG]  [BUGGY]  return  this.convention.getNativeType(typeId);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.convention.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.convention.getNativeType(typeId);	  return    typeregistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
862	[BUG]  [BUGGY]  return  owner.getNativeType(typeId);  [CE]  cannot  find  symbol  owner  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  owner.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  owner.getNativeType(typeId);	  return    typeregistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  owner	73	None	replace
863	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(TYPE_Id).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  TYPE_Id  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(TYPE_Id).restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(TYPE_Id).restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(qualifiedName).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol  TYPE_Id	61	None	replace
864	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(keyId).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  keyId  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(keyId).restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(keyId).restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(qualifiedName).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol  keyId	61	None	replace
865	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.restrictUndefinedVisitor,  outcome);  [CE]  cannot  find  symbol  outcome  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.restrictUndefinedVisitor,  outcome);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this.restrictUndefinedVisitor,  outcome);	  return    typeRegistry.getNativeType(typeId,    this.restrictUndefinedVisitor);    	non-compiled	[CE]  cannot  find  symbol  outcome	104	None	replace
866	[BUG]  [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSType  result  =  this.typeRegistry.getNativeType(typeId);  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSType  result  =  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry    ==    null)?    null    :    this.typeRegistry.getNativeType(typeId);    JSType  result  =  this.typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  unreachable  statement	173	None	add
867	[BUG]  [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  AssertionFailedError  <  JSType>  result  =  this.typeRegistry.getNativeType(typeId);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  AssertionFailedError  <  JSType>  result  =  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry    ==    null)?    null    :    this.typeRegistry.getNativeType(typeId);    AssertionFailedError  <  JSType>  result  =  this.typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  cannot  find  symbol	173	None	add
868	[BUG]  [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]        AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry    ==    null)?    null    :    this.typeRegistry.getNativeType(typeId);    JSType  typeId  =  this.typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	173	None	add
869	[BUG]  [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  AssertionFailedError  <  JSType>  result  =  getNativeType(typeId);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  AssertionFailedError  <  JSType>  result  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry    ==    null)?    null    :    this.typeRegistry.getNativeType(typeId);    AssertionFailedError  <  JSType>  result  =  getNativeType(typeId);	  	non-compiled	[CE]  cannot  find  symbol	173	None	add
870	[BUG]  [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSType  resultEqualsValue  =  getNativeType(typeId);  [CE]  unreachable  statement  [FE]            AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSType  resultEqualsValue  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry    ==    null)?    null    :    this.typeRegistry.getNativeType(typeId);    JSType  resultEqualsValue  =  getNativeType(typeId);	  	non-compiled	[CE]  unreachable  statement	173	None	add
871	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(NO_TYPE).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(NO_TYPE).restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(NO_TYPE).restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(NO_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
872	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(NO_TYPE),  this.restrictByTrueTypeOfResultVisitor();  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(NO_TYPE),  this.restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(NO_TYPE),  this.restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(NO_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  ';'  expected	86	None	replace
873	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId).toRestrictByTrueTypeOfResultVisitor;  [CE]  cannot  find  symbol  toRestrictByTrueTypeOfResultVisitor  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId).toRestrictByTrueTypeOfResultVisitor;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId).toRestrictByTrueTypeOfResultVisitor;	  return    typeRegistry.getNativeType(typeId).restrictByUndefinedVisitor;    	non-compiled	[CE]  cannot  find  symbol  toRestrictByTrueTypeOfResultVisitor	11	None	replace
874	[BUG]  [BUGGY]  return  typeId  ==  null?  getNativeType(typeId):  null;  JSType  typeId  =  typeId  ==  null?  getNativeType(typeId):  null;  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]    NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  getNativeType(typeId):  null;  JSType  typeId  =  typeId  ==  null?  getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId    ==    null?    getNativeType(typeId):    null;    JSType  typeId  =  typeId  ==  null?  getNativeType(typeId):  null;	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	180	None	add
875	[BUG]  [BUGGY]  return  typeId  ==  null?  getNativeType(typeId):  null;  if(typeId  ==  null)  {  JSType  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  typeId;  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  getNativeType(typeId):  null;  if(typeId  ==  null)  {  JSType  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  typeId;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId    ==    null?    getNativeType(typeId):    null;    if(typeId  ==  null)  {  JSType  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  typeId;  }	  	non-compiled	[CE]  illegal  start  of  expression	180	None	add
876	[BUG]  [BUGGY]  return  typeId  ==  null?  getNativeType(typeId):  null;  JSType  typeId  =  typeId.getNativeType();  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]        NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  getNativeType(typeId):  null;  JSType  typeId  =  typeId.getNativeType();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId    ==    null?    getNativeType(typeId):    null;    JSType  typeId  =  typeId.getNativeType();	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	180	None	add
877	[BUG]  [BUGGY]  return  getNativeType(typeId,  resultEqualsValue);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]    StackOverflowError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  getNativeType(typeId,  resultEqualsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  getNativeType(typeId,  resultEqualsValue);	  return    getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	147	None	replace
878	[BUG]  [BUGGY]  return  getNativeType(typeId,  state);  [CE]  cannot  find  symbol  state  [FE]      StackOverflowError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  getNativeType(typeId,  state);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  getNativeType(typeId,  state);	  return    getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  state	147	None	replace
879	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  getNativeType(null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return  getNativeType(null);	  return    getNativeType(typeId);    	compilable	  [FE]  StackOverflowError  	147	28	replace
880	[BUG]  [BUGGY]  return  getNativeType(null);  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  getNativeType(null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  getNativeType(null);	  return    getNativeType(typeId);    	compilable	  [FE]  StackOverflowError  	147	28	replace
881	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  typeId.equals(value);  [CE]  cannot  find  symbol  value  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  typeId.equals(value);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)&&  typeId.equals(value);	  return    typeRegistry.getNativeType(typeId)&&    typeId.equals(typeId);    	non-compiled	[CE]  cannot  find  symbol  value	98	None	replace
882	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE),  resultEqualsValue,  typeRegistry.restrictByTrueTypeOfResultVisitor();  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE),  resultEqualsValue,  typeRegistry.restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(UNKNOWN_TYPE),  resultEqualsValue,  typeRegistry.restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(UNKNOWN_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  ';'  expected	82	None	replace
883	[BUG]  [BUGGY]  return  UNKNOWN_TYPE.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  UNKNOWN_TYPE.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  UNKNOWN_TYPE.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(UNKNOWN_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
884	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE),  resultEqualsValue).restrictByTrueTypeOfResultVisitor();  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE),  resultEqualsValue).restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(UNKNOWN_TYPE),  resultEqualsValue).restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(UNKNOWN_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  ';'  expected	82	None	replace
885	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this  :  typeRegistry.getNativeType(typeId);  [CE]  incompatible  types  [FE]        NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this  :  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId)!=  null?  this  :  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)!=    null?    this    :    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  incompatible  types	156	None	replace
886	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  resultEqualsValue,  null);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  resultEqualsValue,  null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  resultEqualsValue,  null);	  return    typeRegistry.getNativeType(typeId,    null);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	44	None	replace
887	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  null,  result);  [CE]  cannot  find  symbol  result  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  null,  result);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  null,  result);	  return    typeRegistry.getNativeType(typeId,    null);    	non-compiled	[CE]  cannot  find  symbol  result	44	None	replace
888	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  sourceName,  null);  [CE]  cannot  find  symbol  sourceName  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  sourceName,  null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  sourceName,  null);	  return    typeRegistry.getNativeType(typeId,    null);    	non-compiled	[CE]  cannot  find  symbol  sourceName	44	None	replace
889	[BUG]  [BUGGY]  null  result  =  typeRegistry.getNativeType(typeId);  [CE]  not  a  statement  [FE]          NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  null  result  =  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	null  result  =  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(null);    JSTypeNative    result    =    typeRegistry.getNativeType(null);    	non-compiled	[CE]  not  a  statement	2	None	replace
890	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(OBJECT_TYPE),  resultEqualsValue,  typeRegistry.restrictByTrueTypeOfResultVisitor();  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(OBJECT_TYPE),  resultEqualsValue,  typeRegistry.restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(OBJECT_TYPE),  resultEqualsValue,  typeRegistry.restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(OBJECT_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  ';'  expected	128	None	replace
891	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(OBJECT_TYPE),  resultEqualsValue).restrictByTrueTypeOfResultVisitor();  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(OBJECT_TYPE),  resultEqualsValue).restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(OBJECT_TYPE),  resultEqualsValue).restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(OBJECT_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  ';'  expected	128	None	replace
892	[BUG]  [BUGGY]  JSTypeRegistry  typeRegistry  =  null;  [CE]  missing  return  statement  [FE]                  NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSTypeRegistry  typeRegistry  =  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSTypeRegistry  typeRegistry  =  null;	  return    typeRegistry.getNativeType(null);    typeRegistry.setNativeType(null);    	non-compiled	[CE]  missing  return  statement	6	None	replace
893	[BUG]  [BUGGY]  JSTypeRegistry  typeRegistry  =  getNativeRegistry().getNativeType(typeId);  [CE]  cannot  find  symbol  [FE]                    NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSTypeRegistry  typeRegistry  =  getNativeRegistry().getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSTypeRegistry  typeRegistry  =  getNativeRegistry().getNativeType(typeId);	  return    typeRegistry.getNativeType(null);    typeRegistry.setNativeType(null);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
894	[BUG]  [BUGGY]  JSTypeRegistry  typeRegistry  =  getNativeTypeRegistry().getNativeType(typeId);  [CE]  cannot  find  symbol  [FE]                      NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSTypeRegistry  typeRegistry  =  getNativeTypeRegistry().getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSTypeRegistry  typeRegistry  =  getNativeTypeRegistry().getNativeType(typeId);	  return    typeRegistry.getNativeType(null);    typeRegistry.setNativeType(null);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
895	[BUG]  [BUGGY]  if(typeId!=  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSTypeNative    typeId    =    getNativeType(typeId);    if(typeId!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
896	[BUG]  [BUGGY]  if(typeId  ==  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSTypeNative    typeId    =    getNativeType(typeId);    if(typeId!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
897	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSTypeNative    typeId    =    getNativeType(typeId);    if(typeId!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
898	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getN  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getN  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getN	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSTypeNative    typeId    =    getNativeType(typeId);    if(typeId!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  ';'  expected	50	None	replace
899	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return  getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType    typeId    =    getNativeType(typeId);    	compilable	  [FE]  StackOverflowError  	106	28	replace
900	[BUG]  [BUGGY]  return  getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [FE]  StackOverflowError  [FE]        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType    typeId    =    getNativeType(typeId);    	compilable	  [FE]  StackOverflowError  	106	28	replace
901	[BUG]  [BUGGY]  if(typeId!=  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null  [CE]  ')'  expected  [FE]                NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null    ||    typeId.equals(typeId))    {    return    typeRegistry.getNativeType(null    	non-compiled	[CE]  ')'  expected	169	None	replace
902	[BUG]  [BUGGY]  if(typeId!=  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null);  }  [CE]  missing  return  statement  [FE]                  NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null  ||  typeId.equals(typeId))  {  return  typeRegistry.getNativeType(null);  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null    ||    typeId.equals(typeId))    {    return    typeRegistry.getNativeType(null    	non-compiled	[CE]  missing  return  statement	169	None	replace
903	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null  }  [CE]  ')'  expected  [FE]                    NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  typeRegistry.getNativeType(null  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null    ||    typeId.equals(typeId))    {    return    typeRegistry.getNativeType(null    	non-compiled	[CE]  ')'  expected	169	None	replace
904	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)?  null  :  typeRegistry.getNativeType(value);  [CE]  incompatible  types  [FE]          NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)?  null  :  typeRegistry.getNativeType(value);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)?  null  :  typeRegistry.getNativeType(value);	  return    typeRegistry.getNativeType(typeId)?    null    :    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  incompatible  types	30	None	replace
905	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)?  null  :  typeRegistry.getNativeType(typeId,  resultEqualsValue);  [CE]  incompatible  types  [FE]            NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)?  null  :  typeRegistry.getNativeType(typeId,  resultEqualsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)?  null  :  typeRegistry.getNativeType(typeId,  resultEqualsValue);	  return    typeRegistry.getNativeType(typeId)?    null    :    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  incompatible  types	30	None	replace
906	[BUG]  [BUGGY]  return  getNativeType(typeId)?  null  :  typeRegistry.getNativeType(typeId);  [CE]  incompatible  types  [FE]              NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  getNativeType(typeId)?  null  :  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  getNativeType(typeId)?  null  :  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)?    null    :    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  incompatible  types	30	None	replace
907	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals(  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals(  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals(	  return    typeRegistry.getNativeType(typeId)||    typeId.equals(   "object   ")||    typeId.equals(   "object   ")||    typeId.equals(   "object   ")||    typeId.equals(   "object   "));    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
908	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.	  return    typeRegistry.getNativeType(typeId)||    typeId.equals(   "object   ")||    typeId.equals(   "object   ")||    typeId.equals(   "object   ")||    typeId.equals(   "object   "));    	non-compiled	[CE]  <identifier>  expected	160	None	replace
909	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId	  return    typeRegistry.getNativeType(typeId)||    typeId.equals(   "object   ")||    typeId.equals(   "object   ")||    typeId.equals(   "object   ")||    typeId.equals(   "object   "));    	non-compiled	[CE]  	160	None	replace
910	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return  getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;	  return    this.typeRegistry.getNativeType(typeId)!=    null?    this.typeRegistry.getNativeType(typeId):    null;    	compilable	  [FE]  StackOverflowError  	126	28	replace
911	[BUG]  [BUGGY]  return  getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  [FE]  StackOverflowError  [FE]    AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;	  return    this.typeRegistry.getNativeType(typeId)!=    null?    this.typeRegistry.getNativeType(typeId):    null;    	compilable	  [FE]  StackOverflowError  	126	28	replace
912	[BUG]  [BUGGY]  return  getNativeType(typeId)?  typeRegistry.getNativeType(typeId):  null;  [CE]  incompatible  types  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  getNativeType(typeId)?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  getNativeType(typeId)?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  incompatible  types	97	None	replace
913	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId),  typeRegistry.getNativeType(typeId):  null;  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId),  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId),  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  ';'  expected	97	None	replace
914	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(resultEqualsValue,  typeId);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(resultEqualsValue,  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(resultEqualsValue,  typeId);	  return    typeRegistry.getNativeType(value,    typeId);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	101	None	replace
915	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  null;  }	  Return    typeRegistry.getNativeType(typeId);    	compilable	  [FE]  AssertionFailedError  	105	2	replace
916	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  null;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  null;  }	  Return    typeRegistry.getNativeType(typeId);    	compilable	  [FE]  AssertionFailedError  	105	2	replace
917	[BUG]  [BUGGY]  Return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  Return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	Return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId);	  Return    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  ';'  expected	105	None	replace
918	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  getNativeType(typeId);  }	  Return    typeRegistry.getNativeType(typeId);    	compilable	  [FE]  AssertionFailedError  	105	2	replace
919	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  getNativeType(typeId);  }  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  getNativeType(typeId);  }	  Return    typeRegistry.getNativeType(typeId);    	compilable	  [FE]  AssertionFailedError  	105	2	replace
920	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  [CE]  missing  return  statement  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }	  Return    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  missing  return  statement	105	None	replace
921	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  typeRegistry.getNativeType(typeId);  }	  Return    typeRegistry.getNativeType(typeId);    	compilable	  [FE]  AssertionFailedError  	105	2	replace
922	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  typeRegistry.getNativeType(typeId);  }  [FE]  AssertionFailedError  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  typeRegistry.getNativeType(typeId);  }	  Return    typeRegistry.getNativeType(typeId);    	compilable	  [FE]  AssertionFailedError  	105	2	replace
923	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId),  this.restrictByUndefinedVisitor();  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId),  this.restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId),  this.restrictByUndefinedVisitor();	  return    this.typeRegistry.getNativeType(typeId).restrictByUndefinedVisitor();    	non-compiled	[CE]  ';'  expected	150	None	replace
924	[BUG]  [BUGGY]  if(typeId!=  null)  {  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  resultEqualsValue  =  resultEqualsValue;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  resultEqualsValue  =  resultEqualsValue;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  resultEqualsValue  =  resultEqualsValue;  }	  if(typeId    ==    null)    {    JSTypeNative    result    =    typeRegistry.getNativeType(typeId);    if(resultEqualsValue    ==    null)    {    resultEqualsValue    =    resultEqualsValue;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
925	[BUG]  [BUGGY]  if(typeId!=  null)  {  JSTypeNative  result  =  getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  resultEqualsValue  =  resultEqualsValue;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  JSTypeNative  result  =  getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  resultEqualsValue  =  resultEqualsValue;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  JSTypeNative  result  =  getNativeType(typeId);  if(resultEqualsValue  ==  null)  {  resultEqualsValue  =  resultEqualsValue;  }	  if(typeId    ==    null)    {    JSTypeNative    result    =    typeRegistry.getNativeType(typeId);    if(resultEqualsValue    ==    null)    {    resultEqualsValue    =    resultEqualsValue;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
926	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId).restrictNull();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId).restrictNull();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId).restrictNull();	  return    typeRegistry.getNativeType(typeId)    >=    null;    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
927	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(null,  typeId,  result);  [CE]  cannot  find  symbol  result  [FE]            NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(null,  typeId,  result);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(null,  typeId,  result);	  return    typeRegistry.getNativeType(null,    typeId);    	non-compiled	[CE]  cannot  find  symbol  result	31	None	replace
928	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(null,  typeId,  outcome);  [CE]  cannot  find  symbol  outcome  [FE]              NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(null,  typeId,  outcome);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(null,  typeId,  outcome);	  return    typeRegistry.getNativeType(null,    typeId);    	non-compiled	[CE]  cannot  find  symbol  outcome	31	None	replace
929	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(null,  typeId,  owner);  [CE]  cannot  find  symbol  owner  [FE]                NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(null,  typeId,  owner);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(null,  typeId,  owner);	  return    typeRegistry.getNativeType(null,    typeId);    	non-compiled	[CE]  cannot  find  symbol  owner	31	None	replace
930	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  resultEqualsValue,  typeRegistry.restrictByTrueTypeOfResultVisitor();  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  resultEqualsValue,  typeRegistry.restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  resultEqualsValue,  typeRegistry.restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  ';'  expected	83	None	replace
931	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  resultEqualsValue,  state.restrictByTrueTypeOfResultVisitor();  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  resultEqualsValue,  state.restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  resultEqualsValue,  state.restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  ';'  expected	83	None	replace
932	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  resultEqualsValue).restrictByTrueTypeOfResultVisitor();  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  resultEqualsValue).restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  resultEqualsValue).restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  ';'  expected	83	None	replace
933	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId):  null;  }  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(typeId)    ==    null?    typeRegistry.getNativeType(typeId):    null;    if(typeId!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId):  null;  }	  	non-compiled	[CE]  ';'  expected	34	None	add
934	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(typeId):  null;  }  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(typeId)    ==    null?    typeRegistry.getNativeType(typeId):    null;    if(typeId!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(typeId):  null;  }	  	non-compiled	[CE]  ';'  expected	34	None	add
935	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId):  null;  }  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(typeId)    ==    null?    typeRegistry.getNativeType(typeId):    null;    if(typeId!=  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId):  null;  }	  	non-compiled	[CE]  ';'  expected	34	None	add
936	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  JSType  resultEqualsValue  =  typeRegistry.getNativeType(typeId);  [CE]  unreachable  statement  [FE]          NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  JSType  resultEqualsValue  =  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(typeId)    ==    null?    typeRegistry.getNativeType(typeId):    null;    JSType  resultEqualsValue  =  typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  unreachable  statement	34	None	add
937	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  resultEqualsValue  =  true;  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  resultEqualsValue  =  true;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(typeId)    ==    null?    typeRegistry.getNativeType(typeId):    null;    if(typeId!=  null)  {  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  resultEqualsValue  =  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
938	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.NO_TYPE),  resultEqualsValue,  typeRegistry.restrictByTrueTypeOfResultVisitor();  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.NO_TYPE),  resultEqualsValue,  typeRegistry.restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.NO_TYPE),  resultEqualsValue,  typeRegistry.restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(JSTypeNative.NO_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  ';'  expected	129	None	replace
939	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.NO_TYPE).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.NO_TYPE).restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.NO_TYPE).restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(JSTypeNative.NO_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
940	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals( "object ")||  typeId.equals( ".object ")||  typeId.equals( "object "));  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals( "object ")||  typeId.equals( ".object ")||  typeId.equals( "object "));  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeId.equals( "object ")||  typeId.equals( ".object ")||  typeId.equals( "object "));	  return    typeRegistry.getNativeType(typeId)||    typeId.equals(   "object   ")||    typeId.equals(   "object   ")||    typeId.equals(   "object   "));    	non-compiled	[CE]  	161	None	replace
941	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  this.restrictNullVisitor,  outcome);  [CE]  cannot  find  symbol  outcome  [FE]          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  this.restrictNullVisitor,  outcome);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  this.restrictNullVisitor,  outcome);	  return    this.typeRegistry.getNativeType(typeId,    this.restrictNullVisitor);    	non-compiled	[CE]  cannot  find  symbol  outcome	138	None	replace
942	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(this.restrictNullVisitor,  typeId);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(this.restrictNullVisitor,  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(this.restrictNullVisitor,  typeId);	  return    this.typeRegistry.getNativeType(typeId,    this.restrictNullVisitor);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	138	None	replace
943	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId),  state.restrictNullVisitor();  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId),  state.restrictNullVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId),  state.restrictNullVisitor();	  return    typeRegistry.getNativeType(typeId).restrictNullVisitor();    	non-compiled	[CE]  ';'  expected	64	None	replace
944	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(nameId).restrictNullVisitor();  [CE]  cannot  find  symbol  nameId  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(nameId).restrictNullVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(nameId).restrictNullVisitor();	  return    typeRegistry.getNativeType(typeId).restrictNullVisitor();    	non-compiled	[CE]  cannot  find  symbol  nameId	64	None	replace
945	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  return    typeRegistry.getNativeType(_typeId);    	compilable	  [FE]  AssertionFailedError  	74	27	replace
946	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  return    typeRegistry.getNativeType(_typeId);    	compilable	  [FE]  AssertionFailedError  	74	27	replace
947	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.OBJECT_TYPE);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return  typeRegistry.getNativeType(JSTypeNative.OBJECT_TYPE);	  return    typeRegistry.getNativeType(_typeId);    	compilable	  [FE]  AssertionFailedError  	74	24	replace
948	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.OBJECT_TYPE);  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.OBJECT_TYPE);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.OBJECT_TYPE);	  return    typeRegistry.getNativeType(_typeId);    	compilable	  [FE]  AssertionFailedError  	74	24	replace
949	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return  typeRegistry.getNativeType(JSTypeNative.NO_TYPE);	  return    typeRegistry.getNativeType(_typeId);    	compilable	  [FE]  AssertionFailedError  	74	26	replace
950	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.NO_TYPE);  [FE]  AssertionFailedError  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.NO_TYPE);	  return    typeRegistry.getNativeType(_typeId);    	compilable	  [FE]  AssertionFailedError  	74	26	replace
951	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.NULL_TYPE);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return  typeRegistry.getNativeType(JSTypeNative.NULL_TYPE);	  return    typeRegistry.getNativeType(_typeId);    	compilable	  [FE]  AssertionFailedError  	74	24	replace
952	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.NULL_TYPE);  [FE]  AssertionFailedError  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.NULL_TYPE);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.NULL_TYPE);	  return    typeRegistry.getNativeType(_typeId);    	compilable	  [FE]  AssertionFailedError  	74	24	replace
953	[BUG]  [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId,  this.value);  [CE]  cannot  find  symbol  value  [FE]    AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId,  this.value);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId,  this.value);	  return(this.typeRegistry    ==    null)?    null    :    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  value	174	None	replace
954	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);  JSType  typeId  =(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]    NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);  JSType  typeId  =(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(null);    JSType  typeId  =(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	144	None	add
955	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);  typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);  typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(null);    typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);	  	non-compiled	[CE]  not  a  statement	144	None	add
956	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);  JSType  typeId  =  getNativeType(null);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]        NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);  JSType  typeId  =  getNativeType(null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(null);    JSType  typeId  =  getNativeType(null);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	144	None	add
957	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);  typeId  ==  null?  null  :  typeRegistry.getNativeType(null);  [CE]  not  a  statement  [FE]          NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);  typeId  ==  null?  null  :  typeRegistry.getNativeType(null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(null);    typeId  ==  null?  null  :  typeRegistry.getNativeType(null);	  	non-compiled	[CE]  not  a  statement	144	None	add
958	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);  JSType  typeId  =  typeRegistry.getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]            NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);  JSType  typeId  =  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(null);    JSType  typeId  =  typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	144	None	add
959	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(TYPE_NAME)||  typeRegistry.getNativeType(typeId);  [CE]  cannot  find  symbol  TYPE_NAME  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(TYPE_NAME)||  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(TYPE_NAME)||  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(qualifiedName)||    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  TYPE_NAME	66	None	replace
960	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  null,  resultEqualsValue,  null);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  null,  resultEqualsValue,  null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  null,  resultEqualsValue,  null);	  return    typeRegistry.getNativeType(typeId,    null,    null);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	163	None	replace
961	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  null,  null,  outcome);  [CE]  cannot  find  symbol  outcome  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  null,  null,  outcome);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  null,  null,  outcome);	  return    typeRegistry.getNativeType(typeId,    null,    null);    	non-compiled	[CE]  cannot  find  symbol  outcome	163	None	replace
962	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(null,  typeId,  null,  null);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(null,  typeId,  null,  null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(null,  typeId,  null,  null);	  return    typeRegistry.getNativeType(typeId,    null,    null);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	163	None	replace
963	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  resultEqualsValue,  typeRegistry.restrictByUndefinedVisitor();  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  resultEqualsValue,  typeRegistry.restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  resultEqualsValue,  typeRegistry.restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByUndefinedVisitor();    	non-compiled	[CE]  ';'  expected	62	None	replace
964	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  resultEqualsValue,  restrictByUndefinedVisitor();  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  resultEqualsValue,  restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  resultEqualsValue,  restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByUndefinedVisitor();    	non-compiled	[CE]  ';'  expected	62	None	replace
965	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(null);  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(null);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(value);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	69	None	replace
966	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId),  restrictNullVisitor();  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId),  restrictNullVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId),  restrictNullVisitor();	  return    typeRegistry.getNativeType(typeId).restrictUndefinedVisitor();    	non-compiled	[CE]  ';'  expected	65	None	replace
967	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId),  state.restrictUndefinedVisitor();  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId),  state.restrictUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId),  state.restrictUndefinedVisitor();	  return    typeRegistry.getNativeType(typeId).restrictUndefinedVisitor();    	non-compiled	[CE]  ';'  expected	65	None	replace
968	[BUG]  [BUGGY]  return  state.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [CE]  cannot  find  symbol  state  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  state.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  state.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();	  return    typeregistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol  state	153	None	replace
969	[BUG]  [BUGGY]  return  this.typeregistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [CE]  cannot  find  symbol  typeregistry  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeregistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeregistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();	  return    typeregistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol  typeregistry	153	None	replace
970	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(new  ObjectTypeId(typeId),  condition);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(new  ObjectTypeId(typeId),  condition);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(new  ObjectTypeId(typeId),  condition);	  return    typeRegistry.getNativeType(new    ObjectTypeId(typeId));    	non-compiled	[CE]  cannot  find  symbol	188	None	replace
971	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(new  ObjectTypeId(typeId),  resultEqualsValue);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(new  ObjectTypeId(typeId),  resultEqualsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(new  ObjectTypeId(typeId),  resultEqualsValue);	  return    typeRegistry.getNativeType(new    ObjectTypeId(typeId));    	non-compiled	[CE]  cannot  find  symbol	188	None	replace
972	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(new  ObjectTypeId(typeId),  state);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(new  ObjectTypeId(typeId),  state);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(new  ObjectTypeId(typeId),  state);	  return    typeRegistry.getNativeType(new    ObjectTypeId(typeId));    	non-compiled	[CE]  cannot  find  symbol	188	None	replace
973	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  resultEqualsValue,  null);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  resultEqualsValue,  null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  resultEqualsValue,  null);	  return    this.typeRegistry.getNativeType(typeId,    null);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	57	None	replace
974	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)-  1L;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)-  1L;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)-  1L;	  return    typeRegistry.getNativeType(typeId)-    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	80	None	replace
975	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)%  2;  [CE]  bad  operand  types  for  binary  operator  '%'  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)%  2;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)%  2;	  return    typeRegistry.getNativeType(typeId)-    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '%'	80	None	replace
976	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId).getNativeType();  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId).getNativeType();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId).getNativeType();	  return    typeRegistry.getNativeType(typeId)-    1;    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	80	None	replace
977	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  sourceName);  [CE]  cannot  find  symbol  sourceName  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  sourceName);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  sourceName);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId,    value);    	non-compiled	[CE]  cannot  find  symbol  sourceName	70	None	replace
978	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  owner);  [CE]  cannot  find  symbol  owner  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  owner);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  owner);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId,    value);    	non-compiled	[CE]  cannot  find  symbol  owner	70	None	replace
979	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(new  JSTypeNative(typeId),  resultEqualsValue);  [CE]  enum  types  may  not  be  instantiated  [FE]                NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(new  JSTypeNative(typeId),  resultEqualsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(new  JSTypeNative(typeId),  resultEqualsValue);	  return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(new    JSTypeNative(typeId));    	non-compiled	[CE]  enum  types  may  not  be  instantiated	33	None	replace
980	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(new  JSTypeNative(typeId),  condition);  [CE]  enum  types  may  not  be  instantiated  [FE]                  NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(new  JSTypeNative(typeId),  condition);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(new  JSTypeNative(typeId),  condition);	  return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(new    JSTypeNative(typeId));    	non-compiled	[CE]  enum  types  may  not  be  instantiated	33	None	replace
981	[BUG]  [BUGGY]  return(typeId!=  null)?  null  :  typeRegistry.getNativeType(new  JSTypeNative(typeId));  [CE]  enum  types  may  not  be  instantiated  [FE]                    NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId!=  null)?  null  :  typeRegistry.getNativeType(new  JSTypeNative(typeId));  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId!=  null)?  null  :  typeRegistry.getNativeType(new  JSTypeNative(typeId));	  return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(new    JSTypeNative(typeId));    	non-compiled	[CE]  enum  types  may  not  be  instantiated	33	None	replace
982	[BUG]  [BUGGY]  if(typeId!=  null)  {  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    JSTypeNative    typeId    =    getNativeType(typeId);    if(typeId!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
983	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.	  return    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    JSTypeNative    typeId    =    getNativeType(typeId);    if(typeId!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  <identifier>  expected	187	None	replace
984	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry	  return    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    JSTypeNative    typeId    =    getNativeType(typeId);    if(typeId!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  ';'  expected	187	None	replace
985	[BUG]  [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  if(typeId!=  null)  {  resultEqualsValue  =  true;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  if(typeId!=  null)  {  resultEqualsValue  =  true;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  if(typeId!=  null)  {  resultEqualsValue  =  true;  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId    ==    null)    {    resultEqualsValue    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
986	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  if(typeId  ==  null)  {  resultEqualsValue  =  true;  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  if(typeId  ==  null)  {  resultEqualsValue  =  true;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  if(typeId  ==  null)  {  resultEqualsValue  =  true;  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId    ==    null)    {    resultEqualsValue    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
987	[BUG]  [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSType  resultEqualsValue  =(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSType  resultEqualsValue  =(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry!=    null)?    null    :    this.typeRegistry.getNativeType(typeId);    JSType  resultEqualsValue  =(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  unreachable  statement	136	None	add
988	[BUG]  [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSType  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  [CE]  unreachable  statement  [FE]      NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSType  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry!=    null)?    null    :    this.typeRegistry.getNativeType(typeId);    JSType  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  unreachable  statement	136	None	add
989	[BUG]  [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSType  result  =  this.typeRegistry.getNativeType(typeId);  [CE]  unreachable  statement  [FE]        NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSType  result  =  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry!=    null)?    null    :    this.typeRegistry.getNativeType(typeId);    JSType  result  =  this.typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  unreachable  statement	136	None	add
990	[BUG]  [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSType  resultEqualsValue  =(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  [CE]  unreachable  statement  [FE]          NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSType  resultEqualsValue  =(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry!=    null)?    null    :    this.typeRegistry.getNativeType(typeId);    JSType  resultEqualsValue  =(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  unreachable  statement	136	None	add
991	[BUG]  [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSType  result  =  getNativeType(typeId);  [CE]  unreachable  statement  [FE]            NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSType  result  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry!=    null)?    null    :    this.typeRegistry.getNativeType(typeId);    JSType  result  =  getNativeType(typeId);	  	non-compiled	[CE]  unreachable  statement	136	None	add
992	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(this.typeId)||  typeRegistry.getNativeType(typeId);  [CE]  cannot  find  symbol  typeId  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(this.typeId)||  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(this.typeId)||  typeRegistry.getNativeType(typeId);	  return    this.typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  typeId	71	None	replace
993	[BUG]  [BUGGY]  if(typeId  ==  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSTypeNative    typeId    =    typeId.getJSType();    if(typeId!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
994	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.getN  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.getN  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.getN	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSTypeNative    typeId    =    typeId.getJSType();    if(typeId!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  ';'  expected	185	None	replace
995	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSTypeNative    typeId    =    typeId.getJSType();    if(typeId!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  <identifier>  expected	185	None	replace
996	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  typeId,  outcome);  [CE]  cannot  find  symbol  outcome  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  typeId,  outcome);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  typeId,  outcome);	  return    typeRegistry.getNativeType(typeId,    typeId);    	non-compiled	[CE]  cannot  find  symbol  outcome	99	None	replace
997	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(TYPEID).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  TYPEID  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(TYPEID).restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(TYPEID).restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(value).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol  TYPEID	124	None	replace
998	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId):  null;  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId):  null;  }	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    if(typeId!=    null)    {    return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    }    else    {    return    typeRegistry.getNativeType(typeId):    null;    }    	non-compiled	[CE]  ';'  expected	171	None	replace
999	[BUG]  [BUGGY]  return  typeRegistry.getType(typeId),  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getType(typeId),  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getType(typeId),  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  ';'  expected	38	None	replace
1000	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(restrictNullVisitor).restrictByUndefinedVisitor();  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(restrictNullVisitor).restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(restrictNullVisitor).restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(nameId).restrictByUndefinedVisitor();    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	123	None	replace
1001	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getInstanceType(value);  [CE]  cannot  find  symbol  value  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getInstanceType(value);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeRegistry.getInstanceType(value);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getInstanceType(typeId);    	non-compiled	[CE]  cannot  find  symbol  value	143	None	replace
1002	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  this.typeRegistry.getInstanceType(typeId);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  this.typeRegistry.getInstanceType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  this.typeRegistry.getInstanceType(typeId);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getInstanceType(typeId);    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
1003	[BUG]  [BUGGY]  JSType  result  =  typeRegistry.getNativeType(null);  if(resultEqualsValue)  {  return  result;  }  [CE]  cannot  find  symbol  resultEqualsValue  [FE]        NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  result  =  typeRegistry.getNativeType(null);  if(resultEqualsValue)  {  return  result;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  result  =  typeRegistry.getNativeType(null);  if(resultEqualsValue)  {  return  result;  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null    ||    typeId.equals(typeId))    {    return    typeRegistry.getNativeType(null);    }    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	165	None	replace
1004	[BUG]  [BUGGY]  resultEqualsValue  =  getNativeType(typeId);  if(resultEqualsValue)  {  return  result;  }  [CE]  cannot  find  symbol  resultEqualsValue  [FE]          NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  getNativeType(typeId);  if(resultEqualsValue)  {  return  result;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  getNativeType(typeId);  if(resultEqualsValue)  {  return  result;  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null    ||    typeId.equals(typeId))    {    return    typeRegistry.getNativeType(null);    }    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	165	None	replace
1005	[BUG]  [BUGGY]  JSType  result  =  typeRegistry.getNativeType(typeId);  [CE]  missing  return  statement  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  result  =  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  result  =  typeRegistry.getNativeType(typeId);	  return    this.typeRegistry.getNativeType(typeId);    JSType    return    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  missing  return  statement	54	None	replace
1006	[BUG]  [BUGGY]  JSError.make(convention,  this.typeRegistry,  typeId));  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSError.make(convention,  this.typeRegistry,  typeId));  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSError.make(convention,  this.typeRegistry,  typeId));	  return    this.typeRegistry.getNativeType(typeId);    JSType    return    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  ';'  expected	54	None	replace
1007	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSType  type  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSType  type  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSType  type  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType	  return    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    JSType    type    =    getNativeType(typeId);    if(type!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  ';'  expected	116	None	replace
1008	[BUG]  [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(typeId);  }  [CE]  missing  return  statement  [FE]              NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  return  typeRegistry.getNativeType(typeId);  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null)    {    return    typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  missing  return  statement	168	None	replace
1009	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId).getNativeType()  ==  null;  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId).getNativeType()  ==  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId).getNativeType()  ==  null;	  return    typeRegistry.getNativeType(typeId)    ==    null;    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	15	None	replace
1010	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)  ==  null?  this.typeRegistry.getNativeType(typeId):  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return  this.typeRegistry.getNativeType(typeId)  ==  null?  this.typeRegistry.getNativeType(typeId):  getNativeType(typeId);	  return    this.typeRegistry.getNativeType(typeId)!=    null?    this.typeRegistry.getNativeType(typeId):    typeId;    	compilable	  [FE]  StackOverflowError  	172	28	replace
1011	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)  ==  null?  this.typeRegistry.getNativeType(typeId):  getNativeType(typeId);  [FE]  StackOverflowError  [FE]        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)  ==  null?  this.typeRegistry.getNativeType(typeId):  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId)  ==  null?  this.typeRegistry.getNativeType(typeId):  getNativeType(typeId);	  return    this.typeRegistry.getNativeType(typeId)!=    null?    this.typeRegistry.getNativeType(typeId):    typeId;    	compilable	  [FE]  StackOverflowError  	172	28	replace
1012	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  new  JSTypeNative(typeId);  [CE]  enum  types  may  not  be  instantiated  [FE]          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  new  JSTypeNative(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  new  JSTypeNative(typeId);	  return    this.typeRegistry.getNativeType(typeId)!=    null?    this.typeRegistry.getNativeType(typeId):    typeId;    	non-compiled	[CE]  enum  types  may  not  be  instantiated	172	None	replace
1013	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null,  typeId);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]    NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null,  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null,  typeId);	  return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(null);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	145	None	replace
1014	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)+  4;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)+  4;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId)+  4;	  return    typeRegistry.getNativeType(typeId)+    4;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	79	None	replace
1015	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  typeRegistry.getNativeType(typeId,  resultEqualsValue);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  typeRegistry.getNativeType(typeId,  resultEqualsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)&&  typeRegistry.getNativeType(typeId,  resultEqualsValue);	  return    typeRegistry.getNativeType(typeId)&&    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	67	None	replace
1016	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  _convention.getNativeType(typeId);  [CE]  cannot  find  symbol  _convention  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  _convention.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)&&  _convention.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)&&    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  _convention	67	None	replace
1017	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  registry.getNativeType(typeId);  [CE]  cannot  find  symbol  registry  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  registry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)&&  registry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)&&    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  registry	67	None	replace
1018	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(new  JSTypeNative(typeId,  getNativeType(typeId)));  [CE]  enum  types  may  not  be  instantiated  [FE]              NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(new  JSTypeNative(typeId,  getNativeType(typeId)));  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(new  JSTypeNative(typeId,  getNativeType(typeId)));	  return    typeRegistry.getNativeType(new    JSTypeNative(typeId));    	non-compiled	[CE]  enum  types  may  not  be  instantiated	32	None	replace
1019	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(new  JSTypeNative(typeId,  scope));  [CE]  cannot  find  symbol  scope  [FE]                NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(new  JSTypeNative(typeId,  scope));  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(new  JSTypeNative(typeId,  scope));	  return    typeRegistry.getNativeType(new    JSTypeNative(typeId));    	non-compiled	[CE]  cannot  find  symbol  scope	32	None	replace
1020	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(new  JSTypeNative(typeId),  value);  [CE]  enum  types  may  not  be  instantiated  [FE]                  NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(new  JSTypeNative(typeId),  value);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(new  JSTypeNative(typeId),  value);	  return    typeRegistry.getNativeType(new    JSTypeNative(typeId));    	non-compiled	[CE]  enum  types  may  not  be  instantiated	32	None	replace
1021	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(new  JSTypeNative(typeId),  this);  [CE]  enum  types  may  not  be  instantiated  [FE]                    NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(new  JSTypeNative(typeId),  this);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(new  JSTypeNative(typeId),  this);	  return    typeRegistry.getNativeType(new    JSTypeNative(typeId));    	non-compiled	[CE]  enum  types  may  not  be  instantiated	32	None	replace
1022	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(new  JSTypeNative(typeId,  state));  [CE]  cannot  find  symbol  state  [FE]                      NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(new  JSTypeNative(typeId,  state));  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(new  JSTypeNative(typeId,  state));	  return    typeRegistry.getNativeType(new    JSTypeNative(typeId));    	non-compiled	[CE]  cannot  find  symbol  state	32	None	replace
1023	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(new  ObjectType(typeId),  state);  [CE]  ObjectType  is  abstract;  cannot  be  instantiated  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(new  ObjectType(typeId),  state);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(new  ObjectType(typeId),  state);	  return    typeRegistry.getNativeType(new    ObjectType(typeId));    	non-compiled	[CE]  ObjectType  is  abstract;  cannot  be  instantiated	189	None	replace
1024	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  this.typeRegistry.getNativeType(typeId);  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)&&  this.typeRegistry.getNativeType(typeId);	  return    this.typeRegistry.getNativeType(typeId)||    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	158	None	replace
1025	[BUG]  [BUGGY]  if(typeId!=  null)  {  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  resultEqualsValue  =  resultEqualsValue;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  resultEqualsValue  =  resultEqualsValue;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  resultEqualsValue  =  resultEqualsValue;  }	  if(typeId    ==    null)    {    JSTypeNative    result    =    typeRegistry.getNativeType(typeId);    if(resultEqualsValue!=    null)    {    resultEqualsValue    =    resultEqualsValue;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
1026	[BUG]  [BUGGY]  if(typeId!=  null)  {  JSTypeNative  result  =  getNativeType(typeId);  if(resultEqualsValue!=  null)  {  resultEqualsValue  =  resultEqualsValue;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  JSTypeNative  result  =  getNativeType(typeId);  if(resultEqualsValue!=  null)  {  resultEqualsValue  =  resultEqualsValue;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  JSTypeNative  result  =  getNativeType(typeId);  if(resultEqualsValue!=  null)  {  resultEqualsValue  =  resultEqualsValue;  }	  if(typeId    ==    null)    {    JSTypeNative    result    =    typeRegistry.getNativeType(typeId);    if(resultEqualsValue!=    null)    {    resultEqualsValue    =    resultEqualsValue;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
1027	[BUG]  [BUGGY]  if(typeId!=  null)  {  JSTypeNative  result  =  typeRegistry.getNativeType(typeId,  resultEqualsValue);  if(resultEqualsValue!=  null)  {  resultEqualsValue  =  resultEqualsValue;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  JSTypeNative  result  =  typeRegistry.getNativeType(typeId,  resultEqualsValue);  if(resultEqualsValue!=  null)  {  resultEqualsValue  =  resultEqualsValue;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  JSTypeNative  result  =  typeRegistry.getNativeType(typeId,  resultEqualsValue);  if(resultEqualsValue!=  null)  {  resultEqualsValue  =  resultEqualsValue;  }	  if(typeId    ==    null)    {    JSTypeNative    result    =    typeRegistry.getNativeType(typeId);    if(resultEqualsValue!=    null)    {    resultEqualsValue    =    resultEqualsValue;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
1028	[BUG]  [BUGGY]  return(typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;	  return    typeId!=    null?    this.typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  ')'  expected	177	None	replace
1029	[BUG]  [BUGGY]  return(typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;	  return    typeId!=    null?    this.typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  ')'  expected	177	None	replace
1030	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  typeRegistry.getNativeType(null);  }  [CE]  unreachable  statement  [FE]                    NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  typeRegistry.getNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  typeRegistry.getNativeType(null);  }	  return    typeRegistry.getNativeType(null);    typeRegistry.getNativeType(null);    	non-compiled	[CE]  unreachable  statement	7	None	replace
1031	[BUG]  [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  typeRegistry.getNativeType(null);  }  [CE]  unreachable  statement  [FE]                      NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  typeRegistry.getNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  typeRegistry.getNativeType(null);  }	  return    typeRegistry.getNativeType(null);    typeRegistry.getNativeType(null);    	non-compiled	[CE]  unreachable  statement	7	None	replace
1032	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  typeRegistry.getNativeType(null);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unreachable  statement  [FE]                        NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  typeRegistry.getNativeType(null);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  typeRegistry.getNativeType(null);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    typeRegistry.getNativeType(null);    typeRegistry.getNativeType(null);    	non-compiled	[CE]  unreachable  statement	7	None	replace
1033	[BUG]  [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  typeRegistry.getNativeType(null);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unreachable  statement  [FE]                          NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  typeRegistry.getNativeType(null);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  typeRegistry.getNativeType(null);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    typeRegistry.getNativeType(null);    typeRegistry.getNativeType(null);    	non-compiled	[CE]  unreachable  statement	7	None	replace
1034	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)/  1L;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)/  1L;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)/  1L;	  return    typeRegistry.getNativeType(typeId)/    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	77	None	replace
1035	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(TYPE_NOT_OBJECT);  [CE]  cannot  find  symbol  TYPE_NOT_OBJECT  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(TYPE_NOT_OBJECT);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(TYPE_NOT_OBJECT);	  return    typeRegistry.getNativeType(TYPE_Id);    	non-compiled	[CE]  cannot  find  symbol  TYPE_NOT_OBJECT	75	None	replace
1036	[BUG]  [BUGGY]  if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  [CE]  missing  return  statement  [FE]              NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(typeId);  }	  return    typeRegistry.getNativeType(null);    JSTypeRegistry    typeRegistry    =    getNativeType(null);    	non-compiled	[CE]  missing  return  statement	4	None	replace
1037	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  getNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  getNativeType(null);  }	  return    typeRegistry.getNativeType(null);    JSTypeRegistry    typeRegistry    =    getNativeType(null);    	compilable	  [FE]  AssertionFailedError  	4	2	replace
1038	[BUG]  [BUGGY]  if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  getNativeType(null);  }  [FE]  AssertionFailedError  [FE]                NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  getNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  getNativeType(null);  }	  return    typeRegistry.getNativeType(null);    JSTypeRegistry    typeRegistry    =    getNativeType(null);    	compilable	  [FE]  AssertionFailedError  	4	2	replace
1039	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    typeRegistry.getNativeType(null);    JSTypeRegistry    typeRegistry    =    getNativeType(null);    	compilable	  [FE]  AssertionFailedError  	4	2	replace
1040	[BUG]  [BUGGY]  if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [FE]                  NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    typeRegistry.getNativeType(null);    JSTypeRegistry    typeRegistry    =    getNativeType(null);    	compilable	  [FE]  AssertionFailedError  	4	2	replace
1041	[BUG]  [BUGGY]  JSType  typeId  =  typeRegistry.getNativeType(new  JSTypeNative(typeId));  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]            NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  typeId  =  typeRegistry.getNativeType(new  JSTypeNative(typeId));  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  typeId  =  typeRegistry.getNativeType(new  JSTypeNative(typeId));	  return    typeRegistry.getNativeType(null);    JSType    typeId    =    typeRegistry.getNativeType(null);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	167	None	replace
1042	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)!=  null;  typeRegistry.getNativeType(typeId):  null;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)!=  null;  typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)!=  null;  typeRegistry.getNativeType(typeId):  null;  }	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  ';'  expected	24	None	replace
1043	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  typeRegistry.getNativeType(typeId):  null;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  typeRegistry.getNativeType(typeId):  null;  }	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  ';'  expected	24	None	replace
1044	[BUG]  [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(typeId)!=  null;  typeRegistry.getNativeType(typeId):  null;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(typeId)!=  null;  typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  return  typeRegistry.getNativeType(typeId)!=  null;  typeRegistry.getNativeType(typeId):  null;  }	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  ';'  expected	24	None	replace
1045	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)!=  null;  typeRegistry.getNativeType(typeId):  null;  }  else  {  typeRegistry.getNativeType(typeId):  null;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)!=  null;  typeRegistry.getNativeType(typeId):  null;  }  else  {  typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)!=  null;  typeRegistry.getNativeType(typeId):  null;  }  else  {  typeRegistry.getNativeType(typeId):  null;  }	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  ';'  expected	24	None	replace
1046	[BUG]  [BUGGY]  JSError.make(convention,  typeId,  value):  null;  JSType  typeId  =  typeRegistry.getNativeType(typeId);  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSError.make(convention,  typeId,  value):  null;  JSType  typeId  =  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSError.make(convention,  typeId,  value):  null;  JSType  typeId  =  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType    typeId    =    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  ';'  expected	21	None	replace
1047	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)!=  null;  }  else  {  return  typeRegistry.getNativeType(typeId):  null;  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)!=  null;  }  else  {  return  typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)!=  null;  }  else  {  return  typeRegistry.getNativeType(typeId):  null;  }	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  ';'  expected	22	None	replace
1048	[BUG]  [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(typeId)!=  null;  }  else  {  return  typeRegistry.getNativeType(typeId):  null;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(typeId)!=  null;  }  else  {  return  typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  return  typeRegistry.getNativeType(typeId)!=  null;  }  else  {  return  typeRegistry.getNativeType(typeId):  null;  }	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  ';'  expected	22	None	replace
1049	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  getNativeType(typeId);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  getNativeType(typeId);	  return    this.typeRegistry.getNativeType(typeId);    JSType    typeId    =    getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	53	None	replace
1050	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  getNativeType(typeId,  resultEqualsValue);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  getNativeType(typeId,  resultEqualsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  getNativeType(typeId,  resultEqualsValue);	  return    this.typeRegistry.getNativeType(typeId);    JSType    typeId    =    getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	53	None	replace
1051	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  typeId);  JSType  typeId  =  getNativeType(typeId);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  typeId);  JSType  typeId  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  typeId);  JSType  typeId  =  getNativeType(typeId);	  return    this.typeRegistry.getNativeType(typeId);    JSType    typeId    =    getNativeType(typeId);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	53	None	replace
1052	[BUG]  [BUGGY]  return  typeId  ==  null?  null  :  typeId,  state.getNativeType();  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  null  :  typeId,  state.getNativeType();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId  ==  null?  null  :  typeId,  state.getNativeType();	  return    typeId    ==    null?    null    :    typeId.getNativeType();    	non-compiled	[CE]  ';'  expected	19	None	replace
1053	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  resultEqualsValue,  this.restrictNullVisitor);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  resultEqualsValue,  this.restrictNullVisitor);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  resultEqualsValue,  this.restrictNullVisitor);	  return    typeRegistry.getNativeType(typeId,    this.restrictNullVisitor);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	46	None	replace
1054	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.restrictNullVisitor,  outcome);  [CE]  cannot  find  symbol  outcome  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.restrictNullVisitor,  outcome);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this.restrictNullVisitor,  outcome);	  return    typeRegistry.getNativeType(typeId,    this.restrictNullVisitor);    	non-compiled	[CE]  cannot  find  symbol  outcome	46	None	replace
1055	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.restrictNullVisitor,  result);  [CE]  cannot  find  symbol  result  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.restrictNullVisitor,  result);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this.restrictNullVisitor,  result);	  return    typeRegistry.getNativeType(typeId,    this.restrictNullVisitor);    	non-compiled	[CE]  cannot  find  symbol  result	46	None	replace
1056	[BUG]  [BUGGY]  return  resultEqualsValue.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  resultEqualsValue.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  resultEqualsValue.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();	  return    typesRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	154	None	replace
1057	[BUG]  [BUGGY]  return  this.restrictNullVisitor.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.restrictNullVisitor.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.restrictNullVisitor.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();	  return    typesRegistry.getNativeType(typeId).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
1058	[BUG]  [BUGGY]  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =(typeId  ==  null)?  this.typeRegistry.getNativeType(typeId):  null;  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]    NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =(typeId  ==  null)?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId    ==    null?    this.typeRegistry.getNativeType(typeId):    null;    JSType  typeId  =(typeId  ==  null)?  this.typeRegistry.getNativeType(typeId):  null;	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	178	None	add
1059	[BUG]  [BUGGY]  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  if(typeId  ==  null)  {  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeId;  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  if(typeId  ==  null)  {  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeId;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId    ==    null?    this.typeRegistry.getNativeType(typeId):    null;    if(typeId  ==  null)  {  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeId;  }	  	non-compiled	[CE]  illegal  start  of  expression	178	None	add
1060	[BUG]  [BUGGY]  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeId;  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeId;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId    ==    null?    this.typeRegistry.getNativeType(typeId):    null;    if(typeId!=  null)  {  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeId;  }	  	non-compiled	[CE]  illegal  start  of  expression	178	None	add
1061	[BUG]  [BUGGY]  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  if(typeId  ==  null)  {  JSType  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  typeId;  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  if(typeId  ==  null)  {  JSType  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  typeId;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId    ==    null?    this.typeRegistry.getNativeType(typeId):    null;    if(typeId  ==  null)  {  JSType  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  typeId;  }	  	non-compiled	[CE]  illegal  start  of  expression	178	None	add
1062	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  outcomeEqualsValue);  [CE]  cannot  find  symbol  outcomeEqualsValue  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  outcomeEqualsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  outcomeEqualsValue);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId,    value);    	non-compiled	[CE]  cannot  find  symbol  outcomeEqualsValue	70	None	replace
1063	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  outcome);  [CE]  cannot  find  symbol  outcome  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  outcome);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  outcome);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId,    value);    	non-compiled	[CE]  cannot  find  symbol  outcome	70	None	replace
1064	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  state);  [CE]  cannot  find  symbol  state  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  state);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  state);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId,    value);    	non-compiled	[CE]  cannot  find  symbol  state	70	None	replace
1065	[BUG]  [BUGGY]  if(typeId  ==  null  ||  typeId.equals(this.typeRegistry.getNativeType(typeId)))  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null  ||  typeId.equals(this.typeRegistry.getNativeType(typeId)))  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null  ||  typeId.equals(this.typeRegistry.getNativeType(typeId)))  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSType    type    =    typeId.getNativeType();    if(type!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  missing  return  statement	113	None	replace
1066	[BUG]  [BUGGY]  if(typeId  ==  null  ||  typeId.equals( " "))  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null  ||  typeId.equals( " "))  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null  ||  typeId.equals( " "))  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSType    type    =    typeId.getNativeType();    if(type!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  missing  return  statement	113	None	replace
1067	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  typeRegistry.setNativeType(null);  }  [CE]  cannot  find  symbol  [FE]                  NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  typeRegistry.setNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  typeRegistry.setNativeType(null);  }	  return    typeRegistry.getNativeType(null);    typeRegistry.setNativeType(null);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
1068	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  typeRegistry.setNativeType(null);  }  [CE]  cannot  find  symbol  [FE]                    NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  typeRegistry.setNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  typeRegistry.setNativeType(null);  }	  return    typeRegistry.getNativeType(null);    typeRegistry.setNativeType(null);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
1069	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                      NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeRegistry.getNativeType(typeId)!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	if(typeRegistry.getNativeType(typeId)!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  null;  }	  return    typeRegistry.getNativeType(null);    typeRegistry.setNativeType(null);    	compilable	  [FE]  AssertionFailedError  	6	2	replace
1070	[BUG]  [BUGGY]  if(typeRegistry.getNativeType(typeId)!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  null;  }  [FE]  AssertionFailedError  [FE]                      NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeRegistry.getNativeType(typeId)!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeRegistry.getNativeType(typeId)!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  null;  }	  return    typeRegistry.getNativeType(null);    typeRegistry.setNativeType(null);    	compilable	  [FE]  AssertionFailedError  	6	2	replace
1071	[BUG]  [BUGGY]  if(typeRegistry.getNativeType(typeId)!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  registry.getNativeType(typeId);  }  [CE]  cannot  find  symbol  registry  [FE]                        NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeRegistry.getNativeType(typeId)!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  registry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeRegistry.getNativeType(typeId)!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  registry.getNativeType(typeId);  }	  return    typeRegistry.getNativeType(null);    typeRegistry.setNativeType(null);    	non-compiled	[CE]  cannot  find  symbol  registry	6	None	replace
1072	[BUG]  [BUGGY]  return  typeId  ==  null?  null  :  typeId.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  null  :  typeId.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId  ==  null?  null  :  typeId.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  return    typeId    ==    null?    null    :    typeId.instanceType();    	non-compiled	[CE]  cannot  find  symbol	183	None	replace
1073	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  NUMBER_TYPE);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  NUMBER_TYPE);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this,  NUMBER_TYPE);	  return    typeRegistry.getNativeType(typeId,    this,    qualifiedName);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	94	None	replace
1074	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  _value);  [CE]  cannot  find  symbol  _value  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  _value);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this,  _value);	  return    typeRegistry.getNativeType(typeId,    this,    qualifiedName);    	non-compiled	[CE]  cannot  find  symbol  _value	94	None	replace
1075	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(new  ObjectType(typeId),  getNativeType(typeId));  [CE]  ObjectType  is  abstract;  cannot  be  instantiated  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(new  ObjectType(typeId),  getNativeType(typeId));  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(new  ObjectType(typeId),  getNativeType(typeId));	  return    typeRegistry.getNativeType(new    ObjectType(typeId));    	non-compiled	[CE]  ObjectType  is  abstract;  cannot  be  instantiated	189	None	replace
1076	[BUG]  [BUGGY]  if(this.typeRegistry!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeId;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(this.typeRegistry!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeId;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(this.typeRegistry!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  return  typeId;  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSTypeNative    typeId    =    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    return    typeId;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1077	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)/  2  +  1;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)/  2  +  1;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)/  2  +  1;	  return    typeRegistry.getNativeType(typeId)+    0;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	78	None	replace
1078	[BUG]  [BUGGY]  if(typeId  ==  null  ||  typeId.equals( " "))  {  return  typeRegistry.getNativeType(null);  }  [CE]  missing  return  statement  [FE]        NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null  ||  typeId.equals( " "))  {  return  typeRegistry.getNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null  ||  typeId.equals( " "))  {  return  typeRegistry.getNativeType(null);  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null)    {    return    typeRegistry.getNativeType(null);    }    	non-compiled	[CE]  missing  return  statement	117	None	replace
1079	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null)  {  return  typeRegistry.getNativeType(typeId);  }  [CE]  cannot  find  symbol  resultEqualsValue  [FE]              NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(resultEqualsValue  ==  null)  {  return  typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(resultEqualsValue  ==  null)  {  return  typeRegistry.getNativeType(typeId);  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null)    {    resultEqualsValue    =    getNativeType(typeId);    }    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	120	None	replace
1080	[BUG]  [BUGGY]  if(resultEqualsValue!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(resultEqualsValue!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(resultEqualsValue!=  null)  {  return  typeRegistry.getNativeType(typeId);  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null)    {    resultEqualsValue    =    getNativeType(typeId);    }    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	120	None	replace
1081	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  outcome_equalsValue);  [CE]  cannot  find  symbol  outcome_equalsValue  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  outcome_equalsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this,  outcome_equalsValue);	  return    typeRegistry.getNativeType(typeId,    this,    constraintEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  outcome_equalsValue	133	None	replace
1082	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  outcome_EqualsValue);  [CE]  cannot  find  symbol  outcome_EqualsValue  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  outcome_EqualsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this,  outcome_EqualsValue);	  return    typeRegistry.getNativeType(typeId,    this,    constraintEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  outcome_EqualsValue	133	None	replace
1083	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  typeRegistry.getNativeType(typeId):  null;  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)&&  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  ';'  expected	97	None	replace
1084	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)?  typeRegistry.getNativeType(typeId):  Collections.emptyList();  [CE]  incompatible  types  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)?  typeRegistry.getNativeType(typeId):  Collections.emptyList();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)?  typeRegistry.getNativeType(typeId):  Collections.emptyList();	  return    typeRegistry.getNativeType(typeId)?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  incompatible  types	97	None	replace
1085	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)?  typeRegistry.getNativeType(typeId):  Collections.EMPTY_LIST;  [CE]  incompatible  types  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)?  typeRegistry.getNativeType(typeId):  Collections.EMPTY_LIST;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)?  typeRegistry.getNativeType(typeId):  Collections.EMPTY_LIST;	  return    typeRegistry.getNativeType(typeId)?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  incompatible  types	97	None	replace
1086	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  consequence);  [CE]  cannot  find  symbol  consequence  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  consequence);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this,  consequence);	  return    typeRegistry.getNativeType(typeId,    this,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  consequence	93	None	replace
1087	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId):  null;  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    if(typeId!=    null)    {    return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    }    else    {    return    typeRegistry.getNativeType(typeId):    null;    }    	non-compiled	[CE]  ';'  expected	171	None	replace
1088	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.restrictUndefinedVisitor,  outcomeEqualsValue);  [CE]  cannot  find  symbol  outcomeEqualsValue  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.restrictUndefinedVisitor,  outcomeEqualsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this.restrictUndefinedVisitor,  outcomeEqualsValue);	  return    typeRegistry.getNativeType(typeId,    this.restrictUndefinedVisitor);    	non-compiled	[CE]  cannot  find  symbol  outcomeEqualsValue	104	None	replace
1089	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.restrictUndefinedVisitor,  result);  [CE]  cannot  find  symbol  result  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.restrictUndefinedVisitor,  result);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this.restrictUndefinedVisitor,  result);	  return    typeRegistry.getNativeType(typeId,    this.restrictUndefinedVisitor);    	non-compiled	[CE]  cannot  find  symbol  result	104	None	replace
1090	[BUG]  [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSType  result  =(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSType  result  =(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry    ==    null)?    null    :    this.typeRegistry.getNativeType(typeId);    JSType  result  =(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  unreachable  statement	173	None	add
1091	[BUG]  [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  getNativeType(JSTypeNative.NO_TYPE);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]      AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry    ==    null)?    null    :    this.typeRegistry.getNativeType(typeId);    JSType  typeId  =  getNativeType(JSTypeNative.NO_TYPE);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	173	None	add
1092	[BUG]  [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]        AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry    ==    null)?    null    :    this.typeRegistry.getNativeType(typeId);    JSType  typeId  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	173	None	add
1093	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId).restrictUNdefinedVisitor;  [CE]  cannot  find  symbol  restrictUNdefinedVisitor  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId).restrictUNdefinedVisitor;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId).restrictUNdefinedVisitor;	  return    typeRegistry.getNativeType(typeId).restrictByOneTypeOfResultVisitor;    	non-compiled	[CE]  cannot  find  symbol  restrictUNdefinedVisitor	13	None	replace
1094	[BUG]  [BUGGY]  return  typesRegistry.getNativeType(typeId)||  typeRegistry.getInstanceType(typeId);  [CE]  cannot  find  symbol  typesRegistry  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typesRegistry.getNativeType(typeId)||  typeRegistry.getInstanceType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typesRegistry.getNativeType(typeId)||  typeRegistry.getInstanceType(typeId);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getInstanceType(typeId);    	non-compiled	[CE]  cannot  find  symbol  typesRegistry	143	None	replace
1095	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.constructType(typeId);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.constructType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeRegistry.constructType(typeId);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getInstanceType(typeId);    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
1096	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  getNativeType(typeId):  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return  typeRegistry.getNativeType(typeId)!=  null?  getNativeType(typeId):  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)!=    null?    this    :    typeRegistry.getNativeType(typeId);    	compilable	  [FE]  StackOverflowError  	156	28	replace
1097	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  getNativeType(typeId):  typeRegistry.getNativeType(typeId);  [FE]  StackOverflowError  [FE]        NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  getNativeType(typeId):  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)!=  null?  getNativeType(typeId):  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)!=    null?    this    :    typeRegistry.getNativeType(typeId);    	compilable	  [FE]  StackOverflowError  	156	28	replace
1098	[BUG]  [BUGGY]  if(resultEqualsValue)  {  return  typeRegistry.getNativeType(null);  }  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(resultEqualsValue)  {  return  typeRegistry.getNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(resultEqualsValue)  {  return  typeRegistry.getNativeType(null);  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null)    {    resultEqualsValue    =    false;    }    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	121	None	replace
1099	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  return  typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  return  typeRegistry.getNativeType(typeId);  }	  return    typeRegistry.getNativeType(null);    typeRegistry.getNativeType(null);    	compilable	  [FE]  AssertionFailedError  	7	2	replace
1100	[BUG]  [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  return  typeRegistry.getNativeType(typeId);  }  [FE]  AssertionFailedError  [FE]                    NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  return  typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  return  typeRegistry.getNativeType(typeId);  }	  return    typeRegistry.getNativeType(null);    typeRegistry.getNativeType(null);    	compilable	  [FE]  AssertionFailedError  	7	2	replace
1101	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                      NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  return  typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  return  typeRegistry.getNativeType(typeId);  }	  return    typeRegistry.getNativeType(null);    typeRegistry.getNativeType(null);    	compilable	  [FE]  NullPointerException  	7	28	replace
1102	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  return  typeRegistry.getNativeType(typeId);  }  [FE]  NullPointerException  [FE]                      NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  return  typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  return  typeRegistry.getNativeType(typeId);  }	  return    typeRegistry.getNativeType(null);    typeRegistry.getNativeType(null);    	compilable	  [FE]  NullPointerException  	7	28	replace
1103	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)-  3;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)-  3;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)-  3;	  return    typeRegistry.getNativeType(typeId)+    3;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	81	None	replace
1104	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  null,  condition);  [CE]  cannot  find  symbol  condition  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  null,  condition);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  null,  condition);	  return    typeRegistry.getNativeType(typeId,    null);    	non-compiled	[CE]  cannot  find  symbol  condition	44	None	replace
1105	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  null,  this.restrictNullVisitor);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  null,  this.restrictNullVisitor);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  null,  this.restrictNullVisitor);	  return    this.typeRegistry.getNativeType(typeId,    null);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	57	None	replace
1106	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  null,  this.restrictUndefinedVisitor);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  null,  this.restrictUndefinedVisitor);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  null,  this.restrictUndefinedVisitor);	  return    this.typeRegistry.getNativeType(typeId,    null);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	57	None	replace
1107	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  typeId,  null,  this.restrictNullVisitor);  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  typeId,  null,  this.restrictNullVisitor);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  typeId,  null,  this.restrictNullVisitor);	  return    this.typeRegistry.getNativeType(typeId,    null);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	57	None	replace
1108	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)!=  null;  }  else  {  return  typeRegistry.getNativeType(typeId);  }  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)!=  null;  }  else  {  return  typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)!=  null;  }  else  {  return  typeRegistry.getNativeType(typeId);  }	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  incompatible  types	22	None	replace
1109	[BUG]  [BUGGY]  return  getNativeType(typeId);  if(typeId!=  null)  {  for(JSTypeNative  typeId  :  typeRegistry.getNativeType(typeId))  {  return  getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  getNativeType(typeId);  if(typeId!=  null)  {  for(JSTypeNative  typeId  :  typeRegistry.getNativeType(typeId))  {  return  getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    getNativeType(typeId);    if(typeId!=  null)  {  for(JSTypeNative  typeId  :  typeRegistry.getNativeType(typeId))  {  return  getNativeType(typeId);  }	  	non-compiled	[CE]  illegal  start  of  expression	146	None	add
1110	[BUG]  [BUGGY]  return  getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    getNativeType(typeId);    if(typeId!=  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }	  	non-compiled	[CE]  illegal  start  of  expression	146	None	add
1111	[BUG]  [BUGGY]  return  getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    getNativeType(typeId);    if(typeId  ==  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  getNativeType(typeId);  }	  	non-compiled	[CE]  illegal  start  of  expression	146	None	add
1112	[BUG]  [BUGGY]  return  getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    getNativeType(typeId);    if(typeId!=  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  getNativeType(typeId);  }	  	non-compiled	[CE]  illegal  start  of  expression	146	None	add
1113	[BUG]  [BUGGY]  return  getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  typeId.getNativeType();  if(typeId!=  null)  {  return  getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  typeId.getNativeType();  if(typeId!=  null)  {  return  getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    getNativeType(typeId);    if(typeId!=  null)  {  JSTypeNative  typeId  =  typeId.getNativeType();  if(typeId!=  null)  {  return  getNativeType(typeId);  }	  	non-compiled	[CE]  illegal  start  of  expression	146	None	add
1114	[BUG]  [BUGGY]  return  getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]              StackOverflowError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    getNativeType(typeId);    if(typeId!=  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  getNativeType(typeId);  }	  	non-compiled	[CE]  illegal  start  of  expression	146	None	add
1115	[BUG]  [BUGGY]  Return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  Return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	Return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;	  Return    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  ';'  expected	105	None	replace
1116	[BUG]  [BUGGY]  Return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  Return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	Return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;	  Return    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  ';'  expected	105	None	replace
1117	[BUG]  [BUGGY]  Return  typeRegistry.getNativeType(typeId)!=  null;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  Return  typeRegistry.getNativeType(typeId)!=  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	Return  typeRegistry.getNativeType(typeId)!=  null;	  Return    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  ';'  expected	105	None	replace
1118	[BUG]  [BUGGY]  Return  typeRegistry.getNativeType(typeId)  ==  null;  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  Return  typeRegistry.getNativeType(typeId)  ==  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	Return  typeRegistry.getNativeType(typeId)  ==  null;	  Return    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  ';'  expected	105	None	replace
1119	[BUG]  [BUGGY]  Return  typeRegistry.getNativeType(typeId).restrictUndefined();  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  Return  typeRegistry.getNativeType(typeId).restrictUndefined();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	Return  typeRegistry.getNativeType(typeId).restrictUndefined();	  Return    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  ';'  expected	105	None	replace
1120	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE)&&  typeId.restrictByTrueTypeOfResultVisitor();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE)&&  typeId.restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(UNKNOWN_TYPE)&&  typeId.restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(UNKNOWN_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
1121	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE),  getNativeType(typeId));  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE),  getNativeType(typeId));  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(UNKNOWN_TYPE),  getNativeType(typeId));	  return    typeRegistry.getNativeType(UNKNOWN_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  ';'  expected	82	None	replace
1122	[BUG]  [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId,  this.typeId);  [CE]  cannot  find  symbol  typeId  [FE]    AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId,  this.typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry  ==  null)?  null  :  this.typeRegistry.getNativeType(typeId,  this.typeId);	  return(this.typeRegistry    ==    null)?    null    :    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  typeId	174	None	replace
1123	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  }  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  }	  	non-compiled	[CE]  unreachable  statement	39	None	add
1124	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;	  	non-compiled	[CE]  unreachable  statement	39	None	add
1125	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  }  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  }	  	non-compiled	[CE]  unreachable  statement	39	None	add
1126	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId).restrictUndefined();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId).restrictUndefined();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId).restrictUndefined();	  return    typeRegistry.getNativeType(typeId)/    1;    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
1127	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  }  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(typeId)    ==    null?    typeRegistry.getNativeType(typeId):    null;    if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  }	  	non-compiled	[CE]  unreachable  statement	34	None	add
1128	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  }  [CE]  unreachable  statement  [FE]      NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(typeId)    ==    null?    typeRegistry.getNativeType(typeId):    null;    if(typeId  ==  null)  {  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  }	  	non-compiled	[CE]  unreachable  statement	34	None	add
1129	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  unreachable  statement  [FE]        NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry.getNativeType(typeId)    ==    null?    typeRegistry.getNativeType(typeId):    null;    return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;	  	non-compiled	[CE]  unreachable  statement	34	None	add
1130	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.get  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.get  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.get	  return    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    JSTypeNative    typeId    =    typeId.getJSType();    if(typeId!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  ';'  expected	186	None	replace
1131	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(restrictUndefinedVisitor).restrictByUndefinedVisitor();  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(restrictUndefinedVisitor).restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(restrictUndefinedVisitor).restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(value).restrictByUndefinedVisitor();    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	124	None	replace
1132	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  resultEqualsValue,  typeId);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  resultEqualsValue,  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  resultEqualsValue,  typeId);	  return    typeRegistry.getNativeType(typeId,    typeId);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	99	None	replace
1133	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSType  type  =  typeId.getNativeType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType(  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSType  type  =  typeId.getNativeType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType(  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSType  type  =  typeId.getNativeType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType(	  return    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    JSType    type    =    typeId.getNativeType();    if(type!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
1134	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)?  register.getNativeType(typeId):  registry.getNativeType(typeId);  [CE]  incompatible  types  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)?  register.getNativeType(typeId):  registry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)?  register.getNativeType(typeId):  registry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)?    typeRegistry.getNativeType(typeId):    registry.getNativeType(typeId);    	non-compiled	[CE]  incompatible  types	162	None	replace
1135	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)?  registry.getNativeType(typeId):  getNativeType(typeId);  [CE]  incompatible  types  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)?  registry.getNativeType(typeId):  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)?  registry.getNativeType(typeId):  getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)?    typeRegistry.getNativeType(typeId):    registry.getNativeType(typeId);    	non-compiled	[CE]  incompatible  types	162	None	replace
1136	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  Collections.emptyList();  [CE]  cannot  find  symbol  Collections  [FE]    AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  Collections.emptyList();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  Collections.emptyList();	  return    this.typeRegistry.getNativeType(typeId)!=    null?    this.typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  cannot  find  symbol  Collections	126	None	replace
1137	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null  &&  typeRegistry.getNativeType(typeId).isUnknownType();  [CE]  incompatible  types  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null  &&  typeRegistry.getNativeType(typeId).isUnknownType();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)!=  null  &&  typeRegistry.getNativeType(typeId).isUnknownType();	  return    typeRegistry.getNativeType(typeId)!=    null;    	non-compiled	[CE]  incompatible  types	18	None	replace
1138	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null  &&  typeRegistry.getNativeType(typeId);  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null  &&  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)!=  null  &&  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)!=    null;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	18	None	replace
1139	[BUG]  [BUGGY]  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    JSTypeNative    typeId    =    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	49	None	replace
1140	[BUG]  [BUGGY]  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSTypeNative  typeId  =  this.typeRegistry.getNativeType(typeId);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    this.typeRegistry.getNativeType(typeId);    JSTypeNative    typeId    =    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	49	None	replace
1141	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(new  JSTypeNative(typeId),  typeId);  [CE]  enum  types  may  not  be  instantiated  [FE]                NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(new  JSTypeNative(typeId),  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(new  JSTypeNative(typeId),  typeId);	  return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(new    JSTypeNative(typeId));    	non-compiled	[CE]  enum  types  may  not  be  instantiated	33	None	replace
1142	[BUG]  [BUGGY]  JSTypeNative  typeId  =  getNativeType(null,  typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                      NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSTypeNative  typeId  =  getNativeType(null,  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSTypeNative  typeId  =  getNativeType(null,  typeId);	  return    typeRegistry.getNativeType(null);    JSTypeNative    typeId    =    getNativeType(null);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	8	None	replace
1143	[BUG]  [BUGGY]  return  typeId  ==  null?  null  :  typeId.restrictByTypeOfResultVisitor.getNativeType();  [CE]  cannot  find  symbol  restrictByTypeOfResultVisitor  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  null  :  typeId.restrictByTypeOfResultVisitor.getNativeType();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId  ==  null?  null  :  typeId.restrictByTypeOfResultVisitor.getNativeType();	  return    typeId    ==    null?    null    :    typeId.getNativeType();    	non-compiled	[CE]  cannot  find  symbol  restrictByTypeOfResultVisitor	19	None	replace
1144	[BUG]  [BUGGY]  return  typeId  ==  null?  null  :  typeId,  this.restrictUndefinedVisitor.getNativeType();  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  null  :  typeId,  this.restrictUndefinedVisitor.getNativeType();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId  ==  null?  null  :  typeId,  this.restrictUndefinedVisitor.getNativeType();	  return    typeId    ==    null?    null    :    typeId.getNativeType();    	non-compiled	[CE]  ';'  expected	19	None	replace
1145	[BUG]  [BUGGY]  return  typeId  ==  null?  null  :  typeId.toNativeType();  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  null  :  typeId.toNativeType();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId  ==  null?  null  :  typeId.toNativeType();	  return    typeId    ==    null?    null    :    typeId.getNativeType();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
1146	[BUG]  [BUGGY]  return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;  return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;  return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry!=    null?    typeRegistry.getNativeType(typeId):    null;    return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;	  	non-compiled	[CE]  unreachable  statement	151	None	add
1147	[BUG]  [BUGGY]  return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;  JSTypeNative  typeId  =  getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]      AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  null;  JSTypeNative  typeId  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeRegistry!=    null?    typeRegistry.getNativeType(typeId):    null;    JSTypeNative  typeId  =  getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	151	None	add
1148	[BUG]  [BUGGY]  return  typeRegistry.restrictByUndefinedVisitor.getNativeType(typeId).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  restrictByUndefinedVisitor  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.restrictByUndefinedVisitor.getNativeType(typeId).restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.restrictByUndefinedVisitor.getNativeType(typeId).restrictByUndefinedVisitor();	  return    this.typeRegistry.getNativeType(typeId).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol  restrictByUndefinedVisitor	150	None	replace
1149	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  _value);  [CE]  cannot  find  symbol  _value  [FE]          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  _value);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  _value);	  return    this.typeRegistry.getNativeType(typeId,    value);    	non-compiled	[CE]  cannot  find  symbol  _value	56	None	replace
1150	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null  &&  typeRegistry.getNativeType(typeId).isSubtype(typeId):  null;  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null  &&  typeRegistry.getNativeType(typeId).isSubtype(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)!=  null  &&  typeRegistry.getNativeType(typeId).isSubtype(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null    &&    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  ';'  expected	36	None	replace
1151	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  getNativeType(typeId);  }	  return    typeRegistry.getNativeType(null);    JSTypeRegistry    typeRegistry    =    getNativeType(typeId);    	compilable	  [FE]  AssertionFailedError  	5	2	replace
1152	[BUG]  [BUGGY]  if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  getNativeType(typeId);  }  [FE]  AssertionFailedError  [FE]                NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  getNativeType(typeId);  }	  return    typeRegistry.getNativeType(null);    JSTypeRegistry    typeRegistry    =    getNativeType(typeId);    	compilable	  [FE]  AssertionFailedError  	5	2	replace
1153	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  typeRegistry.getNativeType(typeId);  }	  return    typeRegistry.getNativeType(null);    JSTypeRegistry    typeRegistry    =    getNativeType(typeId);    	compilable	  [FE]  AssertionFailedError  	5	2	replace
1154	[BUG]  [BUGGY]  if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  typeRegistry.getNativeType(typeId);  }  [FE]  AssertionFailedError  [FE]                  NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  typeRegistry.getNativeType(typeId);  }	  return    typeRegistry.getNativeType(null);    JSTypeRegistry    typeRegistry    =    getNativeType(typeId);    	compilable	  [FE]  AssertionFailedError  	5	2	replace
1155	[BUG]  [BUGGY]  if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  registry.getNativeType(typeId);  }  [CE]  cannot  find  symbol  registry  [FE]                    NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  registry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  registry.getNativeType(typeId);  }	  return    typeRegistry.getNativeType(null);    JSTypeRegistry    typeRegistry    =    getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  registry	5	None	replace
1156	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                      NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  return  typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  return  typeRegistry.getNativeType(typeId);  }	  return    typeRegistry.getNativeType(null);    JSTypeRegistry    typeRegistry    =    getNativeType(typeId);    	compilable	  [FE]  NullPointerException  	5	28	replace
1157	[BUG]  [BUGGY]  if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  return  typeRegistry.getNativeType(typeId);  }  [FE]  NullPointerException  [FE]                      NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  return  typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeRegistry!=  null)  {  return  typeRegistry.getNativeType(null);  }  else  {  return  typeRegistry.getNativeType(typeId);  }	  return    typeRegistry.getNativeType(null);    JSTypeRegistry    typeRegistry    =    getNativeType(typeId);    	compilable	  [FE]  NullPointerException  	5	28	replace
1158	[BUG]  [BUGGY]  resultEqualsValue  =  findNativeType(typeId);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]            NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  findNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  findNativeType(typeId);	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null)    {    resultEqualsValue    =    true;    }    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	119	None	replace
1159	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals( "Object ")||  typeId.equals( "object ")||  typeId.equals( "object "));  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals( "Object ")||  typeId.equals( "object ")||  typeId.equals( "object "));  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeId.equals( "Object ")||  typeId.equals( "object ")||  typeId.equals( "object "));	  return    typeRegistry.getNativeType(typeId)||    typeId.equals(   "object   ")||    typeId.equals(   "object   ")||    typeId.equals(   "object   "));    	non-compiled	[CE]  	161	None	replace
1160	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( ".object "));  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( ".object "));  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( ".object "));	  return    typeRegistry.getNativeType(typeId)||    typeId.equals(   "object   ")||    typeId.equals(   "object   ")||    typeId.equals(   "object   "));    	non-compiled	[CE]  	161	None	replace
1161	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(resultEqualsValue)!=  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  cannot  find  symbol  resultEqualsValue  [FE]          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(resultEqualsValue)!=  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(resultEqualsValue)!=  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(value)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	127	None	replace
1162	[BUG]  [BUGGY]  return(this.typeRegistry!=  null  &&  this.typeRegistry.getNativeType(typeId)  >=  typeId);  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry!=  null  &&  this.typeRegistry.getNativeType(typeId)  >=  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry!=  null  &&  this.typeRegistry.getNativeType(typeId)  >=  typeId);	  return(this.typeRegistry!=    null    &&    this.typeRegistry.getNativeType(typeId)    ==    typeId);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	175	None	replace
1163	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE),  typeId,  restrictUndefinedVisitor();  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(UNKNOWN_TYPE),  typeId,  restrictUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(UNKNOWN_TYPE),  typeId,  restrictUndefinedVisitor();	  return    typeRegistry.getNativeType(UNKNOWN_TYPE).restrictByUndefinedVisitor();    	non-compiled	[CE]  ';'  expected	60	None	replace
1164	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.qualifiedValue);  [CE]  cannot  find  symbol  qualifiedValue  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.qualifiedValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this.qualifiedValue);	  return    typeRegistry.getNativeType(typeId,    this.qualifiedName);    	non-compiled	[CE]  cannot  find  symbol  qualifiedValue	43	None	replace
1165	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.qualifiedName,  value);  [CE]  cannot  find  symbol  qualifiedName  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.qualifiedName,  value);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this.qualifiedName,  value);	  return    typeRegistry.getNativeType(typeId,    this.qualifiedName);    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	43	None	replace
1166	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId,  value);  [CE]  cannot  find  symbol  value  [FE]    AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId,  value);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId,  value);	  return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  value	29	None	replace
1167	[BUG]  [BUGGY]  return(typeId  ==  null  ||  this.typeRegistry.getNativeType(typeId):  null;  [CE]  ')'  expected  [FE]    NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null  ||  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId  ==  null  ||  this.typeRegistry.getNativeType(typeId):  null;	  return    typeId    ==    null?    this.typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  ')'  expected	179	None	replace
1168	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(this.value,  typeId);  [CE]  cannot  find  symbol  value  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(this.value,  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(this.value,  typeId);	  return    this.typeRegistry.getNativeType(typeId,    this.value);    	non-compiled	[CE]  cannot  find  symbol  value	58	None	replace
1169	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSTypeNative    typeId    =    typeId.getJSType();    if(typeId!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  ';'  expected	185	None	replace
1170	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.get  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.get  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  typeId.getJSType();  if(typeId!=  null)  {  return  this.typeRegistry.get	  return    this.typeRegistry.getNativeType(typeId);    if(typeId    ==    null)    {    JSTypeNative    typeId    =    typeId.getJSType();    if(typeId!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  ';'  expected	185	None	replace
1171	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  resultEqualsValue  &&  typeId.equals(typeId);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  resultEqualsValue  &&  typeId.equals(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)&&  resultEqualsValue  &&  typeId.equals(typeId);	  return    typeRegistry.getNativeType(typeId)&&    typeId.equals(typeId);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	98	None	replace
1172	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  resultEqualsValue?  typeRegistry.getNativeType(typeId):  typeId;  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  resultEqualsValue?  typeRegistry.getNativeType(typeId):  typeId;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)&&  resultEqualsValue?  typeRegistry.getNativeType(typeId):  typeId;	  return    typeRegistry.getNativeType(typeId)&&    typeId.equals(typeId);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	98	None	replace
1173	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(OBJECT_TYPE).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(OBJECT_TYPE).restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(OBJECT_TYPE).restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(OBJECT_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
1174	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(new  JSTypeNative(typeId,  typeId));  [CE]  enum  types  may  not  be  instantiated  [FE]              NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(new  JSTypeNative(typeId,  typeId));  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(new  JSTypeNative(typeId,  typeId));	  return    typeRegistry.getNativeType(new    JSTypeNative(typeId));    	non-compiled	[CE]  enum  types  may  not  be  instantiated	32	None	replace
1175	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(new  JSTypeNative(typeId,  null));  [CE]  enum  types  may  not  be  instantiated  [FE]                NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(new  JSTypeNative(typeId,  null));  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(new  JSTypeNative(typeId,  null));	  return    typeRegistry.getNativeType(new    JSTypeNative(typeId));    	non-compiled	[CE]  enum  types  may  not  be  instantiated	32	None	replace
1176	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  _restrictUndefinedVisitor);  [CE]  cannot  find  symbol  _restrictUndefinedVisitor  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  _restrictUndefinedVisitor);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this,  _restrictUndefinedVisitor);	  return    typeRegistry.getNativeType(typeId,    this,    value);    	non-compiled	[CE]  cannot  find  symbol  _restrictUndefinedVisitor	91	None	replace
1177	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  null,  null,  state);  [CE]  cannot  find  symbol  state  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  null,  null,  state);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  null,  null,  state);	  return    typeRegistry.getNativeType(typeId,    null,    null);    	non-compiled	[CE]  cannot  find  symbol  state	163	None	replace
1178	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  null,  null,  discrimination);  [CE]  cannot  find  symbol  discrimination  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  null,  null,  discrimination);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  null,  null,  discrimination);	  return    typeRegistry.getNativeType(typeId,    null,    null);    	non-compiled	[CE]  cannot  find  symbol  discrimination	163	None	replace
1179	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  null,  null,  constraintEqualsValue);  [CE]  cannot  find  symbol  constraintEqualsValue  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  null,  null,  constraintEqualsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  null,  null,  constraintEqualsValue);	  return    typeRegistry.getNativeType(typeId,    null,    null);    	non-compiled	[CE]  cannot  find  symbol  constraintEqualsValue	163	None	replace
1180	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(_typeId).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  _typeId  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(_typeId).restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(_typeId).restrictByUndefinedVisitor();	  return    typeRegistry.getNativeType(nameId).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol  _typeId	123	None	replace
1181	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  undefined);  [CE]  cannot  find  symbol  undefined  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this,  undefined);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this,  undefined);	  return    typeRegistry.getNativeType(typeId,    this,    state);    	non-compiled	[CE]  cannot  find  symbol  undefined	92	None	replace
1182	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSType  type  =  typeId.getJSType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType(  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSType  type  =  typeId.getJSType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType(  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSType  type  =  typeId.getJSType();  if(type!=  null)  {  return  this.typeRegistry.getNativeType(	  return    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    JSType    type    =    typeId.getJSType();    if(type!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
1183	[BUG]  [BUGGY]  return  typeregistry.getNativeType(typeId).restrictByFalseTypeOfResultVisitor();  [CE]  cannot  find  symbol  typeregistry  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeregistry.getNativeType(typeId).restrictByFalseTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeregistry.getNativeType(typeId).restrictByFalseTypeOfResultVisitor();	  return    typeRegistry.getNativeType(typeId).restrictByFalseTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol  typeregistry	87	None	replace
1184	[BUG]  [BUGGY]  return  typesRegistry.getNativeType(typeId).restrictByFalseTypeOfResultVisitor();  [CE]  cannot  find  symbol  typesRegistry  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typesRegistry.getNativeType(typeId).restrictByFalseTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typesRegistry.getNativeType(typeId).restrictByFalseTypeOfResultVisitor();	  return    typeRegistry.getNativeType(typeId).restrictByFalseTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol  typesRegistry	87	None	replace
1185	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(_typeId).restrictByFalseTypeOfResultVisitor();  [CE]  cannot  find  symbol  _typeId  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(_typeId).restrictByFalseTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(_typeId).restrictByFalseTypeOfResultVisitor();	  return    typeRegistry.getNativeType(typeId).restrictByFalseTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol  _typeId	87	None	replace
1186	[BUG]  [BUGGY]  outcomeValue  =  getNativeType(typeId);  [CE]  cannot  find  symbol  outcomeValue  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  outcomeValue  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	outcomeValue  =  getNativeType(typeId);	  resultEqualsValue    =    getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  outcomeValue	130	None	replace
1187	[BUG]  [BUGGY]  return  typeregistry.getNativeType(typeId)?  null  :  typeRegistry.getNativeType(typeId);  [CE]  cannot  find  symbol  typeregistry  [FE]          NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeregistry.getNativeType(typeId)?  null  :  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeregistry.getNativeType(typeId)?  null  :  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)?    null    :    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  typeregistry	30	None	replace
1188	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE)&&  typeId.equals(typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE));  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE)&&  typeId.equals(typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE));  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE)&&  typeId.equals(typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE));	  return    typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByUndefinedVisitor();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	62	None	replace
1189	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  typeId,  restrictUndefinedVisitor();  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  typeId,  restrictUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),  typeId,  restrictUndefinedVisitor();	  return    typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE).restrictByUndefinedVisitor();    	non-compiled	[CE]  ';'  expected	62	None	replace
1190	[BUG]  [BUGGY]  JSType  typeRegistry  =  this.typeRegistry.getNativeType(typeId);  [CE]  missing  return  statement  [FE]            NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  typeRegistry  =  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  typeRegistry  =  this.typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(null);    JSType    typeRegistry    =    typeRegistry.getNativeType(null);    	non-compiled	[CE]  missing  return  statement	3	None	replace
1191	[BUG]  [BUGGY]  JSType  typeRegistry  =  getNativeType(typeId);  [CE]  missing  return  statement  [FE]              NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  typeRegistry  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  typeRegistry  =  getNativeType(typeId);	  return    typeRegistry.getNativeType(null);    JSType    typeRegistry    =    typeRegistry.getNativeType(null);    	non-compiled	[CE]  missing  return  statement	3	None	replace
1192	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId).restrictNullValue;  [CE]  cannot  find  symbol  restrictNullValue  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId).restrictNullValue;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId).restrictNullValue;	  return    typeRegistry.getNativeType(typeId).restrictNullValue;    	non-compiled	[CE]  cannot  find  symbol  restrictNullValue	184	None	replace
1193	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)!=  null;  }  else  {  typeRegistry.getNativeType(typeId):  null;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)!=  null;  }  else  {  typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)!=  null;  }  else  {  typeRegistry.getNativeType(typeId):  null;  }	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  ';'  expected	24	None	replace
1194	[BUG]  [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(typeId)!=  null;  }  else  {  typeRegistry.getNativeType(typeId):  null;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(typeId)!=  null;  }  else  {  typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  return  typeRegistry.getNativeType(typeId)!=  null;  }  else  {  typeRegistry.getNativeType(typeId):  null;  }	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  ';'  expected	24	None	replace
1195	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)!=  null;  }  [CE]  incompatible  types  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)!=  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)!=  null;  }	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  incompatible  types	24	None	replace
1196	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null  &&  this.typeRegistry.getNativeType(typeId):  typeId;  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null  &&  this.typeRegistry.getNativeType(typeId):  typeId;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId)!=  null  &&  this.typeRegistry.getNativeType(typeId):  typeId;	  return    this.typeRegistry.getNativeType(typeId)!=    null?    this.typeRegistry.getNativeType(typeId):    typeId;    	non-compiled	[CE]  ';'  expected	172	None	replace
1197	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)&&!typeRegistry.getNativeType(typeId).restrictByUndefined();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)&&!typeRegistry.getNativeType(typeId).restrictByUndefined();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)&&!typeRegistry.getNativeType(typeId).restrictByUndefined();	  return    typeRegistry.getNativeType(typeId)&&!typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
1198	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)&&!typeRegistry.getNativeType(typeId,  resultEqualsValue);  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)&&!typeRegistry.getNativeType(typeId,  resultEqualsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)&&!typeRegistry.getNativeType(typeId,  resultEqualsValue);	  return    typeRegistry.getNativeType(typeId)&&!typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	142	None	replace
1199	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  this.restrictNullVisitor,  outcomeEqualsValue);  [CE]  cannot  find  symbol  outcomeEqualsValue  [FE]          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  this.restrictNullVisitor,  outcomeEqualsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  this.restrictNullVisitor,  outcomeEqualsValue);	  return    this.typeRegistry.getNativeType(typeId,    this.restrictNullVisitor);    	non-compiled	[CE]  cannot  find  symbol  outcomeEqualsValue	138	None	replace
1200	[BUG]  [BUGGY]  while(typeId!=  null  &&  typeId.equals(this.typeRegistry.getNativeType(typeId)))  {  typeId  =  getNativeType(typeId);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  while(typeId!=  null  &&  typeId.equals(this.typeRegistry.getNativeType(typeId)))  {  typeId  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	while(typeId!=  null  &&  typeId.equals(this.typeRegistry.getNativeType(typeId)))  {  typeId  =  getNativeType(typeId);	  return    this.typeRegistry.getNativeType(typeId);    JSType    typeId    =    getNativeType(typeId);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1201	[BUG]  [BUGGY]  while(typeId!=  null  &&  typeId.equals( " "))  {  typeId  =  getNativeType(typeId);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  while(typeId!=  null  &&  typeId.equals( " "))  {  typeId  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	while(typeId!=  null  &&  typeId.equals( " "))  {  typeId  =  getNativeType(typeId);	  return    this.typeRegistry.getNativeType(typeId);    JSType    typeId    =    getNativeType(typeId);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1202	[BUG]  [BUGGY]  while(typeId!=  null  &&  typeId.equals(this.typeRegistry.getNativeType(typeId)))  {  return  this.typeRegistry.getNativeType(typeId);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  while(typeId!=  null  &&  typeId.equals(this.typeRegistry.getNativeType(typeId)))  {  return  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	while(typeId!=  null  &&  typeId.equals(this.typeRegistry.getNativeType(typeId)))  {  return  this.typeRegistry.getNativeType(typeId);	  return    this.typeRegistry.getNativeType(typeId);    JSType    typeId    =    getNativeType(typeId);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1203	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.restrictNullVisitor,  outcomeEqualsValue);  [CE]  cannot  find  symbol  outcomeEqualsValue  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  this.restrictNullVisitor,  outcomeEqualsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  this.restrictNullVisitor,  outcomeEqualsValue);	  return    typeRegistry.getNativeType(typeId,    this.restrictNullVisitor);    	non-compiled	[CE]  cannot  find  symbol  outcomeEqualsValue	46	None	replace
1204	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return  typeRegistry.getNativeType(typeId)  ==  null?  getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)    ==    null;    	compilable	  [FE]  NullPointerException  	15	26	replace
1205	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  getNativeType(typeId):  null;  [FE]  NullPointerException  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)  ==  null?  getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)  ==  null?  getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)    ==    null;    	compilable	  [FE]  NullPointerException  	15	26	replace
1206	[BUG]  [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSType  result  =(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSType  result  =(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry!=    null)?    null    :    this.typeRegistry.getNativeType(typeId);    JSType  result  =(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  unreachable  statement	136	None	add
1207	[BUG]  [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]      NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry!=    null)?    null    :    this.typeRegistry.getNativeType(typeId);    JSType  typeId  =  this.typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	136	None	add
1208	[BUG]  [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]        NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  JSType  typeId  =  getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry!=    null)?    null    :    this.typeRegistry.getNativeType(typeId);    JSType  typeId  =  getNativeType(typeId);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	136	None	add
1209	[BUG]  [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry!=    null)?    null    :    this.typeRegistry.getNativeType(typeId);    if(typeId!=  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  	non-compiled	[CE]  illegal  start  of  expression	136	None	add
1210	[BUG]  [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  if(typeId  ==  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry!=    null)?    null    :    this.typeRegistry.getNativeType(typeId);    if(typeId  ==  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  	non-compiled	[CE]  illegal  start  of  expression	136	None	add
1211	[BUG]  [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(this.typeRegistry!=  null)?  null  :  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(this.typeRegistry!=    null)?    null    :    this.typeRegistry.getNativeType(typeId);    if(typeId!=  null)  {  JSTypeNative  typeId  =  getNativeType(typeId);  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId);  }	  	non-compiled	[CE]  illegal  start  of  expression	136	None	add
1212	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(TYPE_TYPE);  [CE]  cannot  find  symbol  TYPE_TYPE  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(TYPE_TYPE);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(TYPE_TYPE);	  return    typeRegistry.getNativeType(TYPE_Id);    	non-compiled	[CE]  cannot  find  symbol  TYPE_TYPE	75	None	replace
1213	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(TYPE_OBJECT);  [CE]  cannot  find  symbol  TYPE_OBJECT  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(TYPE_OBJECT);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(TYPE_OBJECT);	  return    typeRegistry.getNativeType(TYPE_Id);    	non-compiled	[CE]  cannot  find  symbol  TYPE_OBJECT	75	None	replace
1214	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null  &&  typeId.equals(typeRegistry.getNativeType(typeId));  [CE]  incompatible  types  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null  &&  typeId.equals(typeRegistry.getNativeType(typeId));  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)!=  null  &&  typeId.equals(typeRegistry.getNativeType(typeId));	  return    typeRegistry.getNativeType(typeId)    >=    null;    	non-compiled	[CE]  incompatible  types	131	None	replace
1215	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.NO_TYPE)&&  typeId.restrictByTrueTypeOfResultVisitor();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.NO_TYPE)&&  typeId.restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.NO_TYPE)&&  typeId.restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(JSTypeNative.NO_TYPE).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
1216	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  }  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId)!=    null?    this.typeRegistry.getNativeType(typeId):    null;    if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  }	  	non-compiled	[CE]  unreachable  statement	125	None	add
1217	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  return  this.typeRegistry.getNativeType(typeId):  null;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId)!=  null?  this.typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  return  this.typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    this.typeRegistry.getNativeType(typeId)!=    null?    this.typeRegistry.getNativeType(typeId):    null;    if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  return  this.typeRegistry.getNativeType(typeId):  null;  }	  	non-compiled	[CE]  ';'  expected	125	None	add
1218	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId).restrictNullVisitor;  [CE]  cannot  find  symbol  restrictNullVisitor  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId).restrictNullVisitor;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId).restrictNullVisitor;	  return    typeRegistry.getNativeType(typeId).restrictNullVisitor;    	non-compiled	[CE]  cannot  find  symbol  restrictNullVisitor	9	None	replace
1219	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.e  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.e  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.equals( "object ")||  typeId.e	  return    typeRegistry.getNativeType(typeId)||    typeId.equals(   "object   ")||    typeId.equals(   "object   ")||    typeId.equals(   "object   ")||    typeId.equals(   "object   "));    	non-compiled	[CE]  	160	None	replace
1220	[BUG]  [BUGGY]  return  typesRegistry.getNativeType(typeId).restrictNullVisitor();  [CE]  cannot  find  symbol  typesRegistry  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typesRegistry.getNativeType(typeId).restrictNullVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typesRegistry.getNativeType(typeId).restrictNullVisitor();	  return    typeRegistry.getNativeType(typeId).restrictNullVisitor();    	non-compiled	[CE]  cannot  find  symbol  typesRegistry	64	None	replace
1221	[BUG]  [BUGGY]  return  typeregistry.getNativeType(typeId).restrictNullVisitor();  [CE]  cannot  find  symbol  typeregistry  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeregistry.getNativeType(typeId).restrictNullVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeregistry.getNativeType(typeId).restrictNullVisitor();	  return    typeRegistry.getNativeType(typeId).restrictNullVisitor();    	non-compiled	[CE]  cannot  find  symbol  typeregistry	64	None	replace
1222	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId).restrictNullVisitor();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId).restrictNullVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId).restrictNullVisitor();	  return    typeRegistry.getNativeType(typeId).restrictNullVisitor();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
1223	[BUG]  [BUGGY]  Return  typeRegistry.getNativeType(typeId).restrictNullVisitor();  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  Return  typeRegistry.getNativeType(typeId).restrictNullVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	Return  typeRegistry.getNativeType(typeId).restrictNullVisitor();	  return    typeRegistry.getNativeType(typeId).restrictNullVisitor();    	non-compiled	[CE]  ';'  expected	64	None	replace
1224	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId).restrictNullVisitorOrUndefined();  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId).restrictNullVisitorOrUndefined();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId).restrictNullVisitorOrUndefined();	  return    typeRegistry.getNativeType(typeId).restrictNullVisitor();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
1225	[BUG]  [BUGGY]  return  typesRegistry.getNativeType(typeId).restrictUndefinedVisitor();  [CE]  cannot  find  symbol  typesRegistry  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typesRegistry.getNativeType(typeId).restrictUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typesRegistry.getNativeType(typeId).restrictUndefinedVisitor();	  return    typeRegistry.getNativeType(typeId).restrictUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol  typesRegistry	65	None	replace
1226	[BUG]  [BUGGY]  return  typeregistry.getNativeType(typeId).restrictUndefinedVisitor();  [CE]  cannot  find  symbol  typeregistry  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeregistry.getNativeType(typeId).restrictUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeregistry.getNativeType(typeId).restrictUndefinedVisitor();	  return    typeRegistry.getNativeType(typeId).restrictUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol  typeregistry	65	None	replace
1227	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId).restrictUndefinedVisitor();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId).restrictUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId).restrictUndefinedVisitor();	  return    typeRegistry.getNativeType(typeId).restrictUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
1228	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId).restrictUNdefinedVisitor();  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId).restrictUNdefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId).restrictUNdefinedVisitor();	  return    typeRegistry.getNativeType(typeId).restrictUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
1229	[BUG]  [BUGGY]  Return  typeRegistry.getNativeType(typeId).restrictUndefinedVisitor();  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  Return  typeRegistry.getNativeType(typeId).restrictUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	Return  typeRegistry.getNativeType(typeId).restrictUndefinedVisitor();	  return    typeRegistry.getNativeType(typeId).restrictUndefinedVisitor();    	non-compiled	[CE]  ';'  expected	65	None	replace
1230	[BUG]  [BUGGY]  if(value  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  cannot  find  symbol  value  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(value  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(value  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    return    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  value	51	None	replace
1231	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);  if(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);  if(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(null);    if(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);	  	non-compiled	[CE]  illegal  start  of  expression	144	None	add
1232	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);  JSTypeNative  typeId  =  getNativeType(null);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]      NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(null);  JSTypeNative  typeId  =  getNativeType(null);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(null);    JSTypeNative  typeId  =  getNativeType(null);	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	144	None	add
1233	[BUG]  [BUGGY]  if(typeId!=  null)  {  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  resultEqualsValue  =  result;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  resultEqualsValue  =  result;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  JSTypeNative  result  =  typeRegistry.getNativeType(typeId);  if(resultEqualsValue!=  null)  {  resultEqualsValue  =  result;  }	  if(typeId    ==    null)    {    JSTypeNative    result    =    typeRegistry.getNativeType(typeId);    if(resultEqualsValue!=    null)    {    resultEqualsValue    =    resultEqualsValue;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
1234	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId),  null,  typeRegistry.getNativeType(typeId):  null;  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId),  null,  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId),  null,  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  ';'  expected	38	None	replace
1235	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null  [CE]  ')'  expected  [FE]                NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(null  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  typeRegistry.getNativeType(null	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId!=    null    ||    typeId.equals(typeId))    {    return    typeRegistry.getNativeType(null    	non-compiled	[CE]  ')'  expected	169	None	replace
1236	[BUG]  [BUGGY]  JSType  return  typeRegistry.getNativeType(typeId):  null;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  return  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  return  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType    return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  not  a  statement	23	None	replace
1237	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null,  typeId  =  typeRegistry.getNativeType(typeId);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null,  typeId  =  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null,  typeId  =  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSTypeNative    typeId    =    typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  ';'  expected	27	None	replace
1238	[BUG]  [BUGGY]  JSType  result  =  typeRegistry.getNativeType(typeId):  null;  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  result  =  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  result  =  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType    result    =    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  ';'  expected	26	None	replace
1239	[BUG]  [BUGGY]  JSType  result  =  typeRegistry.getNativeType(typeId)wasNull;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  result  =  typeRegistry.getNativeType(typeId)wasNull;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  result  =  typeRegistry.getNativeType(typeId)wasNull;	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType    result    =    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  ';'  expected	26	None	replace
1240	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN);  [CE]  cannot  find  symbol  UNKNOWN  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(JSTypeNative.UNKNOWN);	  return    typeRegistry.getNativeType(_typeId);    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN	74	None	replace
1241	[BUG]  [BUGGY]  Return  resultEqualsValue  =  typeRegistry.getNativeType(typeId);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  Return  resultEqualsValue  =  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	Return  resultEqualsValue  =  typeRegistry.getNativeType(typeId);	  return    typeRegistry.getNativeType(resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
1242	[BUG]  [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  this.restrictUndefinedVisitor,  outcomeEqualsValue);  [CE]  cannot  find  symbol  outcomeEqualsValue  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeRegistry.getNativeType(typeId,  this.restrictUndefinedVisitor,  outcomeEqualsValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeRegistry.getNativeType(typeId,  this.restrictUndefinedVisitor,  outcomeEqualsValue);	  return    this.typeRegistry.getNativeType(typeId,    this.restrictUndefinedVisitor);    	non-compiled	[CE]  cannot  find  symbol  outcomeEqualsValue	140	None	replace
1243	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]              NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	if(typeId  ==  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  getNativeType(typeId);  }	  return    typeRegistry.getNativeType(null);    JSTypeRegistry    typeRegistry    =    getNativeType(null);    	compilable	  [FE]  StackOverflowError  	4	28	replace
1244	[BUG]  [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  getNativeType(typeId);  }  [FE]  StackOverflowError  [FE]              NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  return  typeRegistry.getNativeType(typeId);  }  else  {  return  getNativeType(typeId);  }	  return    typeRegistry.getNativeType(null);    JSTypeRegistry    typeRegistry    =    getNativeType(null);    	compilable	  [FE]  StackOverflowError  	4	28	replace
1245	[BUG]  [BUGGY]  final  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  final  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	final  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);	  return    this.typeRegistry.getNativeType(typeId);    JSType    typeId    =    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	48	None	replace
1246	[BUG]  [BUGGY]  null  typeId  =  this.typeRegistry.getNativeType(typeId);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  null  typeId  =  this.typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	null  typeId  =  this.typeRegistry.getNativeType(typeId);	  return    this.typeRegistry.getNativeType(typeId);    JSType    typeId    =    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  not  a  statement	48	None	replace
1247	[BUG]  [BUGGY]  JSType  typeId  =  this.typeRegistry.getNativeType(typeId).restrictByUndefined();  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  typeId  =  this.typeRegistry.getNativeType(typeId).restrictByUndefined();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  typeId  =  this.typeRegistry.getNativeType(typeId).restrictByUndefined();	  return    this.typeRegistry.getNativeType(typeId);    JSType    typeId    =    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	48	None	replace
1248	[BUG]  [BUGGY]  JSType  typeId  =  this.typeRegistry.getNativeType(typeId,  typeId);  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  JSType  typeId  =  this.typeRegistry.getNativeType(typeId,  typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	JSType  typeId  =  this.typeRegistry.getNativeType(typeId,  typeId);	  return    this.typeRegistry.getNativeType(typeId);    JSType    typeId    =    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	48	None	replace
1249	[BUG]  [BUGGY]  return  this.registry.getNativeType(typeId);  [CE]  cannot  find  symbol  registry  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.registry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.registry.getNativeType(typeId);	  return    typeregistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  registry	73	None	replace
1250	[BUG]  [BUGGY]  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  result  =  this.typeRegistry.getNativeType(typeId);  }  else  {  return  resultEqualsValue;  }  [CE]  cannot  find  symbol  resultEqualsValue  [FE]        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  result  =  this.typeRegistry.getNativeType(typeId);  }  else  {  return  resultEqualsValue;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  result  =  this.typeRegistry.getNativeType(typeId);  }  else  {  return  resultEqualsValue;  }	  return    this.typeRegistry.getNativeType(typeId);    JSType    result    =    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	111	None	replace
1251	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  result  =  this.typeRegistry.getNativeType(typeId);  }  else  {  return  result;  }  [CE]  cannot  find  symbol  result  [FE]          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  result  =  this.typeRegistry.getNativeType(typeId);  }  else  {  return  result;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  result  =  this.typeRegistry.getNativeType(typeId);  }  else  {  return  result;  }	  return    this.typeRegistry.getNativeType(typeId);    JSType    result    =    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  result	111	None	replace
1252	[BUG]  [BUGGY]  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  result  =  this.typeRegistry.getNativeType(typeId);  }  else  {  return  result;  }  [CE]  cannot  find  symbol  result  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  result  =  this.typeRegistry.getNativeType(typeId);  }  else  {  return  result;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  JSType  result  =  this.typeRegistry.getNativeType(typeId);  }  else  {  return  result;  }	  return    this.typeRegistry.getNativeType(typeId);    JSType    result    =    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  cannot  find  symbol  result	111	None	replace
1253	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  return  type;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  return  type;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  typeRegistry.getNativeType(typeId)  ==  null?  typeRegistry.getNativeType(typeId):  null;  if(typeId!=  null)  {  return  type;  }	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    if(typeId!=    null)    {    JSType    type    =    typeRegistry.getNativeType(typeId);    if(type!=    null)    {    return    type;    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
1254	[BUG]  [BUGGY]  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]    NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId    ==    null?    this.typeRegistry.getNativeType(typeId):    null;    JSType  typeId  =  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	178	None	add
1255	[BUG]  [BUGGY]  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]      NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId    ==    null?    this.typeRegistry.getNativeType(typeId):    null;    JSType  typeId  =  this.typeRegistry.getNativeType(typeId);  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	178	None	add
1256	[BUG]  [BUGGY]  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  }  [CE]  unreachable  statement  [FE]        NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId    ==    null?    this.typeRegistry.getNativeType(typeId):    null;    if(typeId  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  return  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  }	  	non-compiled	[CE]  unreachable  statement	178	None	add
1257	[BUG]  [BUGGY]  return  typeId  ==  null  &&  getNativeType(typeId):  null;  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null  &&  getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId  ==  null  &&  getNativeType(typeId):  null;	  return    typeId    ==    null?    getNativeType(typeId):    null;    	non-compiled	[CE]  ';'  expected	181	None	replace
1258	[BUG]  [BUGGY]  return  typeId  ==  null?  getNativeType(typeId):  new  JSType(restrictNullVisitor);  [CE]  JSType  is  abstract;  cannot  be  instantiated  [FE]      NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  getNativeType(typeId):  new  JSType(restrictNullVisitor);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId  ==  null?  getNativeType(typeId):  new  JSType(restrictNullVisitor);	  return    typeId    ==    null?    getNativeType(typeId):    null;    	non-compiled	[CE]  JSType  is  abstract;  cannot  be  instantiated	181	None	replace
1259	[BUG]  [BUGGY]  if(typeId!=  null  ||  typeId.equals(this.typeRegistry.getNativeType(typeId)))  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null  ||  typeId.equals(this.typeRegistry.getNativeType(typeId)))  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null  ||  typeId.equals(this.typeRegistry.getNativeType(typeId)))  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    JSTypeNative    typeId    =    getNativeType(typeId);    if(typeId!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  missing  return  statement	187	None	replace
1260	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  typeRegistry.getNativeType(typeId):  null;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType    typeId    =    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  ';'  expected	25	None	replace
1261	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  //$NON-NLS-1$  JSType  typeId  =  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	add	return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  //$NON-NLS-1$  JSType  typeId  =  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType    typeId    =    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	compilable	  [FE]  AssertionFailedError  	25	2	replace
1262	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  //$NON-NLS-1$  JSType  typeId  =  typeRegistry.getNativeType(typeId):  null;  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  //$NON-NLS-1$  JSType  typeId  =  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  //$NON-NLS-1$  JSType  typeId  =  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType    typeId    =    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	compilable	  [FE]  AssertionFailedError  	25	2	replace
1263	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  typeId  ==  null?  typeRegistry.getNativeType(typeId):  null;  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  typeId  ==  null?  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)!=  null?  typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  typeId  ==  null?  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    JSType    typeId    =    typeRegistry.getNativeType(typeId)!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	25	None	replace
1264	[BUG]  [BUGGY]  return  getNativeType(typeId)  ==  null?  null  :  typeId;  [CE]  incompatible  types  [FE]    StackOverflowError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  getNativeType(typeId)  ==  null?  null  :  typeId;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  getNativeType(typeId)  ==  null?  null  :  typeId;	  return    getNativeType(typeId);    	non-compiled	[CE]  incompatible  types	147	None	replace
1265	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeId.toString();  [CE]  incompatible  types  [FE]      StackOverflowError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeId.toString();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId  ==  null)?  null  :  typeId.toString();	  return    getNativeType(typeId);    	non-compiled	[CE]  incompatible  types	147	None	replace
1266	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeId;  [CE]  incompatible  types  [FE]        StackOverflowError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeId;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId  ==  null)?  null  :  typeId;	  return    getNativeType(typeId);    	non-compiled	[CE]  incompatible  types	147	None	replace
1267	[BUG]  [BUGGY]  return  getNativeType(typeId)!=  null?  null  :  typeId;  [CE]  incompatible  types  [FE]          StackOverflowError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  getNativeType(typeId)!=  null?  null  :  typeId;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  getNativeType(typeId)!=  null?  null  :  typeId;	  return    getNativeType(typeId);    	non-compiled	[CE]  incompatible  types	147	None	replace
1268	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSType  type  =  getNativeType(typeId);  if(type!=  null)  {  return  this.typeRegistry.getNativeType  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSType  type  =  getNativeType(typeId);  if(type!=  null)  {  return  this.typeRegistry.getNativeType  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSType  type  =  getNativeType(typeId);  if(type!=  null)  {  return  this.typeRegistry.getNativeType	  return    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    JSType    type    =    getNativeType(typeId);    if(type!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  ';'  expected	116	None	replace
1269	[BUG]  [BUGGY]  if(typeId!=  null)  {  JSType  type  =  getNativeType(typeId);  if(type  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  JSType  type  =  getNativeType(typeId);  if(type  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  JSType  type  =  getNativeType(typeId);  if(type  ==  null)  {  return  this.typeRegistry.getNativeType(typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    JSType    type    =    getNativeType(typeId);    if(type!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
1270	[BUG]  [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSType  type  =  getNativeType(typeId);  if(type!=  null)  {  return  this.typeRegistry.getNativeType(  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSType  type  =  getNativeType(typeId);  if(type!=  null)  {  return  this.typeRegistry.getNativeType(  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	resultEqualsValue  =  this.typeRegistry.getNativeType(typeId);  if(typeId!=  null)  {  JSType  type  =  getNativeType(typeId);  if(type!=  null)  {  return  this.typeRegistry.getNativeType(	  return    this.typeRegistry.getNativeType(typeId);    if(typeId!=    null)    {    JSType    type    =    getNativeType(typeId);    if(type!=    null)    {    return    this.typeRegistry.getNativeType(typeId);    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
1271	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typesRegistry.getNativeType(typeId).restrictByUndefined();  [CE]  cannot  find  symbol  typesRegistry  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typesRegistry.getNativeType(typeId).restrictByUndefined();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typesRegistry.getNativeType(typeId).restrictByUndefined();	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId).restrictByUndefined();    	non-compiled	[CE]  cannot  find  symbol  typesRegistry	157	None	replace
1272	[BUG]  [BUGGY]  return  typeregistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId).restrictByUndefined();  [CE]  cannot  find  symbol  typeregistry  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeregistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId).restrictByUndefined();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeregistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId).restrictByUndefined();	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId).restrictByUndefined();    	non-compiled	[CE]  cannot  find  symbol  typeregistry	157	None	replace
1273	[BUG]  [BUGGY]  return  typesRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId).restrictByUndefined();  [CE]  cannot  find  symbol  typesRegistry  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typesRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId).restrictByUndefined();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typesRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId).restrictByUndefined();	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId).restrictByUndefined();    	non-compiled	[CE]  cannot  find  symbol  typesRegistry	157	None	replace
1274	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId).restrictUndefined();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId).restrictUndefined();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId).restrictUndefined();	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId).restrictByUndefined();    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
1275	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  typeId.equals( "function ")&&  typeId.equals( "function ")&&  typeId.equals( "function ")&&  typeId.equals( "function ")||  typeId.equals( "function ")&&  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  typeId.equals( "function ")&&  typeId.equals( "function ")&&  typeId.equals( "function ")&&  typeId.equals( "function ")||  typeId.equals( "function ")&&  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)&&  typeId.equals( "function ")&&  typeId.equals( "function ")&&  typeId.equals( "function ")&&  typeId.equals( "function ")||  typeId.equals( "function ")&&	  return    typeRegistry.getNativeType(nativeId);    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
1276	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  typeId.equals( "function ")&&  typeId.equals( "function ")&&  typeId.equals( "function ")&&  typeId.equals( "function "));  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  typeId.equals( "function ")&&  typeId.equals( "function ")&&  typeId.equals( "function ")&&  typeId.equals( "function "));  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)&&  typeId.equals( "function ")&&  typeId.equals( "function ")&&  typeId.equals( "function ")&&  typeId.equals( "function "));	  return    typeRegistry.getNativeType(nativeId);    	non-compiled	[CE]  	135	None	replace
1277	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  typeId.equals( "function ")&&  typeId.equals( "function ")&&  typeId.equals( "function ")&&  typeId.equals( "function ")||  typeId.equals( "function ")  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  typeId.equals( "function ")&&  typeId.equals( "function ")&&  typeId.equals( "function ")&&  typeId.equals( "function ")||  typeId.equals( "function ")  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)&&  typeId.equals( "function ")&&  typeId.equals( "function ")&&  typeId.equals( "function ")&&  typeId.equals( "function ")||  typeId.equals( "function ")	  return    typeRegistry.getNativeType(nativeId);    	non-compiled	[CE]  	135	None	replace
1278	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  typeId.equals( "function ")&&  typeId.equals( "function ")&&  typeId.equals( "function ")&&  typeId.equals( "function ")||  typeId.equals( "function "));  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)&&  typeId.equals( "function ")&&  typeId.equals( "function ")&&  typeId.equals( "function ")&&  typeId.equals( "function ")||  typeId.equals( "function "));  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)&&  typeId.equals( "function ")&&  typeId.equals( "function ")&&  typeId.equals( "function ")&&  typeId.equals( "function ")||  typeId.equals( "function "));	  return    typeRegistry.getNativeType(nativeId);    	non-compiled	[CE]  	135	None	replace
1279	[BUG]  [BUGGY]  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]    AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId!=    null?    this.typeRegistry.getNativeType(typeId):    null;    JSType  typeId  =  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	176	None	add
1280	[BUG]  [BUGGY]  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]      AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId!=    null?    this.typeRegistry.getNativeType(typeId):    null;    JSType  typeId  =  typeId  ==  null?  this.typeRegistry.getNativeType(typeId):  null;	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	176	None	add
1281	[BUG]  [BUGGY]  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId!=    null?    this.typeRegistry.getNativeType(typeId):    null;    return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;	  	non-compiled	[CE]  unreachable  statement	176	None	add
1282	[BUG]  [BUGGY]  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  typeId.getNativeType();  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]          AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId!=  null?  this.typeRegistry.getNativeType(typeId):  null;  JSType  typeId  =  typeId.getNativeType();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId!=    null?    this.typeRegistry.getNativeType(typeId):    null;    JSType  typeId  =  typeId.getNativeType();	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	176	None	add
1283	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(restrictUndefinedVisitor).restrictByTrueTypeOfResultVisitor();  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(restrictUndefinedVisitor).restrictByTrueTypeOfResultVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(restrictUndefinedVisitor).restrictByTrueTypeOfResultVisitor();	  return    typeRegistry.getNativeType(nativeTypeId).restrictByTrueTypeOfResultVisitor();    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	84	None	replace
1284	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  conditionalValue);  [CE]  cannot  find  symbol  conditionalValue  [FE]              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  conditionalValue);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(typeId,  conditionalValue);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(typeId,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  conditionalValue	141	None	replace
1285	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null  &&  typeId.isUndefined();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)!=  null  &&  typeId.isUndefined();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)!=  null  &&  typeId.isUndefined();	  return    typeRegistry.getNativeType(typeId)    [Delete]    null;    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
1286	[BUG]  [BUGGY]  return  typeId  ==  null?  getNativeType(typeId):  null;  JSTypeNative  typeId  =  getNativeType(typeId);  return  typeId  ==  null?  getNativeType(typeId):  null;  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]    NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  getNativeType(typeId):  null;  JSTypeNative  typeId  =  getNativeType(typeId);  return  typeId  ==  null?  getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId    ==    null?    getNativeType(typeId):    null;    JSTypeNative  typeId  =  getNativeType(typeId);  return  typeId  ==  null?  getNativeType(typeId):  null;	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	180	None	add
1287	[BUG]  [BUGGY]  return  typeId  ==  null?  getNativeType(typeId):  null;  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  return  typeId  ==  null?  getNativeType(typeId):  null;  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]      NullPointerException    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  getNativeType(typeId):  null;  JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  return  typeId  ==  null?  getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return    typeId    ==    null?    getNativeType(typeId):    null;    JSTypeNative  typeId  =  typeRegistry.getNativeType(typeId);  return  typeId  ==  null?  getNativeType(typeId):  null;	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	180	None	add
1288	[BUG]  [BUGGY]  return  this.restrictUndefinedVisitor.getNativeType(typeId).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.restrictUndefinedVisitor.getNativeType(typeId).restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.restrictUndefinedVisitor.getNativeType(typeId).restrictByUndefinedVisitor();	  return    typeregistry.getNativeType(typeId).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol	148	None	replace
1289	[BUG]  [BUGGY]  return  this.typeregistry.getNativeType(typeId).restrictByUndefinedVisitor();  [CE]  cannot  find  symbol  typeregistry  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  this.typeregistry.getNativeType(typeId).restrictByUndefinedVisitor();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  this.typeregistry.getNativeType(typeId).restrictByUndefinedVisitor();	  return    typeregistry.getNativeType(typeId).restrictByUndefinedVisitor();    	non-compiled	[CE]  cannot  find  symbol  typeregistry	148	None	replace
1290	[BUG]  [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  return  this.typeRegistry.getNativeType(typeId,  typeId);  }  [CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  return  this.typeRegistry.getNativeType(typeId,  typeId);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId!=  null)  {  return  this.typeRegistry.getNativeType(typeId);  }  else  {  return  this.typeRegistry.getNativeType(typeId,  typeId);  }	  return    this.typeRegistry.getNativeType(typeId);    JSType    return    this.typeRegistry.getNativeType(typeId);    	non-compiled	[CE]  method  getNativeType  in  class  JSTypeRegistry  cannot  be  applied  to  given  types;	47	None	replace
1291	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);  if(typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);  if(typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(typeId);    if(typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
1292	[BUG]  [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);  JSType  typeId  =  typeRegistry.getNativeType(typeId).restrictNull();  [CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)  [FE]      AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return(typeId  ==  null)?  null  :  typeRegistry.getNativeType(typeId);  JSType  typeId  =  typeRegistry.getNativeType(typeId).restrictNull();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return(typeId    ==    null)?    null    :    typeRegistry.getNativeType(typeId);    JSType  typeId  =  typeRegistry.getNativeType(typeId).restrictNull();	  	non-compiled	[CE]  variable  typeId  is  already  defined  in  method  getNativeType(JSTypeNative)	28	None	add
1293	[BUG]  [BUGGY]  return  typeRegistry!=  null  &&  typeRegistry.getNativeType(typeId):  null;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry!=  null  &&  typeRegistry.getNativeType(typeId):  null;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry!=  null  &&  typeRegistry.getNativeType(typeId):  null;	  return    typeRegistry!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  ';'  expected	152	None	replace
1294	[BUG]  [BUGGY]  return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  this;  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  this;  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry!=  null?  typeRegistry.getNativeType(typeId):  this;	  return    typeRegistry!=    null?    typeRegistry.getNativeType(typeId):    null;    	non-compiled	[CE]  incompatible  types	152	None	replace
1295	[BUG]  [BUGGY]  if(typeId  ==  null  ||  typeId.equals(typeId))  {  return  getNativeType(null);  }  [CE]  missing  return  statement  [FE]          NullPointerException      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  if(typeId  ==  null  ||  typeId.equals(typeId))  {  return  getNativeType(null);  }  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	if(typeId  ==  null  ||  typeId.equals(typeId))  {  return  getNativeType(null);  }	  return    typeRegistry.getNativeType(null);    if(typeRegistry!=    null)    {    JSTypeNative    typeId    =    typeRegistry.getNativeType(null);    if(typeId    ==    null    ||    typeId.equals(typeId))    {    return    typeRegistry.getNativeType(null);    }    	non-compiled	[CE]  missing  return  statement	166	None	replace
1296	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId,  delegate.restrictNullVisitor);  [CE]  cannot  find  symbol  delegate  [FE]            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId,  delegate.restrictNullVisitor);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId,  delegate.restrictNullVisitor);	  return    typeRegistry.getNativeType(typeId,    state.restrictNullVisitor);    	non-compiled	[CE]  cannot  find  symbol  delegate	134	None	replace
1297	[BUG]  [BUGGY]  return  typeId  ==  null?  null  :  typeId.restrictByTypeOfResultVisitor.toString();  [CE]  cannot  find  symbol  restrictByTypeOfResultVisitor  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null?  null  :  typeId.restrictByTypeOfResultVisitor.toString();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId  ==  null?  null  :  typeId.restrictByTypeOfResultVisitor.toString();	  return    typeId    ==    null?    null    :    typeId.toString();    	non-compiled	[CE]  cannot  find  symbol  restrictByTypeOfResultVisitor	182	None	replace
1298	[BUG]  [BUGGY]  return  typeId  ==  null  ||  typeId.toString().equals( "function ")?  null  :  typeId.toString();  [CE]  incompatible  types  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null  ||  typeId.toString().equals( "function ")?  null  :  typeId.toString();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId  ==  null  ||  typeId.toString().equals( "function ")?  null  :  typeId.toString();	  return    typeId    ==    null?    null    :    typeId.toString();    	non-compiled	[CE]  incompatible  types	182	None	replace
1299	[BUG]  [BUGGY]  return  typeId  ==  null  ||  typeId.toString().equals( "object ")?  null  :  typeId.toString();  [CE]  incompatible  types  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeId  ==  null  ||  typeId.toString().equals( "object ")?  null  :  typeId.toString();  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeId  ==  null  ||  typeId.toString().equals( "object ")?  null  :  typeId.toString();	  return    typeId    ==    null?    null    :    typeId.toString();    	non-compiled	[CE]  incompatible  types	182	None	replace
1300	[BUG]  [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(clazz);  [CE]  cannot  find  symbol  clazz  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getNativeType(JSTypeNative  typeId)  {      [BUGGY]  return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(clazz);  [BUGGY]      }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getNativeType  [RETURN_TYPE]  JSType  JSTypeNative  typeId  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.2672612419124244	687	687	2	replace	return  typeRegistry.getNativeType(typeId)||  typeRegistry.getNativeType(clazz);	  return    typeRegistry.getNativeType(typeId)||    typeRegistry.getNativeType(value);    	non-compiled	[CE]  cannot  find  symbol  clazz	69	None	replace
