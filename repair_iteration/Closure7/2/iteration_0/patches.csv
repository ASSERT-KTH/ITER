bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  [BUGGY]  if(type!=  null)  {  [BUGGY]  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(type!=  null)  {	if  (type  ==  null)  {  	compilable	  [FE]  AssertionFailedError  	3	9	replace
2	[BUG]  [BUGGY]  if(type!=  null)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  [BUGGY]  if(type!=  null)  {  [BUGGY]  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {	if  (type  ==  null)  {  	compilable	  [FE]  AssertionFailedError  	3	9	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  [BUGGY]  if(value  ==  null)  {  [BUGGY]  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(value  ==  null)  {	if  (type  ==  null)  {  	compilable	  [FE]  AssertionFailedError  	3	3	replace
4	[BUG]  [BUGGY]  if(value  ==  null)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  [BUGGY]  if(value  ==  null)  {  [BUGGY]  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {	if  (type  ==  null)  {  	compilable	  [FE]  AssertionFailedError  	3	3	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  [BUGGY]  if(resultEqualsValue)  {  [BUGGY]  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(resultEqualsValue)  {	if  (type  ==  null)  {  	compilable	  [FE]  AssertionFailedError  	3	5	replace
6	[BUG]  [BUGGY]  if(resultEqualsValue)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  [BUGGY]  if(resultEqualsValue)  {  [BUGGY]  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {	if  (type  ==  null)  {  	compilable	  [FE]  AssertionFailedError  	3	5	replace
7	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]          AssertionFailedError  [CONTEXT]  JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  [BUGGY]  if(resultEqualsValue  ==  null)  {  [BUGGY]  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  ==  null)  {	if  (type  ==  null)  {  	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	3	None	replace
8	[BUG]  [BUGGY]  if(resultEqualsValue!=  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]            AssertionFailedError  [CONTEXT]  JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  [BUGGY]  if(resultEqualsValue!=  null)  {  [BUGGY]  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue!=  null)  {	if  (type  ==  null)  {  	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	3	None	replace
9	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]              AssertionFailedError  [CONTEXT]  JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  [BUGGY]    [BUGGY]  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	  	if  (type  ==  null)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  [BUGGY]  if(value!=  null)  {  [BUGGY]  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(value!=  null)  {	if  (type  ==  null)  {  	compilable	  [FE]  AssertionFailedError  	3	8	replace
11	[BUG]  [BUGGY]  if(value!=  null)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  [BUGGY]  if(value!=  null)  {  [BUGGY]  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null)  {	if  (type  ==  null)  {  	compilable	  [FE]  AssertionFailedError  	3	8	replace
12	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  [BUGGY]  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(type  ==  null  ||  resultEqualsValue)  {	if  (type  ==  null)  {  	compilable	  [FE]  AssertionFailedError  	3	4	replace
13	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  [BUGGY]  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  resultEqualsValue)  {	if  (type  ==  null)  {  	compilable	  [FE]  AssertionFailedError  	3	4	replace
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  [BUGGY]  if(type  ==  null  ||  value.length()  ==  0)  {  [BUGGY]  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(type  ==  null  ||  value.length()  ==  0)  {	if  (type  ==  null)  {  	compilable	  [FE]  AssertionFailedError  	3	2	replace
15	[BUG]  [BUGGY]  if(type  ==  null  ||  value.length()  ==  0)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  [BUGGY]  if(type  ==  null  ||  value.length()  ==  0)  {  [BUGGY]  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  value.length()  ==  0)  {	if  (type  ==  null)  {  	compilable	  [FE]  AssertionFailedError  	3	2	replace
