bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(type!=  null)  {  if(type!=  null)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type!=  null)  {  if(type!=  null)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null)    {    if(type!=  null)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
2	[BUG]  [BUGGY]  if(type!=  null)  {  if(type  ==  null)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type!=  null)  {  if(type  ==  null)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null)    {    if(type  ==  null)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
3	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type!=  null)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null)    {    JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	1	None	add
4	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  type  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type!=  null)  {  JSType  type  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null)    {    JSType  type  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	1	None	add
5	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type!=  null)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null)    {    JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	1	None	add
6	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  type  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type!=  null)  {  JSType  type  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null)    {    JSType  type  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	1	None	add
7	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  result  =  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type!=  null)  {  JSType  result  =  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null)    {    JSType  result  =  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	1	None	add
8	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(resultEqualsValue)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(resultEqualsValue)  {  if(resultEqualsValue)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)    {    if(resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
9	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)!=  null)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)!=  null)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)    {    if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)!=  null)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
10	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  null)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  null)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)    {    if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  null)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
11	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  >=  null)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  >=  null)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)    {    if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  >=  null)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
12	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  false)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  false)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)    {    if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  false)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
13	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  <  null)  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  <  null)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)    {    if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  <  null)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
14	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(resultEqualsValue  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(resultEqualsValue)  {  if(resultEqualsValue  ||  resultEqualsValue)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)    {    if(resultEqualsValue  ||  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
15	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE));  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE));  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)    {    if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE));	  	non-compiled	[CE]  ';'  expected	5	None	add
16	[BUG]  [BUGGY]  if(value  ==  null)  {  if(value  ==  null)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value  ==  null)  {  if(value  ==  null)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null)    {    if(value  ==  null)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
17	[BUG]  [BUGGY]  if(value  ==  null)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value  ==  null)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null)    {    JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	3	None	add
18	[BUG]  [BUGGY]  if(value  ==  null)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value),  type,  resultEqualsValue);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value  ==  null)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value),  type,  resultEqualsValue);  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null)    {    JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value),  type,  resultEqualsValue);	  	non-compiled	[CE]  ';'  expected	3	None	add
19	[BUG]  [BUGGY]  if(value  ==  null)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value  ==  null)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null)    {    JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	3	None	add
20	[BUG]  [BUGGY]  if(value  ==  null)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value),  type,  resultEqualsValue);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value  ==  null)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value),  type,  resultEqualsValue);  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null)    {    JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value),  type,  resultEqualsValue);	  	non-compiled	[CE]  ';'  expected	3	None	add
21	[BUG]  [BUGGY]  if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(type);  if(resultEqualsValue)  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(type);  if(resultEqualsValue)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null)    {    JSType  result  =  getNativeTypeForTypeOf(type);  if(resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
22	[BUG]  [BUGGY]  if(value  ==  null)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value),  type,  resultEqualsValue));  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value  ==  null)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value),  type,  resultEqualsValue));  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null)    {    JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value),  type,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	3	None	add
23	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue  ==  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type  ==  null  ||  resultEqualsValue  ==  null)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  resultEqualsValue  ==  null)  {	  if(value!=    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	11	None	replace
24	[BUG]  [BUGGY]  if(type!=  null  ||  resultEqualsValue  ==  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type!=  null  ||  resultEqualsValue  ==  null)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null  ||  resultEqualsValue  ==  null)  {	  if(value!=    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	11	None	replace
25	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue  ==  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]              AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value  ==  null  ||  resultEqualsValue  ==  null)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  resultEqualsValue  ==  null)  {	  if(resultEqualsValue    ==    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	7	None	replace
26	[BUG]  [BUGGY]  if(value!=  null)  {  if(value!=  null)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value!=  null)  {  if(value!=  null)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null)    {    if(value!=  null)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
27	[BUG]  [BUGGY]  if(value!=  null)  {  if(value  ==  null)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value!=  null)  {  if(value  ==  null)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null)    {    if(value  ==  null)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
28	[BUG]  [BUGGY]  if(value!=  null)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value!=  null)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null)    {    JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	10	None	add
29	[BUG]  [BUGGY]  if(value!=  null)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value!=  null)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null)    {    JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	10	None	add
30	[BUG]  [BUGGY]  if(value!=  null)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value),  type,  resultEqualsValue);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value!=  null)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value),  type,  resultEqualsValue);  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null)    {    JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value),  type,  resultEqualsValue);	  	non-compiled	[CE]  ';'  expected	10	None	add
31	[BUG]  [BUGGY]  if(value!=  null)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value),  type,  resultEqualsValue);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value!=  null)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value),  type,  resultEqualsValue);  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null)    {    JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value),  type,  resultEqualsValue);	  	non-compiled	[CE]  ';'  expected	10	None	add
32	[BUG]  [BUGGY]  if(value!=  null)  {  JSType  result  =  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value!=  null)  {  JSType  result  =  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null)    {    JSType  result  =  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	10	None	add
33	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
34	[BUG]  [BUGGY]  JSType  result  =  type.getRestrictedByTypeOfResult(value);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  JSType  result  =  type.getRestrictedByTypeOfResult(value);  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.getRestrictedByTypeOfResult(value);	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
35	[BUG]  [BUGGY]  JSType  result  =  type.getRestrictedByTypeOfResult(value,  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  JSType  result  =  type.getRestrictedByTypeOfResult(value,  resultEqualsValue);  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.getRestrictedByTypeOfResult(value,  resultEqualsValue);	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
36	[BUG]  [BUGGY]  JSType  result  =  getRestrictedByTypeOfResult(type,  value,  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  JSType  result  =  getRestrictedByTypeOfResult(type,  value,  resultEqualsValue);  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getRestrictedByTypeOfResult(type,  value,  resultEqualsValue);	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
37	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictedByTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  JSType  result  =  type.visit(new  RestrictedByTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictedByTypeOfResultVisitor(value,  resultEqualsValue));	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
38	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  if(type  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  if(type  ==  null  ||  resultEqualsValue)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    resultEqualsValue)    {    if(type  ==  null  ||  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
39	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  resultEqualsValue)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    resultEqualsValue)    {    JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
40	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    resultEqualsValue)    {    JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	12	None	add
41	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    resultEqualsValue)    {    JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
42	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    resultEqualsValue)    {    JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
43	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  if(type!=  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  if(type!=  null  ||  resultEqualsValue)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    resultEqualsValue)    {    if(type!=  null  ||  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
44	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value),  value,  resultEqualsValue);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value),  value,  resultEqualsValue);  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    resultEqualsValue)    {    JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value),  value,  resultEqualsValue);	  	non-compiled	[CE]  ';'  expected	12	None	add
45	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    resultEqualsValue)    {    JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);	  	non-compiled	[CE]  ';'  expected	12	None	add
46	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(type!=  null  ||  resultEqualsValue)  {	  if(resultEqualsValue)    {    	compilable	  [FE]  AssertionFailedError  	6	9	replace
47	[BUG]  [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null  ||  resultEqualsValue)  {	  if(resultEqualsValue)    {    	compilable	  [FE]  AssertionFailedError  	6	9	replace
48	[BUG]  [BUGGY]  if(resultEqualsValue  >  0)  {  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(resultEqualsValue  >  0)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  >  0)  {	  if(resultEqualsValue)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	6	None	replace
49	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(value  ==  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    	compilable	  [FE]  AssertionFailedError  	13	5	replace
50	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    	compilable	  [FE]  AssertionFailedError  	13	5	replace
51	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type  ==  null  ||  value.equals(resultEqualsValue))  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(type  ==  null  ||  value.equals(resultEqualsValue))  {	  if(type    ==    null    ||    resultEqualsValue)    {    	compilable	  [FE]  AssertionFailedError  	13	2	replace
52	[BUG]  [BUGGY]  if(type  ==  null  ||  value.equals(resultEqualsValue))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type  ==  null  ||  value.equals(resultEqualsValue))  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  value.equals(resultEqualsValue))  {	  if(type    ==    null    ||    resultEqualsValue)    {    	compilable	  [FE]  AssertionFailedError  	13	2	replace
53	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null  ||  type.isUnknownType())  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(resultEqualsValue  ==  null  ||  type.isUnknownType())  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  ==  null  ||  type.isUnknownType())  {	  if(type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	13	None	replace
54	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null  ||  type.isPrimitive())  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]          AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(resultEqualsValue  ==  null  ||  type.isPrimitive())  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  ==  null  ||  type.isPrimitive())  {	  if(type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	13	None	replace
55	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null  ||  type.isConstructor())  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]            AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(resultEqualsValue  ==  null  ||  type.isConstructor())  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  ==  null  ||  type.isConstructor())  {	  if(type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	13	None	replace
56	[BUG]  [BUGGY]  if(type  ==  null  ||  value.length()  ==  0)  {  if(type  ==  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type  ==  null  ||  value.length()  ==  0)  {  if(type  ==  null  ||  value.length()  ==  0)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.length()    ==    0)    {    if(type  ==  null  ||  value.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	14	None	add
57	[BUG]  [BUGGY]  if(type  ==  null  ||  value.length()  ==  0)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type  ==  null  ||  value.length()  ==  0)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  value.length()  ==  0)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.length()    ==    0)    {    JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  value.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	14	None	add
58	[BUG]  [BUGGY]  if(type  ==  null  ||  value.length()  ==  0)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type  ==  null  ||  value.length()  ==  0)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value.length()  ==  0)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.length()    ==    0)    {    JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	14	None	add
59	[BUG]  [BUGGY]  if(type  ==  null  ||  value.length()  ==  0)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type  ==  null  ||  value.length()  ==  0)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.length()    ==    0)    {    JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	14	None	add
60	[BUG]  [BUGGY]  if(type  ==  null  ||  value.length()  ==  0)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type  ==  null  ||  value.length()  ==  0)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.length()    ==    0)    {    JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	14	None	add
61	[BUG]  [BUGGY]  if(type  ==  null  ||  value.length()  ==  0)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type  ==  null  ||  value.length()  ==  0)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.length()    ==    0)    {    JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	14	None	add
62	[BUG]  [BUGGY]  if(type  ==  null  ||  value.length()  ==  0)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue.length()  ==  0)  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type  ==  null  ||  value.length()  ==  0)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue.length()  ==  0)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.length()    ==    0)    {    JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	14	None	add
63	[BUG]  [BUGGY]  if(type  ==  null  ||  value.length()  ==  0)  {  if(type!=  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type  ==  null  ||  value.length()  ==  0)  {  if(type!=  null  ||  value.length()  ==  0)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.length()    ==    0)    {    if(type!=  null  ||  value.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	14	None	add
64	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(value  ==  null  ||  value.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	15	3	replace
65	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  value.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	15	3	replace
66	[BUG]  [BUGGY]  if(value  ==  null  ||  type.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value  ==  null  ||  type.length()  ==  0)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  type.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
67	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type!=  null  ||  value.length()  ==  0)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(type!=  null  ||  value.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	15	9	replace
68	[BUG]  [BUGGY]  if(type!=  null  ||  value.length()  ==  0)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type!=  null  ||  value.length()  ==  0)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null  ||  value.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	15	9	replace
69	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue.length()  ==  0)  {  [CE]  boolean  cannot  be  dereferenced  [FE]          AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type  ==  null  ||  resultEqualsValue.length()  ==  0)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  resultEqualsValue.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	15	None	replace
70	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue.length()  ==  0)  {  [CE]  boolean  cannot  be  dereferenced  [FE]            AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value  ==  null  ||  resultEqualsValue.length()  ==  0)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  resultEqualsValue.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	15	None	replace
71	[BUG]  [BUGGY]  if(type  ==  null  ||  type.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type  ==  null  ||  type.length()  ==  0)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  type.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
72	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue!=  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type  ==  null  ||  resultEqualsValue!=  null)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  resultEqualsValue!=  null)  {	  if(value    ==    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	4	None	replace
73	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value!=  null  ||  resultEqualsValue)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(value!=  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    	compilable	  [FE]  AssertionFailedError  	13	8	replace
74	[BUG]  [BUGGY]  if(value!=  null  ||  resultEqualsValue)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value!=  null  ||  resultEqualsValue)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    	compilable	  [FE]  AssertionFailedError  	13	8	replace
75	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type  ==  null  ||  value!=  null)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(type  ==  null  ||  value!=  null)  {	  if(type    ==    null    ||    resultEqualsValue)    {    	compilable	  [FE]  AssertionFailedError  	13	8	replace
76	[BUG]  [BUGGY]  if(type  ==  null  ||  value!=  null)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type  ==  null  ||  value!=  null)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  value!=  null)  {	  if(type    ==    null    ||    resultEqualsValue)    {    	compilable	  [FE]  AssertionFailedError  	13	8	replace
77	[BUG]  [BUGGY]  if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null)    {    JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	3	None	add
78	[BUG]  [BUGGY]  if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null)    {    JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	3	None	add
79	[BUG]  [BUGGY]  if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByFalseTypeOfResultVisitor(type,  resultEqualsValue));  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByFalseTypeOfResultVisitor(type,  resultEqualsValue));  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null)    {    JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByFalseTypeOfResultVisitor(type,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	3	None	add
80	[BUG]  [BUGGY]  if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  null;  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  null;  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null)    {    JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  null;	  	non-compiled	[CE]  ';'  expected	3	None	add
81	[BUG]  [BUGGY]  if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue),  type);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue),  type);  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null)    {    JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue),  type);	  	non-compiled	[CE]  ';'  expected	3	None	add
82	[BUG]  [BUGGY]  if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue),  null);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue),  null);  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null)    {    JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue),  null);	  	non-compiled	[CE]  ';'  expected	3	None	add
83	[BUG]  [BUGGY]  if(type!=  null)  {  if(type  >=  null)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type!=  null)  {  if(type  >=  null)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null)    {    if(type  >=  null)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
84	[BUG]  [BUGGY]  if(type!=  null)  {  if(type  >>  null)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type!=  null)  {  if(type  >>  null)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null)    {    if(type  >>  null)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
85	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  type!=  null)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type!=  null)  {  JSType  type!=  null)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null)    {    JSType  type!=  null)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
86	[BUG]  [BUGGY]  if(type!=  null)  {  If(type!=  null)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type!=  null)  {  If(type!=  null)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null)    {    If(type!=  null)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
87	[BUG]  [BUGGY]  if(this.resultEqualsValue  ==  null)  {  [CE]  cannot  find  symbol  resultEqualsValue  [FE]              AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(this.resultEqualsValue  ==  null)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(this.resultEqualsValue  ==  null)  {	  if(resultEqualsValue    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	7	None	replace
88	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value));  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value));	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
89	[BUG]  [BUGGY]  JSType  resultEqualsValue  =  getNativeType(CHECKED_UNKNOWN_TYPE);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  JSType  resultEqualsValue  =  getNativeType(CHECKED_UNKNOWN_TYPE);  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  resultEqualsValue  =  getNativeType(CHECKED_UNKNOWN_TYPE);	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
90	[BUG]  [BUGGY]  JSType  resultEqualsValue  =  type.getRestrictedByTypeOfResult(value);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  JSType  resultEqualsValue  =  type.getRestrictedByTypeOfResult(value);  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  resultEqualsValue  =  type.getRestrictedByTypeOfResult(value);	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
91	[BUG]  [BUGGY]  JSType  resultEqualsValue  =  getNativeTypeForTypeOfResult(type);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  JSType  resultEqualsValue  =  getNativeTypeForTypeOfResult(type);  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  resultEqualsValue  =  getNativeTypeForTypeOfResult(type);	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
92	[BUG]  [BUGGY]  JSType  resultEqualsValue  =  getNativeTypeForTypeOfResult(type,  value);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  JSType  resultEqualsValue  =  getNativeTypeForTypeOfResult(type,  value);  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  resultEqualsValue  =  getNativeTypeForTypeOfResult(type,  value);	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
93	[BUG]  [BUGGY]  if(value!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null)    {    JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	10	None	add
94	[BUG]  [BUGGY]  if(value!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null)    {    JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	10	None	add
95	[BUG]  [BUGGY]  if(value!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByFalseTypeOfResultVisitor(type,  resultEqualsValue));  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByFalseTypeOfResultVisitor(type,  resultEqualsValue));  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null)    {    JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByFalseTypeOfResultVisitor(type,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	10	None	add
96	[BUG]  [BUGGY]  if(value!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTrueTypeOfResultVisitor(resultEqualsValue));  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTrueTypeOfResultVisitor(resultEqualsValue));  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null)    {    JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTrueTypeOfResultVisitor(resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	10	None	add
97	[BUG]  [BUGGY]  if(value!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue),  type);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue),  type);  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null)    {    JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue),  type);	  	non-compiled	[CE]  ';'  expected	10	None	add
98	[BUG]  [BUGGY]  if(value!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue),  null);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue),  null);  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null)    {    JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue),  null);	  	non-compiled	[CE]  ';'  expected	10	None	add
99	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue!=  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value  ==  null  ||  resultEqualsValue!=  null)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  resultEqualsValue!=  null)  {	  if(value    ==    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	4	None	replace
100	[BUG]  [BUGGY]  if(this.resultEqualsValue!=  null)  {  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(this.resultEqualsValue!=  null)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(this.resultEqualsValue!=  null)  {	  if(resultEqualsValue!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	8	None	replace
101	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(value!=  null  ||  value.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	15	8	replace
102	[BUG]  [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null  ||  value.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	15	8	replace
103	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type  ==  null  ||  value.length()!=  0)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(type  ==  null  ||  value.length()!=  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	15	8	replace
104	[BUG]  [BUGGY]  if(type  ==  null  ||  value.length()!=  0)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type  ==  null  ||  value.length()!=  0)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  value.length()!=  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	15	8	replace
105	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(value)  ==  null)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(value)  ==  null)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)    {    if(resultEqualsValue  ||  getNativeTypeForTypeOf(value)  ==  null)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
106	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(value)!=  null)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(value)!=  null)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)    {    if(resultEqualsValue  ||  getNativeTypeForTypeOf(value)!=  null)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
107	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(resultEqualsValue  ||  resultEqualsValue  ==  null)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(resultEqualsValue)  {  if(resultEqualsValue  ||  resultEqualsValue  ==  null)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)    {    if(resultEqualsValue  ||  resultEqualsValue  ==  null)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
108	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(resultEqualsValue  ||  resultEqualsValue!=  null)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(resultEqualsValue)  {  if(resultEqualsValue  ||  resultEqualsValue!=  null)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)    {    if(resultEqualsValue  ||  resultEqualsValue!=  null)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
109	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(type)  ==  null)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(type)  ==  null)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)    {    if(resultEqualsValue  ||  getNativeTypeForTypeOf(type)  ==  null)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
110	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  JSType  type  =  type  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  JSType  type  =  type  ==  null  ||  resultEqualsValue)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    resultEqualsValue)    {    JSType  type  =  type  ==  null  ||  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
111	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  JSType  type  =  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  JSType  type  =  null  ||  resultEqualsValue)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    resultEqualsValue)    {    JSType  type  =  null  ||  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
112	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  If(type  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  If(type  ==  null  ||  resultEqualsValue)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    resultEqualsValue)    {    If(type  ==  null  ||  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
113	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  JSType  type  =  getNativeTypeForTypeOf(value);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  JSType  type  =  getNativeTypeForTypeOf(value);  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    resultEqualsValue)    {    JSType  type  =  getNativeTypeForTypeOf(value);	  	non-compiled	[CE]  ';'  expected	12	None	add
114	[BUG]  [BUGGY]  if(type  ==  null  ||  value.length()  ==  0)  {  if(type  ==  null  ||  type.length()  ==  0)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type  ==  null  ||  value.length()  ==  0)  {  if(type  ==  null  ||  type.length()  ==  0)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.length()    ==    0)    {    if(type  ==  null  ||  type.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	14	None	add
115	[BUG]  [BUGGY]  if(type  ==  null  ||  value.length()  ==  0)  {  if(type  ==  null  ||  value.length()!=  0)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type  ==  null  ||  value.length()  ==  0)  {  if(type  ==  null  ||  value.length()!=  0)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.length()    ==    0)    {    if(type  ==  null  ||  value.length()!=  0)  {	  	non-compiled	[CE]  ';'  expected	14	None	add
116	[BUG]  [BUGGY]  if(type  ==  null  ||  value.length()  ==  0)  {  JSType  result  =  getNativeTypeForTypeOf(value);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type  ==  null  ||  value.length()  ==  0)  {  JSType  result  =  getNativeTypeForTypeOf(value);  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.length()    ==    0)    {    JSType  result  =  getNativeTypeForTypeOf(value);	  	non-compiled	[CE]  ';'  expected	14	None	add
117	[BUG]  [BUGGY]  if(type  ==  null  ||  value.length()  ==  0)  {  JSType  type  =  getNativeTypeForTypeOf(value);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type  ==  null  ||  value.length()  ==  0)  {  JSType  type  =  getNativeTypeForTypeOf(value);  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.length()    ==    0)    {    JSType  type  =  getNativeTypeForTypeOf(value);	  	non-compiled	[CE]  ';'  expected	14	None	add
118	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type);  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(type);	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
119	[BUG]  [BUGGY]  JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
120	[BUG]  [BUGGY]  if(value!=  null)  {  JSType  result  =  type.visit(  new  RestrictedByTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value!=  null)  {  JSType  result  =  type.visit(  new  RestrictedByTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null)    {    JSType  result  =  type.visit(  new  RestrictedByTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	10	None	add
121	[BUG]  [BUGGY]  if(value!=  null)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  null));  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value!=  null)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  null));  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null)    {    JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  null));	  	non-compiled	[CE]  ';'  expected	10	None	add
122	[BUG]  [BUGGY]  if(value!=  null)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value));  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value!=  null)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value));  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null)    {    JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value));	  	non-compiled	[CE]  ';'  expected	10	None	add
123	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type.isUnknownType()  ||  resultEqualsValue)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(type.isUnknownType()  ||  resultEqualsValue)  {	  if(resultEqualsValue)    {    	compilable	  [FE]  AssertionFailedError  	6	5	replace
124	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  resultEqualsValue)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type.isUnknownType()  ||  resultEqualsValue)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type.isUnknownType()  ||  resultEqualsValue)  {	  if(resultEqualsValue)    {    	compilable	  [FE]  AssertionFailedError  	6	5	replace
125	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  if(type  {  null  ||  resultEqualsValue)  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  if(type  {  null  ||  resultEqualsValue)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    resultEqualsValue)    {    if(type  {  null  ||  resultEqualsValue)  {	  	non-compiled	[CE]  ')'  expected	12	None	add
126	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    resultEqualsValue)    {    JSType  result  =  getNativeTypeForTypeOf(value);	  	non-compiled	[CE]  ';'  expected	12	None	add
127	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type!=  null  &&  resultEqualsValue)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(type!=  null  &&  resultEqualsValue)  {	  if(type!=    null)    {    	compilable	  [FE]  AssertionFailedError  	2	5	replace
128	[BUG]  [BUGGY]  if(type!=  null  &&  resultEqualsValue)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type!=  null  &&  resultEqualsValue)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null  &&  resultEqualsValue)  {	  if(type!=    null)    {    	compilable	  [FE]  AssertionFailedError  	2	5	replace
129	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type))  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type))  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type))  {	  	non-compiled	[CE]  ';'  expected	5	None	add
130	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)||  resultEqualsValue  ==  null)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)||  resultEqualsValue  ==  null)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)||  resultEqualsValue  ==  null)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
131	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)||  resultEqualsValue!=  null)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)||  resultEqualsValue!=  null)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)||  resultEqualsValue!=  null)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
132	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type,  resultEqualsValue))  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type,  resultEqualsValue))  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type,  resultEqualsValue))  {	  	non-compiled	[CE]  ';'  expected	5	None	add
133	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)&&  resultEqualsValue  ==  null)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)&&  resultEqualsValue  ==  null)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)&&  resultEqualsValue  ==  null)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
134	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(resultEqualsValue))  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(resultEqualsValue))  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(resultEqualsValue))  {	  	non-compiled	[CE]  ';'  expected	5	None	add
135	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)&&  resultEqualsValue!=  null)  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)&&  resultEqualsValue!=  null)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)&&  resultEqualsValue!=  null)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
136	[BUG]  [BUGGY]  if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTrueTypeOfResultVisitor(resultEqualsValue));  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTrueTypeOfResultVisitor(resultEqualsValue));  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null)    {    JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTrueTypeOfResultVisitor(resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	3	None	add
137	[BUG]  [BUGGY]  if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue));  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue));  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null)    {    JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	3	None	add
138	[BUG]  [BUGGY]  if(value  ==  null)  {  if(value  ==  null  ||  resultEqualsValue  <  getNativeType(CHECKED_UNKNOWN_TYPE))  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value  ==  null)  {  if(value  ==  null  ||  resultEqualsValue  <  getNativeType(CHECKED_UNKNOWN_TYPE))  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null)    {    if(value  ==  null  ||  resultEqualsValue  <  getNativeType(CHECKED_UNKNOWN_TYPE))  {	  	non-compiled	[CE]  ';'  expected	3	None	add
139	[BUG]  [BUGGY]  if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByUndefinedVisitor(type,  resultEqualsValue));  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByUndefinedVisitor(type,  resultEqualsValue));  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null)    {    JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByUndefinedVisitor(type,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	3	None	add
140	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null  ||  type.isSubtype(value))  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(resultEqualsValue  ==  null  ||  type.isSubtype(value))  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  ==  null  ||  type.isSubtype(value))  {	  if(type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	13	None	replace
141	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null  ||  type.isUnionType())  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(resultEqualsValue  ==  null  ||  type.isUnionType())  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  ==  null  ||  type.isUnionType())  {	  if(type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	13	None	replace
142	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value!=  null  &&  value.length()  >  0)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(value!=  null  &&  value.length()  >  0)  {	  if(value!=    null)    {    	compilable	  [FE]  AssertionFailedError  	11	8	replace
143	[BUG]  [BUGGY]  if(value!=  null  &&  value.length()  >  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value!=  null  &&  value.length()  >  0)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null  &&  value.length()  >  0)  {	  if(value!=    null)    {    	compilable	  [FE]  AssertionFailedError  	11	8	replace
144	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value!=  null  &&  resultEqualsValue)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(value!=  null  &&  resultEqualsValue)  {	  if(value!=    null)    {    	compilable	  [FE]  AssertionFailedError  	11	5	replace
145	[BUG]  [BUGGY]  if(value!=  null  &&  resultEqualsValue)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value!=  null  &&  resultEqualsValue)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null  &&  resultEqualsValue)  {	  if(value!=    null)    {    	compilable	  [FE]  AssertionFailedError  	11	5	replace
146	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value!=  null  &&  value.equals( " "))  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(value!=  null  &&  value.equals( " "))  {	  if(value!=    null)    {    	compilable	  [FE]  AssertionFailedError  	11	3	replace
147	[BUG]  [BUGGY]  if(value!=  null  &&  value.equals( " "))  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(value!=  null  &&  value.equals( " "))  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null  &&  value.equals( " "))  {	  if(value!=    null)    {    	compilable	  [FE]  AssertionFailedError  	11	3	replace
148	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null)    {    JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	1	None	add
149	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTrueTypeOfResultVisitor(resultEqualsValue));  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTrueTypeOfResultVisitor(resultEqualsValue));  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null)    {    JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTrueTypeOfResultVisitor(resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	1	None	add
150	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null)    {    JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	1	None	add
151	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue));  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue));  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null)    {    JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	1	None	add
152	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  null;  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  null;  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null)    {    JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  null;	  	non-compiled	[CE]  ';'  expected	1	None	add
153	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTrueTypeOfResultVisitor(type,  value),  resultEqualsValue);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTrueTypeOfResultVisitor(type,  value),  resultEqualsValue);  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null)    {    JSType  result  =  getNativeTypeForTypeOf(value).visit(  new  RestrictByTrueTypeOfResultVisitor(type,  value),  resultEqualsValue);	  	non-compiled	[CE]  ';'  expected	1	None	add
154	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  type;  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  type;  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null)    {    JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  type;	  	non-compiled	[CE]  ';'  expected	1	None	add
155	[BUG]  [BUGGY]  if(type  ==  null  ||  value.length()  ==  0)  {  if(type  ==  null  ||  key.length()  ==  0)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {    [BUGGY]  if(type  ==  null  ||  value.length()  ==  0)  {  if(type  ==  null  ||  key.length()  ==  0)  {  [BUGGY]    if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.length()    ==    0)    {    if(type  ==  null  ||  key.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	14	None	add
